/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __toBinary = /* @__PURE__ */ (() => {
  var table = new Uint8Array(128);
  for (var i4 = 0; i4 < 64; i4++)
    table[i4 < 26 ? i4 + 65 : i4 < 52 ? i4 + 71 : i4 < 62 ? i4 - 4 : i4 * 4 - 205] = i4;
  return (base64) => {
    var n2 = base64.length, bytes = new Uint8Array((n2 - (base64[n2 - 1] == "=") - (base64[n2 - 2] == "=")) * 3 / 4 | 0);
    for (var i5 = 0, j4 = 0; i5 < n2; ) {
      var c0 = table[base64.charCodeAt(i5++)], c1 = table[base64.charCodeAt(i5++)];
      var c22 = table[base64.charCodeAt(i5++)], c32 = table[base64.charCodeAt(i5++)];
      bytes[j4++] = c0 << 2 | c1 >> 4;
      bytes[j4++] = c1 << 4 | c22 >> 2;
      bytes[j4++] = c22 << 6 | c32;
    }
    return bytes;
  };
})();

// node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/lodash/lodash.js"(exports, module2) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY2 = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types2 = freeModule && freeModule.require && freeModule.require("util").types;
          if (types2) {
            return types2;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e4) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset2 = array.length;
        while (++index < length) {
          array[offset2 + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key2, collection2) {
          if (predicate(value, key2, collection2)) {
            result = key2;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key2) {
        return function(object) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function basePropertyOf(object) {
        return function(key2) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current2 = iteratee(array[index]);
          if (current2 !== undefined2) {
            result = result === undefined2 ? current2 : result + current2;
          }
        }
        return result;
      }
      function baseTimes(n2, iteratee) {
        var index = -1, result = Array(n2);
        while (++index < n2) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props2) {
        return arrayMap(props2, function(key2) {
          return [key2, object[key2]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props2) {
        return arrayMap(props2, function(key2) {
          return object[key2];
        });
      }
      function cacheHas(cache, key2) {
        return cache.has(key2);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key2) {
        return object == null ? undefined2 : object[key2];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data2, result = [];
        while (!(data2 = iterator.next()).done) {
          result.push(data2.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key2) {
          result[++index] = [key2, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _11.defaults(root.Object(), context, _11.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty2 = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2(
          "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e4) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap2 && new WeakMap2();
        var realNames = {};
        var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
        var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike2(value) && !isArray3(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty2.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject3(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          "escape": reEscape,
          "evaluate": reEvaluate,
          "interpolate": reInterpolate,
          "variable": "",
          "imports": {
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray3(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data2 = iteratees[iterIndex], iteratee2 = data2.iteratee, type = data2.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key2) {
          var result2 = this.has(key2) && delete this.__data__[key2];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key2) {
          var data2 = this.__data__;
          if (nativeCreate) {
            var result2 = data2[key2];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty2.call(data2, key2) ? data2[key2] : undefined2;
        }
        function hashHas(key2) {
          var data2 = this.__data__;
          return nativeCreate ? data2[key2] !== undefined2 : hasOwnProperty2.call(data2, key2);
        }
        function hashSet(key2, value) {
          var data2 = this.__data__;
          this.size += this.has(key2) ? 0 : 1;
          data2[key2] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key2) {
          var data2 = this.__data__, index = assocIndexOf(data2, key2);
          if (index < 0) {
            return false;
          }
          var lastIndex = data2.length - 1;
          if (index == lastIndex) {
            data2.pop();
          } else {
            splice.call(data2, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key2) {
          var data2 = this.__data__, index = assocIndexOf(data2, key2);
          return index < 0 ? undefined2 : data2[index][1];
        }
        function listCacheHas(key2) {
          return assocIndexOf(this.__data__, key2) > -1;
        }
        function listCacheSet(key2, value) {
          var data2 = this.__data__, index = assocIndexOf(data2, key2);
          if (index < 0) {
            ++this.size;
            data2.push([key2, value]);
          } else {
            data2[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key2) {
          var result2 = getMapData(this, key2)["delete"](key2);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key2) {
          return getMapData(this, key2).get(key2);
        }
        function mapCacheHas(key2) {
          return getMapData(this, key2).has(key2);
        }
        function mapCacheSet(key2, value) {
          var data2 = getMapData(this, key2), size2 = data2.size;
          data2.set(key2, value);
          this.size += data2.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data2 = this.__data__ = new ListCache(entries);
          this.size = data2.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key2) {
          var data2 = this.__data__, result2 = data2["delete"](key2);
          this.size = data2.size;
          return result2;
        }
        function stackGet(key2) {
          return this.__data__.get(key2);
        }
        function stackHas(key2) {
          return this.__data__.has(key2);
        }
        function stackSet(key2, value) {
          var data2 = this.__data__;
          if (data2 instanceof ListCache) {
            var pairs = data2.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key2, value]);
              this.size = ++data2.size;
              return this;
            }
            data2 = this.__data__ = new MapCache(pairs);
          }
          data2.set(key2, value);
          this.size = data2.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray3(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key2 in value) {
            if ((inherited || hasOwnProperty2.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex(key2, length)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n2) {
          return shuffleSelf(copyArray(array), baseClamp(n2, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key2, value) {
          if (value !== undefined2 && !eq(object[key2], value) || value === undefined2 && !(key2 in object)) {
            baseAssignValue(object, key2, value);
          }
        }
        function assignValue(object, key2, value) {
          var objValue = object[key2];
          if (!(hasOwnProperty2.call(object, key2) && eq(objValue, value)) || value === undefined2 && !(key2 in object)) {
            baseAssignValue(object, key2, value);
          }
        }
        function assocIndexOf(array, key2) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key2)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key2, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key2, value) {
          if (key2 == "__proto__" && defineProperty) {
            defineProperty(object, key2, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key2] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get2(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key2, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key2, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject3(value)) {
            return value;
          }
          var isArr = isArray3(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag2(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key3) {
              result2.set(key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props2 = isArr ? undefined2 : keysFunc(value);
          arrayEach(props2 || value, function(subValue, key3) {
            if (props2) {
              key3 = subValue;
              subValue = value[key3];
            }
            assignValue(result2, key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props2 = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props2);
          };
        }
        function baseConformsTo(object, source, props2) {
          var length = props2.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key2 = props2[length], predicate = source[key2], value = object[key2];
            if (value === undefined2 && !(key2 in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current2 = iteratee2(value);
            if (current2 != null && (computed === undefined2 ? current2 === current2 && !isSymbol(current2) : comparator(current2, computed))) {
              var computed = current2, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger2(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger2(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props2) {
          return arrayFilter(props2, function(key2) {
            return isFunction2(object[key2]);
          });
        }
        function baseGet(object, path) {
          path = castPath(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray3(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key2) {
          return object != null && hasOwnProperty2.call(object, key2);
        }
        function baseHasIn(object, key2) {
          return object != null && key2 in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key2, object2) {
            setter(accumulator, iteratee2(value), key2, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey(last(path))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike2(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike2(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike2(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike2(value) && !isObjectLike2(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray3(object), othIsArr = isArray3(other), objTag = objIsArr ? arrayTag : getTag2(object), othTag = othIsArr ? arrayTag : getTag2(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike2(value) && getTag2(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data2 = matchData[index];
            if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data2 = matchData[index];
            var key2 = data2[0], objValue = object[key2], srcValue = data2[1];
            if (noCustomizer && data2[2]) {
              if (objValue === undefined2 && !(key2 in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key2, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject3(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike2(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike2(value) && getTag2(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike2(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray3(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key2 in Object2(object)) {
            if (hasOwnProperty2.call(object, key2) && key2 != "constructor") {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject3(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key2 in object) {
            if (!(key2 == "constructor" && (isProto || !hasOwnProperty2.call(object, key2)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key2, collection2) {
            result2[++index] = iteratee2(value, key2, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get2(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key2) {
            stack || (stack = new Stack());
            if (isObject3(srcValue)) {
              baseMergeDeep(object, source, key2, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key2), srcValue, key2 + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key2, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key2), srcValue = safeGet(source, key2), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key2, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray3(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray3(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject3(objValue) || isFunction2(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key2, newValue);
        }
        function baseNth(array, n2) {
          var length = array.length;
          if (!length) {
            return;
          }
          n2 += n2 < 0 ? length : 0;
          return isIndex(n2, length) ? array[n2] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray3(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key2, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n2) {
          var result2 = "";
          if (!string || n2 < 1 || n2 > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n2 % 2) {
              result2 += string;
            }
            n2 = nativeFloor(n2 / 2);
            if (n2) {
              string += string;
            }
          } while (n2);
          return result2;
        }
        function baseRest(func, start) {
          return setToString(overRest(func, start, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n2) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n2, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject3(object)) {
            return object;
          }
          path = castPath(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key2 = toKey(path[index]), newValue = value;
            if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key2];
              newValue = customizer ? customizer(objValue, key2, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject3(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key2, newValue);
            nested = nested[key2];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data2) {
          metaMap.set(func, data2);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString2(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray3(value)) {
            return arrayMap(value, baseToString2) + "";
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY2 ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen = new SetCache();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey(last(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props2, values2, assignFunc) {
          var index = -1, length = props2.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props2[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray3(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString4(value));
        }
        var castRest = baseRest;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id2) {
          return root.clearTimeout(id2);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset2 = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset2 + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset2 + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props2, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props2.length;
          while (++index < length) {
            var key2 = props2[index];
            var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key2];
            }
            if (isNew) {
              baseAssignValue(object, key2, newValue);
            } else {
              assignValue(object, key2, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray3(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props2 = keysFunc(object), length = props2.length;
            while (length--) {
              var key2 = props2[fromRight ? length : ++index];
              if (iteratee2(iterable[key2], key2, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn2.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString4(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject3(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn2, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key2) {
                return iteratee2(iterable[key2], key2, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data2 = funcName == "wrapper" ? getData(func) : undefined2;
              if (data2 && isLaziable(data2[0]) && data2[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data2[4].length && data2[9] == 1) {
                wrapper = wrapper[getFuncName(data2[0])].apply(wrapper, data2[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray3(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn2 = Ctor || createCtor(fn2);
            }
            return fn2.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue2) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue2;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString2(value);
                other = baseToString2(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString2(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn2, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger2(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString4(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString4(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY2) ? noop3 : function(values2) {
          return new Set2(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag2(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger2(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger2(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data2 = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data2) {
            mergeData(newData, data2);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data2 ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key2, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key2]) && !hasOwnProperty2.call(object, key2)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key2, object, source, stack) {
          if (isObject3(objValue) && isObject3(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key2 = objProps[index];
            if (!(isPartial ? key2 in other : hasOwnProperty2.call(other, key2))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key2 = objProps[index];
            var objValue = object[key2], othValue = other[key2];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key2 == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten2), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop3 : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty2.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data2 = array[length], otherFunc = data2.func;
            if (otherFunc == null || otherFunc == func) {
              return data2.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty2.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key2) {
          var data2 = map2.__data__;
          return isKeyable(key2) ? data2[typeof key2 == "string" ? "string" : "hash"] : data2.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key2 = result2[length], value = object[key2];
            result2[length] = [key2, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key2) {
          var value = getValue(object, key2);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e4) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag2 = baseGetTag;
        if (DataView && getTag2(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag2(new Map2()) != mapTag || Promise2 && getTag2(Promise2.resolve()) != promiseTag || Set2 && getTag2(new Set2()) != setTag || WeakMap2 && getTag2(new WeakMap2()) != weakMapTag) {
          getTag2 = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data2 = transforms[index], size2 = data2.size;
            switch (data2.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match2 = source.match(reWrapDetails);
          return match2 ? match2[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = castPath(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key2 = toKey(path[index]);
            if (!(result2 = object != null && hasFunc(object, key2))) {
              break;
            }
            object = object[key2];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key2, length) && (isArray3(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty2.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray3(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject3(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray3(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data2 = getData(other);
          return !!data2 && func === data2[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction2 : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject3(value);
        }
        function matchesStrictComparable(key2, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key2] === srcValue && (srcValue !== undefined2 || key2 in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key2) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key2;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data2, source) {
          var bitmask = data2[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data2[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data2;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data2[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data2[3];
            data2[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data2[4] = partials ? replaceHolders(data2[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data2[5];
            data2[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data2[6] = partials ? replaceHolders(data2[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data2[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data2[8] = data2[8] == null ? source[8] : nativeMin(data2[8], source[8]);
          }
          if (data2[9] == null) {
            data2[9] = source[9];
          }
          data2[0] = source[0];
          data2[1] = newBitmask;
          return data2;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key2 in Object2(object)) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start, transform2) {
          start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform2(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key2) {
          if (key2 === "constructor" && typeof object[key2] === "function") {
            return;
          }
          if (key2 == "__proto__") {
            return;
          }
          return object[key2];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count2 = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count2 >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count2 = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match2, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY2 ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e4) {
            }
            try {
              return func + "";
            } catch (e4) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger2(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray3(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          return baseSlice(array, n2 < 0 ? 0 : n2, length);
        }
        function dropRight(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          n2 = length - n2;
          return baseSlice(array, 0, n2 < 0 ? 0 : n2);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex2(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger2(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger2(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten2(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY2) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger2(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger2(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger2(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n2) {
          return array && array.length ? baseNth(array, toInteger2(n2)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger2(start);
            end = end === undefined2 ? length : toInteger2(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n2, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          return baseSlice(array, 0, n2 < 0 ? 0 : n2);
        }
        function takeRight(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          n2 = length - n2;
          return baseSlice(array, n2 < 0 ? 0 : n2, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq3(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props2, values2) {
          return baseZipObject(props2 || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props2, values2) {
          return baseZipObject(props2 || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty2.call(result2, key2)) {
            ++result2[key2];
          } else {
            baseAssignValue(result2, key2, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray3(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray3(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex2);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY2);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger2(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray3(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray3(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy2 = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty2.call(result2, key2)) {
            result2[key2].push(value);
          } else {
            baseAssignValue(result2, key2, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger2(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString2(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key2) {
          baseAssignValue(result2, key2, value);
        });
        function map(collection, iteratee2) {
          var func = isArray3(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray3(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray3(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key2) {
          result2[key2 ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray3(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray3(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray3(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray3(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n2, guard) {
          if (guard ? isIterateeCall(collection, n2, guard) : n2 === undefined2) {
            n2 = 1;
          } else {
            n2 = toInteger2(n2);
          }
          var func = isArray3(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n2);
        }
        function shuffle(collection) {
          var func = isArray3(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString2(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag2(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray3(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n2, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n2 = toInteger2(n2);
          return function() {
            if (--n2 < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n2, guard) {
          n2 = guard ? undefined2 : n2;
          n2 = func && n2 == null ? func.length : n2;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n2);
        }
        function before(n2, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n2 = toInteger2(n2);
          return function() {
            if (--n2 > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n2 <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key2, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key2, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce7(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject3(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key2)) {
              return cache.get(key2);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key2, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray3(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start === undefined2 ? start : toInteger2(start);
          return baseRest(func, start);
        }
        function spread(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start == null ? 0 : nativeMax(toInteger2(start), 0);
          return baseRest(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          if (isObject3(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce7(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray3(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike2(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray3 = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction2(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike2(value) && isArrayLike(value);
        }
        function isBoolean2(value) {
          return value === true || value === false || isObjectLike2(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate2 = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike2(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray3(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag2(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key2 in value) {
            if (hasOwnProperty2.call(value, key2)) {
              return false;
            }
          }
          return true;
        }
        function isEqual2(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike2(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction2(value) {
          if (!isObject3(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger2(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject3(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike2(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch2(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber2(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber2(value) {
          return typeof value == "number" || isObjectLike2(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject(value) {
          if (!isObjectLike2(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString2(value) {
          return typeof value == "string" || !isArray3(value) && isObjectLike2(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol(value) {
          return typeof value == "symbol" || isObjectLike2(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike2(value) && getTag2(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike2(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString2(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag2(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY2 || value === -INFINITY2) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger2(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger2(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject3(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject3(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger2(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString4(value) {
          return value == null ? "" : baseToString2(value);
        }
        var assign2 = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key2 in source) {
            if (hasOwnProperty2.call(source, key2)) {
              assignValue(object, key2, source[key2]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at2 = flatRest(baseAt);
        function create(prototype, properties2) {
          var result2 = baseCreate(prototype);
          return properties2 == null ? result2 : baseAssign(result2, properties2);
        }
        var defaults = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props2 = keysIn(source);
            var propsIndex = -1;
            var propsLength = props2.length;
            while (++propsIndex < propsLength) {
              var key2 = props2[propsIndex];
              var value = object[key2];
              if (value === undefined2 || eq(value, objectProto[key2]) && !hasOwnProperty2.call(object, key2)) {
                object[key2] = source[key2];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey2(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get2(object, path, defaultValue2) {
          var result2 = object == null ? undefined2 : baseGet(object, path);
          return result2 === undefined2 ? defaultValue2 : result2;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key2;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty2.call(result2, value)) {
            result2[value].push(key2);
          } else {
            result2[value] = [key2];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key2, object2) {
            baseAssignValue(result2, iteratee2(value, key2, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key2, object2) {
            baseAssignValue(result2, key2, iteratee2(value, key2, object2));
          });
          return result2;
        }
        var merge = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path) {
            path = castPath(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props2 = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props2, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue2) {
          path = castPath(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue2;
            }
            object = isFunction2(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray3(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject3(object)) {
              accumulator = isFunction2(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp2(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString4(string).toLowerCase());
        }
        function deburr(string) {
          string = toString4(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString4(string);
          target = baseToString2(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger2(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString4(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString4(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString4(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString4(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString4(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString4(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n2, guard) {
          if (guard ? isIterateeCall(string, n2, guard) : n2 === undefined2) {
            n2 = 1;
          } else {
            n2 = toInteger2(n2);
          }
          return baseRepeat(toString4(string), n2);
        }
        function replace() {
          var args = arguments, string = toString4(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString4(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString2(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString4(string);
          position = position == null ? 0 : baseClamp(toInteger2(position), 0, string.length);
          target = baseToString2(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString4(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty2.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset2).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset2 + match2.length;
            return match2;
          });
          source += "';\n";
          var variable = hasOwnProperty2.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString4(value).toLowerCase();
        }
        function toUpper(value) {
          return toString4(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString4(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString4(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString4(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject3(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger2(options.length) : length;
            omission = "omission" in options ? baseToString2(options.omission) : omission;
          }
          string = toString4(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match2, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString4(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match2 = separator.exec(substring)) {
                var newEnd = match2.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString2(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape(string) {
          string = toString4(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString4(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e4) {
            return isError(e4) ? e4 : new Error2(e4);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key2) {
            key2 = toKey(key2);
            baseAssignValue(object, key2, bind(object[key2], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue2) {
          return value == null || value !== value ? defaultValue2 : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props2 = keys(source), methodNames = baseFunctions(source, props2);
          if (options == null && !(isObject3(source) && (methodNames.length || !props2.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject3(options) && "chain" in options) || !!options.chain, isFunc = isFunction2(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop3() {
        }
        function nthArg(n2) {
          n2 = toInteger2(n2);
          return baseRest(function(args) {
            return baseNth(args, n2);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n2, iteratee2) {
          n2 = toInteger2(n2);
          if (n2 < 1 || n2 > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n2, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n2 -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n2) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray3(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(toString4(value)));
        }
        function uniqueId3(prefix) {
          var id2 = ++idCounter;
          return toString4(prefix) + id2;
        }
        var add2 = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max3(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean2(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min3(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract2 = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum2(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign2;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at2;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce7;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten2;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy2;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq3;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add2;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp2;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex2;
        lodash.findKey = findKey2;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get2;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray3;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean2;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate2;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual2;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction2;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch2;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber2;
        lodash.isObject = isObject3;
        lodash.isObjectLike = isObjectLike2;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString2;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max3;
        lodash.maxBy = maxBy;
        lodash.mean = mean2;
        lodash.meanBy = meanBy;
        lodash.min = min3;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop3;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract2;
        lodash.sum = sum2;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger2;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString4;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId3;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty2.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n2) {
            n2 = n2 === undefined2 ? 1 : nativeMax(toInteger2(n2), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n2, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n2, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n2) {
            return this.reverse()[methodName](n2).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger2(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger2(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray3(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray3(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray3(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key2 = lodashFunc.name + "";
            if (!hasOwnProperty2.call(realNames, key2)) {
              realNames[key2] = [];
            }
            realNames[key2].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _11 = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _11;
        define(function() {
          return _11;
        });
      } else if (freeModule) {
        (freeModule.exports = _11)._ = _11;
        freeExports._ = _11;
      } else {
        root._ = _11;
      }
    }).call(exports);
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module2) {
    (function() {
      "use strict";
      var hasOwn3 = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames9() {
        var classes = [];
        for (var i4 = 0; i4 < arguments.length; i4++) {
          var arg = arguments[i4];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames9.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key2 in arg) {
              if (hasOwn3.call(arg, key2) && arg[key2]) {
                classes.push(key2);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module2 !== "undefined" && module2.exports) {
        classNames9.default = classNames9;
        module2.exports = classNames9;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames9;
        });
      } else {
        window.classNames = classNames9;
      }
    })();
  }
});

// node_modules/he/he.js
var require_he = __commonJS({
  "node_modules/he/he.js"(exports, module2) {
    (function(root) {
      var freeExports = typeof exports == "object" && exports;
      var freeModule = typeof module2 == "object" && module2 && module2.exports == freeExports && module2;
      var freeGlobal = typeof global == "object" && global;
      if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
        root = freeGlobal;
      }
      var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
      var regexAsciiWhitelist = /[\x01-\x7F]/g;
      var regexBmpWhitelist = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g;
      var regexEncodeNonAscii = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g;
      var encodeMap = { "\xAD": "shy", "\u200C": "zwnj", "\u200D": "zwj", "\u200E": "lrm", "\u2063": "ic", "\u2062": "it", "\u2061": "af", "\u200F": "rlm", "\u200B": "ZeroWidthSpace", "\u2060": "NoBreak", "\u0311": "DownBreve", "\u20DB": "tdot", "\u20DC": "DotDot", "	": "Tab", "\n": "NewLine", "\u2008": "puncsp", "\u205F": "MediumSpace", "\u2009": "thinsp", "\u200A": "hairsp", "\u2004": "emsp13", "\u2002": "ensp", "\u2005": "emsp14", "\u2003": "emsp", "\u2007": "numsp", "\xA0": "nbsp", "\u205F\u200A": "ThickSpace", "\u203E": "oline", "_": "lowbar", "\u2010": "dash", "\u2013": "ndash", "\u2014": "mdash", "\u2015": "horbar", ",": "comma", ";": "semi", "\u204F": "bsemi", ":": "colon", "\u2A74": "Colone", "!": "excl", "\xA1": "iexcl", "?": "quest", "\xBF": "iquest", ".": "period", "\u2025": "nldr", "\u2026": "mldr", "\xB7": "middot", "'": "apos", "\u2018": "lsquo", "\u2019": "rsquo", "\u201A": "sbquo", "\u2039": "lsaquo", "\u203A": "rsaquo", '"': "quot", "\u201C": "ldquo", "\u201D": "rdquo", "\u201E": "bdquo", "\xAB": "laquo", "\xBB": "raquo", "(": "lpar", ")": "rpar", "[": "lsqb", "]": "rsqb", "{": "lcub", "}": "rcub", "\u2308": "lceil", "\u2309": "rceil", "\u230A": "lfloor", "\u230B": "rfloor", "\u2985": "lopar", "\u2986": "ropar", "\u298B": "lbrke", "\u298C": "rbrke", "\u298D": "lbrkslu", "\u298E": "rbrksld", "\u298F": "lbrksld", "\u2990": "rbrkslu", "\u2991": "langd", "\u2992": "rangd", "\u2993": "lparlt", "\u2994": "rpargt", "\u2995": "gtlPar", "\u2996": "ltrPar", "\u27E6": "lobrk", "\u27E7": "robrk", "\u27E8": "lang", "\u27E9": "rang", "\u27EA": "Lang", "\u27EB": "Rang", "\u27EC": "loang", "\u27ED": "roang", "\u2772": "lbbrk", "\u2773": "rbbrk", "\u2016": "Vert", "\xA7": "sect", "\xB6": "para", "@": "commat", "*": "ast", "/": "sol", "undefined": null, "&": "amp", "#": "num", "%": "percnt", "\u2030": "permil", "\u2031": "pertenk", "\u2020": "dagger", "\u2021": "Dagger", "\u2022": "bull", "\u2043": "hybull", "\u2032": "prime", "\u2033": "Prime", "\u2034": "tprime", "\u2057": "qprime", "\u2035": "bprime", "\u2041": "caret", "`": "grave", "\xB4": "acute", "\u02DC": "tilde", "^": "Hat", "\xAF": "macr", "\u02D8": "breve", "\u02D9": "dot", "\xA8": "die", "\u02DA": "ring", "\u02DD": "dblac", "\xB8": "cedil", "\u02DB": "ogon", "\u02C6": "circ", "\u02C7": "caron", "\xB0": "deg", "\xA9": "copy", "\xAE": "reg", "\u2117": "copysr", "\u2118": "wp", "\u211E": "rx", "\u2127": "mho", "\u2129": "iiota", "\u2190": "larr", "\u219A": "nlarr", "\u2192": "rarr", "\u219B": "nrarr", "\u2191": "uarr", "\u2193": "darr", "\u2194": "harr", "\u21AE": "nharr", "\u2195": "varr", "\u2196": "nwarr", "\u2197": "nearr", "\u2198": "searr", "\u2199": "swarr", "\u219D": "rarrw", "\u219D\u0338": "nrarrw", "\u219E": "Larr", "\u219F": "Uarr", "\u21A0": "Rarr", "\u21A1": "Darr", "\u21A2": "larrtl", "\u21A3": "rarrtl", "\u21A4": "mapstoleft", "\u21A5": "mapstoup", "\u21A6": "map", "\u21A7": "mapstodown", "\u21A9": "larrhk", "\u21AA": "rarrhk", "\u21AB": "larrlp", "\u21AC": "rarrlp", "\u21AD": "harrw", "\u21B0": "lsh", "\u21B1": "rsh", "\u21B2": "ldsh", "\u21B3": "rdsh", "\u21B5": "crarr", "\u21B6": "cularr", "\u21B7": "curarr", "\u21BA": "olarr", "\u21BB": "orarr", "\u21BC": "lharu", "\u21BD": "lhard", "\u21BE": "uharr", "\u21BF": "uharl", "\u21C0": "rharu", "\u21C1": "rhard", "\u21C2": "dharr", "\u21C3": "dharl", "\u21C4": "rlarr", "\u21C5": "udarr", "\u21C6": "lrarr", "\u21C7": "llarr", "\u21C8": "uuarr", "\u21C9": "rrarr", "\u21CA": "ddarr", "\u21CB": "lrhar", "\u21CC": "rlhar", "\u21D0": "lArr", "\u21CD": "nlArr", "\u21D1": "uArr", "\u21D2": "rArr", "\u21CF": "nrArr", "\u21D3": "dArr", "\u21D4": "iff", "\u21CE": "nhArr", "\u21D5": "vArr", "\u21D6": "nwArr", "\u21D7": "neArr", "\u21D8": "seArr", "\u21D9": "swArr", "\u21DA": "lAarr", "\u21DB": "rAarr", "\u21DD": "zigrarr", "\u21E4": "larrb", "\u21E5": "rarrb", "\u21F5": "duarr", "\u21FD": "loarr", "\u21FE": "roarr", "\u21FF": "hoarr", "\u2200": "forall", "\u2201": "comp", "\u2202": "part", "\u2202\u0338": "npart", "\u2203": "exist", "\u2204": "nexist", "\u2205": "empty", "\u2207": "Del", "\u2208": "in", "\u2209": "notin", "\u220B": "ni", "\u220C": "notni", "\u03F6": "bepsi", "\u220F": "prod", "\u2210": "coprod", "\u2211": "sum", "+": "plus", "\xB1": "pm", "\xF7": "div", "\xD7": "times", "<": "lt", "\u226E": "nlt", "<\u20D2": "nvlt", "=": "equals", "\u2260": "ne", "=\u20E5": "bne", "\u2A75": "Equal", ">": "gt", "\u226F": "ngt", ">\u20D2": "nvgt", "\xAC": "not", "|": "vert", "\xA6": "brvbar", "\u2212": "minus", "\u2213": "mp", "\u2214": "plusdo", "\u2044": "frasl", "\u2216": "setmn", "\u2217": "lowast", "\u2218": "compfn", "\u221A": "Sqrt", "\u221D": "prop", "\u221E": "infin", "\u221F": "angrt", "\u2220": "ang", "\u2220\u20D2": "nang", "\u2221": "angmsd", "\u2222": "angsph", "\u2223": "mid", "\u2224": "nmid", "\u2225": "par", "\u2226": "npar", "\u2227": "and", "\u2228": "or", "\u2229": "cap", "\u2229\uFE00": "caps", "\u222A": "cup", "\u222A\uFE00": "cups", "\u222B": "int", "\u222C": "Int", "\u222D": "tint", "\u2A0C": "qint", "\u222E": "oint", "\u222F": "Conint", "\u2230": "Cconint", "\u2231": "cwint", "\u2232": "cwconint", "\u2233": "awconint", "\u2234": "there4", "\u2235": "becaus", "\u2236": "ratio", "\u2237": "Colon", "\u2238": "minusd", "\u223A": "mDDot", "\u223B": "homtht", "\u223C": "sim", "\u2241": "nsim", "\u223C\u20D2": "nvsim", "\u223D": "bsim", "\u223D\u0331": "race", "\u223E": "ac", "\u223E\u0333": "acE", "\u223F": "acd", "\u2240": "wr", "\u2242": "esim", "\u2242\u0338": "nesim", "\u2243": "sime", "\u2244": "nsime", "\u2245": "cong", "\u2247": "ncong", "\u2246": "simne", "\u2248": "ap", "\u2249": "nap", "\u224A": "ape", "\u224B": "apid", "\u224B\u0338": "napid", "\u224C": "bcong", "\u224D": "CupCap", "\u226D": "NotCupCap", "\u224D\u20D2": "nvap", "\u224E": "bump", "\u224E\u0338": "nbump", "\u224F": "bumpe", "\u224F\u0338": "nbumpe", "\u2250": "doteq", "\u2250\u0338": "nedot", "\u2251": "eDot", "\u2252": "efDot", "\u2253": "erDot", "\u2254": "colone", "\u2255": "ecolon", "\u2256": "ecir", "\u2257": "cire", "\u2259": "wedgeq", "\u225A": "veeeq", "\u225C": "trie", "\u225F": "equest", "\u2261": "equiv", "\u2262": "nequiv", "\u2261\u20E5": "bnequiv", "\u2264": "le", "\u2270": "nle", "\u2264\u20D2": "nvle", "\u2265": "ge", "\u2271": "nge", "\u2265\u20D2": "nvge", "\u2266": "lE", "\u2266\u0338": "nlE", "\u2267": "gE", "\u2267\u0338": "ngE", "\u2268\uFE00": "lvnE", "\u2268": "lnE", "\u2269": "gnE", "\u2269\uFE00": "gvnE", "\u226A": "ll", "\u226A\u0338": "nLtv", "\u226A\u20D2": "nLt", "\u226B": "gg", "\u226B\u0338": "nGtv", "\u226B\u20D2": "nGt", "\u226C": "twixt", "\u2272": "lsim", "\u2274": "nlsim", "\u2273": "gsim", "\u2275": "ngsim", "\u2276": "lg", "\u2278": "ntlg", "\u2277": "gl", "\u2279": "ntgl", "\u227A": "pr", "\u2280": "npr", "\u227B": "sc", "\u2281": "nsc", "\u227C": "prcue", "\u22E0": "nprcue", "\u227D": "sccue", "\u22E1": "nsccue", "\u227E": "prsim", "\u227F": "scsim", "\u227F\u0338": "NotSucceedsTilde", "\u2282": "sub", "\u2284": "nsub", "\u2282\u20D2": "vnsub", "\u2283": "sup", "\u2285": "nsup", "\u2283\u20D2": "vnsup", "\u2286": "sube", "\u2288": "nsube", "\u2287": "supe", "\u2289": "nsupe", "\u228A\uFE00": "vsubne", "\u228A": "subne", "\u228B\uFE00": "vsupne", "\u228B": "supne", "\u228D": "cupdot", "\u228E": "uplus", "\u228F": "sqsub", "\u228F\u0338": "NotSquareSubset", "\u2290": "sqsup", "\u2290\u0338": "NotSquareSuperset", "\u2291": "sqsube", "\u22E2": "nsqsube", "\u2292": "sqsupe", "\u22E3": "nsqsupe", "\u2293": "sqcap", "\u2293\uFE00": "sqcaps", "\u2294": "sqcup", "\u2294\uFE00": "sqcups", "\u2295": "oplus", "\u2296": "ominus", "\u2297": "otimes", "\u2298": "osol", "\u2299": "odot", "\u229A": "ocir", "\u229B": "oast", "\u229D": "odash", "\u229E": "plusb", "\u229F": "minusb", "\u22A0": "timesb", "\u22A1": "sdotb", "\u22A2": "vdash", "\u22AC": "nvdash", "\u22A3": "dashv", "\u22A4": "top", "\u22A5": "bot", "\u22A7": "models", "\u22A8": "vDash", "\u22AD": "nvDash", "\u22A9": "Vdash", "\u22AE": "nVdash", "\u22AA": "Vvdash", "\u22AB": "VDash", "\u22AF": "nVDash", "\u22B0": "prurel", "\u22B2": "vltri", "\u22EA": "nltri", "\u22B3": "vrtri", "\u22EB": "nrtri", "\u22B4": "ltrie", "\u22EC": "nltrie", "\u22B4\u20D2": "nvltrie", "\u22B5": "rtrie", "\u22ED": "nrtrie", "\u22B5\u20D2": "nvrtrie", "\u22B6": "origof", "\u22B7": "imof", "\u22B8": "mumap", "\u22B9": "hercon", "\u22BA": "intcal", "\u22BB": "veebar", "\u22BD": "barvee", "\u22BE": "angrtvb", "\u22BF": "lrtri", "\u22C0": "Wedge", "\u22C1": "Vee", "\u22C2": "xcap", "\u22C3": "xcup", "\u22C4": "diam", "\u22C5": "sdot", "\u22C6": "Star", "\u22C7": "divonx", "\u22C8": "bowtie", "\u22C9": "ltimes", "\u22CA": "rtimes", "\u22CB": "lthree", "\u22CC": "rthree", "\u22CD": "bsime", "\u22CE": "cuvee", "\u22CF": "cuwed", "\u22D0": "Sub", "\u22D1": "Sup", "\u22D2": "Cap", "\u22D3": "Cup", "\u22D4": "fork", "\u22D5": "epar", "\u22D6": "ltdot", "\u22D7": "gtdot", "\u22D8": "Ll", "\u22D8\u0338": "nLl", "\u22D9": "Gg", "\u22D9\u0338": "nGg", "\u22DA\uFE00": "lesg", "\u22DA": "leg", "\u22DB": "gel", "\u22DB\uFE00": "gesl", "\u22DE": "cuepr", "\u22DF": "cuesc", "\u22E6": "lnsim", "\u22E7": "gnsim", "\u22E8": "prnsim", "\u22E9": "scnsim", "\u22EE": "vellip", "\u22EF": "ctdot", "\u22F0": "utdot", "\u22F1": "dtdot", "\u22F2": "disin", "\u22F3": "isinsv", "\u22F4": "isins", "\u22F5": "isindot", "\u22F5\u0338": "notindot", "\u22F6": "notinvc", "\u22F7": "notinvb", "\u22F9": "isinE", "\u22F9\u0338": "notinE", "\u22FA": "nisd", "\u22FB": "xnis", "\u22FC": "nis", "\u22FD": "notnivc", "\u22FE": "notnivb", "\u2305": "barwed", "\u2306": "Barwed", "\u230C": "drcrop", "\u230D": "dlcrop", "\u230E": "urcrop", "\u230F": "ulcrop", "\u2310": "bnot", "\u2312": "profline", "\u2313": "profsurf", "\u2315": "telrec", "\u2316": "target", "\u231C": "ulcorn", "\u231D": "urcorn", "\u231E": "dlcorn", "\u231F": "drcorn", "\u2322": "frown", "\u2323": "smile", "\u232D": "cylcty", "\u232E": "profalar", "\u2336": "topbot", "\u233D": "ovbar", "\u233F": "solbar", "\u237C": "angzarr", "\u23B0": "lmoust", "\u23B1": "rmoust", "\u23B4": "tbrk", "\u23B5": "bbrk", "\u23B6": "bbrktbrk", "\u23DC": "OverParenthesis", "\u23DD": "UnderParenthesis", "\u23DE": "OverBrace", "\u23DF": "UnderBrace", "\u23E2": "trpezium", "\u23E7": "elinters", "\u2423": "blank", "\u2500": "boxh", "\u2502": "boxv", "\u250C": "boxdr", "\u2510": "boxdl", "\u2514": "boxur", "\u2518": "boxul", "\u251C": "boxvr", "\u2524": "boxvl", "\u252C": "boxhd", "\u2534": "boxhu", "\u253C": "boxvh", "\u2550": "boxH", "\u2551": "boxV", "\u2552": "boxdR", "\u2553": "boxDr", "\u2554": "boxDR", "\u2555": "boxdL", "\u2556": "boxDl", "\u2557": "boxDL", "\u2558": "boxuR", "\u2559": "boxUr", "\u255A": "boxUR", "\u255B": "boxuL", "\u255C": "boxUl", "\u255D": "boxUL", "\u255E": "boxvR", "\u255F": "boxVr", "\u2560": "boxVR", "\u2561": "boxvL", "\u2562": "boxVl", "\u2563": "boxVL", "\u2564": "boxHd", "\u2565": "boxhD", "\u2566": "boxHD", "\u2567": "boxHu", "\u2568": "boxhU", "\u2569": "boxHU", "\u256A": "boxvH", "\u256B": "boxVh", "\u256C": "boxVH", "\u2580": "uhblk", "\u2584": "lhblk", "\u2588": "block", "\u2591": "blk14", "\u2592": "blk12", "\u2593": "blk34", "\u25A1": "squ", "\u25AA": "squf", "\u25AB": "EmptyVerySmallSquare", "\u25AD": "rect", "\u25AE": "marker", "\u25B1": "fltns", "\u25B3": "xutri", "\u25B4": "utrif", "\u25B5": "utri", "\u25B8": "rtrif", "\u25B9": "rtri", "\u25BD": "xdtri", "\u25BE": "dtrif", "\u25BF": "dtri", "\u25C2": "ltrif", "\u25C3": "ltri", "\u25CA": "loz", "\u25CB": "cir", "\u25EC": "tridot", "\u25EF": "xcirc", "\u25F8": "ultri", "\u25F9": "urtri", "\u25FA": "lltri", "\u25FB": "EmptySmallSquare", "\u25FC": "FilledSmallSquare", "\u2605": "starf", "\u2606": "star", "\u260E": "phone", "\u2640": "female", "\u2642": "male", "\u2660": "spades", "\u2663": "clubs", "\u2665": "hearts", "\u2666": "diams", "\u266A": "sung", "\u2713": "check", "\u2717": "cross", "\u2720": "malt", "\u2736": "sext", "\u2758": "VerticalSeparator", "\u27C8": "bsolhsub", "\u27C9": "suphsol", "\u27F5": "xlarr", "\u27F6": "xrarr", "\u27F7": "xharr", "\u27F8": "xlArr", "\u27F9": "xrArr", "\u27FA": "xhArr", "\u27FC": "xmap", "\u27FF": "dzigrarr", "\u2902": "nvlArr", "\u2903": "nvrArr", "\u2904": "nvHarr", "\u2905": "Map", "\u290C": "lbarr", "\u290D": "rbarr", "\u290E": "lBarr", "\u290F": "rBarr", "\u2910": "RBarr", "\u2911": "DDotrahd", "\u2912": "UpArrowBar", "\u2913": "DownArrowBar", "\u2916": "Rarrtl", "\u2919": "latail", "\u291A": "ratail", "\u291B": "lAtail", "\u291C": "rAtail", "\u291D": "larrfs", "\u291E": "rarrfs", "\u291F": "larrbfs", "\u2920": "rarrbfs", "\u2923": "nwarhk", "\u2924": "nearhk", "\u2925": "searhk", "\u2926": "swarhk", "\u2927": "nwnear", "\u2928": "toea", "\u2929": "tosa", "\u292A": "swnwar", "\u2933": "rarrc", "\u2933\u0338": "nrarrc", "\u2935": "cudarrr", "\u2936": "ldca", "\u2937": "rdca", "\u2938": "cudarrl", "\u2939": "larrpl", "\u293C": "curarrm", "\u293D": "cularrp", "\u2945": "rarrpl", "\u2948": "harrcir", "\u2949": "Uarrocir", "\u294A": "lurdshar", "\u294B": "ldrushar", "\u294E": "LeftRightVector", "\u294F": "RightUpDownVector", "\u2950": "DownLeftRightVector", "\u2951": "LeftUpDownVector", "\u2952": "LeftVectorBar", "\u2953": "RightVectorBar", "\u2954": "RightUpVectorBar", "\u2955": "RightDownVectorBar", "\u2956": "DownLeftVectorBar", "\u2957": "DownRightVectorBar", "\u2958": "LeftUpVectorBar", "\u2959": "LeftDownVectorBar", "\u295A": "LeftTeeVector", "\u295B": "RightTeeVector", "\u295C": "RightUpTeeVector", "\u295D": "RightDownTeeVector", "\u295E": "DownLeftTeeVector", "\u295F": "DownRightTeeVector", "\u2960": "LeftUpTeeVector", "\u2961": "LeftDownTeeVector", "\u2962": "lHar", "\u2963": "uHar", "\u2964": "rHar", "\u2965": "dHar", "\u2966": "luruhar", "\u2967": "ldrdhar", "\u2968": "ruluhar", "\u2969": "rdldhar", "\u296A": "lharul", "\u296B": "llhard", "\u296C": "rharul", "\u296D": "lrhard", "\u296E": "udhar", "\u296F": "duhar", "\u2970": "RoundImplies", "\u2971": "erarr", "\u2972": "simrarr", "\u2973": "larrsim", "\u2974": "rarrsim", "\u2975": "rarrap", "\u2976": "ltlarr", "\u2978": "gtrarr", "\u2979": "subrarr", "\u297B": "suplarr", "\u297C": "lfisht", "\u297D": "rfisht", "\u297E": "ufisht", "\u297F": "dfisht", "\u299A": "vzigzag", "\u299C": "vangrt", "\u299D": "angrtvbd", "\u29A4": "ange", "\u29A5": "range", "\u29A6": "dwangle", "\u29A7": "uwangle", "\u29A8": "angmsdaa", "\u29A9": "angmsdab", "\u29AA": "angmsdac", "\u29AB": "angmsdad", "\u29AC": "angmsdae", "\u29AD": "angmsdaf", "\u29AE": "angmsdag", "\u29AF": "angmsdah", "\u29B0": "bemptyv", "\u29B1": "demptyv", "\u29B2": "cemptyv", "\u29B3": "raemptyv", "\u29B4": "laemptyv", "\u29B5": "ohbar", "\u29B6": "omid", "\u29B7": "opar", "\u29B9": "operp", "\u29BB": "olcross", "\u29BC": "odsold", "\u29BE": "olcir", "\u29BF": "ofcir", "\u29C0": "olt", "\u29C1": "ogt", "\u29C2": "cirscir", "\u29C3": "cirE", "\u29C4": "solb", "\u29C5": "bsolb", "\u29C9": "boxbox", "\u29CD": "trisb", "\u29CE": "rtriltri", "\u29CF": "LeftTriangleBar", "\u29CF\u0338": "NotLeftTriangleBar", "\u29D0": "RightTriangleBar", "\u29D0\u0338": "NotRightTriangleBar", "\u29DC": "iinfin", "\u29DD": "infintie", "\u29DE": "nvinfin", "\u29E3": "eparsl", "\u29E4": "smeparsl", "\u29E5": "eqvparsl", "\u29EB": "lozf", "\u29F4": "RuleDelayed", "\u29F6": "dsol", "\u2A00": "xodot", "\u2A01": "xoplus", "\u2A02": "xotime", "\u2A04": "xuplus", "\u2A06": "xsqcup", "\u2A0D": "fpartint", "\u2A10": "cirfnint", "\u2A11": "awint", "\u2A12": "rppolint", "\u2A13": "scpolint", "\u2A14": "npolint", "\u2A15": "pointint", "\u2A16": "quatint", "\u2A17": "intlarhk", "\u2A22": "pluscir", "\u2A23": "plusacir", "\u2A24": "simplus", "\u2A25": "plusdu", "\u2A26": "plussim", "\u2A27": "plustwo", "\u2A29": "mcomma", "\u2A2A": "minusdu", "\u2A2D": "loplus", "\u2A2E": "roplus", "\u2A2F": "Cross", "\u2A30": "timesd", "\u2A31": "timesbar", "\u2A33": "smashp", "\u2A34": "lotimes", "\u2A35": "rotimes", "\u2A36": "otimesas", "\u2A37": "Otimes", "\u2A38": "odiv", "\u2A39": "triplus", "\u2A3A": "triminus", "\u2A3B": "tritime", "\u2A3C": "iprod", "\u2A3F": "amalg", "\u2A40": "capdot", "\u2A42": "ncup", "\u2A43": "ncap", "\u2A44": "capand", "\u2A45": "cupor", "\u2A46": "cupcap", "\u2A47": "capcup", "\u2A48": "cupbrcap", "\u2A49": "capbrcup", "\u2A4A": "cupcup", "\u2A4B": "capcap", "\u2A4C": "ccups", "\u2A4D": "ccaps", "\u2A50": "ccupssm", "\u2A53": "And", "\u2A54": "Or", "\u2A55": "andand", "\u2A56": "oror", "\u2A57": "orslope", "\u2A58": "andslope", "\u2A5A": "andv", "\u2A5B": "orv", "\u2A5C": "andd", "\u2A5D": "ord", "\u2A5F": "wedbar", "\u2A66": "sdote", "\u2A6A": "simdot", "\u2A6D": "congdot", "\u2A6D\u0338": "ncongdot", "\u2A6E": "easter", "\u2A6F": "apacir", "\u2A70": "apE", "\u2A70\u0338": "napE", "\u2A71": "eplus", "\u2A72": "pluse", "\u2A73": "Esim", "\u2A77": "eDDot", "\u2A78": "equivDD", "\u2A79": "ltcir", "\u2A7A": "gtcir", "\u2A7B": "ltquest", "\u2A7C": "gtquest", "\u2A7D": "les", "\u2A7D\u0338": "nles", "\u2A7E": "ges", "\u2A7E\u0338": "nges", "\u2A7F": "lesdot", "\u2A80": "gesdot", "\u2A81": "lesdoto", "\u2A82": "gesdoto", "\u2A83": "lesdotor", "\u2A84": "gesdotol", "\u2A85": "lap", "\u2A86": "gap", "\u2A87": "lne", "\u2A88": "gne", "\u2A89": "lnap", "\u2A8A": "gnap", "\u2A8B": "lEg", "\u2A8C": "gEl", "\u2A8D": "lsime", "\u2A8E": "gsime", "\u2A8F": "lsimg", "\u2A90": "gsiml", "\u2A91": "lgE", "\u2A92": "glE", "\u2A93": "lesges", "\u2A94": "gesles", "\u2A95": "els", "\u2A96": "egs", "\u2A97": "elsdot", "\u2A98": "egsdot", "\u2A99": "el", "\u2A9A": "eg", "\u2A9D": "siml", "\u2A9E": "simg", "\u2A9F": "simlE", "\u2AA0": "simgE", "\u2AA1": "LessLess", "\u2AA1\u0338": "NotNestedLessLess", "\u2AA2": "GreaterGreater", "\u2AA2\u0338": "NotNestedGreaterGreater", "\u2AA4": "glj", "\u2AA5": "gla", "\u2AA6": "ltcc", "\u2AA7": "gtcc", "\u2AA8": "lescc", "\u2AA9": "gescc", "\u2AAA": "smt", "\u2AAB": "lat", "\u2AAC": "smte", "\u2AAC\uFE00": "smtes", "\u2AAD": "late", "\u2AAD\uFE00": "lates", "\u2AAE": "bumpE", "\u2AAF": "pre", "\u2AAF\u0338": "npre", "\u2AB0": "sce", "\u2AB0\u0338": "nsce", "\u2AB3": "prE", "\u2AB4": "scE", "\u2AB5": "prnE", "\u2AB6": "scnE", "\u2AB7": "prap", "\u2AB8": "scap", "\u2AB9": "prnap", "\u2ABA": "scnap", "\u2ABB": "Pr", "\u2ABC": "Sc", "\u2ABD": "subdot", "\u2ABE": "supdot", "\u2ABF": "subplus", "\u2AC0": "supplus", "\u2AC1": "submult", "\u2AC2": "supmult", "\u2AC3": "subedot", "\u2AC4": "supedot", "\u2AC5": "subE", "\u2AC5\u0338": "nsubE", "\u2AC6": "supE", "\u2AC6\u0338": "nsupE", "\u2AC7": "subsim", "\u2AC8": "supsim", "\u2ACB\uFE00": "vsubnE", "\u2ACB": "subnE", "\u2ACC\uFE00": "vsupnE", "\u2ACC": "supnE", "\u2ACF": "csub", "\u2AD0": "csup", "\u2AD1": "csube", "\u2AD2": "csupe", "\u2AD3": "subsup", "\u2AD4": "supsub", "\u2AD5": "subsub", "\u2AD6": "supsup", "\u2AD7": "suphsub", "\u2AD8": "supdsub", "\u2AD9": "forkv", "\u2ADA": "topfork", "\u2ADB": "mlcp", "\u2AE4": "Dashv", "\u2AE6": "Vdashl", "\u2AE7": "Barv", "\u2AE8": "vBar", "\u2AE9": "vBarv", "\u2AEB": "Vbar", "\u2AEC": "Not", "\u2AED": "bNot", "\u2AEE": "rnmid", "\u2AEF": "cirmid", "\u2AF0": "midcir", "\u2AF1": "topcir", "\u2AF2": "nhpar", "\u2AF3": "parsim", "\u2AFD": "parsl", "\u2AFD\u20E5": "nparsl", "\u266D": "flat", "\u266E": "natur", "\u266F": "sharp", "\xA4": "curren", "\xA2": "cent", "$": "dollar", "\xA3": "pound", "\xA5": "yen", "\u20AC": "euro", "\xB9": "sup1", "\xBD": "half", "\u2153": "frac13", "\xBC": "frac14", "\u2155": "frac15", "\u2159": "frac16", "\u215B": "frac18", "\xB2": "sup2", "\u2154": "frac23", "\u2156": "frac25", "\xB3": "sup3", "\xBE": "frac34", "\u2157": "frac35", "\u215C": "frac38", "\u2158": "frac45", "\u215A": "frac56", "\u215D": "frac58", "\u215E": "frac78", "\u{1D4B6}": "ascr", "\u{1D552}": "aopf", "\u{1D51E}": "afr", "\u{1D538}": "Aopf", "\u{1D504}": "Afr", "\u{1D49C}": "Ascr", "\xAA": "ordf", "\xE1": "aacute", "\xC1": "Aacute", "\xE0": "agrave", "\xC0": "Agrave", "\u0103": "abreve", "\u0102": "Abreve", "\xE2": "acirc", "\xC2": "Acirc", "\xE5": "aring", "\xC5": "angst", "\xE4": "auml", "\xC4": "Auml", "\xE3": "atilde", "\xC3": "Atilde", "\u0105": "aogon", "\u0104": "Aogon", "\u0101": "amacr", "\u0100": "Amacr", "\xE6": "aelig", "\xC6": "AElig", "\u{1D4B7}": "bscr", "\u{1D553}": "bopf", "\u{1D51F}": "bfr", "\u{1D539}": "Bopf", "\u212C": "Bscr", "\u{1D505}": "Bfr", "\u{1D520}": "cfr", "\u{1D4B8}": "cscr", "\u{1D554}": "copf", "\u212D": "Cfr", "\u{1D49E}": "Cscr", "\u2102": "Copf", "\u0107": "cacute", "\u0106": "Cacute", "\u0109": "ccirc", "\u0108": "Ccirc", "\u010D": "ccaron", "\u010C": "Ccaron", "\u010B": "cdot", "\u010A": "Cdot", "\xE7": "ccedil", "\xC7": "Ccedil", "\u2105": "incare", "\u{1D521}": "dfr", "\u2146": "dd", "\u{1D555}": "dopf", "\u{1D4B9}": "dscr", "\u{1D49F}": "Dscr", "\u{1D507}": "Dfr", "\u2145": "DD", "\u{1D53B}": "Dopf", "\u010F": "dcaron", "\u010E": "Dcaron", "\u0111": "dstrok", "\u0110": "Dstrok", "\xF0": "eth", "\xD0": "ETH", "\u2147": "ee", "\u212F": "escr", "\u{1D522}": "efr", "\u{1D556}": "eopf", "\u2130": "Escr", "\u{1D508}": "Efr", "\u{1D53C}": "Eopf", "\xE9": "eacute", "\xC9": "Eacute", "\xE8": "egrave", "\xC8": "Egrave", "\xEA": "ecirc", "\xCA": "Ecirc", "\u011B": "ecaron", "\u011A": "Ecaron", "\xEB": "euml", "\xCB": "Euml", "\u0117": "edot", "\u0116": "Edot", "\u0119": "eogon", "\u0118": "Eogon", "\u0113": "emacr", "\u0112": "Emacr", "\u{1D523}": "ffr", "\u{1D557}": "fopf", "\u{1D4BB}": "fscr", "\u{1D509}": "Ffr", "\u{1D53D}": "Fopf", "\u2131": "Fscr", "\uFB00": "fflig", "\uFB03": "ffilig", "\uFB04": "ffllig", "\uFB01": "filig", "fj": "fjlig", "\uFB02": "fllig", "\u0192": "fnof", "\u210A": "gscr", "\u{1D558}": "gopf", "\u{1D524}": "gfr", "\u{1D4A2}": "Gscr", "\u{1D53E}": "Gopf", "\u{1D50A}": "Gfr", "\u01F5": "gacute", "\u011F": "gbreve", "\u011E": "Gbreve", "\u011D": "gcirc", "\u011C": "Gcirc", "\u0121": "gdot", "\u0120": "Gdot", "\u0122": "Gcedil", "\u{1D525}": "hfr", "\u210E": "planckh", "\u{1D4BD}": "hscr", "\u{1D559}": "hopf", "\u210B": "Hscr", "\u210C": "Hfr", "\u210D": "Hopf", "\u0125": "hcirc", "\u0124": "Hcirc", "\u210F": "hbar", "\u0127": "hstrok", "\u0126": "Hstrok", "\u{1D55A}": "iopf", "\u{1D526}": "ifr", "\u{1D4BE}": "iscr", "\u2148": "ii", "\u{1D540}": "Iopf", "\u2110": "Iscr", "\u2111": "Im", "\xED": "iacute", "\xCD": "Iacute", "\xEC": "igrave", "\xCC": "Igrave", "\xEE": "icirc", "\xCE": "Icirc", "\xEF": "iuml", "\xCF": "Iuml", "\u0129": "itilde", "\u0128": "Itilde", "\u0130": "Idot", "\u012F": "iogon", "\u012E": "Iogon", "\u012B": "imacr", "\u012A": "Imacr", "\u0133": "ijlig", "\u0132": "IJlig", "\u0131": "imath", "\u{1D4BF}": "jscr", "\u{1D55B}": "jopf", "\u{1D527}": "jfr", "\u{1D4A5}": "Jscr", "\u{1D50D}": "Jfr", "\u{1D541}": "Jopf", "\u0135": "jcirc", "\u0134": "Jcirc", "\u0237": "jmath", "\u{1D55C}": "kopf", "\u{1D4C0}": "kscr", "\u{1D528}": "kfr", "\u{1D4A6}": "Kscr", "\u{1D542}": "Kopf", "\u{1D50E}": "Kfr", "\u0137": "kcedil", "\u0136": "Kcedil", "\u{1D529}": "lfr", "\u{1D4C1}": "lscr", "\u2113": "ell", "\u{1D55D}": "lopf", "\u2112": "Lscr", "\u{1D50F}": "Lfr", "\u{1D543}": "Lopf", "\u013A": "lacute", "\u0139": "Lacute", "\u013E": "lcaron", "\u013D": "Lcaron", "\u013C": "lcedil", "\u013B": "Lcedil", "\u0142": "lstrok", "\u0141": "Lstrok", "\u0140": "lmidot", "\u013F": "Lmidot", "\u{1D52A}": "mfr", "\u{1D55E}": "mopf", "\u{1D4C2}": "mscr", "\u{1D510}": "Mfr", "\u{1D544}": "Mopf", "\u2133": "Mscr", "\u{1D52B}": "nfr", "\u{1D55F}": "nopf", "\u{1D4C3}": "nscr", "\u2115": "Nopf", "\u{1D4A9}": "Nscr", "\u{1D511}": "Nfr", "\u0144": "nacute", "\u0143": "Nacute", "\u0148": "ncaron", "\u0147": "Ncaron", "\xF1": "ntilde", "\xD1": "Ntilde", "\u0146": "ncedil", "\u0145": "Ncedil", "\u2116": "numero", "\u014B": "eng", "\u014A": "ENG", "\u{1D560}": "oopf", "\u{1D52C}": "ofr", "\u2134": "oscr", "\u{1D4AA}": "Oscr", "\u{1D512}": "Ofr", "\u{1D546}": "Oopf", "\xBA": "ordm", "\xF3": "oacute", "\xD3": "Oacute", "\xF2": "ograve", "\xD2": "Ograve", "\xF4": "ocirc", "\xD4": "Ocirc", "\xF6": "ouml", "\xD6": "Ouml", "\u0151": "odblac", "\u0150": "Odblac", "\xF5": "otilde", "\xD5": "Otilde", "\xF8": "oslash", "\xD8": "Oslash", "\u014D": "omacr", "\u014C": "Omacr", "\u0153": "oelig", "\u0152": "OElig", "\u{1D52D}": "pfr", "\u{1D4C5}": "pscr", "\u{1D561}": "popf", "\u2119": "Popf", "\u{1D513}": "Pfr", "\u{1D4AB}": "Pscr", "\u{1D562}": "qopf", "\u{1D52E}": "qfr", "\u{1D4C6}": "qscr", "\u{1D4AC}": "Qscr", "\u{1D514}": "Qfr", "\u211A": "Qopf", "\u0138": "kgreen", "\u{1D52F}": "rfr", "\u{1D563}": "ropf", "\u{1D4C7}": "rscr", "\u211B": "Rscr", "\u211C": "Re", "\u211D": "Ropf", "\u0155": "racute", "\u0154": "Racute", "\u0159": "rcaron", "\u0158": "Rcaron", "\u0157": "rcedil", "\u0156": "Rcedil", "\u{1D564}": "sopf", "\u{1D4C8}": "sscr", "\u{1D530}": "sfr", "\u{1D54A}": "Sopf", "\u{1D516}": "Sfr", "\u{1D4AE}": "Sscr", "\u24C8": "oS", "\u015B": "sacute", "\u015A": "Sacute", "\u015D": "scirc", "\u015C": "Scirc", "\u0161": "scaron", "\u0160": "Scaron", "\u015F": "scedil", "\u015E": "Scedil", "\xDF": "szlig", "\u{1D531}": "tfr", "\u{1D4C9}": "tscr", "\u{1D565}": "topf", "\u{1D4AF}": "Tscr", "\u{1D517}": "Tfr", "\u{1D54B}": "Topf", "\u0165": "tcaron", "\u0164": "Tcaron", "\u0163": "tcedil", "\u0162": "Tcedil", "\u2122": "trade", "\u0167": "tstrok", "\u0166": "Tstrok", "\u{1D4CA}": "uscr", "\u{1D566}": "uopf", "\u{1D532}": "ufr", "\u{1D54C}": "Uopf", "\u{1D518}": "Ufr", "\u{1D4B0}": "Uscr", "\xFA": "uacute", "\xDA": "Uacute", "\xF9": "ugrave", "\xD9": "Ugrave", "\u016D": "ubreve", "\u016C": "Ubreve", "\xFB": "ucirc", "\xDB": "Ucirc", "\u016F": "uring", "\u016E": "Uring", "\xFC": "uuml", "\xDC": "Uuml", "\u0171": "udblac", "\u0170": "Udblac", "\u0169": "utilde", "\u0168": "Utilde", "\u0173": "uogon", "\u0172": "Uogon", "\u016B": "umacr", "\u016A": "Umacr", "\u{1D533}": "vfr", "\u{1D567}": "vopf", "\u{1D4CB}": "vscr", "\u{1D519}": "Vfr", "\u{1D54D}": "Vopf", "\u{1D4B1}": "Vscr", "\u{1D568}": "wopf", "\u{1D4CC}": "wscr", "\u{1D534}": "wfr", "\u{1D4B2}": "Wscr", "\u{1D54E}": "Wopf", "\u{1D51A}": "Wfr", "\u0175": "wcirc", "\u0174": "Wcirc", "\u{1D535}": "xfr", "\u{1D4CD}": "xscr", "\u{1D569}": "xopf", "\u{1D54F}": "Xopf", "\u{1D51B}": "Xfr", "\u{1D4B3}": "Xscr", "\u{1D536}": "yfr", "\u{1D4CE}": "yscr", "\u{1D56A}": "yopf", "\u{1D4B4}": "Yscr", "\u{1D51C}": "Yfr", "\u{1D550}": "Yopf", "\xFD": "yacute", "\xDD": "Yacute", "\u0177": "ycirc", "\u0176": "Ycirc", "\xFF": "yuml", "\u0178": "Yuml", "\u{1D4CF}": "zscr", "\u{1D537}": "zfr", "\u{1D56B}": "zopf", "\u2128": "Zfr", "\u2124": "Zopf", "\u{1D4B5}": "Zscr", "\u017A": "zacute", "\u0179": "Zacute", "\u017E": "zcaron", "\u017D": "Zcaron", "\u017C": "zdot", "\u017B": "Zdot", "\u01B5": "imped", "\xFE": "thorn", "\xDE": "THORN", "\u0149": "napos", "\u03B1": "alpha", "\u0391": "Alpha", "\u03B2": "beta", "\u0392": "Beta", "\u03B3": "gamma", "\u0393": "Gamma", "\u03B4": "delta", "\u0394": "Delta", "\u03B5": "epsi", "\u03F5": "epsiv", "\u0395": "Epsilon", "\u03DD": "gammad", "\u03DC": "Gammad", "\u03B6": "zeta", "\u0396": "Zeta", "\u03B7": "eta", "\u0397": "Eta", "\u03B8": "theta", "\u03D1": "thetav", "\u0398": "Theta", "\u03B9": "iota", "\u0399": "Iota", "\u03BA": "kappa", "\u03F0": "kappav", "\u039A": "Kappa", "\u03BB": "lambda", "\u039B": "Lambda", "\u03BC": "mu", "\xB5": "micro", "\u039C": "Mu", "\u03BD": "nu", "\u039D": "Nu", "\u03BE": "xi", "\u039E": "Xi", "\u03BF": "omicron", "\u039F": "Omicron", "\u03C0": "pi", "\u03D6": "piv", "\u03A0": "Pi", "\u03C1": "rho", "\u03F1": "rhov", "\u03A1": "Rho", "\u03C3": "sigma", "\u03A3": "Sigma", "\u03C2": "sigmaf", "\u03C4": "tau", "\u03A4": "Tau", "\u03C5": "upsi", "\u03A5": "Upsilon", "\u03D2": "Upsi", "\u03C6": "phi", "\u03D5": "phiv", "\u03A6": "Phi", "\u03C7": "chi", "\u03A7": "Chi", "\u03C8": "psi", "\u03A8": "Psi", "\u03C9": "omega", "\u03A9": "ohm", "\u0430": "acy", "\u0410": "Acy", "\u0431": "bcy", "\u0411": "Bcy", "\u0432": "vcy", "\u0412": "Vcy", "\u0433": "gcy", "\u0413": "Gcy", "\u0453": "gjcy", "\u0403": "GJcy", "\u0434": "dcy", "\u0414": "Dcy", "\u0452": "djcy", "\u0402": "DJcy", "\u0435": "iecy", "\u0415": "IEcy", "\u0451": "iocy", "\u0401": "IOcy", "\u0454": "jukcy", "\u0404": "Jukcy", "\u0436": "zhcy", "\u0416": "ZHcy", "\u0437": "zcy", "\u0417": "Zcy", "\u0455": "dscy", "\u0405": "DScy", "\u0438": "icy", "\u0418": "Icy", "\u0456": "iukcy", "\u0406": "Iukcy", "\u0457": "yicy", "\u0407": "YIcy", "\u0439": "jcy", "\u0419": "Jcy", "\u0458": "jsercy", "\u0408": "Jsercy", "\u043A": "kcy", "\u041A": "Kcy", "\u045C": "kjcy", "\u040C": "KJcy", "\u043B": "lcy", "\u041B": "Lcy", "\u0459": "ljcy", "\u0409": "LJcy", "\u043C": "mcy", "\u041C": "Mcy", "\u043D": "ncy", "\u041D": "Ncy", "\u045A": "njcy", "\u040A": "NJcy", "\u043E": "ocy", "\u041E": "Ocy", "\u043F": "pcy", "\u041F": "Pcy", "\u0440": "rcy", "\u0420": "Rcy", "\u0441": "scy", "\u0421": "Scy", "\u0442": "tcy", "\u0422": "Tcy", "\u045B": "tshcy", "\u040B": "TSHcy", "\u0443": "ucy", "\u0423": "Ucy", "\u045E": "ubrcy", "\u040E": "Ubrcy", "\u0444": "fcy", "\u0424": "Fcy", "\u0445": "khcy", "\u0425": "KHcy", "\u0446": "tscy", "\u0426": "TScy", "\u0447": "chcy", "\u0427": "CHcy", "\u045F": "dzcy", "\u040F": "DZcy", "\u0448": "shcy", "\u0428": "SHcy", "\u0449": "shchcy", "\u0429": "SHCHcy", "\u044A": "hardcy", "\u042A": "HARDcy", "\u044B": "ycy", "\u042B": "Ycy", "\u044C": "softcy", "\u042C": "SOFTcy", "\u044D": "ecy", "\u042D": "Ecy", "\u044E": "yucy", "\u042E": "YUcy", "\u044F": "yacy", "\u042F": "YAcy", "\u2135": "aleph", "\u2136": "beth", "\u2137": "gimel", "\u2138": "daleth" };
      var regexEscape = /["&'<>`]/g;
      var escapeMap = {
        '"': "&quot;",
        "&": "&amp;",
        "'": "&#x27;",
        "<": "&lt;",
        ">": "&gt;",
        "`": "&#x60;"
      };
      var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;
      var regexInvalidRawCodePoint = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
      var regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;
      var decodeMap = { "aacute": "\xE1", "Aacute": "\xC1", "abreve": "\u0103", "Abreve": "\u0102", "ac": "\u223E", "acd": "\u223F", "acE": "\u223E\u0333", "acirc": "\xE2", "Acirc": "\xC2", "acute": "\xB4", "acy": "\u0430", "Acy": "\u0410", "aelig": "\xE6", "AElig": "\xC6", "af": "\u2061", "afr": "\u{1D51E}", "Afr": "\u{1D504}", "agrave": "\xE0", "Agrave": "\xC0", "alefsym": "\u2135", "aleph": "\u2135", "alpha": "\u03B1", "Alpha": "\u0391", "amacr": "\u0101", "Amacr": "\u0100", "amalg": "\u2A3F", "amp": "&", "AMP": "&", "and": "\u2227", "And": "\u2A53", "andand": "\u2A55", "andd": "\u2A5C", "andslope": "\u2A58", "andv": "\u2A5A", "ang": "\u2220", "ange": "\u29A4", "angle": "\u2220", "angmsd": "\u2221", "angmsdaa": "\u29A8", "angmsdab": "\u29A9", "angmsdac": "\u29AA", "angmsdad": "\u29AB", "angmsdae": "\u29AC", "angmsdaf": "\u29AD", "angmsdag": "\u29AE", "angmsdah": "\u29AF", "angrt": "\u221F", "angrtvb": "\u22BE", "angrtvbd": "\u299D", "angsph": "\u2222", "angst": "\xC5", "angzarr": "\u237C", "aogon": "\u0105", "Aogon": "\u0104", "aopf": "\u{1D552}", "Aopf": "\u{1D538}", "ap": "\u2248", "apacir": "\u2A6F", "ape": "\u224A", "apE": "\u2A70", "apid": "\u224B", "apos": "'", "ApplyFunction": "\u2061", "approx": "\u2248", "approxeq": "\u224A", "aring": "\xE5", "Aring": "\xC5", "ascr": "\u{1D4B6}", "Ascr": "\u{1D49C}", "Assign": "\u2254", "ast": "*", "asymp": "\u2248", "asympeq": "\u224D", "atilde": "\xE3", "Atilde": "\xC3", "auml": "\xE4", "Auml": "\xC4", "awconint": "\u2233", "awint": "\u2A11", "backcong": "\u224C", "backepsilon": "\u03F6", "backprime": "\u2035", "backsim": "\u223D", "backsimeq": "\u22CD", "Backslash": "\u2216", "Barv": "\u2AE7", "barvee": "\u22BD", "barwed": "\u2305", "Barwed": "\u2306", "barwedge": "\u2305", "bbrk": "\u23B5", "bbrktbrk": "\u23B6", "bcong": "\u224C", "bcy": "\u0431", "Bcy": "\u0411", "bdquo": "\u201E", "becaus": "\u2235", "because": "\u2235", "Because": "\u2235", "bemptyv": "\u29B0", "bepsi": "\u03F6", "bernou": "\u212C", "Bernoullis": "\u212C", "beta": "\u03B2", "Beta": "\u0392", "beth": "\u2136", "between": "\u226C", "bfr": "\u{1D51F}", "Bfr": "\u{1D505}", "bigcap": "\u22C2", "bigcirc": "\u25EF", "bigcup": "\u22C3", "bigodot": "\u2A00", "bigoplus": "\u2A01", "bigotimes": "\u2A02", "bigsqcup": "\u2A06", "bigstar": "\u2605", "bigtriangledown": "\u25BD", "bigtriangleup": "\u25B3", "biguplus": "\u2A04", "bigvee": "\u22C1", "bigwedge": "\u22C0", "bkarow": "\u290D", "blacklozenge": "\u29EB", "blacksquare": "\u25AA", "blacktriangle": "\u25B4", "blacktriangledown": "\u25BE", "blacktriangleleft": "\u25C2", "blacktriangleright": "\u25B8", "blank": "\u2423", "blk12": "\u2592", "blk14": "\u2591", "blk34": "\u2593", "block": "\u2588", "bne": "=\u20E5", "bnequiv": "\u2261\u20E5", "bnot": "\u2310", "bNot": "\u2AED", "bopf": "\u{1D553}", "Bopf": "\u{1D539}", "bot": "\u22A5", "bottom": "\u22A5", "bowtie": "\u22C8", "boxbox": "\u29C9", "boxdl": "\u2510", "boxdL": "\u2555", "boxDl": "\u2556", "boxDL": "\u2557", "boxdr": "\u250C", "boxdR": "\u2552", "boxDr": "\u2553", "boxDR": "\u2554", "boxh": "\u2500", "boxH": "\u2550", "boxhd": "\u252C", "boxhD": "\u2565", "boxHd": "\u2564", "boxHD": "\u2566", "boxhu": "\u2534", "boxhU": "\u2568", "boxHu": "\u2567", "boxHU": "\u2569", "boxminus": "\u229F", "boxplus": "\u229E", "boxtimes": "\u22A0", "boxul": "\u2518", "boxuL": "\u255B", "boxUl": "\u255C", "boxUL": "\u255D", "boxur": "\u2514", "boxuR": "\u2558", "boxUr": "\u2559", "boxUR": "\u255A", "boxv": "\u2502", "boxV": "\u2551", "boxvh": "\u253C", "boxvH": "\u256A", "boxVh": "\u256B", "boxVH": "\u256C", "boxvl": "\u2524", "boxvL": "\u2561", "boxVl": "\u2562", "boxVL": "\u2563", "boxvr": "\u251C", "boxvR": "\u255E", "boxVr": "\u255F", "boxVR": "\u2560", "bprime": "\u2035", "breve": "\u02D8", "Breve": "\u02D8", "brvbar": "\xA6", "bscr": "\u{1D4B7}", "Bscr": "\u212C", "bsemi": "\u204F", "bsim": "\u223D", "bsime": "\u22CD", "bsol": "\\", "bsolb": "\u29C5", "bsolhsub": "\u27C8", "bull": "\u2022", "bullet": "\u2022", "bump": "\u224E", "bumpe": "\u224F", "bumpE": "\u2AAE", "bumpeq": "\u224F", "Bumpeq": "\u224E", "cacute": "\u0107", "Cacute": "\u0106", "cap": "\u2229", "Cap": "\u22D2", "capand": "\u2A44", "capbrcup": "\u2A49", "capcap": "\u2A4B", "capcup": "\u2A47", "capdot": "\u2A40", "CapitalDifferentialD": "\u2145", "caps": "\u2229\uFE00", "caret": "\u2041", "caron": "\u02C7", "Cayleys": "\u212D", "ccaps": "\u2A4D", "ccaron": "\u010D", "Ccaron": "\u010C", "ccedil": "\xE7", "Ccedil": "\xC7", "ccirc": "\u0109", "Ccirc": "\u0108", "Cconint": "\u2230", "ccups": "\u2A4C", "ccupssm": "\u2A50", "cdot": "\u010B", "Cdot": "\u010A", "cedil": "\xB8", "Cedilla": "\xB8", "cemptyv": "\u29B2", "cent": "\xA2", "centerdot": "\xB7", "CenterDot": "\xB7", "cfr": "\u{1D520}", "Cfr": "\u212D", "chcy": "\u0447", "CHcy": "\u0427", "check": "\u2713", "checkmark": "\u2713", "chi": "\u03C7", "Chi": "\u03A7", "cir": "\u25CB", "circ": "\u02C6", "circeq": "\u2257", "circlearrowleft": "\u21BA", "circlearrowright": "\u21BB", "circledast": "\u229B", "circledcirc": "\u229A", "circleddash": "\u229D", "CircleDot": "\u2299", "circledR": "\xAE", "circledS": "\u24C8", "CircleMinus": "\u2296", "CirclePlus": "\u2295", "CircleTimes": "\u2297", "cire": "\u2257", "cirE": "\u29C3", "cirfnint": "\u2A10", "cirmid": "\u2AEF", "cirscir": "\u29C2", "ClockwiseContourIntegral": "\u2232", "CloseCurlyDoubleQuote": "\u201D", "CloseCurlyQuote": "\u2019", "clubs": "\u2663", "clubsuit": "\u2663", "colon": ":", "Colon": "\u2237", "colone": "\u2254", "Colone": "\u2A74", "coloneq": "\u2254", "comma": ",", "commat": "@", "comp": "\u2201", "compfn": "\u2218", "complement": "\u2201", "complexes": "\u2102", "cong": "\u2245", "congdot": "\u2A6D", "Congruent": "\u2261", "conint": "\u222E", "Conint": "\u222F", "ContourIntegral": "\u222E", "copf": "\u{1D554}", "Copf": "\u2102", "coprod": "\u2210", "Coproduct": "\u2210", "copy": "\xA9", "COPY": "\xA9", "copysr": "\u2117", "CounterClockwiseContourIntegral": "\u2233", "crarr": "\u21B5", "cross": "\u2717", "Cross": "\u2A2F", "cscr": "\u{1D4B8}", "Cscr": "\u{1D49E}", "csub": "\u2ACF", "csube": "\u2AD1", "csup": "\u2AD0", "csupe": "\u2AD2", "ctdot": "\u22EF", "cudarrl": "\u2938", "cudarrr": "\u2935", "cuepr": "\u22DE", "cuesc": "\u22DF", "cularr": "\u21B6", "cularrp": "\u293D", "cup": "\u222A", "Cup": "\u22D3", "cupbrcap": "\u2A48", "cupcap": "\u2A46", "CupCap": "\u224D", "cupcup": "\u2A4A", "cupdot": "\u228D", "cupor": "\u2A45", "cups": "\u222A\uFE00", "curarr": "\u21B7", "curarrm": "\u293C", "curlyeqprec": "\u22DE", "curlyeqsucc": "\u22DF", "curlyvee": "\u22CE", "curlywedge": "\u22CF", "curren": "\xA4", "curvearrowleft": "\u21B6", "curvearrowright": "\u21B7", "cuvee": "\u22CE", "cuwed": "\u22CF", "cwconint": "\u2232", "cwint": "\u2231", "cylcty": "\u232D", "dagger": "\u2020", "Dagger": "\u2021", "daleth": "\u2138", "darr": "\u2193", "dArr": "\u21D3", "Darr": "\u21A1", "dash": "\u2010", "dashv": "\u22A3", "Dashv": "\u2AE4", "dbkarow": "\u290F", "dblac": "\u02DD", "dcaron": "\u010F", "Dcaron": "\u010E", "dcy": "\u0434", "Dcy": "\u0414", "dd": "\u2146", "DD": "\u2145", "ddagger": "\u2021", "ddarr": "\u21CA", "DDotrahd": "\u2911", "ddotseq": "\u2A77", "deg": "\xB0", "Del": "\u2207", "delta": "\u03B4", "Delta": "\u0394", "demptyv": "\u29B1", "dfisht": "\u297F", "dfr": "\u{1D521}", "Dfr": "\u{1D507}", "dHar": "\u2965", "dharl": "\u21C3", "dharr": "\u21C2", "DiacriticalAcute": "\xB4", "DiacriticalDot": "\u02D9", "DiacriticalDoubleAcute": "\u02DD", "DiacriticalGrave": "`", "DiacriticalTilde": "\u02DC", "diam": "\u22C4", "diamond": "\u22C4", "Diamond": "\u22C4", "diamondsuit": "\u2666", "diams": "\u2666", "die": "\xA8", "DifferentialD": "\u2146", "digamma": "\u03DD", "disin": "\u22F2", "div": "\xF7", "divide": "\xF7", "divideontimes": "\u22C7", "divonx": "\u22C7", "djcy": "\u0452", "DJcy": "\u0402", "dlcorn": "\u231E", "dlcrop": "\u230D", "dollar": "$", "dopf": "\u{1D555}", "Dopf": "\u{1D53B}", "dot": "\u02D9", "Dot": "\xA8", "DotDot": "\u20DC", "doteq": "\u2250", "doteqdot": "\u2251", "DotEqual": "\u2250", "dotminus": "\u2238", "dotplus": "\u2214", "dotsquare": "\u22A1", "doublebarwedge": "\u2306", "DoubleContourIntegral": "\u222F", "DoubleDot": "\xA8", "DoubleDownArrow": "\u21D3", "DoubleLeftArrow": "\u21D0", "DoubleLeftRightArrow": "\u21D4", "DoubleLeftTee": "\u2AE4", "DoubleLongLeftArrow": "\u27F8", "DoubleLongLeftRightArrow": "\u27FA", "DoubleLongRightArrow": "\u27F9", "DoubleRightArrow": "\u21D2", "DoubleRightTee": "\u22A8", "DoubleUpArrow": "\u21D1", "DoubleUpDownArrow": "\u21D5", "DoubleVerticalBar": "\u2225", "downarrow": "\u2193", "Downarrow": "\u21D3", "DownArrow": "\u2193", "DownArrowBar": "\u2913", "DownArrowUpArrow": "\u21F5", "DownBreve": "\u0311", "downdownarrows": "\u21CA", "downharpoonleft": "\u21C3", "downharpoonright": "\u21C2", "DownLeftRightVector": "\u2950", "DownLeftTeeVector": "\u295E", "DownLeftVector": "\u21BD", "DownLeftVectorBar": "\u2956", "DownRightTeeVector": "\u295F", "DownRightVector": "\u21C1", "DownRightVectorBar": "\u2957", "DownTee": "\u22A4", "DownTeeArrow": "\u21A7", "drbkarow": "\u2910", "drcorn": "\u231F", "drcrop": "\u230C", "dscr": "\u{1D4B9}", "Dscr": "\u{1D49F}", "dscy": "\u0455", "DScy": "\u0405", "dsol": "\u29F6", "dstrok": "\u0111", "Dstrok": "\u0110", "dtdot": "\u22F1", "dtri": "\u25BF", "dtrif": "\u25BE", "duarr": "\u21F5", "duhar": "\u296F", "dwangle": "\u29A6", "dzcy": "\u045F", "DZcy": "\u040F", "dzigrarr": "\u27FF", "eacute": "\xE9", "Eacute": "\xC9", "easter": "\u2A6E", "ecaron": "\u011B", "Ecaron": "\u011A", "ecir": "\u2256", "ecirc": "\xEA", "Ecirc": "\xCA", "ecolon": "\u2255", "ecy": "\u044D", "Ecy": "\u042D", "eDDot": "\u2A77", "edot": "\u0117", "eDot": "\u2251", "Edot": "\u0116", "ee": "\u2147", "efDot": "\u2252", "efr": "\u{1D522}", "Efr": "\u{1D508}", "eg": "\u2A9A", "egrave": "\xE8", "Egrave": "\xC8", "egs": "\u2A96", "egsdot": "\u2A98", "el": "\u2A99", "Element": "\u2208", "elinters": "\u23E7", "ell": "\u2113", "els": "\u2A95", "elsdot": "\u2A97", "emacr": "\u0113", "Emacr": "\u0112", "empty": "\u2205", "emptyset": "\u2205", "EmptySmallSquare": "\u25FB", "emptyv": "\u2205", "EmptyVerySmallSquare": "\u25AB", "emsp": "\u2003", "emsp13": "\u2004", "emsp14": "\u2005", "eng": "\u014B", "ENG": "\u014A", "ensp": "\u2002", "eogon": "\u0119", "Eogon": "\u0118", "eopf": "\u{1D556}", "Eopf": "\u{1D53C}", "epar": "\u22D5", "eparsl": "\u29E3", "eplus": "\u2A71", "epsi": "\u03B5", "epsilon": "\u03B5", "Epsilon": "\u0395", "epsiv": "\u03F5", "eqcirc": "\u2256", "eqcolon": "\u2255", "eqsim": "\u2242", "eqslantgtr": "\u2A96", "eqslantless": "\u2A95", "Equal": "\u2A75", "equals": "=", "EqualTilde": "\u2242", "equest": "\u225F", "Equilibrium": "\u21CC", "equiv": "\u2261", "equivDD": "\u2A78", "eqvparsl": "\u29E5", "erarr": "\u2971", "erDot": "\u2253", "escr": "\u212F", "Escr": "\u2130", "esdot": "\u2250", "esim": "\u2242", "Esim": "\u2A73", "eta": "\u03B7", "Eta": "\u0397", "eth": "\xF0", "ETH": "\xD0", "euml": "\xEB", "Euml": "\xCB", "euro": "\u20AC", "excl": "!", "exist": "\u2203", "Exists": "\u2203", "expectation": "\u2130", "exponentiale": "\u2147", "ExponentialE": "\u2147", "fallingdotseq": "\u2252", "fcy": "\u0444", "Fcy": "\u0424", "female": "\u2640", "ffilig": "\uFB03", "fflig": "\uFB00", "ffllig": "\uFB04", "ffr": "\u{1D523}", "Ffr": "\u{1D509}", "filig": "\uFB01", "FilledSmallSquare": "\u25FC", "FilledVerySmallSquare": "\u25AA", "fjlig": "fj", "flat": "\u266D", "fllig": "\uFB02", "fltns": "\u25B1", "fnof": "\u0192", "fopf": "\u{1D557}", "Fopf": "\u{1D53D}", "forall": "\u2200", "ForAll": "\u2200", "fork": "\u22D4", "forkv": "\u2AD9", "Fouriertrf": "\u2131", "fpartint": "\u2A0D", "frac12": "\xBD", "frac13": "\u2153", "frac14": "\xBC", "frac15": "\u2155", "frac16": "\u2159", "frac18": "\u215B", "frac23": "\u2154", "frac25": "\u2156", "frac34": "\xBE", "frac35": "\u2157", "frac38": "\u215C", "frac45": "\u2158", "frac56": "\u215A", "frac58": "\u215D", "frac78": "\u215E", "frasl": "\u2044", "frown": "\u2322", "fscr": "\u{1D4BB}", "Fscr": "\u2131", "gacute": "\u01F5", "gamma": "\u03B3", "Gamma": "\u0393", "gammad": "\u03DD", "Gammad": "\u03DC", "gap": "\u2A86", "gbreve": "\u011F", "Gbreve": "\u011E", "Gcedil": "\u0122", "gcirc": "\u011D", "Gcirc": "\u011C", "gcy": "\u0433", "Gcy": "\u0413", "gdot": "\u0121", "Gdot": "\u0120", "ge": "\u2265", "gE": "\u2267", "gel": "\u22DB", "gEl": "\u2A8C", "geq": "\u2265", "geqq": "\u2267", "geqslant": "\u2A7E", "ges": "\u2A7E", "gescc": "\u2AA9", "gesdot": "\u2A80", "gesdoto": "\u2A82", "gesdotol": "\u2A84", "gesl": "\u22DB\uFE00", "gesles": "\u2A94", "gfr": "\u{1D524}", "Gfr": "\u{1D50A}", "gg": "\u226B", "Gg": "\u22D9", "ggg": "\u22D9", "gimel": "\u2137", "gjcy": "\u0453", "GJcy": "\u0403", "gl": "\u2277", "gla": "\u2AA5", "glE": "\u2A92", "glj": "\u2AA4", "gnap": "\u2A8A", "gnapprox": "\u2A8A", "gne": "\u2A88", "gnE": "\u2269", "gneq": "\u2A88", "gneqq": "\u2269", "gnsim": "\u22E7", "gopf": "\u{1D558}", "Gopf": "\u{1D53E}", "grave": "`", "GreaterEqual": "\u2265", "GreaterEqualLess": "\u22DB", "GreaterFullEqual": "\u2267", "GreaterGreater": "\u2AA2", "GreaterLess": "\u2277", "GreaterSlantEqual": "\u2A7E", "GreaterTilde": "\u2273", "gscr": "\u210A", "Gscr": "\u{1D4A2}", "gsim": "\u2273", "gsime": "\u2A8E", "gsiml": "\u2A90", "gt": ">", "Gt": "\u226B", "GT": ">", "gtcc": "\u2AA7", "gtcir": "\u2A7A", "gtdot": "\u22D7", "gtlPar": "\u2995", "gtquest": "\u2A7C", "gtrapprox": "\u2A86", "gtrarr": "\u2978", "gtrdot": "\u22D7", "gtreqless": "\u22DB", "gtreqqless": "\u2A8C", "gtrless": "\u2277", "gtrsim": "\u2273", "gvertneqq": "\u2269\uFE00", "gvnE": "\u2269\uFE00", "Hacek": "\u02C7", "hairsp": "\u200A", "half": "\xBD", "hamilt": "\u210B", "hardcy": "\u044A", "HARDcy": "\u042A", "harr": "\u2194", "hArr": "\u21D4", "harrcir": "\u2948", "harrw": "\u21AD", "Hat": "^", "hbar": "\u210F", "hcirc": "\u0125", "Hcirc": "\u0124", "hearts": "\u2665", "heartsuit": "\u2665", "hellip": "\u2026", "hercon": "\u22B9", "hfr": "\u{1D525}", "Hfr": "\u210C", "HilbertSpace": "\u210B", "hksearow": "\u2925", "hkswarow": "\u2926", "hoarr": "\u21FF", "homtht": "\u223B", "hookleftarrow": "\u21A9", "hookrightarrow": "\u21AA", "hopf": "\u{1D559}", "Hopf": "\u210D", "horbar": "\u2015", "HorizontalLine": "\u2500", "hscr": "\u{1D4BD}", "Hscr": "\u210B", "hslash": "\u210F", "hstrok": "\u0127", "Hstrok": "\u0126", "HumpDownHump": "\u224E", "HumpEqual": "\u224F", "hybull": "\u2043", "hyphen": "\u2010", "iacute": "\xED", "Iacute": "\xCD", "ic": "\u2063", "icirc": "\xEE", "Icirc": "\xCE", "icy": "\u0438", "Icy": "\u0418", "Idot": "\u0130", "iecy": "\u0435", "IEcy": "\u0415", "iexcl": "\xA1", "iff": "\u21D4", "ifr": "\u{1D526}", "Ifr": "\u2111", "igrave": "\xEC", "Igrave": "\xCC", "ii": "\u2148", "iiiint": "\u2A0C", "iiint": "\u222D", "iinfin": "\u29DC", "iiota": "\u2129", "ijlig": "\u0133", "IJlig": "\u0132", "Im": "\u2111", "imacr": "\u012B", "Imacr": "\u012A", "image": "\u2111", "ImaginaryI": "\u2148", "imagline": "\u2110", "imagpart": "\u2111", "imath": "\u0131", "imof": "\u22B7", "imped": "\u01B5", "Implies": "\u21D2", "in": "\u2208", "incare": "\u2105", "infin": "\u221E", "infintie": "\u29DD", "inodot": "\u0131", "int": "\u222B", "Int": "\u222C", "intcal": "\u22BA", "integers": "\u2124", "Integral": "\u222B", "intercal": "\u22BA", "Intersection": "\u22C2", "intlarhk": "\u2A17", "intprod": "\u2A3C", "InvisibleComma": "\u2063", "InvisibleTimes": "\u2062", "iocy": "\u0451", "IOcy": "\u0401", "iogon": "\u012F", "Iogon": "\u012E", "iopf": "\u{1D55A}", "Iopf": "\u{1D540}", "iota": "\u03B9", "Iota": "\u0399", "iprod": "\u2A3C", "iquest": "\xBF", "iscr": "\u{1D4BE}", "Iscr": "\u2110", "isin": "\u2208", "isindot": "\u22F5", "isinE": "\u22F9", "isins": "\u22F4", "isinsv": "\u22F3", "isinv": "\u2208", "it": "\u2062", "itilde": "\u0129", "Itilde": "\u0128", "iukcy": "\u0456", "Iukcy": "\u0406", "iuml": "\xEF", "Iuml": "\xCF", "jcirc": "\u0135", "Jcirc": "\u0134", "jcy": "\u0439", "Jcy": "\u0419", "jfr": "\u{1D527}", "Jfr": "\u{1D50D}", "jmath": "\u0237", "jopf": "\u{1D55B}", "Jopf": "\u{1D541}", "jscr": "\u{1D4BF}", "Jscr": "\u{1D4A5}", "jsercy": "\u0458", "Jsercy": "\u0408", "jukcy": "\u0454", "Jukcy": "\u0404", "kappa": "\u03BA", "Kappa": "\u039A", "kappav": "\u03F0", "kcedil": "\u0137", "Kcedil": "\u0136", "kcy": "\u043A", "Kcy": "\u041A", "kfr": "\u{1D528}", "Kfr": "\u{1D50E}", "kgreen": "\u0138", "khcy": "\u0445", "KHcy": "\u0425", "kjcy": "\u045C", "KJcy": "\u040C", "kopf": "\u{1D55C}", "Kopf": "\u{1D542}", "kscr": "\u{1D4C0}", "Kscr": "\u{1D4A6}", "lAarr": "\u21DA", "lacute": "\u013A", "Lacute": "\u0139", "laemptyv": "\u29B4", "lagran": "\u2112", "lambda": "\u03BB", "Lambda": "\u039B", "lang": "\u27E8", "Lang": "\u27EA", "langd": "\u2991", "langle": "\u27E8", "lap": "\u2A85", "Laplacetrf": "\u2112", "laquo": "\xAB", "larr": "\u2190", "lArr": "\u21D0", "Larr": "\u219E", "larrb": "\u21E4", "larrbfs": "\u291F", "larrfs": "\u291D", "larrhk": "\u21A9", "larrlp": "\u21AB", "larrpl": "\u2939", "larrsim": "\u2973", "larrtl": "\u21A2", "lat": "\u2AAB", "latail": "\u2919", "lAtail": "\u291B", "late": "\u2AAD", "lates": "\u2AAD\uFE00", "lbarr": "\u290C", "lBarr": "\u290E", "lbbrk": "\u2772", "lbrace": "{", "lbrack": "[", "lbrke": "\u298B", "lbrksld": "\u298F", "lbrkslu": "\u298D", "lcaron": "\u013E", "Lcaron": "\u013D", "lcedil": "\u013C", "Lcedil": "\u013B", "lceil": "\u2308", "lcub": "{", "lcy": "\u043B", "Lcy": "\u041B", "ldca": "\u2936", "ldquo": "\u201C", "ldquor": "\u201E", "ldrdhar": "\u2967", "ldrushar": "\u294B", "ldsh": "\u21B2", "le": "\u2264", "lE": "\u2266", "LeftAngleBracket": "\u27E8", "leftarrow": "\u2190", "Leftarrow": "\u21D0", "LeftArrow": "\u2190", "LeftArrowBar": "\u21E4", "LeftArrowRightArrow": "\u21C6", "leftarrowtail": "\u21A2", "LeftCeiling": "\u2308", "LeftDoubleBracket": "\u27E6", "LeftDownTeeVector": "\u2961", "LeftDownVector": "\u21C3", "LeftDownVectorBar": "\u2959", "LeftFloor": "\u230A", "leftharpoondown": "\u21BD", "leftharpoonup": "\u21BC", "leftleftarrows": "\u21C7", "leftrightarrow": "\u2194", "Leftrightarrow": "\u21D4", "LeftRightArrow": "\u2194", "leftrightarrows": "\u21C6", "leftrightharpoons": "\u21CB", "leftrightsquigarrow": "\u21AD", "LeftRightVector": "\u294E", "LeftTee": "\u22A3", "LeftTeeArrow": "\u21A4", "LeftTeeVector": "\u295A", "leftthreetimes": "\u22CB", "LeftTriangle": "\u22B2", "LeftTriangleBar": "\u29CF", "LeftTriangleEqual": "\u22B4", "LeftUpDownVector": "\u2951", "LeftUpTeeVector": "\u2960", "LeftUpVector": "\u21BF", "LeftUpVectorBar": "\u2958", "LeftVector": "\u21BC", "LeftVectorBar": "\u2952", "leg": "\u22DA", "lEg": "\u2A8B", "leq": "\u2264", "leqq": "\u2266", "leqslant": "\u2A7D", "les": "\u2A7D", "lescc": "\u2AA8", "lesdot": "\u2A7F", "lesdoto": "\u2A81", "lesdotor": "\u2A83", "lesg": "\u22DA\uFE00", "lesges": "\u2A93", "lessapprox": "\u2A85", "lessdot": "\u22D6", "lesseqgtr": "\u22DA", "lesseqqgtr": "\u2A8B", "LessEqualGreater": "\u22DA", "LessFullEqual": "\u2266", "LessGreater": "\u2276", "lessgtr": "\u2276", "LessLess": "\u2AA1", "lesssim": "\u2272", "LessSlantEqual": "\u2A7D", "LessTilde": "\u2272", "lfisht": "\u297C", "lfloor": "\u230A", "lfr": "\u{1D529}", "Lfr": "\u{1D50F}", "lg": "\u2276", "lgE": "\u2A91", "lHar": "\u2962", "lhard": "\u21BD", "lharu": "\u21BC", "lharul": "\u296A", "lhblk": "\u2584", "ljcy": "\u0459", "LJcy": "\u0409", "ll": "\u226A", "Ll": "\u22D8", "llarr": "\u21C7", "llcorner": "\u231E", "Lleftarrow": "\u21DA", "llhard": "\u296B", "lltri": "\u25FA", "lmidot": "\u0140", "Lmidot": "\u013F", "lmoust": "\u23B0", "lmoustache": "\u23B0", "lnap": "\u2A89", "lnapprox": "\u2A89", "lne": "\u2A87", "lnE": "\u2268", "lneq": "\u2A87", "lneqq": "\u2268", "lnsim": "\u22E6", "loang": "\u27EC", "loarr": "\u21FD", "lobrk": "\u27E6", "longleftarrow": "\u27F5", "Longleftarrow": "\u27F8", "LongLeftArrow": "\u27F5", "longleftrightarrow": "\u27F7", "Longleftrightarrow": "\u27FA", "LongLeftRightArrow": "\u27F7", "longmapsto": "\u27FC", "longrightarrow": "\u27F6", "Longrightarrow": "\u27F9", "LongRightArrow": "\u27F6", "looparrowleft": "\u21AB", "looparrowright": "\u21AC", "lopar": "\u2985", "lopf": "\u{1D55D}", "Lopf": "\u{1D543}", "loplus": "\u2A2D", "lotimes": "\u2A34", "lowast": "\u2217", "lowbar": "_", "LowerLeftArrow": "\u2199", "LowerRightArrow": "\u2198", "loz": "\u25CA", "lozenge": "\u25CA", "lozf": "\u29EB", "lpar": "(", "lparlt": "\u2993", "lrarr": "\u21C6", "lrcorner": "\u231F", "lrhar": "\u21CB", "lrhard": "\u296D", "lrm": "\u200E", "lrtri": "\u22BF", "lsaquo": "\u2039", "lscr": "\u{1D4C1}", "Lscr": "\u2112", "lsh": "\u21B0", "Lsh": "\u21B0", "lsim": "\u2272", "lsime": "\u2A8D", "lsimg": "\u2A8F", "lsqb": "[", "lsquo": "\u2018", "lsquor": "\u201A", "lstrok": "\u0142", "Lstrok": "\u0141", "lt": "<", "Lt": "\u226A", "LT": "<", "ltcc": "\u2AA6", "ltcir": "\u2A79", "ltdot": "\u22D6", "lthree": "\u22CB", "ltimes": "\u22C9", "ltlarr": "\u2976", "ltquest": "\u2A7B", "ltri": "\u25C3", "ltrie": "\u22B4", "ltrif": "\u25C2", "ltrPar": "\u2996", "lurdshar": "\u294A", "luruhar": "\u2966", "lvertneqq": "\u2268\uFE00", "lvnE": "\u2268\uFE00", "macr": "\xAF", "male": "\u2642", "malt": "\u2720", "maltese": "\u2720", "map": "\u21A6", "Map": "\u2905", "mapsto": "\u21A6", "mapstodown": "\u21A7", "mapstoleft": "\u21A4", "mapstoup": "\u21A5", "marker": "\u25AE", "mcomma": "\u2A29", "mcy": "\u043C", "Mcy": "\u041C", "mdash": "\u2014", "mDDot": "\u223A", "measuredangle": "\u2221", "MediumSpace": "\u205F", "Mellintrf": "\u2133", "mfr": "\u{1D52A}", "Mfr": "\u{1D510}", "mho": "\u2127", "micro": "\xB5", "mid": "\u2223", "midast": "*", "midcir": "\u2AF0", "middot": "\xB7", "minus": "\u2212", "minusb": "\u229F", "minusd": "\u2238", "minusdu": "\u2A2A", "MinusPlus": "\u2213", "mlcp": "\u2ADB", "mldr": "\u2026", "mnplus": "\u2213", "models": "\u22A7", "mopf": "\u{1D55E}", "Mopf": "\u{1D544}", "mp": "\u2213", "mscr": "\u{1D4C2}", "Mscr": "\u2133", "mstpos": "\u223E", "mu": "\u03BC", "Mu": "\u039C", "multimap": "\u22B8", "mumap": "\u22B8", "nabla": "\u2207", "nacute": "\u0144", "Nacute": "\u0143", "nang": "\u2220\u20D2", "nap": "\u2249", "napE": "\u2A70\u0338", "napid": "\u224B\u0338", "napos": "\u0149", "napprox": "\u2249", "natur": "\u266E", "natural": "\u266E", "naturals": "\u2115", "nbsp": "\xA0", "nbump": "\u224E\u0338", "nbumpe": "\u224F\u0338", "ncap": "\u2A43", "ncaron": "\u0148", "Ncaron": "\u0147", "ncedil": "\u0146", "Ncedil": "\u0145", "ncong": "\u2247", "ncongdot": "\u2A6D\u0338", "ncup": "\u2A42", "ncy": "\u043D", "Ncy": "\u041D", "ndash": "\u2013", "ne": "\u2260", "nearhk": "\u2924", "nearr": "\u2197", "neArr": "\u21D7", "nearrow": "\u2197", "nedot": "\u2250\u0338", "NegativeMediumSpace": "\u200B", "NegativeThickSpace": "\u200B", "NegativeThinSpace": "\u200B", "NegativeVeryThinSpace": "\u200B", "nequiv": "\u2262", "nesear": "\u2928", "nesim": "\u2242\u0338", "NestedGreaterGreater": "\u226B", "NestedLessLess": "\u226A", "NewLine": "\n", "nexist": "\u2204", "nexists": "\u2204", "nfr": "\u{1D52B}", "Nfr": "\u{1D511}", "nge": "\u2271", "ngE": "\u2267\u0338", "ngeq": "\u2271", "ngeqq": "\u2267\u0338", "ngeqslant": "\u2A7E\u0338", "nges": "\u2A7E\u0338", "nGg": "\u22D9\u0338", "ngsim": "\u2275", "ngt": "\u226F", "nGt": "\u226B\u20D2", "ngtr": "\u226F", "nGtv": "\u226B\u0338", "nharr": "\u21AE", "nhArr": "\u21CE", "nhpar": "\u2AF2", "ni": "\u220B", "nis": "\u22FC", "nisd": "\u22FA", "niv": "\u220B", "njcy": "\u045A", "NJcy": "\u040A", "nlarr": "\u219A", "nlArr": "\u21CD", "nldr": "\u2025", "nle": "\u2270", "nlE": "\u2266\u0338", "nleftarrow": "\u219A", "nLeftarrow": "\u21CD", "nleftrightarrow": "\u21AE", "nLeftrightarrow": "\u21CE", "nleq": "\u2270", "nleqq": "\u2266\u0338", "nleqslant": "\u2A7D\u0338", "nles": "\u2A7D\u0338", "nless": "\u226E", "nLl": "\u22D8\u0338", "nlsim": "\u2274", "nlt": "\u226E", "nLt": "\u226A\u20D2", "nltri": "\u22EA", "nltrie": "\u22EC", "nLtv": "\u226A\u0338", "nmid": "\u2224", "NoBreak": "\u2060", "NonBreakingSpace": "\xA0", "nopf": "\u{1D55F}", "Nopf": "\u2115", "not": "\xAC", "Not": "\u2AEC", "NotCongruent": "\u2262", "NotCupCap": "\u226D", "NotDoubleVerticalBar": "\u2226", "NotElement": "\u2209", "NotEqual": "\u2260", "NotEqualTilde": "\u2242\u0338", "NotExists": "\u2204", "NotGreater": "\u226F", "NotGreaterEqual": "\u2271", "NotGreaterFullEqual": "\u2267\u0338", "NotGreaterGreater": "\u226B\u0338", "NotGreaterLess": "\u2279", "NotGreaterSlantEqual": "\u2A7E\u0338", "NotGreaterTilde": "\u2275", "NotHumpDownHump": "\u224E\u0338", "NotHumpEqual": "\u224F\u0338", "notin": "\u2209", "notindot": "\u22F5\u0338", "notinE": "\u22F9\u0338", "notinva": "\u2209", "notinvb": "\u22F7", "notinvc": "\u22F6", "NotLeftTriangle": "\u22EA", "NotLeftTriangleBar": "\u29CF\u0338", "NotLeftTriangleEqual": "\u22EC", "NotLess": "\u226E", "NotLessEqual": "\u2270", "NotLessGreater": "\u2278", "NotLessLess": "\u226A\u0338", "NotLessSlantEqual": "\u2A7D\u0338", "NotLessTilde": "\u2274", "NotNestedGreaterGreater": "\u2AA2\u0338", "NotNestedLessLess": "\u2AA1\u0338", "notni": "\u220C", "notniva": "\u220C", "notnivb": "\u22FE", "notnivc": "\u22FD", "NotPrecedes": "\u2280", "NotPrecedesEqual": "\u2AAF\u0338", "NotPrecedesSlantEqual": "\u22E0", "NotReverseElement": "\u220C", "NotRightTriangle": "\u22EB", "NotRightTriangleBar": "\u29D0\u0338", "NotRightTriangleEqual": "\u22ED", "NotSquareSubset": "\u228F\u0338", "NotSquareSubsetEqual": "\u22E2", "NotSquareSuperset": "\u2290\u0338", "NotSquareSupersetEqual": "\u22E3", "NotSubset": "\u2282\u20D2", "NotSubsetEqual": "\u2288", "NotSucceeds": "\u2281", "NotSucceedsEqual": "\u2AB0\u0338", "NotSucceedsSlantEqual": "\u22E1", "NotSucceedsTilde": "\u227F\u0338", "NotSuperset": "\u2283\u20D2", "NotSupersetEqual": "\u2289", "NotTilde": "\u2241", "NotTildeEqual": "\u2244", "NotTildeFullEqual": "\u2247", "NotTildeTilde": "\u2249", "NotVerticalBar": "\u2224", "npar": "\u2226", "nparallel": "\u2226", "nparsl": "\u2AFD\u20E5", "npart": "\u2202\u0338", "npolint": "\u2A14", "npr": "\u2280", "nprcue": "\u22E0", "npre": "\u2AAF\u0338", "nprec": "\u2280", "npreceq": "\u2AAF\u0338", "nrarr": "\u219B", "nrArr": "\u21CF", "nrarrc": "\u2933\u0338", "nrarrw": "\u219D\u0338", "nrightarrow": "\u219B", "nRightarrow": "\u21CF", "nrtri": "\u22EB", "nrtrie": "\u22ED", "nsc": "\u2281", "nsccue": "\u22E1", "nsce": "\u2AB0\u0338", "nscr": "\u{1D4C3}", "Nscr": "\u{1D4A9}", "nshortmid": "\u2224", "nshortparallel": "\u2226", "nsim": "\u2241", "nsime": "\u2244", "nsimeq": "\u2244", "nsmid": "\u2224", "nspar": "\u2226", "nsqsube": "\u22E2", "nsqsupe": "\u22E3", "nsub": "\u2284", "nsube": "\u2288", "nsubE": "\u2AC5\u0338", "nsubset": "\u2282\u20D2", "nsubseteq": "\u2288", "nsubseteqq": "\u2AC5\u0338", "nsucc": "\u2281", "nsucceq": "\u2AB0\u0338", "nsup": "\u2285", "nsupe": "\u2289", "nsupE": "\u2AC6\u0338", "nsupset": "\u2283\u20D2", "nsupseteq": "\u2289", "nsupseteqq": "\u2AC6\u0338", "ntgl": "\u2279", "ntilde": "\xF1", "Ntilde": "\xD1", "ntlg": "\u2278", "ntriangleleft": "\u22EA", "ntrianglelefteq": "\u22EC", "ntriangleright": "\u22EB", "ntrianglerighteq": "\u22ED", "nu": "\u03BD", "Nu": "\u039D", "num": "#", "numero": "\u2116", "numsp": "\u2007", "nvap": "\u224D\u20D2", "nvdash": "\u22AC", "nvDash": "\u22AD", "nVdash": "\u22AE", "nVDash": "\u22AF", "nvge": "\u2265\u20D2", "nvgt": ">\u20D2", "nvHarr": "\u2904", "nvinfin": "\u29DE", "nvlArr": "\u2902", "nvle": "\u2264\u20D2", "nvlt": "<\u20D2", "nvltrie": "\u22B4\u20D2", "nvrArr": "\u2903", "nvrtrie": "\u22B5\u20D2", "nvsim": "\u223C\u20D2", "nwarhk": "\u2923", "nwarr": "\u2196", "nwArr": "\u21D6", "nwarrow": "\u2196", "nwnear": "\u2927", "oacute": "\xF3", "Oacute": "\xD3", "oast": "\u229B", "ocir": "\u229A", "ocirc": "\xF4", "Ocirc": "\xD4", "ocy": "\u043E", "Ocy": "\u041E", "odash": "\u229D", "odblac": "\u0151", "Odblac": "\u0150", "odiv": "\u2A38", "odot": "\u2299", "odsold": "\u29BC", "oelig": "\u0153", "OElig": "\u0152", "ofcir": "\u29BF", "ofr": "\u{1D52C}", "Ofr": "\u{1D512}", "ogon": "\u02DB", "ograve": "\xF2", "Ograve": "\xD2", "ogt": "\u29C1", "ohbar": "\u29B5", "ohm": "\u03A9", "oint": "\u222E", "olarr": "\u21BA", "olcir": "\u29BE", "olcross": "\u29BB", "oline": "\u203E", "olt": "\u29C0", "omacr": "\u014D", "Omacr": "\u014C", "omega": "\u03C9", "Omega": "\u03A9", "omicron": "\u03BF", "Omicron": "\u039F", "omid": "\u29B6", "ominus": "\u2296", "oopf": "\u{1D560}", "Oopf": "\u{1D546}", "opar": "\u29B7", "OpenCurlyDoubleQuote": "\u201C", "OpenCurlyQuote": "\u2018", "operp": "\u29B9", "oplus": "\u2295", "or": "\u2228", "Or": "\u2A54", "orarr": "\u21BB", "ord": "\u2A5D", "order": "\u2134", "orderof": "\u2134", "ordf": "\xAA", "ordm": "\xBA", "origof": "\u22B6", "oror": "\u2A56", "orslope": "\u2A57", "orv": "\u2A5B", "oS": "\u24C8", "oscr": "\u2134", "Oscr": "\u{1D4AA}", "oslash": "\xF8", "Oslash": "\xD8", "osol": "\u2298", "otilde": "\xF5", "Otilde": "\xD5", "otimes": "\u2297", "Otimes": "\u2A37", "otimesas": "\u2A36", "ouml": "\xF6", "Ouml": "\xD6", "ovbar": "\u233D", "OverBar": "\u203E", "OverBrace": "\u23DE", "OverBracket": "\u23B4", "OverParenthesis": "\u23DC", "par": "\u2225", "para": "\xB6", "parallel": "\u2225", "parsim": "\u2AF3", "parsl": "\u2AFD", "part": "\u2202", "PartialD": "\u2202", "pcy": "\u043F", "Pcy": "\u041F", "percnt": "%", "period": ".", "permil": "\u2030", "perp": "\u22A5", "pertenk": "\u2031", "pfr": "\u{1D52D}", "Pfr": "\u{1D513}", "phi": "\u03C6", "Phi": "\u03A6", "phiv": "\u03D5", "phmmat": "\u2133", "phone": "\u260E", "pi": "\u03C0", "Pi": "\u03A0", "pitchfork": "\u22D4", "piv": "\u03D6", "planck": "\u210F", "planckh": "\u210E", "plankv": "\u210F", "plus": "+", "plusacir": "\u2A23", "plusb": "\u229E", "pluscir": "\u2A22", "plusdo": "\u2214", "plusdu": "\u2A25", "pluse": "\u2A72", "PlusMinus": "\xB1", "plusmn": "\xB1", "plussim": "\u2A26", "plustwo": "\u2A27", "pm": "\xB1", "Poincareplane": "\u210C", "pointint": "\u2A15", "popf": "\u{1D561}", "Popf": "\u2119", "pound": "\xA3", "pr": "\u227A", "Pr": "\u2ABB", "prap": "\u2AB7", "prcue": "\u227C", "pre": "\u2AAF", "prE": "\u2AB3", "prec": "\u227A", "precapprox": "\u2AB7", "preccurlyeq": "\u227C", "Precedes": "\u227A", "PrecedesEqual": "\u2AAF", "PrecedesSlantEqual": "\u227C", "PrecedesTilde": "\u227E", "preceq": "\u2AAF", "precnapprox": "\u2AB9", "precneqq": "\u2AB5", "precnsim": "\u22E8", "precsim": "\u227E", "prime": "\u2032", "Prime": "\u2033", "primes": "\u2119", "prnap": "\u2AB9", "prnE": "\u2AB5", "prnsim": "\u22E8", "prod": "\u220F", "Product": "\u220F", "profalar": "\u232E", "profline": "\u2312", "profsurf": "\u2313", "prop": "\u221D", "Proportion": "\u2237", "Proportional": "\u221D", "propto": "\u221D", "prsim": "\u227E", "prurel": "\u22B0", "pscr": "\u{1D4C5}", "Pscr": "\u{1D4AB}", "psi": "\u03C8", "Psi": "\u03A8", "puncsp": "\u2008", "qfr": "\u{1D52E}", "Qfr": "\u{1D514}", "qint": "\u2A0C", "qopf": "\u{1D562}", "Qopf": "\u211A", "qprime": "\u2057", "qscr": "\u{1D4C6}", "Qscr": "\u{1D4AC}", "quaternions": "\u210D", "quatint": "\u2A16", "quest": "?", "questeq": "\u225F", "quot": '"', "QUOT": '"', "rAarr": "\u21DB", "race": "\u223D\u0331", "racute": "\u0155", "Racute": "\u0154", "radic": "\u221A", "raemptyv": "\u29B3", "rang": "\u27E9", "Rang": "\u27EB", "rangd": "\u2992", "range": "\u29A5", "rangle": "\u27E9", "raquo": "\xBB", "rarr": "\u2192", "rArr": "\u21D2", "Rarr": "\u21A0", "rarrap": "\u2975", "rarrb": "\u21E5", "rarrbfs": "\u2920", "rarrc": "\u2933", "rarrfs": "\u291E", "rarrhk": "\u21AA", "rarrlp": "\u21AC", "rarrpl": "\u2945", "rarrsim": "\u2974", "rarrtl": "\u21A3", "Rarrtl": "\u2916", "rarrw": "\u219D", "ratail": "\u291A", "rAtail": "\u291C", "ratio": "\u2236", "rationals": "\u211A", "rbarr": "\u290D", "rBarr": "\u290F", "RBarr": "\u2910", "rbbrk": "\u2773", "rbrace": "}", "rbrack": "]", "rbrke": "\u298C", "rbrksld": "\u298E", "rbrkslu": "\u2990", "rcaron": "\u0159", "Rcaron": "\u0158", "rcedil": "\u0157", "Rcedil": "\u0156", "rceil": "\u2309", "rcub": "}", "rcy": "\u0440", "Rcy": "\u0420", "rdca": "\u2937", "rdldhar": "\u2969", "rdquo": "\u201D", "rdquor": "\u201D", "rdsh": "\u21B3", "Re": "\u211C", "real": "\u211C", "realine": "\u211B", "realpart": "\u211C", "reals": "\u211D", "rect": "\u25AD", "reg": "\xAE", "REG": "\xAE", "ReverseElement": "\u220B", "ReverseEquilibrium": "\u21CB", "ReverseUpEquilibrium": "\u296F", "rfisht": "\u297D", "rfloor": "\u230B", "rfr": "\u{1D52F}", "Rfr": "\u211C", "rHar": "\u2964", "rhard": "\u21C1", "rharu": "\u21C0", "rharul": "\u296C", "rho": "\u03C1", "Rho": "\u03A1", "rhov": "\u03F1", "RightAngleBracket": "\u27E9", "rightarrow": "\u2192", "Rightarrow": "\u21D2", "RightArrow": "\u2192", "RightArrowBar": "\u21E5", "RightArrowLeftArrow": "\u21C4", "rightarrowtail": "\u21A3", "RightCeiling": "\u2309", "RightDoubleBracket": "\u27E7", "RightDownTeeVector": "\u295D", "RightDownVector": "\u21C2", "RightDownVectorBar": "\u2955", "RightFloor": "\u230B", "rightharpoondown": "\u21C1", "rightharpoonup": "\u21C0", "rightleftarrows": "\u21C4", "rightleftharpoons": "\u21CC", "rightrightarrows": "\u21C9", "rightsquigarrow": "\u219D", "RightTee": "\u22A2", "RightTeeArrow": "\u21A6", "RightTeeVector": "\u295B", "rightthreetimes": "\u22CC", "RightTriangle": "\u22B3", "RightTriangleBar": "\u29D0", "RightTriangleEqual": "\u22B5", "RightUpDownVector": "\u294F", "RightUpTeeVector": "\u295C", "RightUpVector": "\u21BE", "RightUpVectorBar": "\u2954", "RightVector": "\u21C0", "RightVectorBar": "\u2953", "ring": "\u02DA", "risingdotseq": "\u2253", "rlarr": "\u21C4", "rlhar": "\u21CC", "rlm": "\u200F", "rmoust": "\u23B1", "rmoustache": "\u23B1", "rnmid": "\u2AEE", "roang": "\u27ED", "roarr": "\u21FE", "robrk": "\u27E7", "ropar": "\u2986", "ropf": "\u{1D563}", "Ropf": "\u211D", "roplus": "\u2A2E", "rotimes": "\u2A35", "RoundImplies": "\u2970", "rpar": ")", "rpargt": "\u2994", "rppolint": "\u2A12", "rrarr": "\u21C9", "Rrightarrow": "\u21DB", "rsaquo": "\u203A", "rscr": "\u{1D4C7}", "Rscr": "\u211B", "rsh": "\u21B1", "Rsh": "\u21B1", "rsqb": "]", "rsquo": "\u2019", "rsquor": "\u2019", "rthree": "\u22CC", "rtimes": "\u22CA", "rtri": "\u25B9", "rtrie": "\u22B5", "rtrif": "\u25B8", "rtriltri": "\u29CE", "RuleDelayed": "\u29F4", "ruluhar": "\u2968", "rx": "\u211E", "sacute": "\u015B", "Sacute": "\u015A", "sbquo": "\u201A", "sc": "\u227B", "Sc": "\u2ABC", "scap": "\u2AB8", "scaron": "\u0161", "Scaron": "\u0160", "sccue": "\u227D", "sce": "\u2AB0", "scE": "\u2AB4", "scedil": "\u015F", "Scedil": "\u015E", "scirc": "\u015D", "Scirc": "\u015C", "scnap": "\u2ABA", "scnE": "\u2AB6", "scnsim": "\u22E9", "scpolint": "\u2A13", "scsim": "\u227F", "scy": "\u0441", "Scy": "\u0421", "sdot": "\u22C5", "sdotb": "\u22A1", "sdote": "\u2A66", "searhk": "\u2925", "searr": "\u2198", "seArr": "\u21D8", "searrow": "\u2198", "sect": "\xA7", "semi": ";", "seswar": "\u2929", "setminus": "\u2216", "setmn": "\u2216", "sext": "\u2736", "sfr": "\u{1D530}", "Sfr": "\u{1D516}", "sfrown": "\u2322", "sharp": "\u266F", "shchcy": "\u0449", "SHCHcy": "\u0429", "shcy": "\u0448", "SHcy": "\u0428", "ShortDownArrow": "\u2193", "ShortLeftArrow": "\u2190", "shortmid": "\u2223", "shortparallel": "\u2225", "ShortRightArrow": "\u2192", "ShortUpArrow": "\u2191", "shy": "\xAD", "sigma": "\u03C3", "Sigma": "\u03A3", "sigmaf": "\u03C2", "sigmav": "\u03C2", "sim": "\u223C", "simdot": "\u2A6A", "sime": "\u2243", "simeq": "\u2243", "simg": "\u2A9E", "simgE": "\u2AA0", "siml": "\u2A9D", "simlE": "\u2A9F", "simne": "\u2246", "simplus": "\u2A24", "simrarr": "\u2972", "slarr": "\u2190", "SmallCircle": "\u2218", "smallsetminus": "\u2216", "smashp": "\u2A33", "smeparsl": "\u29E4", "smid": "\u2223", "smile": "\u2323", "smt": "\u2AAA", "smte": "\u2AAC", "smtes": "\u2AAC\uFE00", "softcy": "\u044C", "SOFTcy": "\u042C", "sol": "/", "solb": "\u29C4", "solbar": "\u233F", "sopf": "\u{1D564}", "Sopf": "\u{1D54A}", "spades": "\u2660", "spadesuit": "\u2660", "spar": "\u2225", "sqcap": "\u2293", "sqcaps": "\u2293\uFE00", "sqcup": "\u2294", "sqcups": "\u2294\uFE00", "Sqrt": "\u221A", "sqsub": "\u228F", "sqsube": "\u2291", "sqsubset": "\u228F", "sqsubseteq": "\u2291", "sqsup": "\u2290", "sqsupe": "\u2292", "sqsupset": "\u2290", "sqsupseteq": "\u2292", "squ": "\u25A1", "square": "\u25A1", "Square": "\u25A1", "SquareIntersection": "\u2293", "SquareSubset": "\u228F", "SquareSubsetEqual": "\u2291", "SquareSuperset": "\u2290", "SquareSupersetEqual": "\u2292", "SquareUnion": "\u2294", "squarf": "\u25AA", "squf": "\u25AA", "srarr": "\u2192", "sscr": "\u{1D4C8}", "Sscr": "\u{1D4AE}", "ssetmn": "\u2216", "ssmile": "\u2323", "sstarf": "\u22C6", "star": "\u2606", "Star": "\u22C6", "starf": "\u2605", "straightepsilon": "\u03F5", "straightphi": "\u03D5", "strns": "\xAF", "sub": "\u2282", "Sub": "\u22D0", "subdot": "\u2ABD", "sube": "\u2286", "subE": "\u2AC5", "subedot": "\u2AC3", "submult": "\u2AC1", "subne": "\u228A", "subnE": "\u2ACB", "subplus": "\u2ABF", "subrarr": "\u2979", "subset": "\u2282", "Subset": "\u22D0", "subseteq": "\u2286", "subseteqq": "\u2AC5", "SubsetEqual": "\u2286", "subsetneq": "\u228A", "subsetneqq": "\u2ACB", "subsim": "\u2AC7", "subsub": "\u2AD5", "subsup": "\u2AD3", "succ": "\u227B", "succapprox": "\u2AB8", "succcurlyeq": "\u227D", "Succeeds": "\u227B", "SucceedsEqual": "\u2AB0", "SucceedsSlantEqual": "\u227D", "SucceedsTilde": "\u227F", "succeq": "\u2AB0", "succnapprox": "\u2ABA", "succneqq": "\u2AB6", "succnsim": "\u22E9", "succsim": "\u227F", "SuchThat": "\u220B", "sum": "\u2211", "Sum": "\u2211", "sung": "\u266A", "sup": "\u2283", "Sup": "\u22D1", "sup1": "\xB9", "sup2": "\xB2", "sup3": "\xB3", "supdot": "\u2ABE", "supdsub": "\u2AD8", "supe": "\u2287", "supE": "\u2AC6", "supedot": "\u2AC4", "Superset": "\u2283", "SupersetEqual": "\u2287", "suphsol": "\u27C9", "suphsub": "\u2AD7", "suplarr": "\u297B", "supmult": "\u2AC2", "supne": "\u228B", "supnE": "\u2ACC", "supplus": "\u2AC0", "supset": "\u2283", "Supset": "\u22D1", "supseteq": "\u2287", "supseteqq": "\u2AC6", "supsetneq": "\u228B", "supsetneqq": "\u2ACC", "supsim": "\u2AC8", "supsub": "\u2AD4", "supsup": "\u2AD6", "swarhk": "\u2926", "swarr": "\u2199", "swArr": "\u21D9", "swarrow": "\u2199", "swnwar": "\u292A", "szlig": "\xDF", "Tab": "	", "target": "\u2316", "tau": "\u03C4", "Tau": "\u03A4", "tbrk": "\u23B4", "tcaron": "\u0165", "Tcaron": "\u0164", "tcedil": "\u0163", "Tcedil": "\u0162", "tcy": "\u0442", "Tcy": "\u0422", "tdot": "\u20DB", "telrec": "\u2315", "tfr": "\u{1D531}", "Tfr": "\u{1D517}", "there4": "\u2234", "therefore": "\u2234", "Therefore": "\u2234", "theta": "\u03B8", "Theta": "\u0398", "thetasym": "\u03D1", "thetav": "\u03D1", "thickapprox": "\u2248", "thicksim": "\u223C", "ThickSpace": "\u205F\u200A", "thinsp": "\u2009", "ThinSpace": "\u2009", "thkap": "\u2248", "thksim": "\u223C", "thorn": "\xFE", "THORN": "\xDE", "tilde": "\u02DC", "Tilde": "\u223C", "TildeEqual": "\u2243", "TildeFullEqual": "\u2245", "TildeTilde": "\u2248", "times": "\xD7", "timesb": "\u22A0", "timesbar": "\u2A31", "timesd": "\u2A30", "tint": "\u222D", "toea": "\u2928", "top": "\u22A4", "topbot": "\u2336", "topcir": "\u2AF1", "topf": "\u{1D565}", "Topf": "\u{1D54B}", "topfork": "\u2ADA", "tosa": "\u2929", "tprime": "\u2034", "trade": "\u2122", "TRADE": "\u2122", "triangle": "\u25B5", "triangledown": "\u25BF", "triangleleft": "\u25C3", "trianglelefteq": "\u22B4", "triangleq": "\u225C", "triangleright": "\u25B9", "trianglerighteq": "\u22B5", "tridot": "\u25EC", "trie": "\u225C", "triminus": "\u2A3A", "TripleDot": "\u20DB", "triplus": "\u2A39", "trisb": "\u29CD", "tritime": "\u2A3B", "trpezium": "\u23E2", "tscr": "\u{1D4C9}", "Tscr": "\u{1D4AF}", "tscy": "\u0446", "TScy": "\u0426", "tshcy": "\u045B", "TSHcy": "\u040B", "tstrok": "\u0167", "Tstrok": "\u0166", "twixt": "\u226C", "twoheadleftarrow": "\u219E", "twoheadrightarrow": "\u21A0", "uacute": "\xFA", "Uacute": "\xDA", "uarr": "\u2191", "uArr": "\u21D1", "Uarr": "\u219F", "Uarrocir": "\u2949", "ubrcy": "\u045E", "Ubrcy": "\u040E", "ubreve": "\u016D", "Ubreve": "\u016C", "ucirc": "\xFB", "Ucirc": "\xDB", "ucy": "\u0443", "Ucy": "\u0423", "udarr": "\u21C5", "udblac": "\u0171", "Udblac": "\u0170", "udhar": "\u296E", "ufisht": "\u297E", "ufr": "\u{1D532}", "Ufr": "\u{1D518}", "ugrave": "\xF9", "Ugrave": "\xD9", "uHar": "\u2963", "uharl": "\u21BF", "uharr": "\u21BE", "uhblk": "\u2580", "ulcorn": "\u231C", "ulcorner": "\u231C", "ulcrop": "\u230F", "ultri": "\u25F8", "umacr": "\u016B", "Umacr": "\u016A", "uml": "\xA8", "UnderBar": "_", "UnderBrace": "\u23DF", "UnderBracket": "\u23B5", "UnderParenthesis": "\u23DD", "Union": "\u22C3", "UnionPlus": "\u228E", "uogon": "\u0173", "Uogon": "\u0172", "uopf": "\u{1D566}", "Uopf": "\u{1D54C}", "uparrow": "\u2191", "Uparrow": "\u21D1", "UpArrow": "\u2191", "UpArrowBar": "\u2912", "UpArrowDownArrow": "\u21C5", "updownarrow": "\u2195", "Updownarrow": "\u21D5", "UpDownArrow": "\u2195", "UpEquilibrium": "\u296E", "upharpoonleft": "\u21BF", "upharpoonright": "\u21BE", "uplus": "\u228E", "UpperLeftArrow": "\u2196", "UpperRightArrow": "\u2197", "upsi": "\u03C5", "Upsi": "\u03D2", "upsih": "\u03D2", "upsilon": "\u03C5", "Upsilon": "\u03A5", "UpTee": "\u22A5", "UpTeeArrow": "\u21A5", "upuparrows": "\u21C8", "urcorn": "\u231D", "urcorner": "\u231D", "urcrop": "\u230E", "uring": "\u016F", "Uring": "\u016E", "urtri": "\u25F9", "uscr": "\u{1D4CA}", "Uscr": "\u{1D4B0}", "utdot": "\u22F0", "utilde": "\u0169", "Utilde": "\u0168", "utri": "\u25B5", "utrif": "\u25B4", "uuarr": "\u21C8", "uuml": "\xFC", "Uuml": "\xDC", "uwangle": "\u29A7", "vangrt": "\u299C", "varepsilon": "\u03F5", "varkappa": "\u03F0", "varnothing": "\u2205", "varphi": "\u03D5", "varpi": "\u03D6", "varpropto": "\u221D", "varr": "\u2195", "vArr": "\u21D5", "varrho": "\u03F1", "varsigma": "\u03C2", "varsubsetneq": "\u228A\uFE00", "varsubsetneqq": "\u2ACB\uFE00", "varsupsetneq": "\u228B\uFE00", "varsupsetneqq": "\u2ACC\uFE00", "vartheta": "\u03D1", "vartriangleleft": "\u22B2", "vartriangleright": "\u22B3", "vBar": "\u2AE8", "Vbar": "\u2AEB", "vBarv": "\u2AE9", "vcy": "\u0432", "Vcy": "\u0412", "vdash": "\u22A2", "vDash": "\u22A8", "Vdash": "\u22A9", "VDash": "\u22AB", "Vdashl": "\u2AE6", "vee": "\u2228", "Vee": "\u22C1", "veebar": "\u22BB", "veeeq": "\u225A", "vellip": "\u22EE", "verbar": "|", "Verbar": "\u2016", "vert": "|", "Vert": "\u2016", "VerticalBar": "\u2223", "VerticalLine": "|", "VerticalSeparator": "\u2758", "VerticalTilde": "\u2240", "VeryThinSpace": "\u200A", "vfr": "\u{1D533}", "Vfr": "\u{1D519}", "vltri": "\u22B2", "vnsub": "\u2282\u20D2", "vnsup": "\u2283\u20D2", "vopf": "\u{1D567}", "Vopf": "\u{1D54D}", "vprop": "\u221D", "vrtri": "\u22B3", "vscr": "\u{1D4CB}", "Vscr": "\u{1D4B1}", "vsubne": "\u228A\uFE00", "vsubnE": "\u2ACB\uFE00", "vsupne": "\u228B\uFE00", "vsupnE": "\u2ACC\uFE00", "Vvdash": "\u22AA", "vzigzag": "\u299A", "wcirc": "\u0175", "Wcirc": "\u0174", "wedbar": "\u2A5F", "wedge": "\u2227", "Wedge": "\u22C0", "wedgeq": "\u2259", "weierp": "\u2118", "wfr": "\u{1D534}", "Wfr": "\u{1D51A}", "wopf": "\u{1D568}", "Wopf": "\u{1D54E}", "wp": "\u2118", "wr": "\u2240", "wreath": "\u2240", "wscr": "\u{1D4CC}", "Wscr": "\u{1D4B2}", "xcap": "\u22C2", "xcirc": "\u25EF", "xcup": "\u22C3", "xdtri": "\u25BD", "xfr": "\u{1D535}", "Xfr": "\u{1D51B}", "xharr": "\u27F7", "xhArr": "\u27FA", "xi": "\u03BE", "Xi": "\u039E", "xlarr": "\u27F5", "xlArr": "\u27F8", "xmap": "\u27FC", "xnis": "\u22FB", "xodot": "\u2A00", "xopf": "\u{1D569}", "Xopf": "\u{1D54F}", "xoplus": "\u2A01", "xotime": "\u2A02", "xrarr": "\u27F6", "xrArr": "\u27F9", "xscr": "\u{1D4CD}", "Xscr": "\u{1D4B3}", "xsqcup": "\u2A06", "xuplus": "\u2A04", "xutri": "\u25B3", "xvee": "\u22C1", "xwedge": "\u22C0", "yacute": "\xFD", "Yacute": "\xDD", "yacy": "\u044F", "YAcy": "\u042F", "ycirc": "\u0177", "Ycirc": "\u0176", "ycy": "\u044B", "Ycy": "\u042B", "yen": "\xA5", "yfr": "\u{1D536}", "Yfr": "\u{1D51C}", "yicy": "\u0457", "YIcy": "\u0407", "yopf": "\u{1D56A}", "Yopf": "\u{1D550}", "yscr": "\u{1D4CE}", "Yscr": "\u{1D4B4}", "yucy": "\u044E", "YUcy": "\u042E", "yuml": "\xFF", "Yuml": "\u0178", "zacute": "\u017A", "Zacute": "\u0179", "zcaron": "\u017E", "Zcaron": "\u017D", "zcy": "\u0437", "Zcy": "\u0417", "zdot": "\u017C", "Zdot": "\u017B", "zeetrf": "\u2128", "ZeroWidthSpace": "\u200B", "zeta": "\u03B6", "Zeta": "\u0396", "zfr": "\u{1D537}", "Zfr": "\u2128", "zhcy": "\u0436", "ZHcy": "\u0416", "zigrarr": "\u21DD", "zopf": "\u{1D56B}", "Zopf": "\u2124", "zscr": "\u{1D4CF}", "Zscr": "\u{1D4B5}", "zwj": "\u200D", "zwnj": "\u200C" };
      var decodeMapLegacy = { "aacute": "\xE1", "Aacute": "\xC1", "acirc": "\xE2", "Acirc": "\xC2", "acute": "\xB4", "aelig": "\xE6", "AElig": "\xC6", "agrave": "\xE0", "Agrave": "\xC0", "amp": "&", "AMP": "&", "aring": "\xE5", "Aring": "\xC5", "atilde": "\xE3", "Atilde": "\xC3", "auml": "\xE4", "Auml": "\xC4", "brvbar": "\xA6", "ccedil": "\xE7", "Ccedil": "\xC7", "cedil": "\xB8", "cent": "\xA2", "copy": "\xA9", "COPY": "\xA9", "curren": "\xA4", "deg": "\xB0", "divide": "\xF7", "eacute": "\xE9", "Eacute": "\xC9", "ecirc": "\xEA", "Ecirc": "\xCA", "egrave": "\xE8", "Egrave": "\xC8", "eth": "\xF0", "ETH": "\xD0", "euml": "\xEB", "Euml": "\xCB", "frac12": "\xBD", "frac14": "\xBC", "frac34": "\xBE", "gt": ">", "GT": ">", "iacute": "\xED", "Iacute": "\xCD", "icirc": "\xEE", "Icirc": "\xCE", "iexcl": "\xA1", "igrave": "\xEC", "Igrave": "\xCC", "iquest": "\xBF", "iuml": "\xEF", "Iuml": "\xCF", "laquo": "\xAB", "lt": "<", "LT": "<", "macr": "\xAF", "micro": "\xB5", "middot": "\xB7", "nbsp": "\xA0", "not": "\xAC", "ntilde": "\xF1", "Ntilde": "\xD1", "oacute": "\xF3", "Oacute": "\xD3", "ocirc": "\xF4", "Ocirc": "\xD4", "ograve": "\xF2", "Ograve": "\xD2", "ordf": "\xAA", "ordm": "\xBA", "oslash": "\xF8", "Oslash": "\xD8", "otilde": "\xF5", "Otilde": "\xD5", "ouml": "\xF6", "Ouml": "\xD6", "para": "\xB6", "plusmn": "\xB1", "pound": "\xA3", "quot": '"', "QUOT": '"', "raquo": "\xBB", "reg": "\xAE", "REG": "\xAE", "sect": "\xA7", "shy": "\xAD", "sup1": "\xB9", "sup2": "\xB2", "sup3": "\xB3", "szlig": "\xDF", "thorn": "\xFE", "THORN": "\xDE", "times": "\xD7", "uacute": "\xFA", "Uacute": "\xDA", "ucirc": "\xFB", "Ucirc": "\xDB", "ugrave": "\xF9", "Ugrave": "\xD9", "uml": "\xA8", "uuml": "\xFC", "Uuml": "\xDC", "yacute": "\xFD", "Yacute": "\xDD", "yen": "\xA5", "yuml": "\xFF" };
      var decodeMapNumeric = { "0": "\uFFFD", "128": "\u20AC", "130": "\u201A", "131": "\u0192", "132": "\u201E", "133": "\u2026", "134": "\u2020", "135": "\u2021", "136": "\u02C6", "137": "\u2030", "138": "\u0160", "139": "\u2039", "140": "\u0152", "142": "\u017D", "145": "\u2018", "146": "\u2019", "147": "\u201C", "148": "\u201D", "149": "\u2022", "150": "\u2013", "151": "\u2014", "152": "\u02DC", "153": "\u2122", "154": "\u0161", "155": "\u203A", "156": "\u0153", "158": "\u017E", "159": "\u0178" };
      var invalidReferenceCodePoints = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65e3, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];
      var stringFromCharCode = String.fromCharCode;
      var object = {};
      var hasOwnProperty2 = object.hasOwnProperty;
      var has = function(object2, propertyName) {
        return hasOwnProperty2.call(object2, propertyName);
      };
      var contains = function(array, value) {
        var index = -1;
        var length = array.length;
        while (++index < length) {
          if (array[index] == value) {
            return true;
          }
        }
        return false;
      };
      var merge = function(options, defaults) {
        if (!options) {
          return defaults;
        }
        var result = {};
        var key3;
        for (key3 in defaults) {
          result[key3] = has(options, key3) ? options[key3] : defaults[key3];
        }
        return result;
      };
      var codePointToSymbol = function(codePoint, strict) {
        var output = "";
        if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
          if (strict) {
            parseError("character reference outside the permissible Unicode range");
          }
          return "\uFFFD";
        }
        if (has(decodeMapNumeric, codePoint)) {
          if (strict) {
            parseError("disallowed character reference");
          }
          return decodeMapNumeric[codePoint];
        }
        if (strict && contains(invalidReferenceCodePoints, codePoint)) {
          parseError("disallowed character reference");
        }
        if (codePoint > 65535) {
          codePoint -= 65536;
          output += stringFromCharCode(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        output += stringFromCharCode(codePoint);
        return output;
      };
      var hexEscape = function(codePoint) {
        return "&#x" + codePoint.toString(16).toUpperCase() + ";";
      };
      var decEscape = function(codePoint) {
        return "&#" + codePoint + ";";
      };
      var parseError = function(message) {
        throw Error("Parse error: " + message);
      };
      var encode = function(string, options) {
        options = merge(options, encode.options);
        var strict = options.strict;
        if (strict && regexInvalidRawCodePoint.test(string)) {
          parseError("forbidden code point");
        }
        var encodeEverything = options.encodeEverything;
        var useNamedReferences = options.useNamedReferences;
        var allowUnsafeSymbols = options.allowUnsafeSymbols;
        var escapeCodePoint = options.decimal ? decEscape : hexEscape;
        var escapeBmpSymbol = function(symbol) {
          return escapeCodePoint(symbol.charCodeAt(0));
        };
        if (encodeEverything) {
          string = string.replace(regexAsciiWhitelist, function(symbol) {
            if (useNamedReferences && has(encodeMap, symbol)) {
              return "&" + encodeMap[symbol] + ";";
            }
            return escapeBmpSymbol(symbol);
          });
          if (useNamedReferences) {
            string = string.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;").replace(/&#x66;&#x6A;/g, "&fjlig;");
          }
          if (useNamedReferences) {
            string = string.replace(regexEncodeNonAscii, function(string2) {
              return "&" + encodeMap[string2] + ";";
            });
          }
        } else if (useNamedReferences) {
          if (!allowUnsafeSymbols) {
            string = string.replace(regexEscape, function(string2) {
              return "&" + encodeMap[string2] + ";";
            });
          }
          string = string.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;");
          string = string.replace(regexEncodeNonAscii, function(string2) {
            return "&" + encodeMap[string2] + ";";
          });
        } else if (!allowUnsafeSymbols) {
          string = string.replace(regexEscape, escapeBmpSymbol);
        }
        return string.replace(regexAstralSymbols, function($0) {
          var high = $0.charCodeAt(0);
          var low = $0.charCodeAt(1);
          var codePoint = (high - 55296) * 1024 + low - 56320 + 65536;
          return escapeCodePoint(codePoint);
        }).replace(regexBmpWhitelist, escapeBmpSymbol);
      };
      encode.options = {
        "allowUnsafeSymbols": false,
        "encodeEverything": false,
        "strict": false,
        "useNamedReferences": false,
        "decimal": false
      };
      var decode = function(html, options) {
        options = merge(options, decode.options);
        var strict = options.strict;
        if (strict && regexInvalidEntity.test(html)) {
          parseError("malformed character reference");
        }
        return html.replace(regexDecode, function($0, $1, $22, $3, $4, $5, $6, $7, $8) {
          var codePoint;
          var semicolon;
          var decDigits;
          var hexDigits;
          var reference;
          var next;
          if ($1) {
            reference = $1;
            return decodeMap[reference];
          }
          if ($22) {
            reference = $22;
            next = $3;
            if (next && options.isAttributeValue) {
              if (strict && next == "=") {
                parseError("`&` did not start a character reference");
              }
              return $0;
            } else {
              if (strict) {
                parseError(
                  "named character reference was not terminated by a semicolon"
                );
              }
              return decodeMapLegacy[reference] + (next || "");
            }
          }
          if ($4) {
            decDigits = $4;
            semicolon = $5;
            if (strict && !semicolon) {
              parseError("character reference was not terminated by a semicolon");
            }
            codePoint = parseInt(decDigits, 10);
            return codePointToSymbol(codePoint, strict);
          }
          if ($6) {
            hexDigits = $6;
            semicolon = $7;
            if (strict && !semicolon) {
              parseError("character reference was not terminated by a semicolon");
            }
            codePoint = parseInt(hexDigits, 16);
            return codePointToSymbol(codePoint, strict);
          }
          if (strict) {
            parseError(
              "named character reference was not terminated by a semicolon"
            );
          }
          return $0;
        });
      };
      decode.options = {
        "isAttributeValue": false,
        "strict": false
      };
      var escape = function(string) {
        return string.replace(regexEscape, function($0) {
          return escapeMap[$0];
        });
      };
      var he2 = {
        "version": "1.2.0",
        "encode": encode,
        "decode": decode,
        "escape": escape,
        "unescape": decode
      };
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        define(function() {
          return he2;
        });
      } else if (freeExports && !freeExports.nodeType) {
        if (freeModule) {
          freeModule.exports = he2;
        } else {
          for (var key2 in he2) {
            has(he2, key2) && (freeExports[key2] = he2[key2]);
          }
        }
      } else {
        root.he = he2;
      }
    })(exports);
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module2) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i4 = 0; i4 < 10; i4++) {
          test2["_" + String.fromCharCode(i4)] = i4;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
          return test2[n2];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s5 = 1; s5 < arguments.length; s5++) {
        from = Object(arguments[s5]);
        for (var key2 in from) {
          if (hasOwnProperty2.call(from, key2)) {
            to[key2] = from[key2];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i4 = 0; i4 < symbols.length; i4++) {
            if (propIsEnumerable.call(from, symbols[i4])) {
              to[symbols[i4]] = from[symbols[i4]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module2) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module2.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module2) {
    module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module2) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x5) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module2.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module2) {
    "use strict";
    var ReactIs = require_react_is();
    var assign2 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x5) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module2.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x5, y5) {
        if (x5 === y5) {
          return x5 !== 0 || 1 / x5 === 1 / y5;
        } else {
          return x5 !== x5 && y5 !== y5;
        }
      }
      function PropTypeError(message, data2) {
        this.message = message;
        this.data = data2 && typeof data2 === "object" ? data2 : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props2, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props2[propName] == null) {
            if (isRequired) {
              if (props2[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props2, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props2, propName, componentName, location, propFullName, secret) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props2[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i4 = 0; i4 < propValue.length; i4++) {
            var error = typeChecker(propValue, i4, componentName, location, propFullName + "[" + i4 + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (!(props2[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props2[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          for (var i4 = 0; i4 < expectedValues.length; i4++) {
            if (is(propValue, expectedValues[i4])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key2, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key2 in propValue) {
            if (has(propValue, key2)) {
              var error = typeChecker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i4 = 0; i4 < arrayOfTypeCheckers.length; i4++) {
          var checker = arrayOfTypeCheckers[i4];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i4 + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props2, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i5 = 0; i5 < arrayOfTypeCheckers.length; i5++) {
            var checker2 = arrayOfTypeCheckers[i5];
            var checkerResult = checker2(props2, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          if (!isNode2(props2[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key2, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key2 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key2 in shapeTypes) {
            var checker = shapeTypes[key2];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            var error = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign2({}, props2[propName], shapeTypes);
          for (var key2 in allKeys) {
            var checker = shapeTypes[key2];
            if (has(shapeTypes, key2) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key2 + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props2[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode2(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode2);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode2(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode2(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module2) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module2.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module2.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module2) {
    var __extends4;
    var __assign5;
    var __rest3;
    var __decorate2;
    var __param2;
    var __esDecorate2;
    var __runInitializers2;
    var __propKey2;
    var __setFunctionName2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray3;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __classPrivateFieldIn2;
    var __createBinding2;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root, createExporter(module2.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id2, v3) {
          return exports2[id2] = previous ? previous(id2, v3) : v3;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d5, b4) {
        d5.__proto__ = b4;
      } || function(d5, b4) {
        for (var p3 in b4)
          if (Object.prototype.hasOwnProperty.call(b4, p3))
            d5[p3] = b4[p3];
      };
      __extends4 = function(d5, b4) {
        if (typeof b4 !== "function" && b4 !== null)
          throw new TypeError("Class extends value " + String(b4) + " is not a constructor or null");
        extendStatics(d5, b4);
        function __() {
          this.constructor = d5;
        }
        d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
      };
      __assign5 = Object.assign || function(t4) {
        for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
          s5 = arguments[i4];
          for (var p3 in s5)
            if (Object.prototype.hasOwnProperty.call(s5, p3))
              t4[p3] = s5[p3];
        }
        return t4;
      };
      __rest3 = function(s5, e4) {
        var t4 = {};
        for (var p3 in s5)
          if (Object.prototype.hasOwnProperty.call(s5, p3) && e4.indexOf(p3) < 0)
            t4[p3] = s5[p3];
        if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i4 = 0, p3 = Object.getOwnPropertySymbols(s5); i4 < p3.length; i4++) {
            if (e4.indexOf(p3[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p3[i4]))
              t4[p3[i4]] = s5[p3[i4]];
          }
        return t4;
      };
      __decorate2 = function(decorators, target, key2, desc) {
        var c4 = arguments.length, r3 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key2) : desc, d5;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r3 = Reflect.decorate(decorators, target, key2, desc);
        else
          for (var i4 = decorators.length - 1; i4 >= 0; i4--)
            if (d5 = decorators[i4])
              r3 = (c4 < 3 ? d5(r3) : c4 > 3 ? d5(target, key2, r3) : d5(target, key2)) || r3;
        return c4 > 3 && r3 && Object.defineProperty(target, key2, r3), r3;
      };
      __param2 = function(paramIndex, decorator) {
        return function(target, key2) {
          decorator(target, key2, paramIndex);
        };
      };
      __esDecorate2 = function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f4) {
          if (f4 !== void 0 && typeof f4 !== "function")
            throw new TypeError("Function expected");
          return f4;
        }
        var kind = contextIn.kind, key2 = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _11, done = false;
        for (var i4 = decorators.length - 1; i4 >= 0; i4--) {
          var context = {};
          for (var p3 in contextIn)
            context[p3] = p3 === "access" ? {} : contextIn[p3];
          for (var p3 in contextIn.access)
            context.access[p3] = contextIn.access[p3];
          context.addInitializer = function(f4) {
            if (done)
              throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f4 || null));
          };
          var result = (0, decorators[i4])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key2], context);
          if (kind === "accessor") {
            if (result === void 0)
              continue;
            if (result === null || typeof result !== "object")
              throw new TypeError("Object expected");
            if (_11 = accept(result.get))
              descriptor.get = _11;
            if (_11 = accept(result.set))
              descriptor.set = _11;
            if (_11 = accept(result.init))
              initializers.push(_11);
          } else if (_11 = accept(result)) {
            if (kind === "field")
              initializers.push(_11);
            else
              descriptor[key2] = _11;
          }
        }
        if (target)
          Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
      };
      __runInitializers2 = function(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i4 = 0; i4 < initializers.length; i4++) {
          value = useValue ? initializers[i4].call(thisArg, value) : initializers[i4].call(thisArg);
        }
        return useValue ? value : void 0;
      };
      __propKey2 = function(x5) {
        return typeof x5 === "symbol" ? x5 : "".concat(x5);
      };
      __setFunctionName2 = function(f4, name, prefix) {
        if (typeof name === "symbol")
          name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f4, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
      };
      __metadata2 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter2 = function(thisArg, _arguments, P4, generator) {
        function adopt(value) {
          return value instanceof P4 ? value : new P4(function(resolve) {
            resolve(value);
          });
        }
        return new (P4 || (P4 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e4) {
              reject(e4);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e4) {
              reject(e4);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator2 = function(thisArg, body) {
        var _11 = { label: 0, sent: function() {
          if (t4[0] & 1)
            throw t4[1];
          return t4[1];
        }, trys: [], ops: [] }, f4, y5, t4, g4;
        return g4 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g4[Symbol.iterator] = function() {
          return this;
        }), g4;
        function verb(n2) {
          return function(v3) {
            return step([n2, v3]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (g4 && (g4 = 0, op[0] && (_11 = 0)), _11)
            try {
              if (f4 = 1, y5 && (t4 = op[0] & 2 ? y5["return"] : op[0] ? y5["throw"] || ((t4 = y5["return"]) && t4.call(y5), 0) : y5.next) && !(t4 = t4.call(y5, op[1])).done)
                return t4;
              if (y5 = 0, t4)
                op = [op[0] & 2, t4.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t4 = op;
                  break;
                case 4:
                  _11.label++;
                  return { value: op[1], done: false };
                case 5:
                  _11.label++;
                  y5 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _11.ops.pop();
                  _11.trys.pop();
                  continue;
                default:
                  if (!(t4 = _11.trys, t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _11 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
                    _11.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _11.label < t4[1]) {
                    _11.label = t4[1];
                    t4 = op;
                    break;
                  }
                  if (t4 && _11.label < t4[2]) {
                    _11.label = t4[2];
                    _11.ops.push(op);
                    break;
                  }
                  if (t4[2])
                    _11.ops.pop();
                  _11.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _11);
            } catch (e4) {
              op = [6, e4];
              y5 = 0;
            } finally {
              f4 = t4 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __exportStar2 = function(m5, o3) {
        for (var p3 in m5)
          if (p3 !== "default" && !Object.prototype.hasOwnProperty.call(o3, p3))
            __createBinding2(o3, m5, p3);
      };
      __createBinding2 = Object.create ? function(o3, m5, k5, k22) {
        if (k22 === void 0)
          k22 = k5;
        var desc = Object.getOwnPropertyDescriptor(m5, k5);
        if (!desc || ("get" in desc ? !m5.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m5[k5];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m5, k5, k22) {
        if (k22 === void 0)
          k22 = k5;
        o3[k22] = m5[k5];
      };
      __values2 = function(o3) {
        var s5 = typeof Symbol === "function" && Symbol.iterator, m5 = s5 && o3[s5], i4 = 0;
        if (m5)
          return m5.call(o3);
        if (o3 && typeof o3.length === "number")
          return {
            next: function() {
              if (o3 && i4 >= o3.length)
                o3 = void 0;
              return { value: o3 && o3[i4++], done: !o3 };
            }
          };
        throw new TypeError(s5 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read2 = function(o3, n2) {
        var m5 = typeof Symbol === "function" && o3[Symbol.iterator];
        if (!m5)
          return o3;
        var i4 = m5.call(o3), r3, ar = [], e4;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r3 = i4.next()).done)
            ar.push(r3.value);
        } catch (error) {
          e4 = { error };
        } finally {
          try {
            if (r3 && !r3.done && (m5 = i4["return"]))
              m5.call(i4);
          } finally {
            if (e4)
              throw e4.error;
          }
        }
        return ar;
      };
      __spread2 = function() {
        for (var ar = [], i4 = 0; i4 < arguments.length; i4++)
          ar = ar.concat(__read2(arguments[i4]));
        return ar;
      };
      __spreadArrays2 = function() {
        for (var s5 = 0, i4 = 0, il = arguments.length; i4 < il; i4++)
          s5 += arguments[i4].length;
        for (var r3 = Array(s5), k5 = 0, i4 = 0; i4 < il; i4++)
          for (var a5 = arguments[i4], j4 = 0, jl = a5.length; j4 < jl; j4++, k5++)
            r3[k5] = a5[j4];
        return r3;
      };
      __spreadArray3 = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i4 = 0, l3 = from.length, ar; i4 < l3; i4++) {
            if (ar || !(i4 in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i4);
              ar[i4] = from[i4];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      };
      __await2 = function(v3) {
        return this instanceof __await2 ? (this.v = v3, this) : new __await2(v3);
      };
      __asyncGenerator2 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g4 = generator.apply(thisArg, _arguments || []), i4, q5 = [];
        return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4;
        function verb(n2) {
          if (g4[n2])
            i4[n2] = function(v3) {
              return new Promise(function(a5, b4) {
                q5.push([n2, v3, a5, b4]) > 1 || resume(n2, v3);
              });
            };
        }
        function resume(n2, v3) {
          try {
            step(g4[n2](v3));
          } catch (e4) {
            settle(q5[0][3], e4);
          }
        }
        function step(r3) {
          r3.value instanceof __await2 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q5[0][2], r3);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v3) {
          if (f4(v3), q5.shift(), q5.length)
            resume(q5[0][0], q5[0][1]);
        }
      };
      __asyncDelegator2 = function(o3) {
        var i4, p3;
        return i4 = {}, verb("next"), verb("throw", function(e4) {
          throw e4;
        }), verb("return"), i4[Symbol.iterator] = function() {
          return this;
        }, i4;
        function verb(n2, f4) {
          i4[n2] = o3[n2] ? function(v3) {
            return (p3 = !p3) ? { value: __await2(o3[n2](v3)), done: false } : f4 ? f4(v3) : v3;
          } : f4;
        }
      };
      __asyncValues2 = function(o3) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m5 = o3[Symbol.asyncIterator], i4;
        return m5 ? m5.call(o3) : (o3 = typeof __values2 === "function" ? __values2(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n2) {
          i4[n2] = o3[n2] && function(v3) {
            return new Promise(function(resolve, reject) {
              v3 = o3[n2](v3), settle(resolve, reject, v3.done, v3.value);
            });
          };
        }
        function settle(resolve, reject, d5, v3) {
          Promise.resolve(v3).then(function(v4) {
            resolve({ value: v4, done: d5 });
          }, reject);
        }
      };
      __makeTemplateObject2 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      };
      __importStar2 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k5 in mod)
            if (k5 !== "default" && Object.prototype.hasOwnProperty.call(mod, k5))
              __createBinding2(result, mod, k5);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault2 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet2 = function(receiver, state, kind, f4) {
        if (kind === "a" && !f4)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f4 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f4 : kind === "a" ? f4.call(receiver) : f4 ? f4.value : state.get(receiver);
      };
      __classPrivateFieldSet2 = function(receiver, state, value, kind, f4) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f4)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f4 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f4.call(receiver, value) : f4 ? f4.value = value : state.set(receiver, value), value;
      };
      __classPrivateFieldIn2 = function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      };
      exporter("__extends", __extends4);
      exporter("__assign", __assign5);
      exporter("__rest", __rest3);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__esDecorate", __esDecorate2);
      exporter("__runInitializers", __runInitializers2);
      exporter("__propKey", __propKey2);
      exporter("__setFunctionName", __setFunctionName2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray3);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/sql.js/dist/sql-wasm.js
var require_sql_wasm = __commonJS({
  "node_modules/sql.js/dist/sql-wasm.js"(exports, module2) {
    var initSqlJsPromise = void 0;
    var initSqlJs2 = function(moduleConfig) {
      if (initSqlJsPromise) {
        return initSqlJsPromise;
      }
      initSqlJsPromise = new Promise(function(resolveModule, reject) {
        var Module = typeof moduleConfig !== "undefined" ? moduleConfig : {};
        var originalOnAbortFunction = Module["onAbort"];
        Module["onAbort"] = function(errorThatCausedAbort) {
          reject(new Error(errorThatCausedAbort));
          if (originalOnAbortFunction) {
            originalOnAbortFunction(errorThatCausedAbort);
          }
        };
        Module["postRun"] = Module["postRun"] || [];
        Module["postRun"].push(function() {
          resolveModule(Module);
        });
        module2 = void 0;
        var e4;
        e4 || (e4 = typeof Module !== "undefined" ? Module : {});
        null;
        e4.onRuntimeInitialized = function() {
          function a5(g4, m5) {
            switch (typeof m5) {
              case "boolean":
                gc(g4, m5 ? 1 : 0);
                break;
              case "number":
                hc(g4, m5);
                break;
              case "string":
                ic(g4, m5, -1, -1);
                break;
              case "object":
                if (null === m5)
                  kb(g4);
                else if (null != m5.length) {
                  var n2 = aa(m5);
                  jc(g4, n2, m5.length, -1);
                  ba(n2);
                } else
                  xa(g4, "Wrong API use : tried to return a value of an unknown type (" + m5 + ").", -1);
                break;
              default:
                kb(g4);
            }
          }
          function b4(g4, m5) {
            for (var n2 = [], p3 = 0; p3 < g4; p3 += 1) {
              var v3 = l3(m5 + 4 * p3, "i32"), y5 = kc(v3);
              if (1 === y5 || 2 === y5)
                v3 = lc(v3);
              else if (3 === y5)
                v3 = mc(v3);
              else if (4 === y5) {
                y5 = v3;
                v3 = nc(y5);
                y5 = oc(y5);
                for (var L4 = new Uint8Array(v3), G3 = 0; G3 < v3; G3 += 1)
                  L4[G3] = r3[y5 + G3];
                v3 = L4;
              } else
                v3 = null;
              n2.push(v3);
            }
            return n2;
          }
          function c4(g4, m5) {
            this.La = g4;
            this.db = m5;
            this.Ja = 1;
            this.fb = [];
          }
          function d5(g4, m5) {
            this.db = m5;
            m5 = ca(g4) + 1;
            this.Ya = da(m5);
            if (null === this.Ya)
              throw Error("Unable to allocate memory for the SQL string");
            t4(g4, u4, this.Ya, m5);
            this.eb = this.Ya;
            this.Ua = this.ib = null;
          }
          function f4(g4) {
            this.filename = "dbfile_" + (4294967295 * Math.random() >>> 0);
            if (null != g4) {
              var m5 = this.filename, n2 = "/", p3 = m5;
              n2 && (n2 = "string" == typeof n2 ? n2 : ea(n2), p3 = m5 ? z5(n2 + "/" + m5) : n2);
              m5 = fa(
                true,
                true
              );
              p3 = ha(p3, (void 0 !== m5 ? m5 : 438) & 4095 | 32768, 0);
              if (g4) {
                if ("string" == typeof g4) {
                  n2 = Array(g4.length);
                  for (var v3 = 0, y5 = g4.length; v3 < y5; ++v3)
                    n2[v3] = g4.charCodeAt(v3);
                  g4 = n2;
                }
                ia(p3, m5 | 146);
                n2 = ja(p3, 577);
                ka(n2, g4, 0, g4.length, 0);
                la(n2);
                ia(p3, m5);
              }
            }
            this.handleError(q5(this.filename, h5));
            this.db = l3(h5, "i32");
            pc(this.db);
            this.Za = {};
            this.Na = {};
          }
          var h5 = B5(4), k5 = e4.cwrap, q5 = k5("sqlite3_open", "number", ["string", "number"]), x5 = k5("sqlite3_close_v2", "number", ["number"]), w5 = k5("sqlite3_exec", "number", ["number", "string", "number", "number", "number"]), A4 = k5(
            "sqlite3_changes",
            "number",
            ["number"]
          ), S4 = k5("sqlite3_prepare_v2", "number", ["number", "string", "number", "number", "number"]), nb = k5("sqlite3_sql", "string", ["number"]), qc = k5("sqlite3_normalized_sql", "string", ["number"]), ob = k5("sqlite3_prepare_v2", "number", ["number", "number", "number", "number", "number"]), rc = k5("sqlite3_bind_text", "number", ["number", "number", "number", "number", "number"]), pb = k5("sqlite3_bind_blob", "number", ["number", "number", "number", "number", "number"]), sc = k5("sqlite3_bind_double", "number", ["number", "number", "number"]), tc = k5("sqlite3_bind_int", "number", ["number", "number", "number"]), uc = k5("sqlite3_bind_parameter_index", "number", ["number", "string"]), vc = k5("sqlite3_step", "number", ["number"]), wc = k5("sqlite3_errmsg", "string", ["number"]), xc = k5("sqlite3_column_count", "number", ["number"]), yc = k5("sqlite3_data_count", "number", ["number"]), zc = k5("sqlite3_column_double", "number", ["number", "number"]), qb = k5("sqlite3_column_text", "string", ["number", "number"]), Ac = k5("sqlite3_column_blob", "number", ["number", "number"]), Bc = k5(
            "sqlite3_column_bytes",
            "number",
            ["number", "number"]
          ), Cc = k5("sqlite3_column_type", "number", ["number", "number"]), Dc = k5("sqlite3_column_name", "string", ["number", "number"]), Ec = k5("sqlite3_reset", "number", ["number"]), Fc = k5("sqlite3_clear_bindings", "number", ["number"]), Gc = k5("sqlite3_finalize", "number", ["number"]), rb = k5("sqlite3_create_function_v2", "number", "number string number number number number number number number".split(" ")), kc = k5("sqlite3_value_type", "number", ["number"]), nc = k5("sqlite3_value_bytes", "number", ["number"]), mc = k5(
            "sqlite3_value_text",
            "string",
            ["number"]
          ), oc = k5("sqlite3_value_blob", "number", ["number"]), lc = k5("sqlite3_value_double", "number", ["number"]), hc = k5("sqlite3_result_double", "", ["number", "number"]), kb = k5("sqlite3_result_null", "", ["number"]), ic = k5("sqlite3_result_text", "", ["number", "string", "number", "number"]), jc = k5("sqlite3_result_blob", "", ["number", "number", "number", "number"]), gc = k5("sqlite3_result_int", "", ["number", "number"]), xa = k5("sqlite3_result_error", "", ["number", "string", "number"]), sb = k5(
            "sqlite3_aggregate_context",
            "number",
            ["number", "number"]
          ), pc = k5("RegisterExtensionFunctions", "number", ["number"]);
          c4.prototype.bind = function(g4) {
            if (!this.La)
              throw "Statement closed";
            this.reset();
            return Array.isArray(g4) ? this.xb(g4) : null != g4 && "object" === typeof g4 ? this.yb(g4) : true;
          };
          c4.prototype.step = function() {
            if (!this.La)
              throw "Statement closed";
            this.Ja = 1;
            var g4 = vc(this.La);
            switch (g4) {
              case 100:
                return true;
              case 101:
                return false;
              default:
                throw this.db.handleError(g4);
            }
          };
          c4.prototype.sb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            return zc(this.La, g4);
          };
          c4.prototype.Cb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            g4 = qb(this.La, g4);
            if ("function" !== typeof BigInt)
              throw Error("BigInt is not supported");
            return BigInt(g4);
          };
          c4.prototype.Db = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            return qb(this.La, g4);
          };
          c4.prototype.getBlob = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            var m5 = Bc(this.La, g4);
            g4 = Ac(this.La, g4);
            for (var n2 = new Uint8Array(m5), p3 = 0; p3 < m5; p3 += 1)
              n2[p3] = r3[g4 + p3];
            return n2;
          };
          c4.prototype.get = function(g4, m5) {
            m5 = m5 || {};
            null != g4 && this.bind(g4) && this.step();
            g4 = [];
            for (var n2 = yc(this.La), p3 = 0; p3 < n2; p3 += 1)
              switch (Cc(this.La, p3)) {
                case 1:
                  var v3 = m5.useBigInt ? this.Cb(p3) : this.sb(p3);
                  g4.push(v3);
                  break;
                case 2:
                  g4.push(this.sb(p3));
                  break;
                case 3:
                  g4.push(this.Db(p3));
                  break;
                case 4:
                  g4.push(this.getBlob(p3));
                  break;
                default:
                  g4.push(null);
              }
            return g4;
          };
          c4.prototype.getColumnNames = function() {
            for (var g4 = [], m5 = xc(this.La), n2 = 0; n2 < m5; n2 += 1)
              g4.push(Dc(this.La, n2));
            return g4;
          };
          c4.prototype.getAsObject = function(g4, m5) {
            g4 = this.get(g4, m5);
            m5 = this.getColumnNames();
            for (var n2 = {}, p3 = 0; p3 < m5.length; p3 += 1)
              n2[m5[p3]] = g4[p3];
            return n2;
          };
          c4.prototype.getSQL = function() {
            return nb(this.La);
          };
          c4.prototype.getNormalizedSQL = function() {
            return qc(this.La);
          };
          c4.prototype.run = function(g4) {
            null != g4 && this.bind(g4);
            this.step();
            return this.reset();
          };
          c4.prototype.nb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            g4 = ma(g4);
            var n2 = aa(g4);
            this.fb.push(n2);
            this.db.handleError(rc(this.La, m5, n2, g4.length - 1, 0));
          };
          c4.prototype.wb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            var n2 = aa(g4);
            this.fb.push(n2);
            this.db.handleError(pb(this.La, m5, n2, g4.length, 0));
          };
          c4.prototype.mb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            this.db.handleError((g4 === (g4 | 0) ? tc : sc)(this.La, m5, g4));
          };
          c4.prototype.zb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            pb(this.La, g4, 0, 0, 0);
          };
          c4.prototype.ob = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            switch (typeof g4) {
              case "string":
                this.nb(g4, m5);
                return;
              case "number":
                this.mb(g4, m5);
                return;
              case "bigint":
                this.nb(g4.toString(), m5);
                return;
              case "boolean":
                this.mb(g4 + 0, m5);
                return;
              case "object":
                if (null === g4) {
                  this.zb(m5);
                  return;
                }
                if (null != g4.length) {
                  this.wb(g4, m5);
                  return;
                }
            }
            throw "Wrong API use : tried to bind a value of an unknown type (" + g4 + ").";
          };
          c4.prototype.yb = function(g4) {
            var m5 = this;
            Object.keys(g4).forEach(function(n2) {
              var p3 = uc(m5.La, n2);
              0 !== p3 && m5.ob(g4[n2], p3);
            });
            return true;
          };
          c4.prototype.xb = function(g4) {
            for (var m5 = 0; m5 < g4.length; m5 += 1)
              this.ob(g4[m5], m5 + 1);
            return true;
          };
          c4.prototype.reset = function() {
            this.freemem();
            return 0 === Fc(this.La) && 0 === Ec(this.La);
          };
          c4.prototype.freemem = function() {
            for (var g4; void 0 !== (g4 = this.fb.pop()); )
              ba(g4);
          };
          c4.prototype.free = function() {
            this.freemem();
            var g4 = 0 === Gc(this.La);
            delete this.db.Za[this.La];
            this.La = 0;
            return g4;
          };
          d5.prototype.next = function() {
            if (null === this.Ya)
              return { done: true };
            null !== this.Ua && (this.Ua.free(), this.Ua = null);
            if (!this.db.db)
              throw this.gb(), Error("Database closed");
            var g4 = oa(), m5 = B5(4);
            pa(h5);
            pa(m5);
            try {
              this.db.handleError(ob(this.db.db, this.eb, -1, h5, m5));
              this.eb = l3(m5, "i32");
              var n2 = l3(h5, "i32");
              if (0 === n2)
                return this.gb(), { done: true };
              this.Ua = new c4(n2, this.db);
              this.db.Za[n2] = this.Ua;
              return { value: this.Ua, done: false };
            } catch (p3) {
              throw this.ib = C3(this.eb), this.gb(), p3;
            } finally {
              qa(g4);
            }
          };
          d5.prototype.gb = function() {
            ba(this.Ya);
            this.Ya = null;
          };
          d5.prototype.getRemainingSQL = function() {
            return null !== this.ib ? this.ib : C3(this.eb);
          };
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator && (d5.prototype[Symbol.iterator] = function() {
            return this;
          });
          f4.prototype.run = function(g4, m5) {
            if (!this.db)
              throw "Database closed";
            if (m5) {
              g4 = this.prepare(g4, m5);
              try {
                g4.step();
              } finally {
                g4.free();
              }
            } else
              this.handleError(w5(this.db, g4, 0, 0, h5));
            return this;
          };
          f4.prototype.exec = function(g4, m5, n2) {
            if (!this.db)
              throw "Database closed";
            var p3 = oa(), v3 = null;
            try {
              var y5 = ca(g4) + 1, L4 = B5(y5);
              t4(g4, r3, L4, y5);
              var G3 = L4;
              var H5 = B5(4);
              for (g4 = []; 0 !== l3(G3, "i8"); ) {
                pa(h5);
                pa(H5);
                this.handleError(ob(this.db, G3, -1, h5, H5));
                var I4 = l3(h5, "i32");
                G3 = l3(H5, "i32");
                if (0 !== I4) {
                  y5 = null;
                  v3 = new c4(I4, this);
                  for (null != m5 && v3.bind(m5); v3.step(); )
                    null === y5 && (y5 = { columns: v3.getColumnNames(), values: [] }, g4.push(y5)), y5.values.push(v3.get(null, n2));
                  v3.free();
                }
              }
              return g4;
            } catch (na) {
              throw v3 && v3.free(), na;
            } finally {
              qa(p3);
            }
          };
          f4.prototype.each = function(g4, m5, n2, p3, v3) {
            "function" === typeof m5 && (p3 = n2, n2 = m5, m5 = void 0);
            g4 = this.prepare(g4, m5);
            try {
              for (; g4.step(); )
                n2(g4.getAsObject(null, v3));
            } finally {
              g4.free();
            }
            if ("function" === typeof p3)
              return p3();
          };
          f4.prototype.prepare = function(g4, m5) {
            pa(h5);
            this.handleError(S4(this.db, g4, -1, h5, 0));
            g4 = l3(h5, "i32");
            if (0 === g4)
              throw "Nothing to prepare";
            var n2 = new c4(g4, this);
            null != m5 && n2.bind(m5);
            return this.Za[g4] = n2;
          };
          f4.prototype.iterateStatements = function(g4) {
            return new d5(g4, this);
          };
          f4.prototype["export"] = function() {
            Object.values(this.Za).forEach(function(m5) {
              m5.free();
            });
            Object.values(this.Na).forEach(ra);
            this.Na = {};
            this.handleError(x5(this.db));
            var g4 = sa(this.filename);
            this.handleError(q5(this.filename, h5));
            this.db = l3(h5, "i32");
            return g4;
          };
          f4.prototype.close = function() {
            null !== this.db && (Object.values(this.Za).forEach(function(g4) {
              g4.free();
            }), Object.values(this.Na).forEach(ra), this.Na = {}, this.handleError(x5(this.db)), ta("/" + this.filename), this.db = null);
          };
          f4.prototype.handleError = function(g4) {
            if (0 === g4)
              return null;
            g4 = wc(this.db);
            throw Error(g4);
          };
          f4.prototype.getRowsModified = function() {
            return A4(this.db);
          };
          f4.prototype.create_function = function(g4, m5) {
            Object.prototype.hasOwnProperty.call(this.Na, g4) && (ra(this.Na[g4]), delete this.Na[g4]);
            var n2 = ua(function(p3, v3, y5) {
              v3 = b4(v3, y5);
              try {
                var L4 = m5.apply(null, v3);
              } catch (G3) {
                xa(p3, G3, -1);
                return;
              }
              a5(p3, L4);
            }, "viii");
            this.Na[g4] = n2;
            this.handleError(rb(this.db, g4, m5.length, 1, 0, n2, 0, 0, 0));
            return this;
          };
          f4.prototype.create_aggregate = function(g4, m5) {
            var n2 = m5.init || function() {
              return null;
            }, p3 = m5.finalize || function(H5) {
              return H5;
            }, v3 = m5.step;
            if (!v3)
              throw "An aggregate function must have a step function in " + g4;
            var y5 = {};
            Object.hasOwnProperty.call(this.Na, g4) && (ra(this.Na[g4]), delete this.Na[g4]);
            m5 = g4 + "__finalize";
            Object.hasOwnProperty.call(this.Na, m5) && (ra(this.Na[m5]), delete this.Na[m5]);
            var L4 = ua(function(H5, I4, na) {
              var Z2 = sb(H5, 1);
              Object.hasOwnProperty.call(y5, Z2) || (y5[Z2] = n2());
              I4 = b4(I4, na);
              I4 = [y5[Z2]].concat(I4);
              try {
                y5[Z2] = v3.apply(null, I4);
              } catch (Ic) {
                delete y5[Z2], xa(H5, Ic, -1);
              }
            }, "viii"), G3 = ua(function(H5) {
              var I4 = sb(H5, 1);
              try {
                var na = p3(y5[I4]);
              } catch (Z2) {
                delete y5[I4];
                xa(H5, Z2, -1);
                return;
              }
              a5(H5, na);
              delete y5[I4];
            }, "vi");
            this.Na[g4] = L4;
            this.Na[m5] = G3;
            this.handleError(rb(this.db, g4, v3.length - 1, 1, 0, 0, L4, G3, 0));
            return this;
          };
          e4.Database = f4;
        };
        var va = Object.assign({}, e4), wa = "./this.program", ya = "object" == typeof window, za = "function" == typeof importScripts, Aa = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, D4 = "", Ba, Ca, Da, fs, Ea, Fa;
        if (Aa)
          D4 = za ? require("path").dirname(D4) + "/" : __dirname + "/", Fa = () => {
            Ea || (fs = require("fs"), Ea = require("path"));
          }, Ba = function(a5, b4) {
            Fa();
            a5 = Ea.normalize(a5);
            return fs.readFileSync(a5, b4 ? void 0 : "utf8");
          }, Da = (a5) => {
            a5 = Ba(a5, true);
            a5.buffer || (a5 = new Uint8Array(a5));
            return a5;
          }, Ca = (a5, b4, c4) => {
            Fa();
            a5 = Ea.normalize(a5);
            fs.readFile(a5, function(d5, f4) {
              d5 ? c4(d5) : b4(f4.buffer);
            });
          }, 1 < process.argv.length && (wa = process.argv[1].replace(/\\/g, "/")), process.argv.slice(2), "undefined" != typeof module2 && (module2.exports = e4), e4.inspect = function() {
            return "[Emscripten Module object]";
          };
        else if (ya || za)
          za ? D4 = self.location.href : "undefined" != typeof document && document.currentScript && (D4 = document.currentScript.src), D4 = 0 !== D4.indexOf("blob:") ? D4.substr(0, D4.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", Ba = (a5) => {
            var b4 = new XMLHttpRequest();
            b4.open("GET", a5, false);
            b4.send(null);
            return b4.responseText;
          }, za && (Da = (a5) => {
            var b4 = new XMLHttpRequest();
            b4.open("GET", a5, false);
            b4.responseType = "arraybuffer";
            b4.send(null);
            return new Uint8Array(b4.response);
          }), Ca = (a5, b4, c4) => {
            var d5 = new XMLHttpRequest();
            d5.open("GET", a5, true);
            d5.responseType = "arraybuffer";
            d5.onload = () => {
              200 == d5.status || 0 == d5.status && d5.response ? b4(d5.response) : c4();
            };
            d5.onerror = c4;
            d5.send(null);
          };
        var Ga = e4.print || console.log.bind(console), Ha = e4.printErr || console.warn.bind(console);
        Object.assign(e4, va);
        va = null;
        e4.thisProgram && (wa = e4.thisProgram);
        var Ia;
        e4.wasmBinary && (Ia = e4.wasmBinary);
        var noExitRuntime = e4.noExitRuntime || true;
        "object" != typeof WebAssembly && E4("no native wasm support detected");
        var Ja, Ka = false, La = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
        function Ma(a5, b4, c4) {
          var d5 = b4 + c4;
          for (c4 = b4; a5[c4] && !(c4 >= d5); )
            ++c4;
          if (16 < c4 - b4 && a5.buffer && La)
            return La.decode(a5.subarray(b4, c4));
          for (d5 = ""; b4 < c4; ) {
            var f4 = a5[b4++];
            if (f4 & 128) {
              var h5 = a5[b4++] & 63;
              if (192 == (f4 & 224))
                d5 += String.fromCharCode((f4 & 31) << 6 | h5);
              else {
                var k5 = a5[b4++] & 63;
                f4 = 224 == (f4 & 240) ? (f4 & 15) << 12 | h5 << 6 | k5 : (f4 & 7) << 18 | h5 << 12 | k5 << 6 | a5[b4++] & 63;
                65536 > f4 ? d5 += String.fromCharCode(f4) : (f4 -= 65536, d5 += String.fromCharCode(55296 | f4 >> 10, 56320 | f4 & 1023));
              }
            } else
              d5 += String.fromCharCode(f4);
          }
          return d5;
        }
        function C3(a5, b4) {
          return a5 ? Ma(u4, a5, b4) : "";
        }
        function t4(a5, b4, c4, d5) {
          if (!(0 < d5))
            return 0;
          var f4 = c4;
          d5 = c4 + d5 - 1;
          for (var h5 = 0; h5 < a5.length; ++h5) {
            var k5 = a5.charCodeAt(h5);
            if (55296 <= k5 && 57343 >= k5) {
              var q5 = a5.charCodeAt(++h5);
              k5 = 65536 + ((k5 & 1023) << 10) | q5 & 1023;
            }
            if (127 >= k5) {
              if (c4 >= d5)
                break;
              b4[c4++] = k5;
            } else {
              if (2047 >= k5) {
                if (c4 + 1 >= d5)
                  break;
                b4[c4++] = 192 | k5 >> 6;
              } else {
                if (65535 >= k5) {
                  if (c4 + 2 >= d5)
                    break;
                  b4[c4++] = 224 | k5 >> 12;
                } else {
                  if (c4 + 3 >= d5)
                    break;
                  b4[c4++] = 240 | k5 >> 18;
                  b4[c4++] = 128 | k5 >> 12 & 63;
                }
                b4[c4++] = 128 | k5 >> 6 & 63;
              }
              b4[c4++] = 128 | k5 & 63;
            }
          }
          b4[c4] = 0;
          return c4 - f4;
        }
        function ca(a5) {
          for (var b4 = 0, c4 = 0; c4 < a5.length; ++c4) {
            var d5 = a5.charCodeAt(c4);
            127 >= d5 ? b4++ : 2047 >= d5 ? b4 += 2 : 55296 <= d5 && 57343 >= d5 ? (b4 += 4, ++c4) : b4 += 3;
          }
          return b4;
        }
        var Na, r3, u4, Oa, F4, J2, Pa, Qa;
        function Ra() {
          var a5 = Ja.buffer;
          Na = a5;
          e4.HEAP8 = r3 = new Int8Array(a5);
          e4.HEAP16 = Oa = new Int16Array(a5);
          e4.HEAP32 = F4 = new Int32Array(a5);
          e4.HEAPU8 = u4 = new Uint8Array(a5);
          e4.HEAPU16 = new Uint16Array(a5);
          e4.HEAPU32 = J2 = new Uint32Array(a5);
          e4.HEAPF32 = Pa = new Float32Array(a5);
          e4.HEAPF64 = Qa = new Float64Array(a5);
        }
        var K3, Sa = [], Ta = [], Ua = [];
        function Va() {
          var a5 = e4.preRun.shift();
          Sa.unshift(a5);
        }
        var Wa = 0, Xa = null, Ya = null;
        function E4(a5) {
          if (e4.onAbort)
            e4.onAbort(a5);
          a5 = "Aborted(" + a5 + ")";
          Ha(a5);
          Ka = true;
          throw new WebAssembly.RuntimeError(a5 + ". Build with -sASSERTIONS for more info.");
        }
        function Za() {
          return M5.startsWith("data:application/octet-stream;base64,");
        }
        var M5;
        M5 = "sql-wasm.wasm";
        if (!Za()) {
          var $a = M5;
          M5 = e4.locateFile ? e4.locateFile($a, D4) : D4 + $a;
        }
        function ab() {
          var a5 = M5;
          try {
            if (a5 == M5 && Ia)
              return new Uint8Array(Ia);
            if (Da)
              return Da(a5);
            throw "both async and sync fetching of the wasm failed";
          } catch (b4) {
            E4(b4);
          }
        }
        function bb() {
          if (!Ia && (ya || za)) {
            if ("function" == typeof fetch && !M5.startsWith("file://"))
              return fetch(M5, { credentials: "same-origin" }).then(function(a5) {
                if (!a5.ok)
                  throw "failed to load wasm binary file at '" + M5 + "'";
                return a5.arrayBuffer();
              }).catch(function() {
                return ab();
              });
            if (Ca)
              return new Promise(function(a5, b4) {
                Ca(M5, function(c4) {
                  a5(new Uint8Array(c4));
                }, b4);
              });
          }
          return Promise.resolve().then(function() {
            return ab();
          });
        }
        var N3, O4;
        function cb(a5) {
          for (; 0 < a5.length; )
            a5.shift()(e4);
        }
        function l3(a5, b4 = "i8") {
          b4.endsWith("*") && (b4 = "*");
          switch (b4) {
            case "i1":
              return r3[a5 >> 0];
            case "i8":
              return r3[a5 >> 0];
            case "i16":
              return Oa[a5 >> 1];
            case "i32":
              return F4[a5 >> 2];
            case "i64":
              return F4[a5 >> 2];
            case "float":
              return Pa[a5 >> 2];
            case "double":
              return Qa[a5 >> 3];
            case "*":
              return J2[a5 >> 2];
            default:
              E4("invalid type for getValue: " + b4);
          }
          return null;
        }
        function pa(a5) {
          var b4 = "i32";
          b4.endsWith("*") && (b4 = "*");
          switch (b4) {
            case "i1":
              r3[a5 >> 0] = 0;
              break;
            case "i8":
              r3[a5 >> 0] = 0;
              break;
            case "i16":
              Oa[a5 >> 1] = 0;
              break;
            case "i32":
              F4[a5 >> 2] = 0;
              break;
            case "i64":
              O4 = [0, (N3 = 0, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
              F4[a5 >> 2] = O4[0];
              F4[a5 + 4 >> 2] = O4[1];
              break;
            case "float":
              Pa[a5 >> 2] = 0;
              break;
            case "double":
              Qa[a5 >> 3] = 0;
              break;
            case "*":
              J2[a5 >> 2] = 0;
              break;
            default:
              E4("invalid type for setValue: " + b4);
          }
        }
        var db = (a5, b4) => {
          for (var c4 = 0, d5 = a5.length - 1; 0 <= d5; d5--) {
            var f4 = a5[d5];
            "." === f4 ? a5.splice(d5, 1) : ".." === f4 ? (a5.splice(d5, 1), c4++) : c4 && (a5.splice(d5, 1), c4--);
          }
          if (b4)
            for (; c4; c4--)
              a5.unshift("..");
          return a5;
        }, z5 = (a5) => {
          var b4 = "/" === a5.charAt(0), c4 = "/" === a5.substr(-1);
          (a5 = db(a5.split("/").filter((d5) => !!d5), !b4).join("/")) || b4 || (a5 = ".");
          a5 && c4 && (a5 += "/");
          return (b4 ? "/" : "") + a5;
        }, eb = (a5) => {
          var b4 = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a5).slice(1);
          a5 = b4[0];
          b4 = b4[1];
          if (!a5 && !b4)
            return ".";
          b4 && (b4 = b4.substr(0, b4.length - 1));
          return a5 + b4;
        }, fb = (a5) => {
          if ("/" === a5)
            return "/";
          a5 = z5(a5);
          a5 = a5.replace(/\/$/, "");
          var b4 = a5.lastIndexOf("/");
          return -1 === b4 ? a5 : a5.substr(b4 + 1);
        };
        function gb() {
          if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues) {
            var a5 = new Uint8Array(1);
            return () => {
              crypto.getRandomValues(a5);
              return a5[0];
            };
          }
          if (Aa)
            try {
              var b4 = require("crypto");
              return () => b4.randomBytes(1)[0];
            } catch (c4) {
            }
          return () => E4("randomDevice");
        }
        function hb() {
          for (var a5 = "", b4 = false, c4 = arguments.length - 1; -1 <= c4 && !b4; c4--) {
            b4 = 0 <= c4 ? arguments[c4] : "/";
            if ("string" != typeof b4)
              throw new TypeError("Arguments to path.resolve must be strings");
            if (!b4)
              return "";
            a5 = b4 + "/" + a5;
            b4 = "/" === b4.charAt(0);
          }
          a5 = db(a5.split("/").filter((d5) => !!d5), !b4).join("/");
          return (b4 ? "/" : "") + a5 || ".";
        }
        function ma(a5, b4) {
          var c4 = Array(ca(a5) + 1);
          a5 = t4(a5, c4, 0, c4.length);
          b4 && (c4.length = a5);
          return c4;
        }
        var ib = [];
        function jb(a5, b4) {
          ib[a5] = { input: [], output: [], Xa: b4 };
          lb(a5, mb);
        }
        var mb = { open: function(a5) {
          var b4 = ib[a5.node.rdev];
          if (!b4)
            throw new P4(43);
          a5.tty = b4;
          a5.seekable = false;
        }, close: function(a5) {
          a5.tty.Xa.fsync(a5.tty);
        }, fsync: function(a5) {
          a5.tty.Xa.fsync(a5.tty);
        }, read: function(a5, b4, c4, d5) {
          if (!a5.tty || !a5.tty.Xa.tb)
            throw new P4(60);
          for (var f4 = 0, h5 = 0; h5 < d5; h5++) {
            try {
              var k5 = a5.tty.Xa.tb(a5.tty);
            } catch (q5) {
              throw new P4(29);
            }
            if (void 0 === k5 && 0 === f4)
              throw new P4(6);
            if (null === k5 || void 0 === k5)
              break;
            f4++;
            b4[c4 + h5] = k5;
          }
          f4 && (a5.node.timestamp = Date.now());
          return f4;
        }, write: function(a5, b4, c4, d5) {
          if (!a5.tty || !a5.tty.Xa.jb)
            throw new P4(60);
          try {
            for (var f4 = 0; f4 < d5; f4++)
              a5.tty.Xa.jb(a5.tty, b4[c4 + f4]);
          } catch (h5) {
            throw new P4(29);
          }
          d5 && (a5.node.timestamp = Date.now());
          return f4;
        } }, tb = { tb: function(a5) {
          if (!a5.input.length) {
            var b4 = null;
            if (Aa) {
              var c4 = Buffer.alloc(256), d5 = 0;
              try {
                d5 = fs.readSync(process.stdin.fd, c4, 0, 256, -1);
              } catch (f4) {
                if (f4.toString().includes("EOF"))
                  d5 = 0;
                else
                  throw f4;
              }
              0 < d5 ? b4 = c4.slice(0, d5).toString("utf-8") : b4 = null;
            } else
              "undefined" != typeof window && "function" == typeof window.prompt ? (b4 = window.prompt("Input: "), null !== b4 && (b4 += "\n")) : "function" == typeof readline && (b4 = readline(), null !== b4 && (b4 += "\n"));
            if (!b4)
              return null;
            a5.input = ma(b4, true);
          }
          return a5.input.shift();
        }, jb: function(a5, b4) {
          null === b4 || 10 === b4 ? (Ga(Ma(a5.output, 0)), a5.output = []) : 0 != b4 && a5.output.push(b4);
        }, fsync: function(a5) {
          a5.output && 0 < a5.output.length && (Ga(Ma(a5.output, 0)), a5.output = []);
        } }, ub = { jb: function(a5, b4) {
          null === b4 || 10 === b4 ? (Ha(Ma(a5.output, 0)), a5.output = []) : 0 != b4 && a5.output.push(b4);
        }, fsync: function(a5) {
          a5.output && 0 < a5.output.length && (Ha(Ma(a5.output, 0)), a5.output = []);
        } }, Q3 = { Qa: null, Ra: function() {
          return Q3.createNode(
            null,
            "/",
            16895,
            0
          );
        }, createNode: function(a5, b4, c4, d5) {
          if (24576 === (c4 & 61440) || 4096 === (c4 & 61440))
            throw new P4(63);
          Q3.Qa || (Q3.Qa = { dir: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa, lookup: Q3.Ga.lookup, ab: Q3.Ga.ab, rename: Q3.Ga.rename, unlink: Q3.Ga.unlink, rmdir: Q3.Ga.rmdir, readdir: Q3.Ga.readdir, symlink: Q3.Ga.symlink }, stream: { Ta: Q3.Ha.Ta } }, file: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa }, stream: { Ta: Q3.Ha.Ta, read: Q3.Ha.read, write: Q3.Ha.write, lb: Q3.Ha.lb, bb: Q3.Ha.bb, cb: Q3.Ha.cb } }, link: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa, readlink: Q3.Ga.readlink }, stream: {} }, pb: {
            node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa },
            stream: vb
          } });
          c4 = wb(a5, b4, c4, d5);
          16384 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.dir.node, c4.Ha = Q3.Qa.dir.stream, c4.Ia = {}) : 32768 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.file.node, c4.Ha = Q3.Qa.file.stream, c4.Ma = 0, c4.Ia = null) : 40960 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.link.node, c4.Ha = Q3.Qa.link.stream) : 8192 === (c4.mode & 61440) && (c4.Ga = Q3.Qa.pb.node, c4.Ha = Q3.Qa.pb.stream);
          c4.timestamp = Date.now();
          a5 && (a5.Ia[b4] = c4, a5.timestamp = c4.timestamp);
          return c4;
        }, Jb: function(a5) {
          return a5.Ia ? a5.Ia.subarray ? a5.Ia.subarray(0, a5.Ma) : new Uint8Array(a5.Ia) : new Uint8Array(0);
        }, qb: function(a5, b4) {
          var c4 = a5.Ia ? a5.Ia.length : 0;
          c4 >= b4 || (b4 = Math.max(b4, c4 * (1048576 > c4 ? 2 : 1.125) >>> 0), 0 != c4 && (b4 = Math.max(b4, 256)), c4 = a5.Ia, a5.Ia = new Uint8Array(b4), 0 < a5.Ma && a5.Ia.set(c4.subarray(0, a5.Ma), 0));
        }, Gb: function(a5, b4) {
          if (a5.Ma != b4)
            if (0 == b4)
              a5.Ia = null, a5.Ma = 0;
            else {
              var c4 = a5.Ia;
              a5.Ia = new Uint8Array(b4);
              c4 && a5.Ia.set(c4.subarray(0, Math.min(b4, a5.Ma)));
              a5.Ma = b4;
            }
        }, Ga: { Pa: function(a5) {
          var b4 = {};
          b4.dev = 8192 === (a5.mode & 61440) ? a5.id : 1;
          b4.ino = a5.id;
          b4.mode = a5.mode;
          b4.nlink = 1;
          b4.uid = 0;
          b4.gid = 0;
          b4.rdev = a5.rdev;
          16384 === (a5.mode & 61440) ? b4.size = 4096 : 32768 === (a5.mode & 61440) ? b4.size = a5.Ma : 40960 === (a5.mode & 61440) ? b4.size = a5.link.length : b4.size = 0;
          b4.atime = new Date(a5.timestamp);
          b4.mtime = new Date(a5.timestamp);
          b4.ctime = new Date(a5.timestamp);
          b4.Ab = 4096;
          b4.blocks = Math.ceil(b4.size / b4.Ab);
          return b4;
        }, Oa: function(a5, b4) {
          void 0 !== b4.mode && (a5.mode = b4.mode);
          void 0 !== b4.timestamp && (a5.timestamp = b4.timestamp);
          void 0 !== b4.size && Q3.Gb(a5, b4.size);
        }, lookup: function() {
          throw xb[44];
        }, ab: function(a5, b4, c4, d5) {
          return Q3.createNode(a5, b4, c4, d5);
        }, rename: function(a5, b4, c4) {
          if (16384 === (a5.mode & 61440)) {
            try {
              var d5 = yb(b4, c4);
            } catch (h5) {
            }
            if (d5)
              for (var f4 in d5.Ia)
                throw new P4(55);
          }
          delete a5.parent.Ia[a5.name];
          a5.parent.timestamp = Date.now();
          a5.name = c4;
          b4.Ia[c4] = a5;
          b4.timestamp = a5.parent.timestamp;
          a5.parent = b4;
        }, unlink: function(a5, b4) {
          delete a5.Ia[b4];
          a5.timestamp = Date.now();
        }, rmdir: function(a5, b4) {
          var c4 = yb(a5, b4), d5;
          for (d5 in c4.Ia)
            throw new P4(55);
          delete a5.Ia[b4];
          a5.timestamp = Date.now();
        }, readdir: function(a5) {
          var b4 = [".", ".."], c4;
          for (c4 in a5.Ia)
            a5.Ia.hasOwnProperty(c4) && b4.push(c4);
          return b4;
        }, symlink: function(a5, b4, c4) {
          a5 = Q3.createNode(a5, b4, 41471, 0);
          a5.link = c4;
          return a5;
        }, readlink: function(a5) {
          if (40960 !== (a5.mode & 61440))
            throw new P4(28);
          return a5.link;
        } }, Ha: { read: function(a5, b4, c4, d5, f4) {
          var h5 = a5.node.Ia;
          if (f4 >= a5.node.Ma)
            return 0;
          a5 = Math.min(a5.node.Ma - f4, d5);
          if (8 < a5 && h5.subarray)
            b4.set(h5.subarray(f4, f4 + a5), c4);
          else
            for (d5 = 0; d5 < a5; d5++)
              b4[c4 + d5] = h5[f4 + d5];
          return a5;
        }, write: function(a5, b4, c4, d5, f4, h5) {
          b4.buffer === r3.buffer && (h5 = false);
          if (!d5)
            return 0;
          a5 = a5.node;
          a5.timestamp = Date.now();
          if (b4.subarray && (!a5.Ia || a5.Ia.subarray)) {
            if (h5)
              return a5.Ia = b4.subarray(c4, c4 + d5), a5.Ma = d5;
            if (0 === a5.Ma && 0 === f4)
              return a5.Ia = b4.slice(c4, c4 + d5), a5.Ma = d5;
            if (f4 + d5 <= a5.Ma)
              return a5.Ia.set(b4.subarray(c4, c4 + d5), f4), d5;
          }
          Q3.qb(a5, f4 + d5);
          if (a5.Ia.subarray && b4.subarray)
            a5.Ia.set(b4.subarray(c4, c4 + d5), f4);
          else
            for (h5 = 0; h5 < d5; h5++)
              a5.Ia[f4 + h5] = b4[c4 + h5];
          a5.Ma = Math.max(a5.Ma, f4 + d5);
          return d5;
        }, Ta: function(a5, b4, c4) {
          1 === c4 ? b4 += a5.position : 2 === c4 && 32768 === (a5.node.mode & 61440) && (b4 += a5.node.Ma);
          if (0 > b4)
            throw new P4(28);
          return b4;
        }, lb: function(a5, b4, c4) {
          Q3.qb(a5.node, b4 + c4);
          a5.node.Ma = Math.max(a5.node.Ma, b4 + c4);
        }, bb: function(a5, b4, c4, d5, f4) {
          if (32768 !== (a5.node.mode & 61440))
            throw new P4(43);
          a5 = a5.node.Ia;
          if (f4 & 2 || a5.buffer !== Na) {
            if (0 < c4 || c4 + b4 < a5.length)
              a5.subarray ? a5 = a5.subarray(c4, c4 + b4) : a5 = Array.prototype.slice.call(
                a5,
                c4,
                c4 + b4
              );
            c4 = true;
            b4 = 65536 * Math.ceil(b4 / 65536);
            (f4 = zb(65536, b4)) ? (u4.fill(0, f4, f4 + b4), b4 = f4) : b4 = 0;
            if (!b4)
              throw new P4(48);
            r3.set(a5, b4);
          } else
            c4 = false, b4 = a5.byteOffset;
          return { Fb: b4, vb: c4 };
        }, cb: function(a5, b4, c4, d5, f4) {
          if (32768 !== (a5.node.mode & 61440))
            throw new P4(43);
          if (f4 & 2)
            return 0;
          Q3.Ha.write(a5, b4, 0, d5, c4, false);
          return 0;
        } } }, Ab = null, Bb = {}, R3 = [], Cb = 1, T6 = null, Db = true, P4 = null, xb = {}, U2 = (a5, b4 = {}) => {
          a5 = hb("/", a5);
          if (!a5)
            return { path: "", node: null };
          b4 = Object.assign({ rb: true, kb: 0 }, b4);
          if (8 < b4.kb)
            throw new P4(32);
          a5 = db(a5.split("/").filter((k5) => !!k5), false);
          for (var c4 = Ab, d5 = "/", f4 = 0; f4 < a5.length; f4++) {
            var h5 = f4 === a5.length - 1;
            if (h5 && b4.parent)
              break;
            c4 = yb(c4, a5[f4]);
            d5 = z5(d5 + "/" + a5[f4]);
            c4.Va && (!h5 || h5 && b4.rb) && (c4 = c4.Va.root);
            if (!h5 || b4.Sa) {
              for (h5 = 0; 40960 === (c4.mode & 61440); )
                if (c4 = Eb(d5), d5 = hb(eb(d5), c4), c4 = U2(d5, { kb: b4.kb + 1 }).node, 40 < h5++)
                  throw new P4(32);
            }
          }
          return { path: d5, node: c4 };
        }, ea = (a5) => {
          for (var b4; ; ) {
            if (a5 === a5.parent)
              return a5 = a5.Ra.ub, b4 ? "/" !== a5[a5.length - 1] ? a5 + "/" + b4 : a5 + b4 : a5;
            b4 = b4 ? a5.name + "/" + b4 : a5.name;
            a5 = a5.parent;
          }
        }, Fb = (a5, b4) => {
          for (var c4 = 0, d5 = 0; d5 < b4.length; d5++)
            c4 = (c4 << 5) - c4 + b4.charCodeAt(d5) | 0;
          return (a5 + c4 >>> 0) % T6.length;
        }, Gb = (a5) => {
          var b4 = Fb(a5.parent.id, a5.name);
          if (T6[b4] === a5)
            T6[b4] = a5.Wa;
          else
            for (b4 = T6[b4]; b4; ) {
              if (b4.Wa === a5) {
                b4.Wa = a5.Wa;
                break;
              }
              b4 = b4.Wa;
            }
        }, yb = (a5, b4) => {
          var c4;
          if (c4 = (c4 = Hb(a5, "x")) ? c4 : a5.Ga.lookup ? 0 : 2)
            throw new P4(c4, a5);
          for (c4 = T6[Fb(a5.id, b4)]; c4; c4 = c4.Wa) {
            var d5 = c4.name;
            if (c4.parent.id === a5.id && d5 === b4)
              return c4;
          }
          return a5.Ga.lookup(a5, b4);
        }, wb = (a5, b4, c4, d5) => {
          a5 = new Ib(a5, b4, c4, d5);
          b4 = Fb(a5.parent.id, a5.name);
          a5.Wa = T6[b4];
          return T6[b4] = a5;
        }, Jb = { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }, Kb = (a5) => {
          var b4 = ["r", "w", "rw"][a5 & 3];
          a5 & 512 && (b4 += "w");
          return b4;
        }, Hb = (a5, b4) => {
          if (Db)
            return 0;
          if (!b4.includes("r") || a5.mode & 292) {
            if (b4.includes("w") && !(a5.mode & 146) || b4.includes("x") && !(a5.mode & 73))
              return 2;
          } else
            return 2;
          return 0;
        }, Lb = (a5, b4) => {
          try {
            return yb(a5, b4), 20;
          } catch (c4) {
          }
          return Hb(a5, "wx");
        }, Mb = (a5, b4, c4) => {
          try {
            var d5 = yb(a5, b4);
          } catch (f4) {
            return f4.Ka;
          }
          if (a5 = Hb(a5, "wx"))
            return a5;
          if (c4) {
            if (16384 !== (d5.mode & 61440))
              return 54;
            if (d5 === d5.parent || "/" === ea(d5))
              return 10;
          } else if (16384 === (d5.mode & 61440))
            return 31;
          return 0;
        }, Nb = (a5 = 0) => {
          for (; 4096 >= a5; a5++)
            if (!R3[a5])
              return a5;
          throw new P4(33);
        }, Pb = (a5, b4) => {
          Ob || (Ob = function() {
            this.$a = {};
          }, Ob.prototype = {}, Object.defineProperties(Ob.prototype, { object: { get: function() {
            return this.node;
          }, set: function(c4) {
            this.node = c4;
          } }, flags: { get: function() {
            return this.$a.flags;
          }, set: function(c4) {
            this.$a.flags = c4;
          } }, position: { get: function() {
            return this.$a.position;
          }, set: function(c4) {
            this.$a.position = c4;
          } } }));
          a5 = Object.assign(new Ob(), a5);
          b4 = Nb(b4);
          a5.fd = b4;
          return R3[b4] = a5;
        }, vb = { open: (a5) => {
          a5.Ha = Bb[a5.node.rdev].Ha;
          a5.Ha.open && a5.Ha.open(a5);
        }, Ta: () => {
          throw new P4(70);
        } }, lb = (a5, b4) => {
          Bb[a5] = { Ha: b4 };
        }, Qb = (a5, b4) => {
          var c4 = "/" === b4, d5 = !b4;
          if (c4 && Ab)
            throw new P4(10);
          if (!c4 && !d5) {
            var f4 = U2(b4, { rb: false });
            b4 = f4.path;
            f4 = f4.node;
            if (f4.Va)
              throw new P4(10);
            if (16384 !== (f4.mode & 61440))
              throw new P4(54);
          }
          b4 = { type: a5, Kb: {}, ub: b4, Eb: [] };
          a5 = a5.Ra(b4);
          a5.Ra = b4;
          b4.root = a5;
          c4 ? Ab = a5 : f4 && (f4.Va = b4, f4.Ra && f4.Ra.Eb.push(b4));
        }, ha = (a5, b4, c4) => {
          var d5 = U2(a5, { parent: true }).node;
          a5 = fb(a5);
          if (!a5 || "." === a5 || ".." === a5)
            throw new P4(28);
          var f4 = Lb(d5, a5);
          if (f4)
            throw new P4(f4);
          if (!d5.Ga.ab)
            throw new P4(63);
          return d5.Ga.ab(d5, a5, b4, c4);
        }, V3 = (a5, b4) => ha(a5, (void 0 !== b4 ? b4 : 511) & 1023 | 16384, 0), Rb = (a5, b4, c4) => {
          "undefined" == typeof c4 && (c4 = b4, b4 = 438);
          ha(a5, b4 | 8192, c4);
        }, Sb = (a5, b4) => {
          if (!hb(a5))
            throw new P4(44);
          var c4 = U2(b4, { parent: true }).node;
          if (!c4)
            throw new P4(44);
          b4 = fb(b4);
          var d5 = Lb(c4, b4);
          if (d5)
            throw new P4(d5);
          if (!c4.Ga.symlink)
            throw new P4(63);
          c4.Ga.symlink(c4, b4, a5);
        }, Tb = (a5) => {
          var b4 = U2(a5, { parent: true }).node;
          a5 = fb(a5);
          var c4 = yb(b4, a5), d5 = Mb(b4, a5, true);
          if (d5)
            throw new P4(d5);
          if (!b4.Ga.rmdir)
            throw new P4(63);
          if (c4.Va)
            throw new P4(10);
          b4.Ga.rmdir(b4, a5);
          Gb(c4);
        }, ta = (a5) => {
          var b4 = U2(a5, { parent: true }).node;
          if (!b4)
            throw new P4(44);
          a5 = fb(a5);
          var c4 = yb(b4, a5), d5 = Mb(b4, a5, false);
          if (d5)
            throw new P4(d5);
          if (!b4.Ga.unlink)
            throw new P4(63);
          if (c4.Va)
            throw new P4(10);
          b4.Ga.unlink(b4, a5);
          Gb(c4);
        }, Eb = (a5) => {
          a5 = U2(a5).node;
          if (!a5)
            throw new P4(44);
          if (!a5.Ga.readlink)
            throw new P4(28);
          return hb(ea(a5.parent), a5.Ga.readlink(a5));
        }, Ub = (a5, b4) => {
          a5 = U2(a5, { Sa: !b4 }).node;
          if (!a5)
            throw new P4(44);
          if (!a5.Ga.Pa)
            throw new P4(63);
          return a5.Ga.Pa(a5);
        }, Vb = (a5) => Ub(a5, true), ia = (a5, b4) => {
          a5 = "string" == typeof a5 ? U2(a5, { Sa: true }).node : a5;
          if (!a5.Ga.Oa)
            throw new P4(63);
          a5.Ga.Oa(a5, { mode: b4 & 4095 | a5.mode & -4096, timestamp: Date.now() });
        }, Wb = (a5, b4) => {
          if (0 > b4)
            throw new P4(28);
          a5 = "string" == typeof a5 ? U2(a5, { Sa: true }).node : a5;
          if (!a5.Ga.Oa)
            throw new P4(63);
          if (16384 === (a5.mode & 61440))
            throw new P4(31);
          if (32768 !== (a5.mode & 61440))
            throw new P4(28);
          var c4 = Hb(a5, "w");
          if (c4)
            throw new P4(c4);
          a5.Ga.Oa(a5, { size: b4, timestamp: Date.now() });
        }, ja = (a5, b4, c4) => {
          if ("" === a5)
            throw new P4(44);
          if ("string" == typeof b4) {
            var d5 = Jb[b4];
            if ("undefined" == typeof d5)
              throw Error("Unknown file open mode: " + b4);
            b4 = d5;
          }
          c4 = b4 & 64 ? ("undefined" == typeof c4 ? 438 : c4) & 4095 | 32768 : 0;
          if ("object" == typeof a5)
            var f4 = a5;
          else {
            a5 = z5(a5);
            try {
              f4 = U2(a5, { Sa: !(b4 & 131072) }).node;
            } catch (h5) {
            }
          }
          d5 = false;
          if (b4 & 64)
            if (f4) {
              if (b4 & 128)
                throw new P4(20);
            } else
              f4 = ha(a5, c4, 0), d5 = true;
          if (!f4)
            throw new P4(44);
          8192 === (f4.mode & 61440) && (b4 &= -513);
          if (b4 & 65536 && 16384 !== (f4.mode & 61440))
            throw new P4(54);
          if (!d5 && (c4 = f4 ? 40960 === (f4.mode & 61440) ? 32 : 16384 === (f4.mode & 61440) && ("r" !== Kb(b4) || b4 & 512) ? 31 : Hb(f4, Kb(b4)) : 44))
            throw new P4(c4);
          b4 & 512 && !d5 && Wb(f4, 0);
          b4 &= -131713;
          f4 = Pb({ node: f4, path: ea(f4), flags: b4, seekable: true, position: 0, Ha: f4.Ha, Ib: [], error: false });
          f4.Ha.open && f4.Ha.open(f4);
          !e4.logReadFiles || b4 & 1 || (Xb || (Xb = {}), a5 in Xb || (Xb[a5] = 1));
          return f4;
        }, la = (a5) => {
          if (null === a5.fd)
            throw new P4(8);
          a5.hb && (a5.hb = null);
          try {
            a5.Ha.close && a5.Ha.close(a5);
          } catch (b4) {
            throw b4;
          } finally {
            R3[a5.fd] = null;
          }
          a5.fd = null;
        }, Yb = (a5, b4, c4) => {
          if (null === a5.fd)
            throw new P4(8);
          if (!a5.seekable || !a5.Ha.Ta)
            throw new P4(70);
          if (0 != c4 && 1 != c4 && 2 != c4)
            throw new P4(28);
          a5.position = a5.Ha.Ta(a5, b4, c4);
          a5.Ib = [];
        }, Zb = (a5, b4, c4, d5, f4) => {
          if (0 > d5 || 0 > f4)
            throw new P4(28);
          if (null === a5.fd)
            throw new P4(8);
          if (1 === (a5.flags & 2097155))
            throw new P4(8);
          if (16384 === (a5.node.mode & 61440))
            throw new P4(31);
          if (!a5.Ha.read)
            throw new P4(28);
          var h5 = "undefined" != typeof f4;
          if (!h5)
            f4 = a5.position;
          else if (!a5.seekable)
            throw new P4(70);
          b4 = a5.Ha.read(a5, b4, c4, d5, f4);
          h5 || (a5.position += b4);
          return b4;
        }, ka = (a5, b4, c4, d5, f4) => {
          if (0 > d5 || 0 > f4)
            throw new P4(28);
          if (null === a5.fd)
            throw new P4(8);
          if (0 === (a5.flags & 2097155))
            throw new P4(8);
          if (16384 === (a5.node.mode & 61440))
            throw new P4(31);
          if (!a5.Ha.write)
            throw new P4(28);
          a5.seekable && a5.flags & 1024 && Yb(a5, 0, 2);
          var h5 = "undefined" != typeof f4;
          if (!h5)
            f4 = a5.position;
          else if (!a5.seekable)
            throw new P4(70);
          b4 = a5.Ha.write(a5, b4, c4, d5, f4, void 0);
          h5 || (a5.position += b4);
          return b4;
        }, sa = (a5) => {
          var b4 = "binary";
          if ("utf8" !== b4 && "binary" !== b4)
            throw Error('Invalid encoding type "' + b4 + '"');
          var c4;
          var d5 = ja(a5, d5 || 0);
          a5 = Ub(a5).size;
          var f4 = new Uint8Array(a5);
          Zb(d5, f4, 0, a5, 0);
          "utf8" === b4 ? c4 = Ma(f4, 0) : "binary" === b4 && (c4 = f4);
          la(d5);
          return c4;
        }, $b = () => {
          P4 || (P4 = function(a5, b4) {
            this.node = b4;
            this.Hb = function(c4) {
              this.Ka = c4;
            };
            this.Hb(a5);
            this.message = "FS error";
          }, P4.prototype = Error(), P4.prototype.constructor = P4, [44].forEach((a5) => {
            xb[a5] = new P4(a5);
            xb[a5].stack = "<generic error, no stack>";
          }));
        }, ac, fa = (a5, b4) => {
          var c4 = 0;
          a5 && (c4 |= 365);
          b4 && (c4 |= 146);
          return c4;
        }, cc = (a5, b4, c4) => {
          a5 = z5("/dev/" + a5);
          var d5 = fa(!!b4, !!c4);
          bc || (bc = 64);
          var f4 = bc++ << 8 | 0;
          lb(f4, { open: (h5) => {
            h5.seekable = false;
          }, close: () => {
            c4 && c4.buffer && c4.buffer.length && c4(10);
          }, read: (h5, k5, q5, x5) => {
            for (var w5 = 0, A4 = 0; A4 < x5; A4++) {
              try {
                var S4 = b4();
              } catch (nb) {
                throw new P4(29);
              }
              if (void 0 === S4 && 0 === w5)
                throw new P4(6);
              if (null === S4 || void 0 === S4)
                break;
              w5++;
              k5[q5 + A4] = S4;
            }
            w5 && (h5.node.timestamp = Date.now());
            return w5;
          }, write: (h5, k5, q5, x5) => {
            for (var w5 = 0; w5 < x5; w5++)
              try {
                c4(k5[q5 + w5]);
              } catch (A4) {
                throw new P4(29);
              }
            x5 && (h5.node.timestamp = Date.now());
            return w5;
          } });
          Rb(a5, d5, f4);
        }, bc, W2 = {}, Ob, Xb;
        function dc(a5, b4, c4) {
          if ("/" === b4.charAt(0))
            return b4;
          a5 = -100 === a5 ? "/" : X3(a5).path;
          if (0 == b4.length) {
            if (!c4)
              throw new P4(44);
            return a5;
          }
          return z5(a5 + "/" + b4);
        }
        function ec(a5, b4, c4) {
          try {
            var d5 = a5(b4);
          } catch (f4) {
            if (f4 && f4.node && z5(b4) !== z5(ea(f4.node)))
              return -54;
            throw f4;
          }
          F4[c4 >> 2] = d5.dev;
          F4[c4 + 8 >> 2] = d5.ino;
          F4[c4 + 12 >> 2] = d5.mode;
          J2[c4 + 16 >> 2] = d5.nlink;
          F4[c4 + 20 >> 2] = d5.uid;
          F4[c4 + 24 >> 2] = d5.gid;
          F4[c4 + 28 >> 2] = d5.rdev;
          O4 = [d5.size >>> 0, (N3 = d5.size, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 40 >> 2] = O4[0];
          F4[c4 + 44 >> 2] = O4[1];
          F4[c4 + 48 >> 2] = 4096;
          F4[c4 + 52 >> 2] = d5.blocks;
          O4 = [Math.floor(d5.atime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.atime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 56 >> 2] = O4[0];
          F4[c4 + 60 >> 2] = O4[1];
          J2[c4 + 64 >> 2] = 0;
          O4 = [Math.floor(d5.mtime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.mtime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 72 >> 2] = O4[0];
          F4[c4 + 76 >> 2] = O4[1];
          J2[c4 + 80 >> 2] = 0;
          O4 = [Math.floor(d5.ctime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.ctime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 88 >> 2] = O4[0];
          F4[c4 + 92 >> 2] = O4[1];
          J2[c4 + 96 >> 2] = 0;
          O4 = [d5.ino >>> 0, (N3 = d5.ino, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 104 >> 2] = O4[0];
          F4[c4 + 108 >> 2] = O4[1];
          return 0;
        }
        var fc = void 0;
        function Hc() {
          fc += 4;
          return F4[fc - 4 >> 2];
        }
        function X3(a5) {
          a5 = R3[a5];
          if (!a5)
            throw new P4(8);
          return a5;
        }
        function Jc(a5) {
          return J2[a5 >> 2] + 4294967296 * F4[a5 + 4 >> 2];
        }
        function Kc(a5) {
          var b4 = ca(a5) + 1, c4 = da(b4);
          c4 && t4(a5, r3, c4, b4);
          return c4;
        }
        function Lc(a5, b4, c4) {
          function d5(x5) {
            return (x5 = x5.toTimeString().match(/\(([A-Za-z ]+)\)$/)) ? x5[1] : "GMT";
          }
          var f4 = new Date().getFullYear(), h5 = new Date(f4, 0, 1), k5 = new Date(f4, 6, 1);
          f4 = h5.getTimezoneOffset();
          var q5 = k5.getTimezoneOffset();
          F4[a5 >> 2] = 60 * Math.max(f4, q5);
          F4[b4 >> 2] = Number(f4 != q5);
          a5 = d5(h5);
          b4 = d5(k5);
          a5 = Kc(a5);
          b4 = Kc(b4);
          q5 < f4 ? (J2[c4 >> 2] = a5, J2[c4 + 4 >> 2] = b4) : (J2[c4 >> 2] = b4, J2[c4 + 4 >> 2] = a5);
        }
        function Mc(a5, b4, c4) {
          Mc.Bb || (Mc.Bb = true, Lc(a5, b4, c4));
        }
        var Nc;
        Nc = Aa ? () => {
          var a5 = process.hrtime();
          return 1e3 * a5[0] + a5[1] / 1e6;
        } : () => performance.now();
        var Oc = {};
        function Pc() {
          if (!Qc) {
            var a5 = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: ("object" == typeof navigator && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: wa || "./this.program" }, b4;
            for (b4 in Oc)
              void 0 === Oc[b4] ? delete a5[b4] : a5[b4] = Oc[b4];
            var c4 = [];
            for (b4 in a5)
              c4.push(b4 + "=" + a5[b4]);
            Qc = c4;
          }
          return Qc;
        }
        var Qc, Y3 = void 0, Rc = [];
        function ua(a5, b4) {
          if (!Y3) {
            Y3 = /* @__PURE__ */ new WeakMap();
            var c4 = K3.length;
            if (Y3)
              for (var d5 = 0; d5 < 0 + c4; d5++) {
                var f4 = K3.get(d5);
                f4 && Y3.set(f4, d5);
              }
          }
          if (Y3.has(a5))
            return Y3.get(a5);
          if (Rc.length)
            c4 = Rc.pop();
          else {
            try {
              K3.grow(1);
            } catch (q5) {
              if (!(q5 instanceof RangeError))
                throw q5;
              throw "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";
            }
            c4 = K3.length - 1;
          }
          try {
            K3.set(c4, a5);
          } catch (q5) {
            if (!(q5 instanceof TypeError))
              throw q5;
            if ("function" == typeof WebAssembly.Function) {
              d5 = WebAssembly.Function;
              f4 = { i: "i32", j: "i64", f: "f32", d: "f64", p: "i32" };
              for (var h5 = { parameters: [], results: "v" == b4[0] ? [] : [f4[b4[0]]] }, k5 = 1; k5 < b4.length; ++k5)
                h5.parameters.push(f4[b4[k5]]);
              b4 = new d5(h5, a5);
            } else {
              d5 = [1, 96];
              f4 = b4.slice(0, 1);
              b4 = b4.slice(1);
              h5 = { i: 127, p: 127, j: 126, f: 125, d: 124 };
              k5 = b4.length;
              128 > k5 ? d5.push(k5) : d5.push(k5 % 128 | 128, k5 >> 7);
              for (k5 = 0; k5 < b4.length; ++k5)
                d5.push(h5[b4[k5]]);
              "v" == f4 ? d5.push(0) : d5.push(1, h5[f4]);
              b4 = [0, 97, 115, 109, 1, 0, 0, 0, 1];
              f4 = d5.length;
              128 > f4 ? b4.push(f4) : b4.push(f4 % 128 | 128, f4 >> 7);
              b4.push.apply(b4, d5);
              b4.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);
              b4 = new WebAssembly.Module(new Uint8Array(b4));
              b4 = new WebAssembly.Instance(b4, { e: { f: a5 } }).exports.f;
            }
            K3.set(
              c4,
              b4
            );
          }
          Y3.set(a5, c4);
          return c4;
        }
        function ra(a5) {
          Y3.delete(K3.get(a5));
          Rc.push(a5);
        }
        var Sc = 0, Tc = 1;
        function aa(a5) {
          var b4 = Sc == Tc ? B5(a5.length) : da(a5.length);
          a5.subarray || a5.slice || (a5 = new Uint8Array(a5));
          u4.set(a5, b4);
          return b4;
        }
        function Uc(a5, b4, c4, d5) {
          var f4 = { string: (w5) => {
            var A4 = 0;
            if (null !== w5 && void 0 !== w5 && 0 !== w5) {
              var S4 = (w5.length << 2) + 1;
              A4 = B5(S4);
              t4(w5, u4, A4, S4);
            }
            return A4;
          }, array: (w5) => {
            var A4 = B5(w5.length);
            r3.set(w5, A4);
            return A4;
          } };
          a5 = e4["_" + a5];
          var h5 = [], k5 = 0;
          if (d5)
            for (var q5 = 0; q5 < d5.length; q5++) {
              var x5 = f4[c4[q5]];
              x5 ? (0 === k5 && (k5 = oa()), h5[q5] = x5(d5[q5])) : h5[q5] = d5[q5];
            }
          c4 = a5.apply(null, h5);
          return c4 = function(w5) {
            0 !== k5 && qa(k5);
            return "string" === b4 ? C3(w5) : "boolean" === b4 ? !!w5 : w5;
          }(c4);
        }
        function Ib(a5, b4, c4, d5) {
          a5 || (a5 = this);
          this.parent = a5;
          this.Ra = a5.Ra;
          this.Va = null;
          this.id = Cb++;
          this.name = b4;
          this.mode = c4;
          this.Ga = {};
          this.Ha = {};
          this.rdev = d5;
        }
        Object.defineProperties(Ib.prototype, { read: { get: function() {
          return 365 === (this.mode & 365);
        }, set: function(a5) {
          a5 ? this.mode |= 365 : this.mode &= -366;
        } }, write: { get: function() {
          return 146 === (this.mode & 146);
        }, set: function(a5) {
          a5 ? this.mode |= 146 : this.mode &= -147;
        } } });
        $b();
        T6 = Array(4096);
        Qb(Q3, "/");
        V3("/tmp");
        V3("/home");
        V3("/home/web_user");
        (() => {
          V3("/dev");
          lb(259, { read: () => 0, write: (b4, c4, d5, f4) => f4 });
          Rb("/dev/null", 259);
          jb(1280, tb);
          jb(1536, ub);
          Rb("/dev/tty", 1280);
          Rb("/dev/tty1", 1536);
          var a5 = gb();
          cc("random", a5);
          cc("urandom", a5);
          V3("/dev/shm");
          V3("/dev/shm/tmp");
        })();
        (() => {
          V3("/proc");
          var a5 = V3("/proc/self");
          V3("/proc/self/fd");
          Qb({ Ra: () => {
            var b4 = wb(a5, "fd", 16895, 73);
            b4.Ga = { lookup: (c4, d5) => {
              var f4 = R3[+d5];
              if (!f4)
                throw new P4(8);
              c4 = { parent: null, Ra: { ub: "fake" }, Ga: { readlink: () => f4.path } };
              return c4.parent = c4;
            } };
            return b4;
          } }, "/proc/self/fd");
        })();
        var Wc = { a: function(a5, b4, c4, d5) {
          E4("Assertion failed: " + C3(a5) + ", at: " + [b4 ? C3(b4) : "unknown filename", c4, d5 ? C3(d5) : "unknown function"]);
        }, h: function(a5, b4) {
          try {
            return a5 = C3(a5), ia(a5, b4), 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, H: function(a5, b4, c4) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            if (c4 & -8)
              return -28;
            var d5 = U2(b4, { Sa: true }).node;
            if (!d5)
              return -44;
            a5 = "";
            c4 & 4 && (a5 += "r");
            c4 & 2 && (a5 += "w");
            c4 & 1 && (a5 += "x");
            return a5 && Hb(d5, a5) ? -2 : 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, i: function(a5, b4) {
          try {
            var c4 = R3[a5];
            if (!c4)
              throw new P4(8);
            ia(c4.node, b4);
            return 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, g: function(a5) {
          try {
            var b4 = R3[a5];
            if (!b4)
              throw new P4(8);
            var c4 = b4.node;
            var d5 = "string" == typeof c4 ? U2(c4, { Sa: true }).node : c4;
            if (!d5.Ga.Oa)
              throw new P4(63);
            d5.Ga.Oa(d5, { timestamp: Date.now() });
            return 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, b: function(a5, b4, c4) {
          fc = c4;
          try {
            var d5 = X3(a5);
            switch (b4) {
              case 0:
                var f4 = Hc();
                return 0 > f4 ? -28 : Pb(d5, f4).fd;
              case 1:
              case 2:
                return 0;
              case 3:
                return d5.flags;
              case 4:
                return f4 = Hc(), d5.flags |= f4, 0;
              case 5:
                return f4 = Hc(), Oa[f4 + 0 >> 1] = 2, 0;
              case 6:
              case 7:
                return 0;
              case 16:
              case 8:
                return -28;
              case 9:
                return F4[Vc() >> 2] = 28, -1;
              default:
                return -28;
            }
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, G: function(a5, b4) {
          try {
            var c4 = X3(a5);
            return ec(Ub, c4.path, b4);
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, l: function(a5, b4, c4) {
          try {
            b4 = c4 + 2097152 >>> 0 < 4194305 - !!b4 ? (b4 >>> 0) + 4294967296 * c4 : NaN;
            if (isNaN(b4))
              return -61;
            var d5 = R3[a5];
            if (!d5)
              throw new P4(8);
            if (0 === (d5.flags & 2097155))
              throw new P4(28);
            Wb(d5.node, b4);
            return 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, B: function(a5, b4) {
          try {
            if (0 === b4)
              return -28;
            var c4 = ca("/") + 1;
            if (b4 < c4)
              return -68;
            t4("/", u4, a5, b4);
            return c4;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, E: function(a5, b4) {
          try {
            return a5 = C3(a5), ec(Vb, a5, b4);
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, y: function(a5, b4, c4) {
          try {
            return b4 = C3(b4), b4 = dc(a5, b4), b4 = z5(b4), "/" === b4[b4.length - 1] && (b4 = b4.substr(0, b4.length - 1)), V3(b4, c4), 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, D: function(a5, b4, c4, d5) {
          try {
            b4 = C3(b4);
            var f4 = d5 & 256;
            b4 = dc(a5, b4, d5 & 4096);
            return ec(f4 ? Vb : Ub, b4, c4);
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, v: function(a5, b4, c4, d5) {
          fc = d5;
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            var f4 = d5 ? Hc() : 0;
            return ja(b4, c4, f4).fd;
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, t: function(a5, b4, c4, d5) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            if (0 >= d5)
              return -28;
            var f4 = Eb(b4), h5 = Math.min(
              d5,
              ca(f4)
            ), k5 = r3[c4 + h5];
            t4(f4, u4, c4, d5 + 1);
            r3[c4 + h5] = k5;
            return h5;
          } catch (q5) {
            if ("undefined" == typeof W2 || !(q5 instanceof P4))
              throw q5;
            return -q5.Ka;
          }
        }, s: function(a5) {
          try {
            return a5 = C3(a5), Tb(a5), 0;
          } catch (b4) {
            if ("undefined" == typeof W2 || !(b4 instanceof P4))
              throw b4;
            return -b4.Ka;
          }
        }, F: function(a5, b4) {
          try {
            return a5 = C3(a5), ec(Ub, a5, b4);
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, p: function(a5, b4, c4) {
          try {
            return b4 = C3(b4), b4 = dc(a5, b4), 0 === c4 ? ta(b4) : 512 === c4 ? Tb(b4) : E4("Invalid flags passed to unlinkat"), 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, o: function(a5, b4, c4) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4, true);
            if (c4) {
              var d5 = Jc(c4), f4 = F4[c4 + 8 >> 2];
              h5 = 1e3 * d5 + f4 / 1e6;
              c4 += 16;
              d5 = Jc(c4);
              f4 = F4[c4 + 8 >> 2];
              k5 = 1e3 * d5 + f4 / 1e6;
            } else
              var h5 = Date.now(), k5 = h5;
            a5 = h5;
            var q5 = U2(b4, { Sa: true }).node;
            q5.Ga.Oa(q5, { timestamp: Math.max(a5, k5) });
            return 0;
          } catch (x5) {
            if ("undefined" == typeof W2 || !(x5 instanceof P4))
              throw x5;
            return -x5.Ka;
          }
        }, e: function() {
          return Date.now();
        }, j: function(a5, b4) {
          a5 = new Date(1e3 * Jc(a5));
          F4[b4 >> 2] = a5.getSeconds();
          F4[b4 + 4 >> 2] = a5.getMinutes();
          F4[b4 + 8 >> 2] = a5.getHours();
          F4[b4 + 12 >> 2] = a5.getDate();
          F4[b4 + 16 >> 2] = a5.getMonth();
          F4[b4 + 20 >> 2] = a5.getFullYear() - 1900;
          F4[b4 + 24 >> 2] = a5.getDay();
          var c4 = new Date(a5.getFullYear(), 0, 1);
          F4[b4 + 28 >> 2] = (a5.getTime() - c4.getTime()) / 864e5 | 0;
          F4[b4 + 36 >> 2] = -(60 * a5.getTimezoneOffset());
          var d5 = new Date(a5.getFullYear(), 6, 1).getTimezoneOffset();
          c4 = c4.getTimezoneOffset();
          F4[b4 + 32 >> 2] = (d5 != c4 && a5.getTimezoneOffset() == Math.min(c4, d5)) | 0;
        }, w: function(a5, b4, c4, d5, f4, h5) {
          try {
            var k5 = X3(d5);
            if (0 !== (b4 & 2) && 0 === (c4 & 2) && 2 !== (k5.flags & 2097155))
              throw new P4(2);
            if (1 === (k5.flags & 2097155))
              throw new P4(2);
            if (!k5.Ha.bb)
              throw new P4(43);
            var q5 = k5.Ha.bb(k5, a5, f4, b4, c4);
            var x5 = q5.Fb;
            F4[h5 >> 2] = q5.vb;
            return x5;
          } catch (w5) {
            if ("undefined" == typeof W2 || !(w5 instanceof P4))
              throw w5;
            return -w5.Ka;
          }
        }, x: function(a5, b4, c4, d5, f4, h5) {
          try {
            var k5 = X3(f4);
            if (c4 & 2) {
              var q5 = u4.slice(a5, a5 + b4);
              k5 && k5.Ha.cb && k5.Ha.cb(k5, q5, h5, b4, d5);
            }
          } catch (x5) {
            if ("undefined" == typeof W2 || !(x5 instanceof P4))
              throw x5;
            return -x5.Ka;
          }
        }, n: Mc, q: function() {
          return 2147483648;
        }, d: Nc, c: function(a5) {
          var b4 = u4.length;
          a5 >>>= 0;
          if (2147483648 < a5)
            return false;
          for (var c4 = 1; 4 >= c4; c4 *= 2) {
            var d5 = b4 * (1 + 0.2 / c4);
            d5 = Math.min(d5, a5 + 100663296);
            var f4 = Math;
            d5 = Math.max(
              a5,
              d5
            );
            f4 = f4.min.call(f4, 2147483648, d5 + (65536 - d5 % 65536) % 65536);
            a: {
              try {
                Ja.grow(f4 - Na.byteLength + 65535 >>> 16);
                Ra();
                var h5 = 1;
                break a;
              } catch (k5) {
              }
              h5 = void 0;
            }
            if (h5)
              return true;
          }
          return false;
        }, z: function(a5, b4) {
          var c4 = 0;
          Pc().forEach(function(d5, f4) {
            var h5 = b4 + c4;
            f4 = J2[a5 + 4 * f4 >> 2] = h5;
            for (h5 = 0; h5 < d5.length; ++h5)
              r3[f4++ >> 0] = d5.charCodeAt(h5);
            r3[f4 >> 0] = 0;
            c4 += d5.length + 1;
          });
          return 0;
        }, A: function(a5, b4) {
          var c4 = Pc();
          J2[a5 >> 2] = c4.length;
          var d5 = 0;
          c4.forEach(function(f4) {
            d5 += f4.length + 1;
          });
          J2[b4 >> 2] = d5;
          return 0;
        }, f: function(a5) {
          try {
            var b4 = X3(a5);
            la(b4);
            return 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return c4.Ka;
          }
        }, m: function(a5, b4) {
          try {
            var c4 = X3(a5);
            r3[b4 >> 0] = c4.tty ? 2 : 16384 === (c4.mode & 61440) ? 3 : 40960 === (c4.mode & 61440) ? 7 : 4;
            return 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return d5.Ka;
          }
        }, u: function(a5, b4, c4, d5) {
          try {
            a: {
              var f4 = X3(a5);
              a5 = b4;
              for (var h5 = b4 = 0; h5 < c4; h5++) {
                var k5 = J2[a5 >> 2], q5 = J2[a5 + 4 >> 2];
                a5 += 8;
                var x5 = Zb(f4, r3, k5, q5);
                if (0 > x5) {
                  var w5 = -1;
                  break a;
                }
                b4 += x5;
                if (x5 < q5)
                  break;
              }
              w5 = b4;
            }
            J2[d5 >> 2] = w5;
            return 0;
          } catch (A4) {
            if ("undefined" == typeof W2 || !(A4 instanceof P4))
              throw A4;
            return A4.Ka;
          }
        }, k: function(a5, b4, c4, d5, f4) {
          try {
            b4 = c4 + 2097152 >>> 0 < 4194305 - !!b4 ? (b4 >>> 0) + 4294967296 * c4 : NaN;
            if (isNaN(b4))
              return 61;
            var h5 = X3(a5);
            Yb(h5, b4, d5);
            O4 = [h5.position >>> 0, (N3 = h5.position, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
            F4[f4 >> 2] = O4[0];
            F4[f4 + 4 >> 2] = O4[1];
            h5.hb && 0 === b4 && 0 === d5 && (h5.hb = null);
            return 0;
          } catch (k5) {
            if ("undefined" == typeof W2 || !(k5 instanceof P4))
              throw k5;
            return k5.Ka;
          }
        }, C: function(a5) {
          try {
            var b4 = X3(a5);
            return b4.Ha && b4.Ha.fsync ? b4.Ha.fsync(b4) : 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return c4.Ka;
          }
        }, r: function(a5, b4, c4, d5) {
          try {
            a: {
              var f4 = X3(a5);
              a5 = b4;
              for (var h5 = b4 = 0; h5 < c4; h5++) {
                var k5 = J2[a5 >> 2], q5 = J2[a5 + 4 >> 2];
                a5 += 8;
                var x5 = ka(f4, r3, k5, q5);
                if (0 > x5) {
                  var w5 = -1;
                  break a;
                }
                b4 += x5;
              }
              w5 = b4;
            }
            J2[d5 >> 2] = w5;
            return 0;
          } catch (A4) {
            if ("undefined" == typeof W2 || !(A4 instanceof P4))
              throw A4;
            return A4.Ka;
          }
        } };
        (function() {
          function a5(f4) {
            e4.asm = f4.exports;
            Ja = e4.asm.I;
            Ra();
            K3 = e4.asm.Aa;
            Ta.unshift(e4.asm.J);
            Wa--;
            e4.monitorRunDependencies && e4.monitorRunDependencies(Wa);
            0 == Wa && (null !== Xa && (clearInterval(Xa), Xa = null), Ya && (f4 = Ya, Ya = null, f4()));
          }
          function b4(f4) {
            a5(f4.instance);
          }
          function c4(f4) {
            return bb().then(function(h5) {
              return WebAssembly.instantiate(h5, d5);
            }).then(function(h5) {
              return h5;
            }).then(f4, function(h5) {
              Ha("failed to asynchronously prepare wasm: " + h5);
              E4(h5);
            });
          }
          var d5 = { a: Wc };
          Wa++;
          e4.monitorRunDependencies && e4.monitorRunDependencies(Wa);
          if (e4.instantiateWasm)
            try {
              return e4.instantiateWasm(d5, a5);
            } catch (f4) {
              return Ha("Module.instantiateWasm callback failed with error: " + f4), false;
            }
          (function() {
            return Ia || "function" != typeof WebAssembly.instantiateStreaming || Za() || M5.startsWith("file://") || Aa || "function" != typeof fetch ? c4(b4) : fetch(M5, { credentials: "same-origin" }).then(function(f4) {
              return WebAssembly.instantiateStreaming(f4, d5).then(b4, function(h5) {
                Ha("wasm streaming compile failed: " + h5);
                Ha("falling back to ArrayBuffer instantiation");
                return c4(b4);
              });
            });
          })();
          return {};
        })();
        e4.___wasm_call_ctors = function() {
          return (e4.___wasm_call_ctors = e4.asm.J).apply(null, arguments);
        };
        e4._sqlite3_free = function() {
          return (e4._sqlite3_free = e4.asm.K).apply(null, arguments);
        };
        e4._sqlite3_value_double = function() {
          return (e4._sqlite3_value_double = e4.asm.L).apply(null, arguments);
        };
        e4._sqlite3_value_text = function() {
          return (e4._sqlite3_value_text = e4.asm.M).apply(null, arguments);
        };
        var Vc = e4.___errno_location = function() {
          return (Vc = e4.___errno_location = e4.asm.N).apply(null, arguments);
        };
        e4._sqlite3_prepare_v2 = function() {
          return (e4._sqlite3_prepare_v2 = e4.asm.O).apply(null, arguments);
        };
        e4._sqlite3_step = function() {
          return (e4._sqlite3_step = e4.asm.P).apply(null, arguments);
        };
        e4._sqlite3_finalize = function() {
          return (e4._sqlite3_finalize = e4.asm.Q).apply(null, arguments);
        };
        e4._sqlite3_reset = function() {
          return (e4._sqlite3_reset = e4.asm.R).apply(null, arguments);
        };
        e4._sqlite3_value_int = function() {
          return (e4._sqlite3_value_int = e4.asm.S).apply(null, arguments);
        };
        e4._sqlite3_clear_bindings = function() {
          return (e4._sqlite3_clear_bindings = e4.asm.T).apply(null, arguments);
        };
        e4._sqlite3_value_blob = function() {
          return (e4._sqlite3_value_blob = e4.asm.U).apply(null, arguments);
        };
        e4._sqlite3_value_bytes = function() {
          return (e4._sqlite3_value_bytes = e4.asm.V).apply(null, arguments);
        };
        e4._sqlite3_value_type = function() {
          return (e4._sqlite3_value_type = e4.asm.W).apply(null, arguments);
        };
        e4._sqlite3_result_blob = function() {
          return (e4._sqlite3_result_blob = e4.asm.X).apply(null, arguments);
        };
        e4._sqlite3_result_double = function() {
          return (e4._sqlite3_result_double = e4.asm.Y).apply(null, arguments);
        };
        e4._sqlite3_result_error = function() {
          return (e4._sqlite3_result_error = e4.asm.Z).apply(null, arguments);
        };
        e4._sqlite3_result_int = function() {
          return (e4._sqlite3_result_int = e4.asm._).apply(null, arguments);
        };
        e4._sqlite3_result_int64 = function() {
          return (e4._sqlite3_result_int64 = e4.asm.$).apply(null, arguments);
        };
        e4._sqlite3_result_null = function() {
          return (e4._sqlite3_result_null = e4.asm.aa).apply(null, arguments);
        };
        e4._sqlite3_result_text = function() {
          return (e4._sqlite3_result_text = e4.asm.ba).apply(null, arguments);
        };
        e4._sqlite3_sql = function() {
          return (e4._sqlite3_sql = e4.asm.ca).apply(null, arguments);
        };
        e4._sqlite3_aggregate_context = function() {
          return (e4._sqlite3_aggregate_context = e4.asm.da).apply(null, arguments);
        };
        e4._sqlite3_column_count = function() {
          return (e4._sqlite3_column_count = e4.asm.ea).apply(null, arguments);
        };
        e4._sqlite3_data_count = function() {
          return (e4._sqlite3_data_count = e4.asm.fa).apply(null, arguments);
        };
        e4._sqlite3_column_blob = function() {
          return (e4._sqlite3_column_blob = e4.asm.ga).apply(null, arguments);
        };
        e4._sqlite3_column_bytes = function() {
          return (e4._sqlite3_column_bytes = e4.asm.ha).apply(null, arguments);
        };
        e4._sqlite3_column_double = function() {
          return (e4._sqlite3_column_double = e4.asm.ia).apply(null, arguments);
        };
        e4._sqlite3_column_text = function() {
          return (e4._sqlite3_column_text = e4.asm.ja).apply(null, arguments);
        };
        e4._sqlite3_column_type = function() {
          return (e4._sqlite3_column_type = e4.asm.ka).apply(null, arguments);
        };
        e4._sqlite3_column_name = function() {
          return (e4._sqlite3_column_name = e4.asm.la).apply(null, arguments);
        };
        e4._sqlite3_bind_blob = function() {
          return (e4._sqlite3_bind_blob = e4.asm.ma).apply(null, arguments);
        };
        e4._sqlite3_bind_double = function() {
          return (e4._sqlite3_bind_double = e4.asm.na).apply(null, arguments);
        };
        e4._sqlite3_bind_int = function() {
          return (e4._sqlite3_bind_int = e4.asm.oa).apply(null, arguments);
        };
        e4._sqlite3_bind_text = function() {
          return (e4._sqlite3_bind_text = e4.asm.pa).apply(null, arguments);
        };
        e4._sqlite3_bind_parameter_index = function() {
          return (e4._sqlite3_bind_parameter_index = e4.asm.qa).apply(null, arguments);
        };
        e4._sqlite3_normalized_sql = function() {
          return (e4._sqlite3_normalized_sql = e4.asm.ra).apply(null, arguments);
        };
        e4._sqlite3_errmsg = function() {
          return (e4._sqlite3_errmsg = e4.asm.sa).apply(null, arguments);
        };
        e4._sqlite3_exec = function() {
          return (e4._sqlite3_exec = e4.asm.ta).apply(null, arguments);
        };
        e4._sqlite3_changes = function() {
          return (e4._sqlite3_changes = e4.asm.ua).apply(null, arguments);
        };
        e4._sqlite3_close_v2 = function() {
          return (e4._sqlite3_close_v2 = e4.asm.va).apply(null, arguments);
        };
        e4._sqlite3_create_function_v2 = function() {
          return (e4._sqlite3_create_function_v2 = e4.asm.wa).apply(null, arguments);
        };
        e4._sqlite3_open = function() {
          return (e4._sqlite3_open = e4.asm.xa).apply(null, arguments);
        };
        var da = e4._malloc = function() {
          return (da = e4._malloc = e4.asm.ya).apply(null, arguments);
        }, ba = e4._free = function() {
          return (ba = e4._free = e4.asm.za).apply(null, arguments);
        };
        e4._RegisterExtensionFunctions = function() {
          return (e4._RegisterExtensionFunctions = e4.asm.Ba).apply(null, arguments);
        };
        var zb = e4._emscripten_builtin_memalign = function() {
          return (zb = e4._emscripten_builtin_memalign = e4.asm.Ca).apply(null, arguments);
        }, oa = e4.stackSave = function() {
          return (oa = e4.stackSave = e4.asm.Da).apply(null, arguments);
        }, qa = e4.stackRestore = function() {
          return (qa = e4.stackRestore = e4.asm.Ea).apply(null, arguments);
        }, B5 = e4.stackAlloc = function() {
          return (B5 = e4.stackAlloc = e4.asm.Fa).apply(null, arguments);
        };
        e4.UTF8ToString = C3;
        e4.stackAlloc = B5;
        e4.stackSave = oa;
        e4.stackRestore = qa;
        e4.cwrap = function(a5, b4, c4, d5) {
          c4 = c4 || [];
          var f4 = c4.every((h5) => "number" === h5 || "boolean" === h5);
          return "string" !== b4 && f4 && !d5 ? e4["_" + a5] : function() {
            return Uc(a5, b4, c4, arguments);
          };
        };
        var Xc;
        Ya = function Yc() {
          Xc || Zc();
          Xc || (Ya = Yc);
        };
        function Zc() {
          function a5() {
            if (!Xc && (Xc = true, e4.calledRun = true, !Ka)) {
              e4.noFSInit || ac || (ac = true, $b(), e4.stdin = e4.stdin, e4.stdout = e4.stdout, e4.stderr = e4.stderr, e4.stdin ? cc("stdin", e4.stdin) : Sb("/dev/tty", "/dev/stdin"), e4.stdout ? cc("stdout", null, e4.stdout) : Sb("/dev/tty", "/dev/stdout"), e4.stderr ? cc("stderr", null, e4.stderr) : Sb("/dev/tty1", "/dev/stderr"), ja("/dev/stdin", 0), ja("/dev/stdout", 1), ja("/dev/stderr", 1));
              Db = false;
              cb(Ta);
              if (e4.onRuntimeInitialized)
                e4.onRuntimeInitialized();
              if (e4.postRun)
                for ("function" == typeof e4.postRun && (e4.postRun = [e4.postRun]); e4.postRun.length; ) {
                  var b4 = e4.postRun.shift();
                  Ua.unshift(b4);
                }
              cb(Ua);
            }
          }
          if (!(0 < Wa)) {
            if (e4.preRun)
              for ("function" == typeof e4.preRun && (e4.preRun = [e4.preRun]); e4.preRun.length; )
                Va();
            cb(Sa);
            0 < Wa || (e4.setStatus ? (e4.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                e4.setStatus("");
              }, 1);
              a5();
            }, 1)) : a5());
          }
        }
        if (e4.preInit)
          for ("function" == typeof e4.preInit && (e4.preInit = [e4.preInit]); 0 < e4.preInit.length; )
            e4.preInit.pop()();
        Zc();
        return Module;
      });
      return initSqlJsPromise;
    };
    if (typeof exports === "object" && typeof module2 === "object") {
      module2.exports = initSqlJs2;
      module2.exports.default = initSqlJs2;
    } else if (typeof define === "function" && define["amd"]) {
      define([], function() {
        return initSqlJs2;
      });
    } else if (typeof exports === "object") {
      exports["Module"] = initSqlJs2;
    }
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MakeMDPlugin
});
module.exports = __toCommonJS(main_exports);

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/flowEditor.tsx
var import_state6 = require("@codemirror/state");
var import_view3 = require("@codemirror/view");

// src/adapters/obsidian/ui/editors/markdownView/tooltip.ts
var import_state = require("@codemirror/state");
var import_view = require("@codemirror/view");
var ios = typeof navigator != "undefined" && !/Edge\/(\d+)/.exec(navigator.userAgent) && /Apple Computer/.test(navigator.vendor) && (/Mobile\/\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);
var Outside = "-10000px";
var TooltipViewManager = class {
  constructor(view, facet, createTooltipView) {
    this.facet = facet;
    this.createTooltipView = createTooltipView;
    this.input = view.state.facet(facet);
    this.tooltips = this.input.filter((t4) => t4);
    this.tooltipViews = this.tooltips.map(createTooltipView);
  }
  update(update) {
    if (update.focusChanged && !update.view.hasFocus) {
      const input2 = update.state.facet(this.facet);
      for (const t4 of this.tooltipViews)
        t4.dom.remove();
      this.input = input2;
      this.tooltips = [];
      this.tooltipViews = [];
      return true;
    }
    const input = update.state.facet(this.facet);
    const tooltips2 = input.filter((x5) => x5);
    if (input === this.input) {
      for (const t4 of this.tooltipViews)
        if (t4.update)
          t4.update(update);
      return false;
    }
    const tooltipViews = [];
    for (let i4 = 0; i4 < tooltips2.length; i4++) {
      const tip = tooltips2[i4];
      let known = -1;
      if (!tip)
        continue;
      for (let i5 = 0; i5 < this.tooltips.length; i5++) {
        const other = this.tooltips[i5];
        if (other && other.create == tip.create)
          known = i5;
      }
      if (known < 0) {
        tooltipViews[i4] = this.createTooltipView(tip);
      } else {
        const tooltipView = tooltipViews[i4] = this.tooltipViews[known];
        if (tooltipView.update)
          tooltipView.update(update);
      }
    }
    for (const t4 of this.tooltipViews)
      if (tooltipViews.indexOf(t4) < 0)
        t4.dom.remove();
    this.input = input;
    this.tooltips = tooltips2;
    this.tooltipViews = tooltipViews;
    return true;
  }
};
function tooltips(config = {}) {
  return tooltipConfig.of(config);
}
function windowSpace() {
  return { top: 0, left: 0, bottom: innerHeight, right: innerWidth };
}
var tooltipConfig = import_state.Facet.define({
  combine: (values) => {
    var _a2, _b2, _c2;
    return {
      position: ios ? "absolute" : ((_a2 = values.find((conf) => conf.position)) == null ? void 0 : _a2.position) || "fixed",
      parent: ((_b2 = values.find((conf) => conf.parent)) == null ? void 0 : _b2.parent) || null,
      tooltipSpace: ((_c2 = values.find((conf) => conf.tooltipSpace)) == null ? void 0 : _c2.tooltipSpace) || windowSpace
    };
  }
});
var tooltipPlugin = import_view.ViewPlugin.fromClass(
  class {
    constructor(view) {
      this.view = view;
      this.inView = true;
      this.lastTransaction = 0;
      this.measureTimeout = -1;
      var _a2;
      const config = view.state.facet(tooltipConfig);
      this.position = config.position;
      this.parent = config.parent;
      this.classes = view.themeClasses;
      this.createContainer();
      this.measureReq = {
        read: this.readMeasure.bind(this),
        write: this.writeMeasure.bind(this),
        key: this
      };
      this.manager = new TooltipViewManager(
        view,
        showTooltip,
        (t4) => this.createTooltip(t4)
      );
      this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver(
        (entries) => {
          if (Date.now() > this.lastTransaction - 50 && entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)
            this.measureSoon();
        },
        { threshold: [1] }
      ) : null;
      this.observeIntersection();
      (_a2 = view.dom.ownerDocument.defaultView) == null ? void 0 : _a2.addEventListener(
        "resize",
        this.measureSoon = this.measureSoon.bind(this)
      );
      this.maybeMeasure();
    }
    createContainer() {
      if (this.parent) {
        this.container = document.createElement("div");
        this.container.style.position = "relative";
        this.container.className = this.view.themeClasses;
        this.parent.appendChild(this.container);
      } else {
        this.container = this.view.dom;
      }
    }
    observeIntersection() {
      if (this.intersectionObserver) {
        this.intersectionObserver.disconnect();
        for (const tooltip of this.manager.tooltipViews)
          this.intersectionObserver.observe(tooltip.dom);
      }
    }
    measureSoon() {
      if (this.measureTimeout < 0)
        this.measureTimeout = setTimeout(() => {
          this.measureTimeout = -1;
          this.maybeMeasure();
        }, 50);
    }
    update(update) {
      if (update.transactions.length)
        this.lastTransaction = Date.now();
      const updated = this.manager.update(update);
      if (updated)
        this.observeIntersection();
      let shouldMeasure = updated || update.geometryChanged;
      const newConfig = update.state.facet(tooltipConfig);
      if (newConfig.position != this.position) {
        this.position = newConfig.position;
        for (const t4 of this.manager.tooltipViews)
          t4.dom.style.position = this.position;
        shouldMeasure = true;
      }
      if (newConfig.parent != this.parent) {
        if (this.parent)
          this.container.remove();
        this.parent = newConfig.parent;
        this.createContainer();
        for (const t4 of this.manager.tooltipViews)
          this.container.appendChild(t4.dom);
        shouldMeasure = true;
      } else if (this.parent && this.view.themeClasses != this.classes) {
        this.classes = this.container.className = this.view.themeClasses;
      }
      if (shouldMeasure)
        this.maybeMeasure();
    }
    createTooltip(tooltip) {
      const tooltipView = tooltip.create(this.view);
      tooltipView.dom.classList.add("cm-tooltip");
      if (tooltip.arrow && !tooltipView.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
        const arrow = document.createElement("div");
        arrow.className = "cm-tooltip-arrow";
        tooltipView.dom.appendChild(arrow);
      }
      tooltipView.dom.style.position = this.position;
      tooltipView.dom.style.top = Outside;
      this.container.appendChild(tooltipView.dom);
      if (tooltipView.mount)
        tooltipView.mount(this.view);
      return tooltipView;
    }
    destroy() {
      var _a2, _b2;
      (_a2 = this.view.dom.ownerDocument.defaultView) == null ? void 0 : _a2.removeEventListener(
        "resize",
        this.measureSoon
      );
      for (const { dom } of this.manager.tooltipViews)
        dom.remove();
      (_b2 = this.intersectionObserver) == null ? void 0 : _b2.disconnect();
      clearTimeout(this.measureTimeout);
    }
    readMeasure() {
      const editor = this.view.dom.getBoundingClientRect();
      return {
        editor,
        parent: this.parent ? this.container.getBoundingClientRect() : editor,
        pos: this.manager.tooltips.map((t4, i4) => {
          const tv = this.manager.tooltipViews[i4];
          return tv.getCoords ? tv.getCoords(t4.pos) : this.view.coordsAtPos(t4.pos);
        }),
        size: this.manager.tooltipViews.map(
          ({ dom }) => {
            const size = dom.getBoundingClientRect();
            return size;
          }
        ),
        space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view)
      };
    }
    writeMeasure(measured) {
      const { editor, space } = measured;
      const others = [];
      for (let i4 = 0; i4 < this.manager.tooltips.length; i4++) {
        const tooltip = this.manager.tooltips[i4], tView = this.manager.tooltipViews[i4], { dom } = tView;
        const pos = measured.pos[i4], size = measured.size[i4];
        if (!pos || pos.bottom <= Math.max(editor.top, space.top) || pos.top >= Math.min(editor.bottom, space.bottom) || pos.right < Math.max(editor.left, space.left) - 0.1 || pos.left > Math.min(editor.right, space.right) + 0.1) {
          dom.style.top = Outside;
          continue;
        }
        const arrow = tooltip.arrow ? tView.dom.querySelector(".cm-tooltip-arrow") : null;
        const arrowHeight = arrow ? 7 /* Size */ : 0;
        const width = size.right - size.left, height = size.bottom - size.top;
        const offset2 = tView.offset || noOffset, ltr = this.view.textDirection == import_view.Direction.LTR;
        const left = size.width > space.right - space.left ? ltr ? space.left : space.right - size.width : ltr ? Math.min(
          pos.left - (arrow ? 14 /* Offset */ : 0) + offset2.x,
          space.right - width
        ) : Math.max(
          space.left,
          pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset2.x
        );
        let above = !!tooltip.above;
        if (!tooltip.strictSide && (above ? pos.top - (size.bottom - size.top) - offset2.y < space.top : pos.bottom + (size.bottom - size.top) + offset2.y > space.bottom) && above == space.bottom - pos.bottom > pos.top - space.top)
          above = !above;
        let top = above ? pos.top - height - arrowHeight - offset2.y : pos.bottom + arrowHeight + offset2.y;
        const right = left + width;
        if (tView.overlap !== true) {
          for (const r3 of others)
            if (r3.left < right && r3.right > left && r3.top < top + height && r3.bottom > top)
              top = above ? r3.top - height - 2 - arrowHeight : r3.bottom + arrowHeight + 2;
        }
        const computeFrameOffset = (win, rect) => {
          const { top: top2, right: right2, bottom, left: left2, width: width2, height: height2, x: x5, y: y5 } = rect;
          const dims = { top: top2, right: right2, bottom, left: left2 };
          if (typeof dims === "undefined") {
            const dims2 = { top: 0, left: 0 };
          }
          const frames = win.parent.document.getElementsByTagName("iframe");
          let frame;
          let found = false;
          for (let i5 = 0, len = frames.length; i5 < len; i5++) {
            frame = frames[i5];
            if (frame.contentWindow == win) {
              found = true;
              break;
            }
          }
          if (found) {
            const rect2 = frame.getBoundingClientRect();
            dims.left += rect2.left;
            dims.top += rect2.top;
            if (win !== top2) {
              computeFrameOffset(win.parent, rect2);
            }
          } else {
            return { top: 0, left: 0 };
          }
          return dims;
        };
        const viewCoords = computeFrameOffset(this.view.dom.ownerDocument.defaultView, editor);
        if (this.position == "absolute") {
          dom.style.top = viewCoords.top + top - measured.parent.top + "px";
          dom.style.left = viewCoords.left + left - measured.parent.left + "px";
        } else {
          dom.style.top = viewCoords.top + top + "px";
          dom.style.left = viewCoords.left + left + "px";
        }
        if (arrow)
          arrow.style.left = `${pos.left + (ltr ? offset2.x : -offset2.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;
        if (tView.overlap !== true)
          others.push({ left, top, right, bottom: top + height });
        dom.classList.toggle("cm-tooltip-above", above);
        dom.classList.toggle("cm-tooltip-below", !above);
        if (tView.positioned)
          tView.positioned();
      }
    }
    maybeMeasure() {
      if (this.manager.tooltips.length) {
        if (this.view.inView)
          this.view.requestMeasure(this.measureReq);
        if (this.inView != this.view.inView) {
          this.inView = this.view.inView;
          if (!this.inView)
            for (const tv of this.manager.tooltipViews)
              tv.dom.style.top = Outside;
        }
      }
    }
  },
  {
    eventHandlers: {
      scroll() {
        this.maybeMeasure();
      }
    }
  }
);
var baseTheme = import_view.EditorView.baseTheme({
  ".cm-tooltip": {
    zIndex: 100
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: `${7 /* Size */}px`,
    width: `${7 /* Size */ * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: `${7 /* Size */}px solid transparent`,
      borderRight: `${7 /* Size */}px solid transparent`
    },
    ".cm-tooltip-above &": {
      bottom: `-${7 /* Size */}px`,
      "&:before": {
        borderTop: `${7 /* Size */}px solid #bbb`
      },
      "&:after": {
        borderTop: `${7 /* Size */}px solid #f5f5f5`,
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: `-${7 /* Size */}px`,
      "&:before": {
        borderBottom: `${7 /* Size */}px solid #bbb`
      },
      "&:after": {
        borderBottom: `${7 /* Size */}px solid #f5f5f5`,
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
});
var noOffset = { x: 0, y: 0 };
var showTooltip = import_state.Facet.define({
  enables: [tooltipPlugin, baseTheme]
});
var showHoverTooltip = import_state.Facet.define();
var HoverTooltipHost = class {
  constructor(view) {
    this.view = view;
    this.mounted = false;
    this.dom = document.createElement("div");
    this.dom.classList.add("cm-tooltip-hover");
    this.manager = new TooltipViewManager(
      view,
      showHoverTooltip,
      (t4) => this.createHostedView(t4)
    );
  }
  static create(view) {
    return new HoverTooltipHost(view);
  }
  createHostedView(tooltip) {
    const hostedView = tooltip.create(this.view);
    hostedView.dom.classList.add("cm-tooltip-section");
    this.dom.appendChild(hostedView.dom);
    if (this.mounted && hostedView.mount)
      hostedView.mount(this.view);
    return hostedView;
  }
  mount(view) {
    for (const hostedView of this.manager.tooltipViews) {
      if (hostedView.mount)
        hostedView.mount(view);
    }
    this.mounted = true;
  }
  positioned() {
    for (const hostedView of this.manager.tooltipViews) {
      if (hostedView.positioned)
        hostedView.positioned();
    }
  }
  update(update) {
    this.manager.update(update);
  }
};
var showHoverTooltipHost = showTooltip.compute(
  [showHoverTooltip],
  (state) => {
    const tooltips2 = state.facet(showHoverTooltip).filter((t4) => t4);
    if (tooltips2.length === 0)
      return null;
    return {
      pos: Math.min(...tooltips2.map((t4) => t4.pos)),
      end: Math.max(
        ...tooltips2.filter((t4) => t4.end != null).map((t4) => t4.end)
      ),
      create: HoverTooltipHost.create,
      above: tooltips2[0].above,
      arrow: tooltips2.some((t4) => t4.arrow)
    };
  }
);
var HoverPlugin = class {
  constructor(view, source, field, setHover, hoverTime) {
    this.view = view;
    this.source = source;
    this.field = field;
    this.setHover = setHover;
    this.hoverTime = hoverTime;
    this.hoverTimeout = -1;
    this.restartTimeout = -1;
    this.pending = null;
    this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };
    this.checkHover = this.checkHover.bind(this);
    view.dom.addEventListener(
      "mouseleave",
      this.mouseleave = this.mouseleave.bind(this)
    );
    view.dom.addEventListener(
      "mousemove",
      this.mousemove = this.mousemove.bind(this)
    );
  }
  update() {
    if (this.pending) {
      this.pending = null;
      clearTimeout(this.restartTimeout);
      this.restartTimeout = setTimeout(() => this.startHover(), 20);
    }
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    this.hoverTimeout = -1;
    if (this.active)
      return;
    const hovered = Date.now() - this.lastMove.time;
    if (hovered < this.hoverTime)
      this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);
    else
      this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    const { lastMove } = this;
    const pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;
    if (pos == null)
      return;
    const posCoords = this.view.coordsAtPos(pos);
    if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom || lastMove.x < posCoords.left - this.view.defaultCharacterWidth || lastMove.x > posCoords.right + this.view.defaultCharacterWidth)
      return;
    const bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find((s5) => s5.from <= pos && s5.to >= pos);
    const rtl = bidi && bidi.dir == import_view.Direction.RTL ? -1 : 1;
    const open = this.source(
      this.view,
      pos,
      lastMove.x < posCoords.left ? -rtl : rtl
    );
    if (open == null ? void 0 : open.then) {
      const pending = this.pending = { pos };
      open.then(
        (result) => {
          if (this.pending == pending) {
            this.pending = null;
            if (result)
              this.view.dispatch({ effects: this.setHover.of(result) });
          }
        },
        (e4) => (0, import_view.logException)(this.view.state, e4, "hover tooltip")
      );
    } else if (open) {
      this.view.dispatch({ effects: this.setHover.of(open) });
    }
  }
  mousemove(event) {
    var _a2;
    this.lastMove = {
      x: event.clientX,
      y: event.clientY,
      target: event.target,
      time: Date.now()
    };
    if (this.hoverTimeout < 0)
      this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);
    const tooltip = this.active;
    if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {
      const { pos } = tooltip || this.pending, end = (_a2 = tooltip == null ? void 0 : tooltip.end) != null ? _a2 : pos;
      if (pos == end ? this.view.posAtCoords(this.lastMove) != pos : !isOverRange(
        this.view,
        pos,
        end,
        event.clientX,
        event.clientY,
        6 /* MaxDist */
      )) {
        this.view.dispatch({ effects: this.setHover.of(null) });
        this.pending = null;
      }
    }
  }
  mouseleave(e4) {
    clearTimeout(this.hoverTimeout);
    this.hoverTimeout = -1;
    if (this.active && !isInTooltip(e4.relatedTarget))
      this.view.dispatch({ effects: this.setHover.of(null) });
  }
  destroy() {
    clearTimeout(this.hoverTimeout);
    this.view.dom.removeEventListener("mouseleave", this.mouseleave);
    this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
};
function isInTooltip(elt) {
  for (let cur = elt; cur; cur = cur.parentNode)
    if (cur.nodeType == 1 && cur.classList.contains("cm-tooltip"))
      return true;
  return false;
}
function isOverRange(view, from, to, x5, y5, margin) {
  const range = document.createRange();
  const fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);
  range.setEnd(toDOM.node, toDOM.offset);
  range.setStart(fromDOM.node, fromDOM.offset);
  const rects = range.getClientRects();
  range.detach();
  for (let i4 = 0; i4 < rects.length; i4++) {
    const rect = rects[i4];
    const dist = Math.max(
      rect.top - y5,
      y5 - rect.bottom,
      rect.left - x5,
      x5 - rect.right
    );
    if (dist <= margin)
      return true;
  }
  return false;
}
function hoverTooltip(source, options = {}) {
  const setHover = import_state.StateEffect.define();
  const hoverState = import_state.StateField.define({
    create() {
      return null;
    },
    update(value, tr) {
      if (value && options.hideOnChange && (tr.docChanged || tr.selection))
        return null;
      for (const effect of tr.effects) {
        if (effect.is(setHover)) {
          return effect.value;
        }
        if (effect.is(closeHoverTooltipEffect))
          return null;
      }
      if (value && tr.docChanged) {
        const newPos = tr.changes.mapPos(value.pos, -1, import_state.MapMode.TrackDel);
        if (newPos == null)
          return null;
        const copy = Object.assign(/* @__PURE__ */ Object.create(null), value);
        copy.pos = newPos;
        if (value.end != null)
          copy.end = tr.changes.mapPos(value.end);
        return copy;
      }
      return value;
    },
    provide: (f4) => showHoverTooltip.from(f4)
  });
  return [
    hoverState,
    import_view.ViewPlugin.define(
      (view) => new HoverPlugin(
        view,
        source,
        hoverState,
        setHover,
        options.hoverTime || 300 /* Time */
      )
    ),
    showHoverTooltipHost
  ];
}
var closeHoverTooltipEffect = import_state.StateEffect.define();
var closeHoverTooltips = closeHoverTooltipEffect.of(null);

// src/adapters/obsidian/utils/codemirror.ts
var import_language = require("@codemirror/language");
var getActiveCM = (plugin) => {
  let rcm;
  plugin.app.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm == null ? void 0 : cm.hasFocus) {
      rcm = cm;
      return true;
    }
  }, plugin.app.workspace["rootSplit"]);
  return rcm;
};
var getActiveMarkdownView = (plugin) => {
  let rv;
  plugin.app.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm == null ? void 0 : cm.hasFocus) {
      rv = leaf.view;
      return true;
    }
  }, plugin.app.workspace["rootSplit"]);
  return rv;
};
function iterateTreeAtPos(pos, state, iterateFns) {
  (0, import_language.syntaxTree)(state).iterate({ ...iterateFns, from: pos, to: pos });
}
function iterateTreeInSelection(selection, state, iterateFns) {
  (0, import_language.syntaxTree)(state).iterate({
    ...iterateFns,
    from: selection.from,
    to: selection.to
  });
}

// node_modules/preact/dist/preact.module.js
var n;
var l;
var u;
var i;
var t;
var r;
var o;
var f;
var e;
var c = {};
var s = [];
var a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
function h(n2, l3) {
  for (var u4 in l3)
    n2[u4] = l3[u4];
  return n2;
}
function v(n2) {
  var l3 = n2.parentNode;
  l3 && l3.removeChild(n2);
}
function y(l3, u4, i4) {
  var t4, r3, o3, f4 = {};
  for (o3 in u4)
    "key" == o3 ? t4 = u4[o3] : "ref" == o3 ? r3 = u4[o3] : f4[o3] = u4[o3];
  if (arguments.length > 2 && (f4.children = arguments.length > 3 ? n.call(arguments, 2) : i4), "function" == typeof l3 && null != l3.defaultProps)
    for (o3 in l3.defaultProps)
      void 0 === f4[o3] && (f4[o3] = l3.defaultProps[o3]);
  return p(l3, f4, t4, r3, null);
}
function p(n2, i4, t4, r3, o3) {
  var f4 = { type: n2, props: i4, key: t4, ref: r3, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: null == o3 ? ++u : o3 };
  return null == o3 && null != l.vnode && l.vnode(f4), f4;
}
function d() {
  return { current: null };
}
function _(n2) {
  return n2.children;
}
function k(n2, l3) {
  this.props = n2, this.context = l3;
}
function b(n2, l3) {
  if (null == l3)
    return n2.__ ? b(n2.__, n2.__.__k.indexOf(n2) + 1) : null;
  for (var u4; l3 < n2.__k.length; l3++)
    if (null != (u4 = n2.__k[l3]) && null != u4.__e)
      return u4.__e;
  return "function" == typeof n2.type ? b(n2) : null;
}
function g(n2) {
  var l3, u4;
  if (null != (n2 = n2.__) && null != n2.__c) {
    for (n2.__e = n2.__c.base = null, l3 = 0; l3 < n2.__k.length; l3++)
      if (null != (u4 = n2.__k[l3]) && null != u4.__e) {
        n2.__e = n2.__c.base = u4.__e;
        break;
      }
    return g(n2);
  }
}
function m(n2) {
  (!n2.__d && (n2.__d = true) && t.push(n2) && !w.__r++ || r !== l.debounceRendering) && ((r = l.debounceRendering) || o)(w);
}
function w() {
  var n2, l3, u4, i4, r3, o3, e4, c4;
  for (t.sort(f); n2 = t.shift(); )
    n2.__d && (l3 = t.length, i4 = void 0, r3 = void 0, e4 = (o3 = (u4 = n2).__v).__e, (c4 = u4.__P) && (i4 = [], (r3 = h({}, o3)).__v = o3.__v + 1, L(c4, o3, r3, u4.__n, void 0 !== c4.ownerSVGElement, null != o3.__h ? [e4] : null, i4, null == e4 ? b(o3) : e4, o3.__h), M(i4, o3), o3.__e != e4 && g(o3)), t.length > l3 && t.sort(f));
  w.__r = 0;
}
function x(n2, l3, u4, i4, t4, r3, o3, f4, e4, a5) {
  var h5, v3, y5, d5, k5, g4, m5, w5 = i4 && i4.__k || s, x5 = w5.length;
  for (u4.__k = [], h5 = 0; h5 < l3.length; h5++)
    if (null != (d5 = u4.__k[h5] = null == (d5 = l3[h5]) || "boolean" == typeof d5 || "function" == typeof d5 ? null : "string" == typeof d5 || "number" == typeof d5 || "bigint" == typeof d5 ? p(null, d5, null, null, d5) : Array.isArray(d5) ? p(_, { children: d5 }, null, null, null) : d5.__b > 0 ? p(d5.type, d5.props, d5.key, d5.ref ? d5.ref : null, d5.__v) : d5)) {
      if (d5.__ = u4, d5.__b = u4.__b + 1, null === (y5 = w5[h5]) || y5 && d5.key == y5.key && d5.type === y5.type)
        w5[h5] = void 0;
      else
        for (v3 = 0; v3 < x5; v3++) {
          if ((y5 = w5[v3]) && d5.key == y5.key && d5.type === y5.type) {
            w5[v3] = void 0;
            break;
          }
          y5 = null;
        }
      L(n2, d5, y5 = y5 || c, t4, r3, o3, f4, e4, a5), k5 = d5.__e, (v3 = d5.ref) && y5.ref != v3 && (m5 || (m5 = []), y5.ref && m5.push(y5.ref, null, d5), m5.push(v3, d5.__c || k5, d5)), null != k5 ? (null == g4 && (g4 = k5), "function" == typeof d5.type && d5.__k === y5.__k ? d5.__d = e4 = A(d5, e4, n2) : e4 = C(n2, d5, y5, w5, k5, e4), "function" == typeof u4.type && (u4.__d = e4)) : e4 && y5.__e == e4 && e4.parentNode != n2 && (e4 = b(y5));
    }
  for (u4.__e = g4, h5 = x5; h5--; )
    null != w5[h5] && ("function" == typeof u4.type && null != w5[h5].__e && w5[h5].__e == u4.__d && (u4.__d = $(i4).nextSibling), S(w5[h5], w5[h5]));
  if (m5)
    for (h5 = 0; h5 < m5.length; h5++)
      O(m5[h5], m5[++h5], m5[++h5]);
}
function A(n2, l3, u4) {
  for (var i4, t4 = n2.__k, r3 = 0; t4 && r3 < t4.length; r3++)
    (i4 = t4[r3]) && (i4.__ = n2, l3 = "function" == typeof i4.type ? A(i4, l3, u4) : C(u4, i4, i4, t4, i4.__e, l3));
  return l3;
}
function P(n2, l3) {
  return l3 = l3 || [], null == n2 || "boolean" == typeof n2 || (Array.isArray(n2) ? n2.some(function(n3) {
    P(n3, l3);
  }) : l3.push(n2)), l3;
}
function C(n2, l3, u4, i4, t4, r3) {
  var o3, f4, e4;
  if (void 0 !== l3.__d)
    o3 = l3.__d, l3.__d = void 0;
  else if (null == u4 || t4 != r3 || null == t4.parentNode)
    n:
      if (null == r3 || r3.parentNode !== n2)
        n2.appendChild(t4), o3 = null;
      else {
        for (f4 = r3, e4 = 0; (f4 = f4.nextSibling) && e4 < i4.length; e4 += 1)
          if (f4 == t4)
            break n;
        n2.insertBefore(t4, r3), o3 = r3;
      }
  return void 0 !== o3 ? o3 : t4.nextSibling;
}
function $(n2) {
  var l3, u4, i4;
  if (null == n2.type || "string" == typeof n2.type)
    return n2.__e;
  if (n2.__k) {
    for (l3 = n2.__k.length - 1; l3 >= 0; l3--)
      if ((u4 = n2.__k[l3]) && (i4 = $(u4)))
        return i4;
  }
  return null;
}
function H(n2, l3, u4, i4, t4) {
  var r3;
  for (r3 in u4)
    "children" === r3 || "key" === r3 || r3 in l3 || T(n2, r3, null, u4[r3], i4);
  for (r3 in l3)
    t4 && "function" != typeof l3[r3] || "children" === r3 || "key" === r3 || "value" === r3 || "checked" === r3 || u4[r3] === l3[r3] || T(n2, r3, l3[r3], u4[r3], i4);
}
function I(n2, l3, u4) {
  "-" === l3[0] ? n2.setProperty(l3, null == u4 ? "" : u4) : n2[l3] = null == u4 ? "" : "number" != typeof u4 || a.test(l3) ? u4 : u4 + "px";
}
function T(n2, l3, u4, i4, t4) {
  var r3;
  n:
    if ("style" === l3)
      if ("string" == typeof u4)
        n2.style.cssText = u4;
      else {
        if ("string" == typeof i4 && (n2.style.cssText = i4 = ""), i4)
          for (l3 in i4)
            u4 && l3 in u4 || I(n2.style, l3, "");
        if (u4)
          for (l3 in u4)
            i4 && u4[l3] === i4[l3] || I(n2.style, l3, u4[l3]);
      }
    else if ("o" === l3[0] && "n" === l3[1])
      r3 = l3 !== (l3 = l3.replace(/Capture$/, "")), l3 = l3.toLowerCase() in n2 ? l3.toLowerCase().slice(2) : l3.slice(2), n2.l || (n2.l = {}), n2.l[l3 + r3] = u4, u4 ? i4 || n2.addEventListener(l3, r3 ? z : j, r3) : n2.removeEventListener(l3, r3 ? z : j, r3);
    else if ("dangerouslySetInnerHTML" !== l3) {
      if (t4)
        l3 = l3.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
      else if ("width" !== l3 && "height" !== l3 && "href" !== l3 && "list" !== l3 && "form" !== l3 && "tabIndex" !== l3 && "download" !== l3 && l3 in n2)
        try {
          n2[l3] = null == u4 ? "" : u4;
          break n;
        } catch (n3) {
        }
      "function" == typeof u4 || (null == u4 || false === u4 && -1 == l3.indexOf("-") ? n2.removeAttribute(l3) : n2.setAttribute(l3, u4));
    }
}
function j(n2) {
  return this.l[n2.type + false](l.event ? l.event(n2) : n2);
}
function z(n2) {
  return this.l[n2.type + true](l.event ? l.event(n2) : n2);
}
function L(n2, u4, i4, t4, r3, o3, f4, e4, c4) {
  var s5, a5, v3, y5, p3, d5, b4, g4, m5, w5, A4, P4, C3, $3, H5, I4 = u4.type;
  if (void 0 !== u4.constructor)
    return null;
  null != i4.__h && (c4 = i4.__h, e4 = u4.__e = i4.__e, u4.__h = null, o3 = [e4]), (s5 = l.__b) && s5(u4);
  try {
    n:
      if ("function" == typeof I4) {
        if (g4 = u4.props, m5 = (s5 = I4.contextType) && t4[s5.__c], w5 = s5 ? m5 ? m5.props.value : s5.__ : t4, i4.__c ? b4 = (a5 = u4.__c = i4.__c).__ = a5.__E : ("prototype" in I4 && I4.prototype.render ? u4.__c = a5 = new I4(g4, w5) : (u4.__c = a5 = new k(g4, w5), a5.constructor = I4, a5.render = q), m5 && m5.sub(a5), a5.props = g4, a5.state || (a5.state = {}), a5.context = w5, a5.__n = t4, v3 = a5.__d = true, a5.__h = [], a5._sb = []), null == a5.__s && (a5.__s = a5.state), null != I4.getDerivedStateFromProps && (a5.__s == a5.state && (a5.__s = h({}, a5.__s)), h(a5.__s, I4.getDerivedStateFromProps(g4, a5.__s))), y5 = a5.props, p3 = a5.state, a5.__v = u4, v3)
          null == I4.getDerivedStateFromProps && null != a5.componentWillMount && a5.componentWillMount(), null != a5.componentDidMount && a5.__h.push(a5.componentDidMount);
        else {
          if (null == I4.getDerivedStateFromProps && g4 !== y5 && null != a5.componentWillReceiveProps && a5.componentWillReceiveProps(g4, w5), !a5.__e && null != a5.shouldComponentUpdate && false === a5.shouldComponentUpdate(g4, a5.__s, w5) || u4.__v === i4.__v) {
            for (u4.__v !== i4.__v && (a5.props = g4, a5.state = a5.__s, a5.__d = false), a5.__e = false, u4.__e = i4.__e, u4.__k = i4.__k, u4.__k.forEach(function(n3) {
              n3 && (n3.__ = u4);
            }), A4 = 0; A4 < a5._sb.length; A4++)
              a5.__h.push(a5._sb[A4]);
            a5._sb = [], a5.__h.length && f4.push(a5);
            break n;
          }
          null != a5.componentWillUpdate && a5.componentWillUpdate(g4, a5.__s, w5), null != a5.componentDidUpdate && a5.__h.push(function() {
            a5.componentDidUpdate(y5, p3, d5);
          });
        }
        if (a5.context = w5, a5.props = g4, a5.__P = n2, P4 = l.__r, C3 = 0, "prototype" in I4 && I4.prototype.render) {
          for (a5.state = a5.__s, a5.__d = false, P4 && P4(u4), s5 = a5.render(a5.props, a5.state, a5.context), $3 = 0; $3 < a5._sb.length; $3++)
            a5.__h.push(a5._sb[$3]);
          a5._sb = [];
        } else
          do {
            a5.__d = false, P4 && P4(u4), s5 = a5.render(a5.props, a5.state, a5.context), a5.state = a5.__s;
          } while (a5.__d && ++C3 < 25);
        a5.state = a5.__s, null != a5.getChildContext && (t4 = h(h({}, t4), a5.getChildContext())), v3 || null == a5.getSnapshotBeforeUpdate || (d5 = a5.getSnapshotBeforeUpdate(y5, p3)), H5 = null != s5 && s5.type === _ && null == s5.key ? s5.props.children : s5, x(n2, Array.isArray(H5) ? H5 : [H5], u4, i4, t4, r3, o3, f4, e4, c4), a5.base = u4.__e, u4.__h = null, a5.__h.length && f4.push(a5), b4 && (a5.__E = a5.__ = null), a5.__e = false;
      } else
        null == o3 && u4.__v === i4.__v ? (u4.__k = i4.__k, u4.__e = i4.__e) : u4.__e = N(i4.__e, u4, i4, t4, r3, o3, f4, c4);
    (s5 = l.diffed) && s5(u4);
  } catch (n3) {
    u4.__v = null, (c4 || null != o3) && (u4.__e = e4, u4.__h = !!c4, o3[o3.indexOf(e4)] = null), l.__e(n3, u4, i4);
  }
}
function M(n2, u4) {
  l.__c && l.__c(u4, n2), n2.some(function(u5) {
    try {
      n2 = u5.__h, u5.__h = [], n2.some(function(n3) {
        n3.call(u5);
      });
    } catch (n3) {
      l.__e(n3, u5.__v);
    }
  });
}
function N(l3, u4, i4, t4, r3, o3, f4, e4) {
  var s5, a5, h5, y5 = i4.props, p3 = u4.props, d5 = u4.type, _11 = 0;
  if ("svg" === d5 && (r3 = true), null != o3) {
    for (; _11 < o3.length; _11++)
      if ((s5 = o3[_11]) && "setAttribute" in s5 == !!d5 && (d5 ? s5.localName === d5 : 3 === s5.nodeType)) {
        l3 = s5, o3[_11] = null;
        break;
      }
  }
  if (null == l3) {
    if (null === d5)
      return document.createTextNode(p3);
    l3 = r3 ? document.createElementNS("http://www.w3.org/2000/svg", d5) : document.createElement(d5, p3.is && p3), o3 = null, e4 = false;
  }
  if (null === d5)
    y5 === p3 || e4 && l3.data === p3 || (l3.data = p3);
  else {
    if (o3 = o3 && n.call(l3.childNodes), a5 = (y5 = i4.props || c).dangerouslySetInnerHTML, h5 = p3.dangerouslySetInnerHTML, !e4) {
      if (null != o3)
        for (y5 = {}, _11 = 0; _11 < l3.attributes.length; _11++)
          y5[l3.attributes[_11].name] = l3.attributes[_11].value;
      (h5 || a5) && (h5 && (a5 && h5.__html == a5.__html || h5.__html === l3.innerHTML) || (l3.innerHTML = h5 && h5.__html || ""));
    }
    if (H(l3, p3, y5, r3, e4), h5)
      u4.__k = [];
    else if (_11 = u4.props.children, x(l3, Array.isArray(_11) ? _11 : [_11], u4, i4, t4, r3 && "foreignObject" !== d5, o3, f4, o3 ? o3[0] : i4.__k && b(i4, 0), e4), null != o3)
      for (_11 = o3.length; _11--; )
        null != o3[_11] && v(o3[_11]);
    e4 || ("value" in p3 && void 0 !== (_11 = p3.value) && (_11 !== l3.value || "progress" === d5 && !_11 || "option" === d5 && _11 !== y5.value) && T(l3, "value", _11, y5.value, false), "checked" in p3 && void 0 !== (_11 = p3.checked) && _11 !== l3.checked && T(l3, "checked", _11, y5.checked, false));
  }
  return l3;
}
function O(n2, u4, i4) {
  try {
    "function" == typeof n2 ? n2(u4) : n2.current = u4;
  } catch (n3) {
    l.__e(n3, i4);
  }
}
function S(n2, u4, i4) {
  var t4, r3;
  if (l.unmount && l.unmount(n2), (t4 = n2.ref) && (t4.current && t4.current !== n2.__e || O(t4, null, u4)), null != (t4 = n2.__c)) {
    if (t4.componentWillUnmount)
      try {
        t4.componentWillUnmount();
      } catch (n3) {
        l.__e(n3, u4);
      }
    t4.base = t4.__P = null, n2.__c = void 0;
  }
  if (t4 = n2.__k)
    for (r3 = 0; r3 < t4.length; r3++)
      t4[r3] && S(t4[r3], u4, i4 || "function" != typeof n2.type);
  i4 || null == n2.__e || v(n2.__e), n2.__ = n2.__e = n2.__d = void 0;
}
function q(n2, l3, u4) {
  return this.constructor(n2, u4);
}
function B(u4, i4, t4) {
  var r3, o3, f4;
  l.__ && l.__(u4, i4), o3 = (r3 = "function" == typeof t4) ? null : t4 && t4.__k || i4.__k, f4 = [], L(i4, u4 = (!r3 && t4 || i4).__k = y(_, null, [u4]), o3 || c, c, void 0 !== i4.ownerSVGElement, !r3 && t4 ? [t4] : o3 ? null : i4.firstChild ? n.call(i4.childNodes) : null, f4, !r3 && t4 ? t4 : o3 ? o3.__e : i4.firstChild, r3), M(f4, u4);
}
function D(n2, l3) {
  B(n2, l3, D);
}
function E(l3, u4, i4) {
  var t4, r3, o3, f4 = h({}, l3.props);
  for (o3 in u4)
    "key" == o3 ? t4 = u4[o3] : "ref" == o3 ? r3 = u4[o3] : f4[o3] = u4[o3];
  return arguments.length > 2 && (f4.children = arguments.length > 3 ? n.call(arguments, 2) : i4), p(l3.type, f4, t4 || l3.key, r3 || l3.ref, null);
}
function F(n2, l3) {
  var u4 = { __c: l3 = "__cC" + e++, __: n2, Consumer: function(n3, l4) {
    return n3.children(l4);
  }, Provider: function(n3) {
    var u5, i4;
    return this.getChildContext || (u5 = [], (i4 = {})[l3] = this, this.getChildContext = function() {
      return i4;
    }, this.shouldComponentUpdate = function(n4) {
      this.props.value !== n4.value && u5.some(function(n5) {
        n5.__e = true, m(n5);
      });
    }, this.sub = function(n4) {
      u5.push(n4);
      var l4 = n4.componentWillUnmount;
      n4.componentWillUnmount = function() {
        u5.splice(u5.indexOf(n4), 1), l4 && l4.call(n4);
      };
    }), n3.children;
  } };
  return u4.Provider.__ = u4.Consumer.contextType = u4;
}
n = s.slice, l = { __e: function(n2, l3, u4, i4) {
  for (var t4, r3, o3; l3 = l3.__; )
    if ((t4 = l3.__c) && !t4.__)
      try {
        if ((r3 = t4.constructor) && null != r3.getDerivedStateFromError && (t4.setState(r3.getDerivedStateFromError(n2)), o3 = t4.__d), null != t4.componentDidCatch && (t4.componentDidCatch(n2, i4 || {}), o3 = t4.__d), o3)
          return t4.__E = t4;
      } catch (l4) {
        n2 = l4;
      }
  throw n2;
} }, u = 0, i = function(n2) {
  return null != n2 && void 0 === n2.constructor;
}, k.prototype.setState = function(n2, l3) {
  var u4;
  u4 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), "function" == typeof n2 && (n2 = n2(h({}, u4), this.props)), n2 && h(u4, n2), null != n2 && this.__v && (l3 && this._sb.push(l3), m(this));
}, k.prototype.forceUpdate = function(n2) {
  this.__v && (this.__e = true, n2 && this.__h.push(n2), m(this));
}, k.prototype.render = _, t = [], o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n2, l3) {
  return n2.__v.__b - l3.__v.__b;
}, w.__r = 0, e = 0;

// node_modules/preact/hooks/dist/hooks.module.js
var t2;
var r2;
var u2;
var i2;
var o2 = 0;
var f2 = [];
var c2 = [];
var e2 = l.__b;
var a2 = l.__r;
var v2 = l.diffed;
var l2 = l.__c;
var m2 = l.unmount;
function d2(t4, u4) {
  l.__h && l.__h(r2, t4, o2 || u4), o2 = 0;
  var i4 = r2.__H || (r2.__H = { __: [], __h: [] });
  return t4 >= i4.__.length && i4.__.push({ __V: c2 }), i4.__[t4];
}
function h2(n2) {
  return o2 = 1, s2(B2, n2);
}
function s2(n2, u4, i4) {
  var o3 = d2(t2++, 2);
  if (o3.t = n2, !o3.__c && (o3.__ = [i4 ? i4(u4) : B2(void 0, u4), function(n3) {
    var t4 = o3.__N ? o3.__N[0] : o3.__[0], r3 = o3.t(t4, n3);
    t4 !== r3 && (o3.__N = [r3, o3.__[1]], o3.__c.setState({}));
  }], o3.__c = r2, !r2.u)) {
    var f4 = function(n3, t4, r3) {
      if (!o3.__c.__H)
        return true;
      var u5 = o3.__c.__H.__.filter(function(n4) {
        return n4.__c;
      });
      if (u5.every(function(n4) {
        return !n4.__N;
      }))
        return !c4 || c4.call(this, n3, t4, r3);
      var i5 = false;
      return u5.forEach(function(n4) {
        if (n4.__N) {
          var t5 = n4.__[0];
          n4.__ = n4.__N, n4.__N = void 0, t5 !== n4.__[0] && (i5 = true);
        }
      }), !(!i5 && o3.__c.props === n3) && (!c4 || c4.call(this, n3, t4, r3));
    };
    r2.u = true;
    var c4 = r2.shouldComponentUpdate, e4 = r2.componentWillUpdate;
    r2.componentWillUpdate = function(n3, t4, r3) {
      if (this.__e) {
        var u5 = c4;
        c4 = void 0, f4(n3, t4, r3), c4 = u5;
      }
      e4 && e4.call(this, n3, t4, r3);
    }, r2.shouldComponentUpdate = f4;
  }
  return o3.__N || o3.__;
}
function p2(u4, i4) {
  var o3 = d2(t2++, 3);
  !l.__s && z2(o3.__H, i4) && (o3.__ = u4, o3.i = i4, r2.__H.__h.push(o3));
}
function y2(u4, i4) {
  var o3 = d2(t2++, 4);
  !l.__s && z2(o3.__H, i4) && (o3.__ = u4, o3.i = i4, r2.__h.push(o3));
}
function _2(n2) {
  return o2 = 5, F2(function() {
    return { current: n2 };
  }, []);
}
function A2(n2, t4, r3) {
  o2 = 6, y2(function() {
    return "function" == typeof n2 ? (n2(t4()), function() {
      return n2(null);
    }) : n2 ? (n2.current = t4(), function() {
      return n2.current = null;
    }) : void 0;
  }, null == r3 ? r3 : r3.concat(n2));
}
function F2(n2, r3) {
  var u4 = d2(t2++, 7);
  return z2(u4.__H, r3) ? (u4.__V = n2(), u4.i = r3, u4.__h = n2, u4.__V) : u4.__;
}
function T2(n2, t4) {
  return o2 = 8, F2(function() {
    return n2;
  }, t4);
}
function q2(n2) {
  var u4 = r2.context[n2.__c], i4 = d2(t2++, 9);
  return i4.c = n2, u4 ? (null == i4.__ && (i4.__ = true, u4.sub(r2)), u4.props.value) : n2.__;
}
function x2(t4, r3) {
  l.useDebugValue && l.useDebugValue(r3 ? r3(t4) : t4);
}
function P2(n2) {
  var u4 = d2(t2++, 10), i4 = h2();
  return u4.__ = n2, r2.componentDidCatch || (r2.componentDidCatch = function(n3, t4) {
    u4.__ && u4.__(n3, t4), i4[1](n3);
  }), [i4[0], function() {
    i4[1](void 0);
  }];
}
function V() {
  var n2 = d2(t2++, 11);
  if (!n2.__) {
    for (var u4 = r2.__v; null !== u4 && !u4.__m && null !== u4.__; )
      u4 = u4.__;
    var i4 = u4.__m || (u4.__m = [0, 0]);
    n2.__ = "P" + i4[0] + "-" + i4[1]++;
  }
  return n2.__;
}
function b2() {
  for (var t4; t4 = f2.shift(); )
    if (t4.__P && t4.__H)
      try {
        t4.__H.__h.forEach(k2), t4.__H.__h.forEach(w2), t4.__H.__h = [];
      } catch (r3) {
        t4.__H.__h = [], l.__e(r3, t4.__v);
      }
}
l.__b = function(n2) {
  r2 = null, e2 && e2(n2);
}, l.__r = function(n2) {
  a2 && a2(n2), t2 = 0;
  var i4 = (r2 = n2.__c).__H;
  i4 && (u2 === r2 ? (i4.__h = [], r2.__h = [], i4.__.forEach(function(n3) {
    n3.__N && (n3.__ = n3.__N), n3.__V = c2, n3.__N = n3.i = void 0;
  })) : (i4.__h.forEach(k2), i4.__h.forEach(w2), i4.__h = [])), u2 = r2;
}, l.diffed = function(t4) {
  v2 && v2(t4);
  var o3 = t4.__c;
  o3 && o3.__H && (o3.__H.__h.length && (1 !== f2.push(o3) && i2 === l.requestAnimationFrame || ((i2 = l.requestAnimationFrame) || j2)(b2)), o3.__H.__.forEach(function(n2) {
    n2.i && (n2.__H = n2.i), n2.__V !== c2 && (n2.__ = n2.__V), n2.i = void 0, n2.__V = c2;
  })), u2 = r2 = null;
}, l.__c = function(t4, r3) {
  r3.some(function(t5) {
    try {
      t5.__h.forEach(k2), t5.__h = t5.__h.filter(function(n2) {
        return !n2.__ || w2(n2);
      });
    } catch (u4) {
      r3.some(function(n2) {
        n2.__h && (n2.__h = []);
      }), r3 = [], l.__e(u4, t5.__v);
    }
  }), l2 && l2(t4, r3);
}, l.unmount = function(t4) {
  m2 && m2(t4);
  var r3, u4 = t4.__c;
  u4 && u4.__H && (u4.__H.__.forEach(function(n2) {
    try {
      k2(n2);
    } catch (n3) {
      r3 = n3;
    }
  }), u4.__H = void 0, r3 && l.__e(r3, u4.__v));
};
var g2 = "function" == typeof requestAnimationFrame;
function j2(n2) {
  var t4, r3 = function() {
    clearTimeout(u4), g2 && cancelAnimationFrame(t4), setTimeout(n2);
  }, u4 = setTimeout(r3, 100);
  g2 && (t4 = requestAnimationFrame(r3));
}
function k2(n2) {
  var t4 = r2, u4 = n2.__c;
  "function" == typeof u4 && (n2.__c = void 0, u4()), r2 = t4;
}
function w2(n2) {
  var t4 = r2;
  n2.__c = n2.__(), r2 = t4;
}
function z2(n2, t4) {
  return !n2 || n2.length !== t4.length || t4.some(function(t5, r3) {
    return t5 !== n2[r3];
  });
}
function B2(n2, t4) {
  return "function" == typeof t4 ? t4(n2) : t4;
}

// node_modules/preact/compat/dist/compat.module.js
function g3(n2, t4) {
  for (var e4 in t4)
    n2[e4] = t4[e4];
  return n2;
}
function C2(n2, t4) {
  for (var e4 in n2)
    if ("__source" !== e4 && !(e4 in t4))
      return true;
  for (var r3 in t4)
    if ("__source" !== r3 && n2[r3] !== t4[r3])
      return true;
  return false;
}
function E2(n2, t4) {
  return n2 === t4 && (0 !== n2 || 1 / n2 == 1 / t4) || n2 != n2 && t4 != t4;
}
function w3(n2) {
  this.props = n2;
}
function x3(n2, e4) {
  function r3(n3) {
    var t4 = this.props.ref, r4 = t4 == n3.ref;
    return !r4 && t4 && (t4.call ? t4(null) : t4.current = null), e4 ? !e4(this.props, n3) || !r4 : C2(this.props, n3);
  }
  function u4(e5) {
    return this.shouldComponentUpdate = r3, y(n2, e5);
  }
  return u4.displayName = "Memo(" + (n2.displayName || n2.name) + ")", u4.prototype.isReactComponent = true, u4.__f = true, u4;
}
(w3.prototype = new k()).isPureReactComponent = true, w3.prototype.shouldComponentUpdate = function(n2, t4) {
  return C2(this.props, n2) || C2(this.state, t4);
};
var R = l.__b;
l.__b = function(n2) {
  n2.type && n2.type.__f && n2.ref && (n2.props.ref = n2.ref, n2.ref = null), R && R(n2);
};
var N2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
function k3(n2) {
  function t4(t5) {
    var e4 = g3({}, t5);
    return delete e4.ref, n2(e4, t5.ref || null);
  }
  return t4.$$typeof = N2, t4.render = t4, t4.prototype.isReactComponent = t4.__f = true, t4.displayName = "ForwardRef(" + (n2.displayName || n2.name) + ")", t4;
}
var A3 = function(n2, t4) {
  return null == n2 ? null : P(P(n2).map(t4));
};
var O2 = { map: A3, forEach: A3, count: function(n2) {
  return n2 ? P(n2).length : 0;
}, only: function(n2) {
  var t4 = P(n2);
  if (1 !== t4.length)
    throw "Children.only";
  return t4[0];
}, toArray: P };
var T3 = l.__e;
l.__e = function(n2, t4, e4, r3) {
  if (n2.then) {
    for (var u4, o3 = t4; o3 = o3.__; )
      if ((u4 = o3.__c) && u4.__c)
        return null == t4.__e && (t4.__e = e4.__e, t4.__k = e4.__k), u4.__c(n2, t4);
  }
  T3(n2, t4, e4, r3);
};
var I2 = l.unmount;
function L2(n2, t4, e4) {
  return n2 && (n2.__c && n2.__c.__H && (n2.__c.__H.__.forEach(function(n3) {
    "function" == typeof n3.__c && n3.__c();
  }), n2.__c.__H = null), null != (n2 = g3({}, n2)).__c && (n2.__c.__P === e4 && (n2.__c.__P = t4), n2.__c = null), n2.__k = n2.__k && n2.__k.map(function(n3) {
    return L2(n3, t4, e4);
  })), n2;
}
function U(n2, t4, e4) {
  return n2 && (n2.__v = null, n2.__k = n2.__k && n2.__k.map(function(n3) {
    return U(n3, t4, e4);
  }), n2.__c && n2.__c.__P === t4 && (n2.__e && e4.insertBefore(n2.__e, n2.__d), n2.__c.__e = true, n2.__c.__P = e4)), n2;
}
function D2() {
  this.__u = 0, this.t = null, this.__b = null;
}
function F3(n2) {
  var t4 = n2.__.__c;
  return t4 && t4.__a && t4.__a(n2);
}
function M2(n2) {
  var e4, r3, u4;
  function o3(o4) {
    if (e4 || (e4 = n2()).then(function(n3) {
      r3 = n3.default || n3;
    }, function(n3) {
      u4 = n3;
    }), u4)
      throw u4;
    if (!r3)
      throw e4;
    return y(r3, o4);
  }
  return o3.displayName = "Lazy", o3.__f = true, o3;
}
function V2() {
  this.u = null, this.o = null;
}
l.unmount = function(n2) {
  var t4 = n2.__c;
  t4 && t4.__R && t4.__R(), t4 && true === n2.__h && (n2.type = null), I2 && I2(n2);
}, (D2.prototype = new k()).__c = function(n2, t4) {
  var e4 = t4.__c, r3 = this;
  null == r3.t && (r3.t = []), r3.t.push(e4);
  var u4 = F3(r3.__v), o3 = false, i4 = function() {
    o3 || (o3 = true, e4.__R = null, u4 ? u4(l3) : l3());
  };
  e4.__R = i4;
  var l3 = function() {
    if (!--r3.__u) {
      if (r3.state.__a) {
        var n3 = r3.state.__a;
        r3.__v.__k[0] = U(n3, n3.__c.__P, n3.__c.__O);
      }
      var t5;
      for (r3.setState({ __a: r3.__b = null }); t5 = r3.t.pop(); )
        t5.forceUpdate();
    }
  }, c4 = true === t4.__h;
  r3.__u++ || c4 || r3.setState({ __a: r3.__b = r3.__v.__k[0] }), n2.then(i4, i4);
}, D2.prototype.componentWillUnmount = function() {
  this.t = [];
}, D2.prototype.render = function(n2, e4) {
  if (this.__b) {
    if (this.__v.__k) {
      var r3 = document.createElement("div"), o3 = this.__v.__k[0].__c;
      this.__v.__k[0] = L2(this.__b, r3, o3.__O = o3.__P);
    }
    this.__b = null;
  }
  var i4 = e4.__a && y(_, null, n2.fallback);
  return i4 && (i4.__h = null), [y(_, null, e4.__a ? null : n2.children), i4];
};
var W = function(n2, t4, e4) {
  if (++e4[1] === e4[0] && n2.o.delete(t4), n2.props.revealOrder && ("t" !== n2.props.revealOrder[0] || !n2.o.size))
    for (e4 = n2.u; e4; ) {
      for (; e4.length > 3; )
        e4.pop()();
      if (e4[1] < e4[0])
        break;
      n2.u = e4 = e4[2];
    }
};
function P3(n2) {
  return this.getChildContext = function() {
    return n2.context;
  }, n2.children;
}
function j3(n2) {
  var e4 = this, r3 = n2.i;
  e4.componentWillUnmount = function() {
    B(null, e4.l), e4.l = null, e4.i = null;
  }, e4.i && e4.i !== r3 && e4.componentWillUnmount(), n2.__v ? (e4.l || (e4.i = r3, e4.l = { nodeType: 1, parentNode: r3, childNodes: [], appendChild: function(n3) {
    this.childNodes.push(n3), e4.i.appendChild(n3);
  }, insertBefore: function(n3, t4) {
    this.childNodes.push(n3), e4.i.appendChild(n3);
  }, removeChild: function(n3) {
    this.childNodes.splice(this.childNodes.indexOf(n3) >>> 1, 1), e4.i.removeChild(n3);
  } }), B(y(P3, { context: e4.context }, n2.__v), e4.l)) : e4.l && e4.componentWillUnmount();
}
function z3(n2, e4) {
  var r3 = y(j3, { __v: n2, i: e4 });
  return r3.containerInfo = e4, r3;
}
(V2.prototype = new k()).__a = function(n2) {
  var t4 = this, e4 = F3(t4.__v), r3 = t4.o.get(n2);
  return r3[0]++, function(u4) {
    var o3 = function() {
      t4.props.revealOrder ? (r3.push(u4), W(t4, n2, r3)) : u4();
    };
    e4 ? e4(o3) : o3();
  };
}, V2.prototype.render = function(n2) {
  this.u = null, this.o = /* @__PURE__ */ new Map();
  var t4 = P(n2.children);
  n2.revealOrder && "b" === n2.revealOrder[0] && t4.reverse();
  for (var e4 = t4.length; e4--; )
    this.o.set(t4[e4], this.u = [1, 0, this.u]);
  return n2.children;
}, V2.prototype.componentDidUpdate = V2.prototype.componentDidMount = function() {
  var n2 = this;
  this.o.forEach(function(t4, e4) {
    W(n2, e4, t4);
  });
};
var B3 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
var H2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
var Z = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;
var Y = /[A-Z0-9]/g;
var $2 = "undefined" != typeof document;
var q3 = function(n2) {
  return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/ : /fil|che|ra/).test(n2);
};
function G(n2, t4, e4) {
  return null == t4.__k && (t4.textContent = ""), B(n2, t4), "function" == typeof e4 && e4(), n2 ? n2.__c : null;
}
function J(n2, t4, e4) {
  return D(n2, t4), "function" == typeof e4 && e4(), n2 ? n2.__c : null;
}
k.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(t4) {
  Object.defineProperty(k.prototype, t4, { configurable: true, get: function() {
    return this["UNSAFE_" + t4];
  }, set: function(n2) {
    Object.defineProperty(this, t4, { configurable: true, writable: true, value: n2 });
  } });
});
var K = l.event;
function Q() {
}
function X() {
  return this.cancelBubble;
}
function nn() {
  return this.defaultPrevented;
}
l.event = function(n2) {
  return K && (n2 = K(n2)), n2.persist = Q, n2.isPropagationStopped = X, n2.isDefaultPrevented = nn, n2.nativeEvent = n2;
};
var tn;
var en = { configurable: true, get: function() {
  return this.class;
} };
var rn = l.vnode;
l.vnode = function(n2) {
  var t4 = n2.type, e4 = n2.props, u4 = e4;
  if ("string" == typeof t4) {
    for (var o3 in u4 = {}, e4) {
      var i4 = e4[o3];
      if (!("value" === o3 && "defaultValue" in e4 && null == i4 || $2 && "children" === o3 && "noscript" === t4)) {
        var l3 = o3.toLowerCase();
        "defaultValue" === o3 && "value" in e4 && null == e4.value ? o3 = "value" : "download" === o3 && true === i4 ? i4 = "" : "ondoubleclick" === l3 ? o3 = "ondblclick" : "onchange" !== l3 || "input" !== t4 && "textarea" !== t4 || q3(e4.type) ? "onfocus" === l3 ? o3 = "onfocusin" : "onblur" === l3 ? o3 = "onfocusout" : Z.test(o3) ? o3 = l3 : -1 === t4.indexOf("-") && H2.test(o3) ? o3 = o3.replace(Y, "-$&").toLowerCase() : null === i4 && (i4 = void 0) : l3 = o3 = "oninput", "oninput" === l3 && u4[o3 = l3] && (o3 = "oninputCapture"), u4[o3] = i4;
      }
    }
    "select" == t4 && u4.multiple && Array.isArray(u4.value) && (u4.value = P(e4.children).forEach(function(n3) {
      n3.props.selected = -1 != u4.value.indexOf(n3.props.value);
    })), "select" == t4 && null != u4.defaultValue && (u4.value = P(e4.children).forEach(function(n3) {
      n3.props.selected = u4.multiple ? -1 != u4.defaultValue.indexOf(n3.props.value) : u4.defaultValue == n3.props.value;
    })), n2.props = u4, e4.class != e4.className && (en.enumerable = "className" in e4, null != e4.className && (u4.class = e4.className), Object.defineProperty(u4, "className", en));
  }
  n2.$$typeof = B3, rn && rn(n2);
};
var un = l.__r;
l.__r = function(n2) {
  un && un(n2), tn = n2.__c;
};
var on = l.diffed;
l.diffed = function(n2) {
  on && on(n2);
  var t4 = n2.props, e4 = n2.__e;
  null != e4 && "textarea" === n2.type && "value" in t4 && t4.value !== e4.value && (e4.value = null == t4.value ? "" : t4.value), tn = null;
};
var ln = { ReactCurrentDispatcher: { current: { readContext: function(n2) {
  return tn.__n[n2.__c].props.value;
} } } };
function fn(n2) {
  return y.bind(null, n2);
}
function an(n2) {
  return !!n2 && n2.$$typeof === B3;
}
function sn(n2) {
  return an(n2) ? E.apply(null, arguments) : n2;
}
function hn(n2) {
  return !!n2.__k && (B(null, n2), true);
}
function vn(n2) {
  return n2 && (n2.base || 1 === n2.nodeType && n2) || null;
}
var dn = function(n2, t4) {
  return n2(t4);
};
var pn = function(n2, t4) {
  return n2(t4);
};
var mn = _;
function yn(n2) {
  n2();
}
function _n(n2) {
  return n2;
}
function bn() {
  return [false, yn];
}
var Sn = y2;
function gn(n2, t4) {
  var e4 = t4(), r3 = h2({ h: { __: e4, v: t4 } }), u4 = r3[0].h, o3 = r3[1];
  return y2(function() {
    u4.__ = e4, u4.v = t4, E2(u4.__, t4()) || o3({ h: u4 });
  }, [n2, e4, t4]), p2(function() {
    return E2(u4.__, u4.v()) || o3({ h: u4 }), n2(function() {
      E2(u4.__, u4.v()) || o3({ h: u4 });
    });
  }, [n2]), e4;
}
var Cn = { useState: h2, useId: V, useReducer: s2, useEffect: p2, useLayoutEffect: y2, useInsertionEffect: Sn, useTransition: bn, useDeferredValue: _n, useSyncExternalStore: gn, startTransition: yn, useRef: _2, useImperativeHandle: A2, useMemo: F2, useCallback: T2, useContext: q2, useDebugValue: x2, version: "17.0.2", Children: O2, render: G, hydrate: J, unmountComponentAtNode: hn, createPortal: z3, createElement: y, createContext: F, createFactory: fn, cloneElement: sn, createRef: d, Fragment: _, isValidElement: an, findDOMNode: vn, Component: k, PureComponent: w3, memo: x3, forwardRef: k3, flushSync: pn, unstable_batchedUpdates: dn, StrictMode: mn, Suspense: D2, SuspenseList: V2, lazy: M2, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ln };

// node_modules/preact/compat/client.mjs
function createRoot(container) {
  return {
    render(children) {
      G(children, container);
    },
    unmount() {
      hn(container);
    }
  };
}

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/flowStateFields.ts
var import_state2 = require("@codemirror/state");
var portalTypeAnnotation = import_state2.Annotation.define();
var flowIDAnnotation = import_state2.Annotation.define();
var flowIDStateField = import_state2.StateField.define({
  create: () => void 0,
  update(value, tr) {
    if (tr.annotation(flowIDAnnotation))
      return tr.annotation(flowIDAnnotation);
    return value;
  }
});
var flowTypeStateField = import_state2.StateField.define({
  create: (state) => "none",
  update(value, tr) {
    if (tr.annotation(portalTypeAnnotation))
      return tr.annotation(portalTypeAnnotation);
    return value;
  }
});

// src/adapters/obsidian/ui/icons.ts
var import_obsidian = require("obsidian");
var lucideIcon = (value) => {
  var _a2;
  return (_a2 = (0, import_obsidian.getIcon)(value)) == null ? void 0 : _a2.outerHTML;
};
var uiIconSet = {
  "mk-ui-rows": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svg-icon lucide-rows"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><line x1="3" x2="21" y1="12" y2="12"/></svg>`,
  "mk-ui-close": `<svg xmlns="http://www.w3.org/2000/svg" width='24px' height='24px' fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
    </svg>`,
  "mk-ui-flow-hover": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.7941 11.6917C11.4281 11.809 12.0857 11.7486 12.6856 11.5163C13.2858 11.2838 13.8068 10.8873 14.1773 10.3692C14.5483 9.85038 14.75 9.23465 14.75 8.6C14.75 7.96535 14.5483 7.34962 14.1773 6.83081C13.8068 6.31273 13.2858 5.91619 12.6856 5.68372C12.0857 5.45136 11.4281 5.39096 10.7941 5.50834C10.1599 5.62575 9.57072 5.91716 9.10335 6.35289C9.09233 6.36317 9.08162 6.37378 9.07124 6.3847L5.85862 9.76393C5.60897 9.99123 5.28818 10.1509 4.93287 10.2167C4.5702 10.2839 4.19486 10.2487 3.85619 10.1175C3.51778 9.98646 3.23669 9.76777 3.04283 9.49668C2.84949 9.22631 2.75 8.91434 2.75 8.6C2.75 8.28566 2.84949 7.97369 3.04283 7.70332C3.23669 7.43223 3.51778 7.21354 3.85619 7.08246C4.19486 6.95128 4.5702 6.91614 4.93287 6.98328C5.29024 7.04944 5.61268 7.21063 5.86295 7.44003L6.559 8.14747L7.62823 7.09545L6.91982 6.37545C6.91226 6.36777 6.90453 6.36025 6.89665 6.35289C6.42928 5.91716 5.8401 5.62575 5.20593 5.50834C4.57189 5.39096 3.91432 5.45136 3.31441 5.68372C2.71423 5.91619 2.19318 6.31273 1.8227 6.83081C1.4517 7.34962 1.25 7.96535 1.25 8.6C1.25 9.23465 1.4517 9.85038 1.8227 10.3692C2.19318 10.8873 2.71423 11.2838 3.31441 11.5163C3.91432 11.7486 4.57189 11.809 5.20593 11.6917C5.8401 11.5742 6.42928 11.2828 6.89665 10.8471C6.90767 10.8368 6.91838 10.8262 6.92876 10.8153L10.1414 7.43607C10.391 7.20877 10.7118 7.04906 11.0671 6.98328C11.4298 6.91614 11.8051 6.95128 12.1438 7.08246C12.4822 7.21354 12.7633 7.43223 12.9572 7.70332C13.1505 7.97369 13.25 8.28566 13.25 8.6C13.25 8.91434 13.1505 9.22631 12.9572 9.49668C12.7633 9.76777 12.4822 9.98646 12.1438 10.1175C11.8051 10.2487 11.4298 10.2839 11.0671 10.2167C10.7098 10.1506 10.3873 9.98938 10.1371 9.75998L9.441 9.05253L8.37177 10.1045L9.08018 10.8245C9.08774 10.8322 9.09547 10.8398 9.10335 10.8471C9.57072 11.2828 10.1599 11.5742 10.7941 11.6917Z" fill="currentColor"/>
    </svg>`,
  "mk-ui-folder": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z" />
  </svg>`,
  "mk-ui-open-link": `<svg width="16" height="16"  xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244" />
  </svg>`,
  "mk-ui-file": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
</svg>`,
  "mk-ui-expand": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9" />
</svg>`,
  "mk-ui-new-folder": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" ><path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"></path><line x1="12" y1="10" x2="12" y2="16"></line><line x1="9" y1="13" x2="15" y2="13"></line></svg>`,
  "mk-ui-new-note": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" ><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path></svg>`,
  "mk-ui-collapse": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
</svg>`,
  "mk-ui-options": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
</svg>`,
  "mk-ui-plus": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
</svg>`,
  "mk-ui-collapse-sm": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
<path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z" />
</svg>`,
  "mk-ui-search": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
</svg>
`,
  "mk-ui-view-options": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75" />
</svg>
`,
  "mk-ui-clear": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
</svg>
`,
  "mk-ui-new-file": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m3.75 9v6m3-3H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
</svg>
`,
  "mk-ui-blink": `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24">
  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 1v2.75m7.778.472-1.944 1.944M23 12h-2.75m-.472 7.778-1.944-1.944M12 20.25V23m-5.834-5.166-1.944 1.944M3.75 12H1m5.166-5.834L4.222 4.222"/>
  <circle cx="12" cy="12" r="2.25" stroke="currentColor" stroke-width="1.5"/>
  <circle cx="12" cy="12" r="5.25" stroke="currentColor" stroke-width="1.5"/>
</svg>
`,
  "mk-ui-spaces": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z" />
</svg>`,
  "mk-ui-home": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="svg-icon">
<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
</svg>`,
  "mk-ui-tags": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5" />
</svg>`,
  "mk-ui-handle": `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
<circle cx="9" cy="7" r="1"/>
<circle cx="9" cy="12" r="1"/>
<circle cx="9" cy="17" r="1"/>
<circle cx="14" cy="7" r="1"/>
<circle cx="14" cy="12" r="1"/>
<circle cx="14" cy="17" r="1"/>
</svg>
`,
  "mk-ui-props": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="9.5" cy="9.5" r="1" fill="currentColor"/>
<circle cx="9.5" cy="14.5" r="1" fill="currentColor"/>
<circle cx="14.5" cy="9.5" r="1" fill="currentColor"/>
<circle cx="14.5" cy="14.5" r="1" fill="currentColor"/>
</svg>`,
  "mk-ui-new-space": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 16.875h3.375m0 0h3.375m-3.375 0V13.5m0 3.375v3.375M6 10.5h2.25a2.25 2.25 0 002.25-2.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v2.25A2.25 2.25 0 006 10.5zm0 9.75h2.25A2.25 2.25 0 0010.5 18v-2.25a2.25 2.25 0 00-2.25-2.25H6a2.25 2.25 0 00-2.25 2.25V18A2.25 2.25 0 006 20.25zm9.75-9.75H18a2.25 2.25 0 002.25-2.25V6A2.25 2.25 0 0018 3.75h-2.25A2.25 2.25 0 0013.5 6v2.25a2.25 2.25 0 002.25 2.25z" />
</svg>
`,
  "mk-ui-file-solid": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
<path d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625z" />
<path d="M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z" />
</svg>
`,
  "mk-ui-folder-solid": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
<path d="M19.5 21a3 3 0 003-3v-4.5a3 3 0 00-3-3h-15a3 3 0 00-3 3V18a3 3 0 003 3h15zM1.5 10.146V6a3 3 0 013-3h5.379a2.25 2.25 0 011.59.659l2.122 2.121c.14.141.331.22.53.22H19.5a3 3 0 013 3v1.146A4.483 4.483 0 0019.5 9h-15a4.483 4.483 0 00-3 1.146z" />
</svg>
`,
  "mk-ui-sync": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
</svg>
`,
  "mk-ui-stack": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3" />
</svg>
`,
  "mk-ui-cut": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M7.848 8.25l1.536.887M7.848 8.25a3 3 0 11-5.196-3 3 3 0 015.196 3zm1.536.887a2.165 2.165 0 011.083 1.839c.005.351.054.695.14 1.024M9.384 9.137l2.077 1.199M7.848 15.75l1.536-.887m-1.536.887a3 3 0 11-5.196 3 3 3 0 015.196-3zm1.536-.887a2.165 2.165 0 001.083-1.838c.005-.352.054-.695.14-1.025m-1.223 2.863l2.077-1.199m0-3.328a4.323 4.323 0 012.068-1.379l5.325-1.628a4.5 4.5 0 012.48-.044l.803.215-7.794 4.5m-2.882-1.664A4.331 4.331 0 0010.607 12m3.736 0l7.794 4.5-.802.215a4.5 4.5 0 01-2.48-.043l-5.326-1.629a4.324 4.324 0 01-2.068-1.379M14.343 12l-2.882 1.664" />
</svg>
`,
  "mk-ui-backlink": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.784 9.716a4.333 4.333 0 0 0-6.128 0L3.323 14.05a4.332 4.332 0 1 0 6.127 6.127l1.194-1.193m-.821-5.307a4.333 4.333 0 0 0 6.127 0l4.334-4.333a4.333 4.333 0 0 0-6.128-6.128l-1.191 1.192"/>
<path fill="currentColor" d="M15.646 19.646a.5.5 0 0 0 0 .708l3.182 3.181a.5.5 0 1 0 .707-.707L16.707 20l2.828-2.828a.5.5 0 1 0-.707-.707l-3.182 3.181ZM23 20.5a.5.5 0 0 0 0-1v1Zm-7 0h7v-1h-7v1Z"/>
</svg>`,
  "mk-ui-canvas": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="2.5" y="2.5" width="4" height="6" rx="0.5" stroke="currentColor"/>
<rect x="2.5" y="10.5" width="4" height="3" rx="0.5" stroke="currentColor"/>
<rect x="9.5" y="7.5" width="4" height="6" rx="0.5" stroke="currentColor"/>
<rect x="9.5" y="2.5" width="4" height="3" rx="0.5" stroke="currentColor"/>
</svg>
`,
  "mk-ui-video": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0118 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0118 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 016 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5" />
</svg>
`,
  "mk-ui-edit": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125" />
</svg>
`,
  "mk-ui-list": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
</svg>

`,
  "mk-ui-build": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M11.42 15.17L17.25 21A2.652 2.652 0 0021 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 11-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 004.486-6.336l-3.276 3.277a3.004 3.004 0 01-2.25-2.25l3.276-3.276a4.5 4.5 0 00-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437l1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008z" />
</svg>
`,
  "mk-ui-check": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
</svg>
`,
  "mk-ui-layout": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 01-1.125-1.125v-3.75zM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-8.25zM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-2.25z" />
</svg>
`,
  "mk-ui-colors": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M4.098 19.902a3.75 3.75 0 005.304 0l6.401-6.402M6.75 21A3.75 3.75 0 013 17.25V4.125C3 3.504 3.504 3 4.125 3h5.25c.621 0 1.125.504 1.125 1.125v4.072M6.75 21a3.75 3.75 0 003.75-3.75V8.197M6.75 21h13.125c.621 0 1.125-.504 1.125-1.125v-5.25c0-.621-.504-1.125-1.125-1.125h-4.072M10.5 8.197l2.88-2.88c.438-.439 1.15-.439 1.59 0l3.712 3.713c.44.44.44 1.152 0 1.59l-2.879 2.88M6.75 17.25h.008v.008H6.75v-.008z" />
</svg>
`,
  "mk-make-todo": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="1.5" y="1.5" width="13" height="13" rx="1.5" stroke="currentColor"/>
<path d="M4.5 8L7 10.5L11.5 6" stroke="currentColor"/>
</svg>        
`,
  "mk-make-list": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="5.5" y1="4.5" x2="14.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="8.5" x2="14.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="12.5" x2="14.5" y2="12.5" stroke="currentColor" stroke-linecap="round"/>
<circle cx="1.75" cy="4.5" r="0.75" fill="currentColor"/>
<circle cx="1.75" cy="8.5" r="0.75" fill="currentColor"/>
<circle cx="1.75" cy="12.5" r="0.75" fill="currentColor"/>
</svg>        
`,
  "mk-make-ordered": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1.50142 3.09091V6H0.886364V3.67472H0.869318L0.203125 4.09233V3.54688L0.923295 3.09091H1.50142Z" fill="currentColor"/>
<path d="M0.235807 10V9.55682L1.27132 8.59801C1.35939 8.51278 1.43325 8.43608 1.49291 8.3679C1.55351 8.29972 1.59944 8.23295 1.63069 8.16761C1.66194 8.10133 1.67757 8.02983 1.67757 7.95312C1.67757 7.8679 1.65816 7.79451 1.61933 7.73295C1.5805 7.67045 1.52747 7.62263 1.46024 7.58949C1.393 7.5554 1.31677 7.53835 1.23155 7.53835C1.14253 7.53835 1.06488 7.55634 0.998591 7.59233C0.932303 7.62831 0.881166 7.67992 0.845182 7.74716C0.809197 7.81439 0.791204 7.89441 0.791204 7.98722H0.207397C0.207397 7.79687 0.250485 7.63163 0.336659 7.49148C0.422833 7.35133 0.543572 7.2429 0.698875 7.16619C0.854178 7.08949 1.03316 7.05114 1.23581 7.05114C1.44414 7.05114 1.62548 7.08807 1.77984 7.16193C1.93514 7.23485 2.05588 7.33617 2.14206 7.46591C2.22823 7.59564 2.27132 7.74432 2.27132 7.91193C2.27132 8.02178 2.24954 8.13021 2.20598 8.23722C2.16336 8.34422 2.08713 8.46307 1.97728 8.59375C1.86744 8.72348 1.71261 8.87926 1.5128 9.06108L1.08808 9.47727V9.49716H2.30967V10H0.235807Z" fill="currentColor"/>
<path d="M1.31109 14.0398C1.09897 14.0398 0.910049 14.0033 0.744329 13.9304C0.579557 13.8565 0.449348 13.7552 0.353704 13.6264C0.259007 13.4967 0.210238 13.3471 0.207397 13.1776H0.826716C0.830504 13.2486 0.853704 13.3111 0.896318 13.3651C0.939879 13.4181 0.997644 13.4593 1.06961 13.4886C1.14158 13.518 1.22255 13.5327 1.31251 13.5327C1.40626 13.5327 1.48912 13.5161 1.56109 13.483C1.63306 13.4498 1.68941 13.4039 1.73012 13.3452C1.77084 13.2865 1.7912 13.2187 1.7912 13.142C1.7912 13.0644 1.76942 12.9957 1.72586 12.9361C1.68325 12.8755 1.6217 12.8281 1.5412 12.794C1.46166 12.7599 1.36696 12.7429 1.25711 12.7429H0.985807V12.2912H1.25711C1.34992 12.2912 1.43183 12.2751 1.50285 12.2429C1.57482 12.2107 1.63069 12.1662 1.67047 12.1094C1.71024 12.0516 1.73012 11.9844 1.73012 11.9077C1.73012 11.8348 1.71261 11.7708 1.67757 11.7159C1.64348 11.66 1.59518 11.6165 1.53268 11.5852C1.47113 11.554 1.39916 11.5384 1.31677 11.5384C1.23344 11.5384 1.15721 11.5535 1.08808 11.5838C1.01895 11.6132 0.963553 11.6553 0.921886 11.7102C0.880219 11.7652 0.857966 11.8295 0.855125 11.9034H0.265636C0.268477 11.7358 0.316299 11.5881 0.409102 11.4602C0.501905 11.3324 0.626905 11.2325 0.784102 11.1605C0.942246 11.0876 1.12075 11.0511 1.31961 11.0511C1.52037 11.0511 1.69603 11.0876 1.8466 11.1605C1.99717 11.2334 2.11412 11.3319 2.19745 11.456C2.28173 11.5791 2.3234 11.7173 2.32245 11.8707C2.3234 12.0336 2.27274 12.1695 2.17047 12.2784C2.06914 12.3873 1.93704 12.4564 1.77416 12.4858V12.5085C1.98817 12.536 2.15105 12.6103 2.2628 12.7315C2.37548 12.8518 2.43136 13.0024 2.43041 13.1832C2.43136 13.349 2.38353 13.4962 2.28694 13.625C2.1913 13.7538 2.0592 13.8551 1.89064 13.929C1.72208 14.0028 1.52889 14.0398 1.31109 14.0398Z" fill="currentColor"/>
<line x1="5.5" y1="4.5" x2="14.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="8.5" x2="14.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="12.5" x2="14.5" y2="12.5" stroke="currentColor" stroke-linecap="round"/>
</svg>        
`,
  "mk-make-h1": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.26278 12H0.285507L3.29829 3.27273H5.67613L8.68466 12H6.70738L4.5213 5.26705H4.45312L2.26278 12ZM2.1392 8.5696H6.80966V10.0099H2.1392V8.5696Z" fill="currentColor"/>
<path d="M11.5675 12.1236C11.1499 12.1236 10.7777 12.0511 10.451 11.9062C10.1243 11.7585 9.86576 11.5412 9.67542 11.2543C9.48792 10.9645 9.39417 10.6037 9.39417 10.1719C9.39417 9.80824 9.46093 9.50284 9.59446 9.25568C9.72798 9.00852 9.9098 8.80966 10.1399 8.65909C10.37 8.50852 10.6314 8.39489 10.924 8.31818C11.2195 8.24148 11.5291 8.1875 11.853 8.15625C12.2337 8.11648 12.5405 8.07955 12.7734 8.04545C13.0064 8.00852 13.1754 7.95455 13.2805 7.88352C13.3856 7.8125 13.4382 7.70739 13.4382 7.56818V7.54261C13.4382 7.27273 13.353 7.06392 13.1825 6.91619C13.0149 6.76847 12.7763 6.6946 12.4666 6.6946C12.1399 6.6946 11.88 6.76705 11.6868 6.91193C11.4936 7.05398 11.3658 7.23295 11.3033 7.44886L9.62429 7.3125C9.70951 6.91477 9.87713 6.57102 10.1271 6.28125C10.3771 5.98864 10.6996 5.7642 11.0945 5.60795C11.4922 5.44886 11.9524 5.36932 12.4751 5.36932C12.8388 5.36932 13.1868 5.41193 13.5192 5.49716C13.8544 5.58239 14.1513 5.71449 14.4098 5.89347C14.6712 6.07244 14.8771 6.30256 15.0277 6.58381C15.1783 6.86222 15.2535 7.19602 15.2535 7.58523V12H13.532V11.0923H13.4808C13.3757 11.2969 13.2351 11.4773 13.0589 11.6335C12.8828 11.7869 12.6712 11.9077 12.424 11.9957C12.1768 12.081 11.8913 12.1236 11.5675 12.1236ZM12.0874 10.8707C12.3544 10.8707 12.5902 10.8182 12.7947 10.7131C12.9993 10.6051 13.1598 10.4602 13.2763 10.2784C13.3928 10.0966 13.451 9.89062 13.451 9.66051V8.96591C13.3942 9.00284 13.316 9.03693 13.2166 9.06818C13.12 9.09659 13.0106 9.12358 12.8885 9.14915C12.7663 9.17188 12.6442 9.19318 12.522 9.21307C12.3999 9.23011 12.2891 9.24574 12.1896 9.25994C11.9766 9.29119 11.7905 9.34091 11.6314 9.40909C11.4723 9.47727 11.3487 9.5696 11.2606 9.68608C11.1726 9.79972 11.1285 9.94176 11.1285 10.1122C11.1285 10.3594 11.218 10.5483 11.397 10.679C11.5788 10.8068 11.8089 10.8707 12.0874 10.8707Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-h2": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.88566 12H1.23793L3.74858 4.72727H5.73012L8.23722 12H6.58949L4.76776 6.3892H4.71094L2.88566 12ZM2.78267 9.14133H6.67472V10.3416H2.78267V9.14133Z" fill="currentColor"/>
<path d="M10.6396 12.103C10.2916 12.103 9.98142 12.0426 9.70917 11.9219C9.43691 11.7988 9.22148 11.6177 9.06286 11.3786C8.90661 11.1371 8.82848 10.8364 8.82848 10.4766C8.82848 10.1735 8.88412 9.91903 8.99539 9.71307C9.10666 9.5071 9.25817 9.34138 9.44993 9.21591C9.64169 9.09043 9.8595 8.99574 10.1033 8.93182C10.3496 8.8679 10.6076 8.82292 10.8775 8.79687C11.1947 8.76373 11.4504 8.73295 11.6445 8.70455C11.8387 8.67377 11.9795 8.62879 12.0671 8.5696C12.1547 8.51042 12.1985 8.42282 12.1985 8.30682V8.28551C12.1985 8.06061 12.1275 7.8866 11.9854 7.76349C11.8458 7.64039 11.6469 7.57883 11.3889 7.57883C11.1166 7.57883 10.9 7.6392 10.739 7.75994C10.578 7.87831 10.4715 8.02746 10.4194 8.20739L9.02025 8.09375C9.09127 7.76231 9.23095 7.47585 9.43928 7.23437C9.64761 6.99053 9.91632 6.8035 10.2454 6.67329C10.5768 6.54072 10.9603 6.47443 11.396 6.47443C11.699 6.47443 11.989 6.50994 12.266 6.58097C12.5453 6.65199 12.7927 6.76207 13.0082 6.91122C13.226 7.06037 13.3976 7.25213 13.5231 7.48651C13.6486 7.71851 13.7113 7.99668 13.7113 8.32102V12H12.2766V11.2436H12.234C12.1464 11.4141 12.0292 11.5644 11.8825 11.6946C11.7357 11.8224 11.5593 11.9231 11.3533 11.9964C11.1474 12.0675 10.9095 12.103 10.6396 12.103ZM11.0728 11.0589C11.2953 11.0589 11.4918 11.0152 11.6623 10.9276C11.8327 10.8376 11.9665 10.7169 12.0636 10.5653C12.1606 10.4138 12.2092 10.2422 12.2092 10.0504V9.47159C12.1618 9.50237 12.0967 9.53078 12.0139 9.55682C11.9334 9.58049 11.8422 9.60298 11.7404 9.62429C11.6386 9.64323 11.5368 9.66098 11.435 9.67756C11.3332 9.69176 11.2409 9.70478 11.158 9.71662C10.9805 9.74266 10.8254 9.78409 10.6928 9.84091C10.5603 9.89773 10.4573 9.97467 10.3839 10.0717C10.3105 10.1664 10.2738 10.2848 10.2738 10.4268C10.2738 10.6328 10.3484 10.7902 10.4975 10.8991C10.649 11.0057 10.8408 11.0589 11.0728 11.0589Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-h3": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.17897 12H2.25568L4.92613 4.72727H5.83522L8.50568 12H7.58238L5.40909 5.87784H5.35227L3.17897 12ZM3.51988 9.15909H7.24147V9.94034H3.51988V9.15909Z" fill="currentColor"/>
<path d="M11.13 12.1278C10.7843 12.1278 10.4706 12.0627 10.1889 11.9325C9.90719 11.8 9.68347 11.6094 9.51775 11.3608C9.35203 11.1098 9.26917 10.8068 9.26917 10.4517C9.26917 10.1392 9.33072 9.88589 9.45383 9.69176C9.57694 9.49526 9.74147 9.34138 9.94744 9.23011C10.1534 9.11884 10.3807 9.03598 10.6293 8.98153C10.8802 8.92472 11.1323 8.87973 11.3856 8.84659C11.7171 8.80398 11.9858 8.77202 12.1918 8.75071C12.4001 8.72704 12.5516 8.68797 12.6463 8.63352C12.7434 8.57907 12.7919 8.48437 12.7919 8.34943V8.32102C12.7919 7.97064 12.696 7.69839 12.5043 7.50426C12.3149 7.31013 12.0272 7.21307 11.6413 7.21307C11.2412 7.21307 10.9276 7.30066 10.7003 7.47585C10.473 7.65104 10.3132 7.83807 10.2209 8.03693L9.42542 7.75284C9.56747 7.4214 9.75686 7.16335 9.9936 6.97869C10.2327 6.79167 10.4931 6.66146 10.7749 6.58807C11.0589 6.51231 11.3383 6.47443 11.6129 6.47443C11.7881 6.47443 11.9893 6.49574 12.2166 6.53835C12.4463 6.5786 12.6676 6.66264 12.8807 6.79048C13.0961 6.91832 13.2749 7.11127 13.4169 7.36932C13.5589 7.62737 13.63 7.97301 13.63 8.40625V12H12.7919V11.2614H12.7493C12.6925 11.3797 12.5978 11.5064 12.4652 11.6413C12.3326 11.7763 12.1562 11.8911 11.9361 11.9858C11.7159 12.0805 11.4472 12.1278 11.13 12.1278ZM11.2578 11.375C11.5892 11.375 11.8686 11.3099 12.0959 11.1797C12.3255 11.0495 12.4983 10.8814 12.6143 10.6754C12.7327 10.4695 12.7919 10.2528 12.7919 10.0256V9.25852C12.7564 9.30114 12.6783 9.3402 12.5575 9.37571C12.4392 9.40885 12.3018 9.43845 12.1456 9.46449C11.9917 9.48816 11.8414 9.50947 11.6946 9.52841C11.5502 9.54498 11.433 9.55918 11.343 9.57102C11.1252 9.59943 10.9216 9.6456 10.7322 9.70952C10.5452 9.77107 10.3937 9.86458 10.2777 9.99006C10.1641 10.1132 10.1072 10.2812 10.1072 10.4943C10.1072 10.7855 10.215 11.0057 10.4304 11.1548C10.6482 11.3016 10.924 11.375 11.2578 11.375Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-quote": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="1.75" y1="2.75" x2="1.75" y2="12.25" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="4.5" x2="13.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="7.5" x2="11.5" y2="7.5" stroke="currentColor" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="10.5" x2="9.5" y2="10.5" stroke="currentColor" stroke-linecap="round"/>
</svg>        
`,
  "mk-make-hr": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="0.75" y1="8.25" x2="15.25" y2="8.25" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
</svg>
`,
  "mk-make-link": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.25144 6.74857C8.75136 6.24864 8.07321 5.9678 7.3661 5.9678C6.659 5.9678 5.98084 6.24864 5.48077 6.74857L2.8141 9.41523C2.55941 9.66122 2.35626 9.95548 2.2165 10.2808C2.07674 10.6062 2.00318 10.9561 2.0001 11.3102C1.99702 11.6642 2.06449 12.0154 2.19858 12.3431C2.33266 12.6708 2.53067 12.9686 2.78105 13.219C3.03143 13.4693 3.32917 13.6673 3.65689 13.8014C3.98461 13.9355 4.33576 14.003 4.68984 13.9999C5.04392 13.9968 5.39384 13.9233 5.71918 13.7835C6.04452 13.6437 6.33878 13.4406 6.58477 13.1859L7.31944 12.4519M6.8141 9.1859C7.31418 9.68582 7.99233 9.96666 8.69944 9.96666C9.40654 9.96666 10.0847 9.68582 10.5848 9.1859L13.2514 6.51923C13.7372 6.01629 14.006 5.34269 13.9999 4.6435C13.9938 3.9443 13.7134 3.27547 13.219 2.78105C12.7245 2.28663 12.0557 2.00618 11.3565 2.0001C10.6573 1.99403 9.98371 2.26281 9.48077 2.74856L8.74743 3.4819" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>        
`,
  "mk-make-image": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="1.5" y="2.5" width="13" height="10" rx="1.5" stroke="currentColor"/>
<path d="M4.2 9.06667C4.6 8.53333 5.4 8.53333 5.8 9.06667L8 12H2L4.2 9.06667Z" fill="currentColor"/>
<path d="M9.16795 7.24808C9.56377 6.65434 10.4362 6.65434 10.8321 7.24808L14 12H6L9.16795 7.24808Z" fill="currentColor"/>
<circle cx="4.5" cy="5.5" r="1.5" fill="currentColor"/>
</svg>        
`,
  "mk-make-codeblock": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1 9.01852V7.98148L5 5V6.41204L2.04819 8.48148L2.0753 8.39815V8.59722L2.04819 8.51852L5 10.5833V12L1 9.01852Z" fill="currentColor"/>
<path d="M15 9.01852V7.98148L11 5V6.41204L13.9518 8.48148L13.9247 8.39815V8.59722L13.9518 8.51852L11 10.5833V12L15 9.01852Z" fill="currentColor"/>
<path d="M10 3L7.1521 14H6L8.8479 3H10Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-callout": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="6.5" width="9" height="3" stroke="currentColor"/>
<line x1="4.5" y1="3.5" x2="11.5" y2="3.5" stroke="#B2B2B2" stroke-linecap="round"/>
<line x1="4.5" y1="12.5" x2="11.5" y2="12.5" stroke="#B2B2B2" stroke-linecap="round"/>
</svg>`,
  "mk-make-note": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.5 11C6.11929 11 5 9.88071 5 8.5C5 7.11929 6.11929 6 7.5 6" stroke="currentColor" stroke-width="1.5"/>
<path d="M9 6C10.3807 6 11.5 7.11929 11.5 8.5C11.5 9.88071 10.3807 11 9 11" stroke="currentColor" stroke-width="1.5"/>
<line x1="1" y1="8.25" x2="5" y2="8.25" stroke="currentColor" stroke-width="1.5"/>
<line x1="11" y1="8.25" x2="15" y2="8.25" stroke="currentColor" stroke-width="1.5"/>
</svg>        
`,
  "mk-make-flow": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.7941 11.6917C11.4281 11.809 12.0857 11.7486 12.6856 11.5163C13.2858 11.2838 13.8068 10.8873 14.1773 10.3692C14.5483 9.85038 14.75 9.23465 14.75 8.6C14.75 7.96535 14.5483 7.34962 14.1773 6.83081C13.8068 6.31273 13.2858 5.91619 12.6856 5.68372C12.0857 5.45136 11.4281 5.39096 10.7941 5.50834C10.1599 5.62575 9.57072 5.91716 9.10335 6.35289C9.09233 6.36317 9.08162 6.37378 9.07124 6.3847L5.85862 9.76393C5.60897 9.99123 5.28818 10.1509 4.93287 10.2167C4.5702 10.2839 4.19486 10.2487 3.85619 10.1175C3.51778 9.98646 3.23669 9.76777 3.04283 9.49668C2.84949 9.22631 2.75 8.91434 2.75 8.6C2.75 8.28566 2.84949 7.97369 3.04283 7.70332C3.23669 7.43223 3.51778 7.21354 3.85619 7.08246C4.19486 6.95128 4.5702 6.91614 4.93287 6.98328C5.29024 7.04944 5.61268 7.21063 5.86295 7.44003L6.559 8.14747L7.62823 7.09545L6.91982 6.37545C6.91226 6.36777 6.90453 6.36025 6.89665 6.35289C6.42928 5.91716 5.8401 5.62575 5.20593 5.50834C4.57189 5.39096 3.91432 5.45136 3.31441 5.68372C2.71423 5.91619 2.19318 6.31273 1.8227 6.83081C1.4517 7.34962 1.25 7.96535 1.25 8.6C1.25 9.23465 1.4517 9.85038 1.8227 10.3692C2.19318 10.8873 2.71423 11.2838 3.31441 11.5163C3.91432 11.7486 4.57189 11.809 5.20593 11.6917C5.8401 11.5742 6.42928 11.2828 6.89665 10.8471C6.90767 10.8368 6.91838 10.8262 6.92876 10.8153L10.1414 7.43607C10.391 7.20877 10.7118 7.04906 11.0671 6.98328C11.4298 6.91614 11.8051 6.95128 12.1438 7.08246C12.4822 7.21354 12.7633 7.43223 12.9572 7.70332C13.1505 7.97369 13.25 8.28566 13.25 8.6C13.25 8.91434 13.1505 9.22631 12.9572 9.49668C12.7633 9.76777 12.4822 9.98646 12.1438 10.1175C11.8051 10.2487 11.4298 10.2839 11.0671 10.2167C10.7098 10.1506 10.3873 9.98938 10.1371 9.75998L9.441 9.05253L8.37177 10.1045L9.08018 10.8245C9.08774 10.8322 9.09547 10.8398 9.10335 10.8471C9.57072 11.2828 10.1599 11.5742 10.7941 11.6917Z" fill="currentColor"/>
</svg>
`,
  "mk-make-tag": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.81747 13L9.48792 2.81818H10.6811L9.01065 13H7.81747ZM3.2088 10.2756L3.40269 9.08239H11.1186L10.9247 10.2756H3.2088ZM4.23792 13L5.90838 2.81818H7.10156L5.4311 13H4.23792ZM3.80042 6.7358L3.99431 5.54261H11.7102L11.5163 6.7358H3.80042Z" fill="currentColor"/>
</svg>
`,
  "mk-make-table": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M12 3H4C3.44772 3 3 3.44772 3 4V12C3 12.5523 3.44772 13 4 13H12C12.5523 13 13 12.5523 13 12V4C13 3.44772 12.5523 3 12 3ZM4 2C2.89543 2 2 2.89543 2 4V12C2 13.1046 2.89543 14 4 14H12C13.1046 14 14 13.1046 14 12V4C14 2.89543 13.1046 2 12 2H4Z" fill="currentColor"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M14 6H2V5H14V6Z" fill="currentColor"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M7 2L7 13L6 13L6 2L7 2Z" fill="currentColor"/>
</svg>
`,
  "mk-make-date": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5" />
</svg>
`,
  "mk-make-indent": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="9.5" y1="8.5" x2="17.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="9.5" y1="11.5" x2="17.5" y2="11.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="9.5" y1="14.5" x2="13.5" y2="14.5" stroke="currentColor" stroke-linecap="round"/>
<path d="M7 11.5L3.25 13.6651L3.25 9.33494L7 11.5Z" fill="currentColor"/>
</svg>

`,
  "mk-make-unindent": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="5.5" y1="8.5" x2="13.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="11.5" x2="13.5" y2="11.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="14.5" x2="9.5" y2="14.5" stroke="currentColor" stroke-linecap="round"/>
<path d="M16 11.5L19.75 9.33494L19.75 13.6651L16 11.5Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-strong": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7 17.6364V6H11.8523C12.7235 6 13.4527 6.12311 14.0398 6.36932C14.6307 6.61553 15.0739 6.96023 15.3693 7.40341C15.6686 7.84659 15.8182 8.35985 15.8182 8.94318C15.8182 9.38636 15.7254 9.7822 15.5398 10.1307C15.3542 10.4754 15.0985 10.7614 14.7727 10.9886C14.447 11.2159 14.0701 11.375 13.642 11.4659V11.5795C14.1117 11.6023 14.5455 11.7292 14.9432 11.9602C15.3447 12.1913 15.6667 12.5133 15.9091 12.9261C16.1515 13.3352 16.2727 13.8201 16.2727 14.3807C16.2727 15.0057 16.1136 15.5644 15.7955 16.0568C15.4773 16.5455 15.017 16.9318 14.4148 17.2159C13.8125 17.4962 13.0814 17.6364 12.2216 17.6364H7ZM9.8125 15.3693H11.5511C12.161 15.3693 12.6098 15.2538 12.8977 15.0227C13.1894 14.7917 13.3352 14.4697 13.3352 14.0568C13.3352 13.7576 13.2652 13.5 13.125 13.2841C12.9848 13.0644 12.786 12.8958 12.5284 12.7784C12.2708 12.6572 11.9621 12.5966 11.6023 12.5966H9.8125V15.3693ZM9.8125 10.7841H11.3693C11.6761 10.7841 11.9489 10.733 12.1875 10.6307C12.4261 10.5284 12.6117 10.3807 12.7443 10.1875C12.8807 9.99432 12.9489 9.76136 12.9489 9.48864C12.9489 9.09848 12.8106 8.79167 12.5341 8.56818C12.2576 8.3447 11.8845 8.23295 11.4148 8.23295H9.8125V10.7841Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-em": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.76 15.888L11.424 7.52C11.4773 7.28533 11.392 7.13067 11.168 7.056C10.9547 6.98133 10.6667 6.944 10.304 6.944H10.08L10.288 6H15.184L14.976 6.944H14.752C14.4107 6.944 14.112 6.976 13.856 7.04C13.6107 7.104 13.4667 7.248 13.424 7.472L11.76 15.84C11.7173 16.0747 11.8027 16.2293 12.016 16.304C12.2293 16.3787 12.5173 16.416 12.88 16.416H13.104L12.896 17.36H8L8.208 16.416H8.432C8.77333 16.416 9.06667 16.384 9.312 16.32C9.568 16.2453 9.71733 16.1013 9.76 15.888Z" fill="currentColor"/>
</svg>`,
  "mk-mark-strikethrough": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.625 9.21591C14.5644 8.67803 14.3144 8.26136 13.875 7.96591C13.4356 7.66667 12.8826 7.51705 12.2159 7.51705C11.7386 7.51705 11.3258 7.5928 10.9773 7.74432C10.6288 7.89205 10.358 8.09659 10.1648 8.35795C9.97538 8.61553 9.88068 8.90909 9.88068 9.23864C9.88068 9.51515 9.94508 9.75379 10.0739 9.95455C10.2064 10.1553 10.3788 10.3239 10.5909 10.4602C10.8068 10.5928 11.0379 10.7045 11.2841 10.7955C11.5303 10.8826 11.767 10.9545 11.9943 11.0114L13.1307 11.3068C13.5019 11.3977 13.8826 11.5208 14.2727 11.6761C14.6629 11.8314 15.0246 12.036 15.358 12.2898C15.6913 12.5436 15.9602 12.858 16.1648 13.233C16.3731 13.608 16.4773 14.0568 16.4773 14.5795C16.4773 15.2386 16.3068 15.8239 15.9659 16.3352C15.6288 16.8466 15.1383 17.25 14.4943 17.5455C13.8542 17.8409 13.0795 17.9886 12.1705 17.9886C11.2992 17.9886 10.5455 17.8504 9.90909 17.5739C9.27273 17.2973 8.77462 16.9053 8.41477 16.3977C8.05492 15.8864 7.85606 15.2803 7.81818 14.5795H9.57955C9.61364 15 9.75 15.3504 9.98864 15.6307C10.2311 15.9072 10.5398 16.1136 10.9148 16.25C11.2936 16.3826 11.7083 16.4489 12.1591 16.4489C12.6553 16.4489 13.0966 16.3712 13.483 16.2159C13.8731 16.0568 14.1799 15.8371 14.4034 15.5568C14.6269 15.2727 14.7386 14.9413 14.7386 14.5625C14.7386 14.2178 14.6402 13.9356 14.4432 13.7159C14.25 13.4962 13.9867 13.3144 13.6534 13.1705C13.3239 13.0265 12.9508 12.8996 12.5341 12.7898L11.1591 12.4148C10.2273 12.161 9.48864 11.7879 8.94318 11.2955C8.40152 10.803 8.13068 10.1515 8.13068 9.34091C8.13068 8.67045 8.3125 8.08523 8.67614 7.58523C9.03977 7.08523 9.5322 6.69697 10.1534 6.42045C10.7746 6.14015 11.4754 6 12.2557 6C13.0436 6 13.7386 6.13826 14.3409 6.41477C14.947 6.69129 15.4242 7.07197 15.7727 7.55682C16.1212 8.03788 16.303 8.59091 16.3182 9.21591H14.625Z" fill="currentColor"/>
<path d="M7 12.5568H17.2955V13.6477H7V12.5568Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-code": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3 13.1667V11.8333L8 8V9.81548L4.31024 12.4762L4.34413 12.369V12.625L4.31024 12.5238L8 15.1786V17L3 13.1667Z" fill="currentColor"/>
<path d="M21 13.1667V11.8333L16 8V9.81548L19.6898 12.4762L19.6559 12.369V12.625L19.6898 12.5238L16 15.1786V17L21 13.1667Z" fill="currentColor"/>
<path d="M14.5739 5.81818L10.8239 19.75H9.30682L13.0568 5.81818H14.5739Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-link": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.2514 10.7486C12.7514 10.2486 12.0732 9.9678 11.3661 9.9678C10.659 9.9678 9.98084 10.2486 9.48077 10.7486L6.8141 13.4152C6.55941 13.6612 6.35626 13.9555 6.2165 14.2808C6.07674 14.6062 6.00318 14.9561 6.0001 15.3102C5.99702 15.6642 6.06449 16.0154 6.19858 16.3431C6.33266 16.6708 6.53067 16.9686 6.78105 17.219C7.03143 17.4693 7.32917 17.6673 7.65689 17.8014C7.98461 17.9355 8.33576 18.003 8.68984 17.9999C9.04392 17.9968 9.39384 17.9233 9.71918 17.7835C10.0445 17.6437 10.3388 17.4406 10.5848 17.1859L11.3194 16.4519M10.8141 13.1859C11.3142 13.6858 11.9923 13.9667 12.6994 13.9667C13.4065 13.9667 14.0847 13.6858 14.5848 13.1859L17.2514 10.5192C17.7372 10.0163 18.006 9.34269 17.9999 8.6435C17.9938 7.9443 17.7134 7.27547 17.219 6.78105C16.7245 6.28663 16.0557 6.00618 15.3565 6.0001C14.6573 5.99403 13.9837 6.26281 13.4808 6.74856L12.7474 7.4819" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>`,
  "mk-mark-blocklink": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.5 15C10.1193 15 9 13.8807 9 12.5C9 11.1193 10.1193 10 11.5 10" stroke="currentColor" stroke-width="1.5"/>
<path d="M13 10C14.3807 10 15.5 11.1193 15.5 12.5C15.5 13.8807 14.3807 15 13 15" stroke="currentColor" stroke-width="1.5"/>
<line x1="4" y1="12.25" x2="9" y2="12.25" stroke="currentColor" stroke-width="1.5"/>
<line x1="15" y1="12.25" x2="20" y2="12.25" stroke="currentColor" stroke-width="1.5"/>
</svg>`,
  "mk-mark-highlight": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g opacity="0.2">
<path fill-rule="evenodd" clip-rule="evenodd" d="M18 21H6V19H18V20Z" fill="currentColor"/>
</g>
<path fill-rule="evenodd" clip-rule="evenodd" d="M9.43302 10.7498L9.2698 13.9711L11.3368 15.3582L14.256 13.9863L9.43302 10.7498ZM13.7828 5.58248L9.43305 10.7498L14.256 13.9863L17.3893 8.00268C17.626 7.5506 17.4844 6.99279 17.0606 6.70843L15.1051 5.39611C14.6813 5.11175 14.1114 5.19208 13.7828 5.58248Z" fill="currentColor"/>
<path d="M7.65151 16.3826L9.0386 14.3156L11.1056 15.7027L10.412 16.7362L7.65151 16.3826Z" fill="currentColor"/>
</svg>`,
  "mk-make-attach": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path fill-rule="evenodd" d="M17 8H7a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1ZM7 7a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H7Z" clip-rule="evenodd"/>
<path d="M8.2 14.067a1 1 0 0 1 1.6 0L12 17H6l2.2-2.933Z"/>
<path d="M13.168 12.248a1 1 0 0 1 1.664 0L18 17h-8l3.168-4.752Z"/>
<circle cx="8.5" cy="10.5" r="1.5"/>
</svg>`,
  "mk-make-keyboard": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path fill-rule="evenodd" d="M8.5 10a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H9a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H11a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H13a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H15a.5.5 0 0 1-.5-.5Zm-5 2a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H10a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H14a.5.5 0 0 1-.5-.5Zm.035 1.5H9.5a.5.5 0 0 0 0 1h3.626c.091-.355.23-.69.41-1Z" clip-rule="evenodd"/>
<path d="M17 13.5v3m-1.5-1L17 17l1.5-1.5"/>
<path fill-rule="evenodd" d="M7.5 9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2.53a4.045 4.045 0 0 1 1 0V9A1.5 1.5 0 0 0 16 7.5H8A1.5 1.5 0 0 0 6.5 9v6A1.5 1.5 0 0 0 8 16.5h5.126a4.01 4.01 0 0 1-.126-1H8a.5.5 0 0 1-.5-.5V9Z" clip-rule="evenodd"/>
</svg>`,
  "mk-make-slash": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path d="M9.574 4.818 5.824 18.75H4.307l3.75-13.932h1.517Z" opacity=".3"/>
<path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5Z" clip-rule="evenodd"/>
<path fill-rule="evenodd" d="M14.5 8a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0v-8a.5.5 0 0 1 .5-.5Z" clip-rule="evenodd"/>
</svg>`,
  "mk-make-style": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path d="M7.648 15.273H6L8.51 8h1.982L13 15.273h-1.647L9.53 9.662h-.057l-1.825 5.61Zm-.103-2.859h3.892v1.2H7.545v-1.2Zm8.315 2.989c-.345 0-.659-.065-.94-.195a1.615 1.615 0 0 1-.671-.572c-.166-.25-.249-.554-.249-.909 0-.312.062-.566.185-.76a1.3 1.3 0 0 1 .493-.461c.206-.112.433-.194.682-.249.251-.057.503-.102.756-.135.332-.043.6-.074.807-.096.208-.023.36-.063.454-.117.097-.054.146-.15.146-.284v-.028c0-.35-.096-.623-.288-.817-.19-.194-.477-.291-.863-.291-.4 0-.714.087-.94.262a1.553 1.553 0 0 0-.48.562l-.796-.285a1.91 1.91 0 0 1 .568-.774c.24-.187.5-.317.782-.39a3.23 3.23 0 0 1 .838-.114c.175 0 .376.021.603.064.23.04.451.124.665.252.215.128.394.32.536.579.142.258.213.604.213 1.037v3.594h-.838v-.74h-.043a1.473 1.473 0 0 1-.284.38 1.64 1.64 0 0 1-.53.345c-.22.095-.488.142-.805.142Zm.129-.752c.331 0 .61-.066.838-.196a1.33 1.33 0 0 0 .696-1.154v-.767c-.036.043-.114.082-.235.117a3.98 3.98 0 0 1-.412.09 19.433 19.433 0 0 1-.802.106 3.203 3.203 0 0 0-.61.138 1.053 1.053 0 0 0-.456.28c-.113.124-.17.292-.17.505 0 .291.108.511.323.66.218.147.494.22.828.22Z"/>
</svg>`,
  "mk-mark-color": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.47727 17H7L11.2727 5H12.7273L17 17H15.5227L12.0455 6.89844H11.9545L8.47727 17ZM9.02273 12.3125H14.9773V13.6016H9.02273V12.3125Z" fill="currentColor"/>
<path opacity="0.2" fill-rule="evenodd" clip-rule="evenodd" d="M18 21H6V19H18V20Z" fill="currentColor"/>
</svg>`,
  "mk-ui-any": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3" y="3" width="7" height="7" fill="currentColor"/>
<rect x="6" y="6" width="7" height="7" fill="currentColor"/>
</svg>`,
  "mk-ui-all": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="3.5" width="6" height="6" stroke="currentColor"/>
<rect x="6.5" y="6.5" width="6" height="6" stroke="currentColor"/>
<rect x="6" y="6" width="4" height="4" fill="currentColor"/>
</svg>`,
  "mk-ui-context": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="3.5" width="3" height="3" stroke="currentColor"/>
<rect x="3.5" y="9.5" width="3" height="3" stroke="currentColor"/>
<rect x="9.5" y="3.5" width="3" height="3" stroke="currentColor"/>
<rect x="9.5" y="9.5" width="3" height="3" stroke="currentColor"/>
<path d="M6.5 9.5L9.5 6.5M6.5 6.5L9.5 9.5" stroke="currentColor"/>
</svg>`,
  "mk-ui-full-width": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-unfold-horizontal"><path d="M16 12h6"/><path d="M8 12H2"/><path d="M12 2v2"/><path d="M12 8v2"/><path d="M12 14v2"/><path d="M12 20v2"/><path d="m19 15 3-3-3-3"/><path d="m5 9-3 3 3 3"/></svg>`
};
var mkLogo = `<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" viewBox="0 0 100 100">
<path d="m51.39 53.148 36.687-38.355v73.284H11.923V14.793L48.61 53.148 50 54.6l1.39-1.453Z"/>
</svg>
`;
var lucideIcons = [
  "accessibility",
  "activity",
  "air-vent",
  "airplay",
  "alarm-check",
  "alarm-clock-off",
  "alarm-clock",
  "alarm-minus",
  "alarm-plus",
  "album",
  "alert-circle",
  "alert-octagon",
  "alert-triangle",
  "align-center-horizontal",
  "align-center-vertical",
  "align-center",
  "align-end-horizontal",
  "align-end-vertical",
  "align-horizontal-distribute-center",
  "align-horizontal-distribute-end",
  "align-horizontal-distribute-start",
  "align-horizontal-justify-center",
  "align-horizontal-justify-end",
  "align-horizontal-justify-start",
  "align-horizontal-space-around",
  "align-horizontal-space-between",
  "align-justify",
  "align-left",
  "align-right",
  "align-start-horizontal",
  "align-start-vertical",
  "align-vertical-distribute-center",
  "align-vertical-distribute-end",
  "align-vertical-distribute-start",
  "align-vertical-justify-center",
  "align-vertical-justify-end",
  "align-vertical-justify-start",
  "align-vertical-space-around",
  "align-vertical-space-between",
  "anchor",
  "angry",
  "annoyed",
  "aperture",
  "apple",
  "archive-restore",
  "archive",
  "armchair",
  "arrow-big-down",
  "arrow-big-left",
  "arrow-big-right",
  "arrow-big-up",
  "arrow-down-circle",
  "arrow-down-left-from-circle",
  "arrow-down-left",
  "arrow-down-right-from-circle",
  "arrow-down-right",
  "arrow-down",
  "arrow-left-circle",
  "arrow-left-right",
  "arrow-left",
  "arrow-right-circle",
  "arrow-right",
  "arrow-up-circle",
  "arrow-up-down",
  "arrow-up-left-from-circle",
  "arrow-up-left",
  "arrow-up-right-from-circle",
  "arrow-up-right",
  "arrow-up",
  "asterisk",
  "at-sign",
  "atom",
  "award",
  "axe",
  "axis-3d",
  "baby",
  "backpack",
  "baggage-claim",
  "ban",
  "banana",
  "banknote",
  "bar-chart-2",
  "bar-chart-3",
  "bar-chart-4",
  "bar-chart-horizontal",
  "bar-chart",
  "baseline",
  "bath",
  "battery-charging",
  "battery-full",
  "battery-low",
  "battery-medium",
  "battery-warning",
  "battery",
  "beaker",
  "bean-off",
  "bean",
  "bed-double",
  "bed-single",
  "bed",
  "beef",
  "beer",
  "bell-minus",
  "bell-off",
  "bell-plus",
  "bell-ring",
  "bell",
  "bike",
  "binary",
  "bird",
  "bitcoin",
  "blinds",
  "bluetooth-connected",
  "bluetooth-off",
  "bluetooth-searching",
  "bluetooth",
  "bold",
  "bomb",
  "bone",
  "book-copy",
  "book-down",
  "book-key",
  "book-lock",
  "book-marked",
  "book-minus",
  "book-open-check",
  "book-open",
  "book-plus",
  "book-template",
  "book-up",
  "book-x",
  "book",
  "bookmark-minus",
  "bookmark-plus",
  "bookmark",
  "bot",
  "box-select",
  "box",
  "boxes",
  "brain-circuit",
  "brain-cog",
  "brain",
  "briefcase",
  "brush",
  "bug",
  "building-2",
  "building",
  "bus",
  "cake",
  "calculator",
  "calendar-check-2",
  "calendar-check",
  "calendar-clock",
  "calendar-days",
  "calendar-heart",
  "calendar-minus",
  "calendar-off",
  "calendar-plus",
  "calendar-range",
  "calendar-search",
  "calendar-x2",
  "calendar-x",
  "calendar",
  "camera-off",
  "camera",
  "candy-off",
  "candy",
  "car",
  "carrot",
  "case-lower",
  "case-sensitive",
  "case-upper",
  "cast",
  "castle",
  "cat",
  "check-check",
  "check-circle-2",
  "check-circle",
  "check-square",
  "check",
  "chef-hat",
  "cherry",
  "chevron-down-square",
  "chevron-down",
  "chevron-first",
  "chevron-last",
  "chevron-left-square",
  "chevron-left",
  "chevron-right-square",
  "chevron-right",
  "chevron-up-square",
  "chevron-up",
  "chevrons-down-up",
  "chevrons-down",
  "chevrons-left-right",
  "chevrons-left",
  "chevrons-right-left",
  "chevrons-right",
  "chevrons-up-down",
  "chevrons-up",
  "chrome",
  "church",
  "cigarette-off",
  "cigarette",
  "circle-dot",
  "circle-ellipsis",
  "circle-equal",
  "circle-off",
  "circle-slash-2",
  "circle-slash",
  "circle",
  "circuit-board",
  "citrus",
  "clapperboard",
  "clipboard-check",
  "clipboard-copy",
  "clipboard-edit",
  "clipboard-list",
  "clipboard-paste",
  "clipboard-signature",
  "clipboard-type",
  "clipboard-x",
  "clipboard",
  "clock-1",
  "clock-10",
  "clock-11",
  "clock-12",
  "clock-2",
  "clock-3",
  "clock-4",
  "clock-5",
  "clock-6",
  "clock-7",
  "clock-8",
  "clock-9",
  "clock",
  "cloud-cog",
  "cloud-drizzle",
  "cloud-fog",
  "cloud-hail",
  "cloud-lightning",
  "cloud-moon-rain",
  "cloud-moon",
  "cloud-off",
  "cloud-rain-wind",
  "cloud-rain",
  "cloud-snow",
  "cloud-sun-rain",
  "cloud-sun",
  "cloud",
  "cloudy",
  "clover",
  "code-2",
  "code",
  "codepen",
  "codesandbox",
  "coffee",
  "cog",
  "coins",
  "columns",
  "command",
  "compass",
  "component",
  "concierge-bell",
  "construction",
  "contact",
  "contrast",
  "cookie",
  "copy-check",
  "copy-minus",
  "copy-plus",
  "copy-slash",
  "copy-x",
  "copy",
  "copyleft",
  "copyright",
  "corner-down-left",
  "corner-down-right",
  "corner-left-down",
  "corner-left-up",
  "corner-right-down",
  "corner-right-up",
  "corner-up-left",
  "corner-up-right",
  "cpu",
  "creative-commons",
  "credit-card",
  "croissant",
  "crop",
  "cross",
  "crosshair",
  "crown",
  "cup-soda",
  "curly-braces",
  "currency",
  "database-backup",
  "database",
  "delete",
  "diamond",
  "dice-1",
  "dice-2",
  "dice-3",
  "dice-4",
  "dice-5",
  "dice-6",
  "dices",
  "diff",
  "disc-2",
  "disc",
  "divide-circle",
  "divide-square",
  "divide",
  "dna-off",
  "dna",
  "dog",
  "dollar-sign",
  "door-closed",
  "door-open",
  "download-cloud",
  "download",
  "dribbble",
  "droplet",
  "droplets",
  "drumstick",
  "dumbbell",
  "ear-off",
  "ear",
  "edit-2",
  "edit-3",
  "edit",
  "egg-fried",
  "egg-off",
  "egg",
  "equal-not",
  "equal",
  "eraser",
  "euro",
  "expand",
  "external-link",
  "eye-off",
  "eye",
  "facebook",
  "factory",
  "fan",
  "fast-forward",
  "feather",
  "figma",
  "file-archive",
  "file-audio-2",
  "file-audio",
  "file-axis-3d",
  "file-badge-2",
  "file-badge",
  "file-bar-chart-2",
  "file-bar-chart",
  "file-box",
  "file-check-2",
  "file-check",
  "file-clock",
  "file-code",
  "file-cog-2",
  "file-cog",
  "file-diff",
  "file-digit",
  "file-down",
  "file-edit",
  "file-heart",
  "file-image",
  "file-input",
  "file-json-2",
  "file-json",
  "file-key-2",
  "file-key",
  "file-line-chart",
  "file-lock-2",
  "file-lock",
  "file-minus-2",
  "file-minus",
  "file-output",
  "file-pie-chart",
  "file-plus-2",
  "file-plus",
  "file-question",
  "file-scan",
  "file-search-2",
  "file-search",
  "file-signature",
  "file-spreadsheet",
  "file-symlink",
  "file-terminal",
  "file-text",
  "file-type-2",
  "file-type",
  "file-up",
  "file-video-2",
  "file-video",
  "file-volume-2",
  "file-volume",
  "file-warning",
  "file-x2",
  "file-x",
  "file",
  "files",
  "film",
  "filter-x",
  "filter",
  "fingerprint",
  "fish-off",
  "fish",
  "flag-off",
  "flag-triangle-left",
  "flag-triangle-right",
  "flag",
  "flame",
  "flashlight-off",
  "flashlight",
  "flask-conical-off",
  "flask-conical",
  "flask-round",
  "flip-horizontal-2",
  "flip-horizontal",
  "flip-vertical-2",
  "flip-vertical",
  "flower-2",
  "flower",
  "focus",
  "folder-archive",
  "folder-check",
  "folder-clock",
  "folder-closed",
  "folder-cog-2",
  "folder-cog",
  "folder-down",
  "folder-edit",
  "folder-git-2",
  "folder-git",
  "folder-heart",
  "folder-input",
  "folder-key",
  "folder-lock",
  "folder-minus",
  "folder-open",
  "folder-output",
  "folder-plus",
  "folder-search-2",
  "folder-search",
  "folder-symlink",
  "folder-tree",
  "folder-up",
  "folder-x",
  "folder",
  "folders",
  "footprints",
  "forklift",
  "form-input",
  "forward",
  "frame",
  "framer",
  "frown",
  "fuel",
  "function-square",
  "gamepad-2",
  "gamepad",
  "gauge",
  "gavel",
  "gem",
  "ghost",
  "gift",
  "git-branch-plus",
  "git-branch",
  "git-commit",
  "git-compare",
  "git-fork",
  "git-merge",
  "git-pull-request-closed",
  "git-pull-request-draft",
  "git-pull-request",
  "github",
  "gitlab",
  "glass-water",
  "glasses",
  "globe-2",
  "globe",
  "grab",
  "graduation-cap",
  "grape",
  "grid",
  "grip-horizontal",
  "grip-vertical",
  "grip",
  "hammer",
  "hand-metal",
  "hand",
  "hard-drive",
  "hard-hat",
  "hash",
  "haze",
  "heading-1",
  "heading-2",
  "heading-3",
  "heading-4",
  "heading-5",
  "heading-6",
  "heading",
  "headphones",
  "heart-crack",
  "heart-handshake",
  "heart-off",
  "heart-pulse",
  "heart",
  "help-circle",
  "helping-hand",
  "hexagon",
  "highlighter",
  "history",
  "home",
  "hop-off",
  "hop",
  "hotel",
  "hourglass",
  "ice-cream-2",
  "ice-cream",
  "image-minus",
  "image-off",
  "image-plus",
  "image",
  "import",
  "inbox",
  "indent",
  "indian-rupee",
  "infinity",
  "info",
  "inspect",
  "instagram",
  "italic",
  "japanese-yen",
  "joystick",
  "key",
  "keyboard",
  "lamp-ceiling",
  "lamp-desk",
  "lamp-floor",
  "lamp-wall-down",
  "lamp-wall-up",
  "lamp",
  "landmark",
  "languages",
  "laptop-2",
  "laptop",
  "lasso-select",
  "lasso",
  "laugh",
  "layers",
  "layout-dashboard",
  "layout-grid",
  "layout-list",
  "layout-template",
  "layout",
  "leaf",
  "library",
  "life-buoy",
  "lightbulb-off",
  "lightbulb",
  "line-chart",
  "link-2off",
  "link-2",
  "link",
  "linkedin",
  "list-checks",
  "list-end",
  "list-minus",
  "list-music",
  "list-ordered",
  "list-plus",
  "list-start",
  "list-tree",
  "list-video",
  "list-x",
  "list",
  "loader-2",
  "loader",
  "locate-fixed",
  "locate-off",
  "locate",
  "lock",
  "log-in",
  "log-out",
  "luggage",
  "magnet",
  "mail-check",
  "mail-minus",
  "mail-open",
  "mail-plus",
  "mail-question",
  "mail-search",
  "mail-warning",
  "mail-x",
  "mail",
  "mailbox",
  "mails",
  "map-pin-off",
  "map-pin",
  "map",
  "martini",
  "maximize-2",
  "maximize",
  "medal",
  "megaphone-off",
  "megaphone",
  "meh",
  "menu",
  "message-circle",
  "message-square-dashed",
  "message-square-plus",
  "message-square",
  "messages-square",
  "mic-2",
  "mic-off",
  "mic",
  "microscope",
  "microwave",
  "milestone",
  "milk-off",
  "milk",
  "minimize-2",
  "minimize",
  "minus-circle",
  "minus-square",
  "minus",
  "monitor-off",
  "monitor-smartphone",
  "monitor-speaker",
  "monitor",
  "moon",
  "more-horizontal",
  "more-vertical",
  "mountain-snow",
  "mountain",
  "mouse-pointer-2",
  "mouse-pointer-click",
  "mouse-pointer",
  "mouse",
  "move-3d",
  "move-diagonal-2",
  "move-diagonal",
  "move-horizontal",
  "move-vertical",
  "move",
  "music-2",
  "music-3",
  "music-4",
  "music",
  "navigation-2off",
  "navigation-2",
  "navigation-off",
  "navigation",
  "network",
  "newspaper",
  "nfc",
  "nut-off",
  "nut",
  "octagon",
  "option",
  "orbit",
  "outdent",
  "package-2",
  "package-check",
  "package-minus",
  "package-open",
  "package-plus",
  "package-search",
  "package-x",
  "package",
  "paint-bucket",
  "paintbrush-2",
  "paintbrush",
  "palette",
  "palmtree",
  "paperclip",
  "parking-circle-off",
  "parking-circle",
  "parking-square-off",
  "parking-square",
  "party-popper",
  "pause-circle",
  "pause-octagon",
  "pause",
  "pen-tool",
  "pencil",
  "percent",
  "person-standing",
  "phone-call",
  "phone-forwarded",
  "phone-incoming",
  "phone-missed",
  "phone-off",
  "phone-outgoing",
  "phone",
  "picture-in-picture-2",
  "picture-in-picture",
  "pie-chart",
  "piggy-bank",
  "pilcrow",
  "pill",
  "pin-off",
  "pin",
  "pipette",
  "pizza",
  "plane-landing",
  "plane-takeoff",
  "plane",
  "play-circle",
  "play",
  "plug-2",
  "plug-zap",
  "plug",
  "plus-circle",
  "plus-square",
  "plus",
  "pocket",
  "podcast",
  "pointer",
  "pound-sterling",
  "power-off",
  "power",
  "printer",
  "puzzle",
  "qr-code",
  "quote",
  "radio-receiver",
  "radio-tower",
  "radio",
  "rat",
  "receipt",
  "rectangle-horizontal",
  "rectangle-vertical",
  "recycle",
  "redo-2",
  "redo",
  "refresh-ccw",
  "refresh-cw",
  "refrigerator",
  "regex",
  "remove-formatting",
  "repeat-1",
  "repeat",
  "replace-all",
  "replace",
  "reply-all",
  "reply",
  "rewind",
  "rocket",
  "rocking-chair",
  "rotate-3d",
  "rotate-ccw",
  "rotate-cw",
  "router",
  "rss",
  "ruler",
  "russian-ruble",
  "sailboat",
  "salad",
  "sandwich",
  "save",
  "scale-3d",
  "scale",
  "scaling",
  "scan-face",
  "scan-line",
  "scan",
  "school-2",
  "school",
  "scissors",
  "screen-share-off",
  "screen-share",
  "scroll",
  "search",
  "send",
  "separator-horizontal",
  "separator-vertical",
  "server-cog",
  "server-crash",
  "server-off",
  "server",
  "settings-2",
  "settings",
  "share-2",
  "share",
  "sheet",
  "shield-alert",
  "shield-check",
  "shield-close",
  "shield-off",
  "shield-question",
  "shield",
  "ship",
  "shirt",
  "shopping-bag",
  "shopping-cart",
  "shovel",
  "shower-head",
  "shrink",
  "shrub",
  "shuffle",
  "sidebar-close",
  "sidebar-open",
  "sidebar",
  "sigma",
  "signal-high",
  "signal-low",
  "signal-medium",
  "signal-zero",
  "signal",
  "siren",
  "skip-back",
  "skip-forward",
  "skull",
  "slack",
  "slice",
  "sliders-horizontal",
  "sliders",
  "smartphone-charging",
  "smartphone-nfc",
  "smartphone",
  "smile-plus",
  "smile",
  "snowflake",
  "sofa",
  "sort-asc",
  "sort-desc",
  "soup",
  "space",
  "speaker",
  "spline",
  "split-square-horizontal",
  "split-square-vertical",
  "sprout",
  "square",
  "stamp",
  "star-half",
  "star-off",
  "star",
  "step-back",
  "step-forward",
  "stethoscope",
  "sticker",
  "sticky-note",
  "stop-circle",
  "store",
  "stretch-horizontal",
  "stretch-vertical",
  "strikethrough",
  "subscript",
  "subtitles",
  "sun-dim",
  "sun-medium",
  "sun-moon",
  "sun-snow",
  "sun",
  "sunrise",
  "sunset",
  "superscript",
  "swiss-franc",
  "switch-camera",
  "sword",
  "swords",
  "syringe",
  "table-2",
  "table",
  "tablet",
  "tablets",
  "tag",
  "tags",
  "target",
  "tent",
  "terminal-square",
  "terminal",
  "test-tube-2",
  "test-tube",
  "test-tubes",
  "text-cursor-input",
  "text-cursor",
  "text-selection",
  "text",
  "thermometer-snowflake",
  "thermometer-sun",
  "thermometer",
  "thumbs-down",
  "thumbs-up",
  "ticket",
  "timer-off",
  "timer-reset",
  "timer",
  "toggle-left",
  "toggle-right",
  "tornado",
  "tower-control",
  "toy-brick",
  "train",
  "trash-2",
  "trash",
  "tree-deciduous",
  "tree-pine",
  "trees",
  "trello",
  "trending-down",
  "trending-up",
  "triangle",
  "trophy",
  "truck",
  "tv-2",
  "tv",
  "twitch",
  "twitter",
  "type",
  "umbrella",
  "underline",
  "undo-2",
  "undo",
  "unlink-2",
  "unlink",
  "unlock",
  "upload-cloud",
  "upload",
  "usb",
  "user-check",
  "user-cog",
  "user-minus",
  "user-plus",
  "user-x",
  "user",
  "users",
  "utensils-crossed",
  "utensils",
  "utility-pole",
  "vault",
  "vegan",
  "venetian-mask",
  "verified",
  "vibrate-off",
  "vibrate",
  "video-off",
  "video",
  "view",
  "voicemail",
  "volume-1",
  "volume-2",
  "volume-x",
  "volume",
  "vote",
  "wallet",
  "wand-2",
  "wand",
  "warehouse",
  "watch",
  "waves",
  "webcam",
  "webhook",
  "wheat-off",
  "wheat",
  "whole-word",
  "wifi-off",
  "wifi",
  "wind",
  "wine-off",
  "wine",
  "wrap-text",
  "wrench",
  "x-circle",
  "x-octagon",
  "x-square",
  "x",
  "youtube",
  "zap-off",
  "zap",
  "zoom-in",
  "zoom-out"
];

// src/core/i18n.ts
var T4 = class {
  constructor() {
    this.all = {
      en: {
        hintText: {
          dragDropModifierKeys: "Hold ${1} to Pin and ${2} to Copy"
        },
        defaults: {
          spaceNote: "Space Note",
          spaceContext: "Space Files"
        },
        commands: {
          h1: "Heading 1",
          h2: "Heading 2",
          h3: "Heading 3",
          h4: "Heading 4",
          h5: "Heading 5",
          h6: "Heading 6",
          columns: "Columns",
          button: "Button",
          label: "Label",
          column: "Column",
          group: "Group",
          paragraph: "Text",
          card: "Card",
          progress: "Progress",
          list: "Bullet List",
          "ordered-list": "Numbered List",
          todo: "To-do List",
          quote: "Quote",
          divider: "Divider",
          note: "Link to Note",
          link: "Link",
          callout: "Callout",
          table: "Table",
          codeblock: "Code Block",
          emoji: "Emoji",
          image: "Image",
          flow: "Existing Note",
          newNote: "New Note",
          tag: "Tag",
          makeMenu: "Flow Menu",
          selectStyle: "Style",
          toggleKeyboard: "Toggle Keyboard",
          rows: "Rows",
          masonry: "Gallery"
        },
        styles: {
          bold: "Bold",
          italics: "Italics",
          strikethrough: "Strikethrough",
          code: "Code",
          link: "Web Link",
          blocklink: "Link to Note",
          textColor: "Text Color",
          highlight: "Highlight"
        },
        commandsSuggest: {
          noResult: "No result"
        },
        commandPalette: {
          enable: "Enable",
          disabled: "Disable",
          openFlow: "Open Flow Blocks in Selection",
          closeFlow: "Close Flow Blocks in Selection",
          toggleBold: "Toggle Bold",
          toggleItalics: "Toggle Italics",
          openSpaces: "Open Spaces",
          migrateData: "Migrate Spaces From 0.7",
          blink: "Blink",
          openFileContext: "Open Explorer",
          convertPathToSpace: "Convert to Space",
          revealFile: "Reveal File in Spaces",
          releaseNotes: "Release Notes",
          toggleBacklinks: "Toggle Backlinks",
          collapseAllFolders: "Collapse All Folders",
          addFileSpace: "Add File to Space",
          removeFileSpace: "Remove File from Space"
        },
        menu: {
          openSpace: "Open Space",
          revealInDefault: "Reveal in Finder",
          setNone: "None",
          fileMetadataDescription: "This note only",
          openFilePane: "Open in a new pane",
          rename: "Rename",
          changeToFolderNote: "New Space from Note",
          moveFile: "Move file to...",
          duplicate: "Make a copy",
          edit: "Edit",
          delete: "Delete",
          getHelp: "Make.md Community",
          vault: "Vault",
          openVault: "Open Another Vault",
          openVaultInFolder: "Open Vault Folder",
          obSettings: "Obsidian Settings",
          commandPalette: "Command Palette",
          backToSpace: "Back to Spaces",
          collapseAllSections: "Collapse All Spaces",
          expandAllSections: "Expand All Spaces",
          collapseAllFolders: "Collapse All Folders",
          expandAllFolders: "Expand All Folders",
          spaceTitle: "Add/Remove in Space",
          home: "Home",
          waypoints: "Waypoints",
          none: "None",
          tableView: "Table View",
          cardView: "Card View",
          listView: "List View",
          flowView: "Flow View",
          groupBy: "Group By",
          sortBy: "Sort By",
          newFilter: "New Filter",
          clearFilters: "Clear Filters",
          hide: "Hide",
          unhideFields: "Unhide All Properties",
          importDataview: "Import All Dataview Properties",
          saveAllProperties: "Save All Properties to Files",
          mergeProperties: "Merge Properties",
          removeFromSpace: "Unpin from Space",
          removeFromWaypoints: "Unpin from Waypoints",
          editCode: "Edit Code",
          deleteProperty: "Delete Property",
          hideProperty: "Hide Property",
          unhideProperty: "Unhide Property",
          saveProperty: "Save Property",
          sortAscending: "Sort Ascending",
          sortDescending: "Sort Descending",
          deleteRow: "Delete Item",
          collapseAll: "Collapse All",
          customSort: "Custom Sort",
          groupSpaces: "Group Spaces",
          fileNameSortAlphaAsc: "File Name (A to Z)",
          fileNameSortAlphaDesc: "File Name (Z to A)",
          createdTimeSortAsc: "Created Time (new to old)",
          createdTimeSortDesc: "Created Time (old to new)",
          modifiedTimeSortAsc: "Modified Time (new to old)",
          modifiedTimeSortDesc: "Modified Time (old to new)",
          spaces: "Spaces",
          tags: "Tags",
          manageHiddenFiles: "Manage Hidden Files",
          deleteSpace: "Delete",
          changeColor: "Change Color",
          changePropertyType: "Change Type",
          deleteFiles: "Delete Files",
          createFolderSpace: "Create Space from Folder",
          folder: "Folder",
          syncToContext: "Add Property to Context",
          setIcon: "Set Icon",
          copyEmbedLink: "Copy Embed Link",
          moveUp: "Move Up",
          moveDown: "Move Down",
          moveTo: "Move To",
          groupNodes: "Group Nodes",
          moveFrame: "Move Frame",
          renameFrame: "Rename Frame",
          deleteFrame: "Delete Frame"
        },
        buttons: {
          moreOptions: "More Options",
          saveProperty: "Save Property",
          newNote: "New Note",
          changeIcon: "Change Sticker",
          removeIcon: "Remove Sticker",
          changeBanner: "Change Cover",
          changeBannerShort: "Cover",
          saveChanges: "Save Changes",
          removeBanner: "Remove Cover",
          rename: "Change Name",
          editFrame: "Edit Frame",
          saveSpace: "Save Space",
          createSpace: "New Space",
          createFolder: "New Folder/Space",
          createNote: "New Note",
          createCanvas: "New Canvas",
          addIntoSpace: "New Pin",
          addSmartSearch: "Add Smart Search",
          addItem: "Add Item",
          addProperty: "Add Property",
          addContext: "Add Context",
          cancel: "Cancel",
          search: "Search",
          delete: "Delete",
          toggleFlow: "Toggle Flow",
          openFlow: "Open Flow",
          hideFlow: "Hide Flow",
          openLink: "Open Link",
          addToSpace: "Pin to Space",
          addToSpaceShort: "Pin",
          addTag: "Add Tag",
          tag: "Tag",
          syncFields: "Sync Properties",
          convertTable: "Convert to Markdown",
          cutTable: "Cut Table",
          deleteTable: "Delete Table",
          blink: "Blink",
          addFile: "Add Item",
          merge: "Merge",
          saveView: "Save View",
          saveTable: "Save Table",
          renameView: "Rename View",
          deleteView: "Delete View",
          renameTable: "Rename Table",
          renameTag: "Rename Tag",
          createTag: "Create Tag",
          currentFolder: "Current Folder",
          sync: "Sync",
          pasteCSS: "Paste CSS"
        },
        metadataTypes: {
          fileName: "File Name",
          path: "Path",
          folder: "Folder",
          sticker: "Sticker",
          color: "Color",
          created: "Created",
          lastModified: "Last Modified",
          extension: "Extension",
          size: "Size",
          tags: "Tags",
          inlinks: "Linked Mentions",
          outlinks: "Links"
        },
        filterTypes: {
          contains: "contains",
          notContains: "does not contain",
          is: "is",
          isNot: "is not",
          before: "before",
          after: "after",
          anyOf: "is any of",
          noneOf: "is none of",
          checked: "is checked",
          unchecked: "is unchecked",
          isEmpty: "is empty",
          isNotEmpty: "is not empty"
        },
        sortTypes: {
          alphaAsc: "A to Z",
          alphaDesc: "Z to A",
          earliest: "Earliest",
          latest: "Latest",
          checkAsc: "Checked \u2192 Unchecked",
          checkDesc: "Unchecked \u2192 Checked",
          itemsAsc: "Least Items",
          itemsDesc: "Most Items"
        },
        properties: {
          defaultField: "Name",
          text: {
            label: "Text"
          },
          number: {
            label: "Number"
          },
          preview: {
            label: "Preview"
          },
          boolean: {
            label: "Yes/No"
          },
          date: {
            label: "Date"
          },
          option: {
            label: "Option"
          },
          file: {
            label: "File"
          },
          link: {
            label: "Link"
          },
          tags: {
            label: "Tags"
          },
          object: {
            label: "Object"
          },
          context: {
            label: "Relation"
          },
          image: {
            label: "Image"
          },
          color: {
            label: "Color"
          },
          space: {
            label: "Space"
          },
          icon: {
            label: "Icon"
          },
          super: {
            label: "Super Property",
            links: "Links",
            obsidianCommands: "Obsidian Commands",
            runCommand: "Run Command",
            performAction: "Perform Action",
            whenClicked: "When Clicked"
          },
          fileProperty: {
            name: "Name",
            label: "Look Up",
            createdTime: "Created",
            modifiedTime: "Last Edited",
            sticker: "Sticker",
            extension: "Extension",
            size: "Size",
            preview: "Note Preview",
            parentFolder: "Folder"
          }
        },
        labels: {
          createFolder: "New Folder Name",
          rename: "Rename",
          createNew: "New",
          default: "Default",
          done: "Done",
          tables: "Tables",
          selectDateFormat: "Select/Type Date Format",
          renameSectionSmart: "Edit Smart Space",
          renameSection: "Edit Space",
          createSectionSmart: "New Smart Space",
          createSection: "New Space",
          createNote: "New Note Name",
          contextMaker: "Context Maker",
          select: "Select",
          pinnedItems: "Pinned Items",
          collapse: "Collapse",
          expand: "Expand",
          all: "All",
          none: "None",
          view: "View",
          findStickers: "Find Sticker",
          mergeProperties: "Merge Properties",
          placeholder: "Type '${1}' for commands",
          itemsSelected: "${1} Selected",
          selectNote: "Select Note",
          selectIcon: "Select Icon",
          selectImage: "Select Image",
          selectSpace: "Select Space",
          styleSmall: "Small",
          styleMedium: "Medium",
          styleLarge: "Large",
          hiddenFilePattern: "Name, Suffixes and Extension",
          hiddenFileSpecific: "Exclude specific files and folders",
          textPlaceholder: "Enter Text",
          noFile: "is not created yet. Click to create.",
          navigatorSearchPlaceholder: "Search by Text or Filters",
          blinkPlaceholder: "Quickly Search a File, Folder, Tag... Press Tab to Edit",
          searchPlaceholder: "Type to search...",
          contextItemSelectPlaceholder: "Find Item",
          linkItemSelectPlaceholder: "Find or Create Note",
          pinNotePlaceholder: "Select a Note or Space to Pin",
          optionItemSelectPlaceholder: "Select Option",
          viewItemSelectPlaceholder: "Select View",
          tagItemSelectPlaceholder: "Find Tag",
          spaceSelectPlaceholder: "Select Space",
          propertyItemSelectPlaceholder: "Select Property",
          sortItemSelectPlaceholder: "Select Sort",
          filterItemSelectPlaceholder: "Select Filter",
          imageSelectPlaceholder: "Select an image or paste a URL",
          imageNotFoundPlaceholder: "No Images Found",
          syncFrontmatterProperty: "Sync Frontmatter Property",
          newProperty: "New Property",
          newPropertyShort: "New Property",
          propertyType: "Type",
          propertyValueSpace: "Space",
          propertyValueProperty: "Property",
          propertyLookup: "Look Up",
          dateFormat: "Date Format",
          propertyFileProp: "Property",
          multiple: "Multiple",
          filesCount: "{$1} Files",
          hiddenFiles: "Hidden Files",
          addExtension: "Add Rule",
          saveView: "Save View",
          saveTable: "Save Table",
          renameView: "Rename View",
          renameTable: "Rename Table",
          syncMetadata: "Sync Metadata",
          syncProperties: "Sync Properties",
          selectContext: "Select Context",
          metadata: "Metadata",
          backlinks: "Backlinks",
          spaces: "Spaces",
          context: "Context",
          properties: "Properties",
          content: "Content",
          deleteSpace: "Delete Space",
          deleteFiles: "Delete Files",
          outgoingLinks: "Outgoing Links",
          moveTo: "Move to",
          addTo: "Pin to",
          copyTo: "Copy to",
          reorderIn: "Reorder in",
          border: "Border",
          corners: "Corners",
          color: "Color",
          backgroundColor: "Background",
          cornerRadius: "Radius",
          onClick: "On Click",
          layout: "Layout",
          element: "Element",
          name: "Name",
          display: "Display",
          alignment: "Alignment",
          margin: "Margin",
          padding: "Padding",
          gap: "Gap",
          width: "Width",
          height: "Height",
          opacity: "Opacity",
          shadow: "Shadow",
          shadowBlur: "Blur",
          shadowSpread: "Spread",
          typography: "Typography",
          layers: "Layers",
          fontSize: "Size",
          props: "Props",
          styles: "Styles",
          events: "Events",
          code: "Code",
          selectedLayers: "${1} Layers"
        },
        descriptions: {
          hiddenFileOptions: "Exclude any files and folders by name, suffix or extension.",
          deleteSpace: "Deleting the space will also delete the folder and its contents.",
          deleteFiles: "Delete ${1} files/folders and their contents?",
          addContext: "Contexts lets you connect properties from your tags",
          spaceProperties: "Define Properties for your Space Items",
          syncMetadata: "Select which fields from your notes to start syncing with the context.",
          syncProperties: "Contexts defines and syncs the same fields across your notes depending on their folder or tag.",
          selectContext: "Select which folder or tag context you want to sync the fields."
        },
        flowView: {
          emptyDoc: "Empty Document",
          itemsCount: " Items",
          emptyFolder: "This Folder is Empty"
        },
        notice: {
          duplicateFile: "Folder already contains note with same name",
          addedToSection: "Added to Space",
          fileExists: "File Already Exists",
          folderExists: "Folder Already Exists",
          noPropertyName: "Property Name is Required",
          duplicatePropertyName: "Duplicate Property Name",
          newSpaceName: "Enter a name for your space",
          duplicateSpaceName: "Space name already exists",
          cantConvertNoteToSpace: "The view is not a note"
        },
        settings: {
          layoutVertical: "Vertical",
          layoutHorizontal: "Horizontal",
          sectionSidebar: "Spaces",
          sectionEditor: "Maker Mode",
          sectionFlow: "Flow",
          sectionAdvanced: "Advanced",
          sectionDataview: "Dataview",
          sectionContext: "Context",
          sectionNavigator: "Navigator",
          sectionDefault: "Default Spaces",
          sectionBlink: "Blink",
          sectionInlineContext: "Inline Context",
          sectionFlowBlock: "Flow Block",
          sectionFlowMenu: "Flow Menu",
          sectionFlowStyler: "Flow Styler",
          minimalThemeFix: {
            name: "Minimal Theme Fix",
            description: "Apply fixes for the popular theme Minimal"
          },
          inlineStickerMenu: {
            name: "Inline Stickers",
            desc: "Add inline stickers by typing :"
          },
          openSpacesOnLaunch: {
            name: "Open Spaces as Default Tab",
            desc: "Open the Spaces tab when Obsidian launches"
          },
          defaultDateFormat: {
            name: "Default Date Format",
            desc: "Set the default date format, example: yyyy-MM-dd (see https://date-fns.org/v2.30.0/docs/format)"
          },
          newNotePlaceholder: {
            name: "New Note Placeholder",
            desc: "Default name for new notes"
          },
          folderIndentationLines: {
            name: "Show Folder Indentation Lines",
            desc: "Turn on to show a line on the left of folders to indicate indentation"
          },
          folderNoteLocation: {
            name: "Folder Note Location Inside Folder",
            desc: "Turn on to have folder notes inside the folder, turn off to have it outside"
          },
          folderViewDefault: {
            name: "Show Folder Note by Default",
            desc: "Show the folder note by default when opening a folder"
          },
          internalLinkFlowEditor: {
            name: "Open Flow Blocks on Internal Link Click",
            desc: "Turn on to toggle Flow Blocks directly by clicking on internal links, otherwise a tooltip will be shown"
          },
          syncContextToFrontmatter: {
            name: "Sync Context Fields to Frontmatter",
            desc: "Turn on to automatically save all context fields to frontmatter fields, not just existing frontmatter fields."
          },
          inlineBacklinks: {
            name: "Show Inline Backlinks (Inline Context required)",
            desc: "Show editable backlinks at the bottom of your notes"
          },
          dataviewInlineContext: {
            name: "Show Dataview in Inline Context",
            desc: "Show dataview when inline context is enabled"
          },
          inlineContextExplorer: {
            name: "Inline Context",
            desc: "Display the context and a banner at the top of your notes"
          },
          inlineContextExpanded: {
            name: "Auto Expand Inline Context",
            desc: "Expand the inline context sections when opening a note"
          },
          inlineContextHorizontal: {
            name: "Inline Title and Sticker Layout",
            desc: "Layout for inline title and sticker in Inline Context"
          },
          hideFrontmatter: {
            name: "Hide Frontmatter Properties",
            desc: "Hide the frontmatter properties in inline context"
          },
          openFileContext: {
            name: "Auto Open Explorer",
            desc: "Automatically open explorer panel in the right panel"
          },
          folderNote: {
            name: "Enable Folder Note",
            desc: "Access the folder note in the folder page and hide the folder note from spaces"
          },
          expandFolder: {
            name: "Auto Expand Folder",
            desc: "Auto expand folders on click"
          },
          hoverPreview: {
            name: "Preview on Hover",
            desc: "Preview on Hover while holding Control/Command key"
          },
          activeFile: {
            name: "Reveal Active File",
            desc: "Automatically reveal the active file in Spaces"
          },
          contexts: {
            name: "Contexts",
            desc: `Contexts allows you to have full control over the metadata of your files`
          },
          spaces: {
            name: "Navigator",
            desc: `The navigator lets you create and organize your spaces`
          },
          spacesStickers: {
            name: "Stickers",
            desc: `Use Emojis to make it easier to find your notes`
          },
          spacesAlias: {
            name: "Alias",
            desc: `Use the alias metadata to show in Spaces`
          },
          spacesFileExplorerDual: {
            name: "Compatibility Mode",
            desc: "This will improve the compatibility of plugins while using Spaces"
          },
          spacesDeleteOption: {
            name: "Delete File Option",
            desc: "Select how you want files to be deleted"
          },
          spacesDeleteOptions: {
            permanant: "Delete Permanently",
            trash: "Move to Obsidian Trash",
            "system-trash": "Move to System Trash"
          },
          hideRibbon: {
            name: "App Ribbon",
            desc: `Show/hide the left menu aka. ribbon`
          },
          spaceView: {
            name: "Space View",
            desc: `Open the space view when you click on a space`
          },
          defaultSpaces: {
            name: "Default Spaces",
            desc: `Recommended spaces for quickly organizing your vault`
          },
          homeSpace: {
            name: "Home Space",
            desc: `An easy-to-access space where you can add/organize your other spaces`
          },
          tagSpaces: {
            name: "Tag Spaces",
            desc: `Automatically create spaces for each of your tags`
          },
          readableLineWidth: {
            name: "Readable Line Width",
            desc: `Use Readable Line Width`
          },
          sidebarTabs: {
            name: "Sidebar Tabs",
            desc: `Show/hide other sidebar tabs`
          },
          spacesPerformance: {
            name: "Performance Mode",
            desc: `Turn on performance mode for Spaces, may affect scrolling appearance. Requires Restart`
          },
          indexSVG: {
            name: "Use SVGs as Stickers",
            desc: `Use any svg file in your vault as a sticker`
          },
          inlineStyler: {
            name: "Flow Styler",
            desc: `Select text to add styling`
          },
          inlineStylerColor: {
            name: "Text and Highlight Colors \u{1F9EA}",
            desc: `Select text color and highlight color, (this may change in the future because of the limitations with HTML and Obsidian)`
          },
          spaceRowHeight: {
            name: "Row Height",
            desc: "The height for each row in spaces (in pixels), default is 28"
          },
          makeChar: {
            name: "Flow Menu Trigger",
            desc: "Character to open the Flow Menu"
          },
          mobileMakeBar: {
            name: "Flow Styler (Mobile)",
            desc: "Replaces the mobile toolbar"
          },
          editorMarkSans: {
            name: "Mark Sans \u{1F9EA}",
            desc: `Use the editor without Markdown.`
          },
          editorMakerMode: {
            name: "Flow (Beta)",
            desc: `An integrated and intuitive editor experience`
          },
          editorMakePlacholder: {
            name: "Flow Menu Hint Text",
            desc: `Show a hint text on how to open the Flow Menu Shortcut`
          },
          blink: {
            name: "Blink",
            desc: `A faster way to search and edit your notes`
          },
          editorMakeMenu: {
            name: "Flow Menu",
            desc: `Open the Flow menu to quickly add content`
          },
          editorMakeMenuTrigger: {
            name: "Flow Menu Shortcut",
            desc: `Trigger key to use flow menu`
          },
          editorFlowReplace: {
            name: "Flow Block",
            desc: `Open your internal links or toggle your embeds in the flow block.`
          },
          editorFlowStyle: {
            name: "Flow Block Style",
            desc: "Select a theme for your flow block",
            seamless: "Seamless",
            classic: "Classic",
            minimal: "Minimal"
          }
        }
      }
    };
    this.lang = "en";
  }
  get texts() {
    return this.all["en"];
  }
};
var i18n_default = new T4().texts;

// src/core/utils/strings.ts
function ensureArray(value) {
  if (Array.isArray(value)) {
    return value;
  }
  if (typeof value === "string") {
    return [value];
  }
  return [];
}
function ensureStringValueFromSet(value, values, defaultValue2) {
  const _v = ensureString(value);
  return values.some((f4) => f4 == _v) ? _v : defaultValue2;
}
function ensureString(value) {
  if (!value)
    return "";
  if (typeof value !== "string") {
    return value.toString();
  }
  return value;
}
function ensureBoolean(value) {
  if (!value)
    return false;
  return true;
}
var indexOfCharElseEOS = (char, str) => {
  if (str.indexOf(char) > 0)
    return str.indexOf(char);
  return str.length;
};
var spaceNameFromSpacePath = (contextPath, superstate) => {
  var _a2, _b2;
  return (_b2 = (_a2 = superstate.spacesIndex.get(contextPath)) == null ? void 0 : _a2.name) != null ? _b2 : contextPath;
};
var spacePathFromName = (spaceName) => "spaces://" + encodeSpaceName(spaceName);
var encodeSpaceName = (spaceName) => spaceName == null ? void 0 : spaceName.replace(/\//g, "+");
var tagSpacePathFromTag = (tag) => "spaces://" + tag;
var wrapQuotes = (s5) => `"${s5}"`;
var removeQuotes = (s5) => {
  if (!s5)
    return s5;
  const singleQuoteWithSemicolon = s5.startsWith("'") && (s5.endsWith("';") || s5.endsWith("'"));
  const doubleQuoteWithSemicolon = s5.startsWith('"') && (s5.endsWith('";') || s5.endsWith('"'));
  if (singleQuoteWithSemicolon || doubleQuoteWithSemicolon) {
    s5 = s5.substring(1, s5.length - 1);
    if (s5.endsWith('"') || s5.endsWith("'")) {
      s5 = s5.substring(0, s5.length - 1);
    }
    return s5;
  } else {
    return s5;
  }
};
var removeLeadingSlash = (path) => path.charAt(0) == "/" ? path.substring(1) : path;
var pathToParentPath = (path) => removeLeadingSlash(path.substring(0, path.lastIndexOf("/"))) || path;

// src/utils/path.ts
var removeTrailingSlashFromFolder = (path) => path == "/" ? path : path.slice(-1) == "/" ? path.substring(0, path.length - 1) : path;
var pathDisplayName = (path, superstate) => {
  var _a2;
  if (!path)
    return "";
  return ((_a2 = superstate.pathsIndex.get(path)) == null ? void 0 : _a2.name) || path;
};
var folderPathToString = (path) => removeLeadingSlash(path.substring(path.lastIndexOf("/"))) || path;
var getParentFolderPaths = (path) => {
  const folderPaths = [];
  const parts = path.split("/");
  let current2 = "";
  for (let i4 = 0; i4 < parts.length; i4++) {
    current2 += `${i4 === 0 ? "" : "/"}` + parts[i4];
    if (current2 != path) {
      folderPaths.push(current2);
    }
  }
  return folderPaths;
};
var pathToString = (path) => {
  if (path.lastIndexOf("/") != -1) {
    if (path.lastIndexOf(".") != -1)
      return removeLeadingSlash(
        path.substring(
          path.lastIndexOf("/") + 1,
          path.lastIndexOf(".")
        )
      );
    return path.substring(path.lastIndexOf("/") + 1);
  }
  if (path.lastIndexOf(".") != -1) {
    return path.substring(0, path.lastIndexOf("."));
  }
  return path;
};
var pathNameToString = (path) => path.substring(0, path.lastIndexOf(".")) || path;

// src/core/spaceManager/spaceManager.ts
var SpaceManager = class {
  constructor() {
    this.spaceAdapters = [];
    this.onPathCreated = async (path) => {
      this.superstate.onPathCreated(path);
    };
    this.onPathDeleted = async (path) => {
      this.superstate.onPathDeleted(path);
    };
    this.onPathChanged = async (path, oldPath) => {
      this.superstate.onPathRename(oldPath, path);
    };
    this.onSpaceCreated = async (path) => {
      await this.superstate.reloadSpace(this.spaceInfoForPath(path), null, true);
      this.superstate.onPathCreated(path);
    };
    this.onSpaceRenamed = async (path, oldPath) => {
      await this.superstate.onSpaceRenamed(oldPath, this.spaceInfoForPath(path));
      this.superstate.onPathRename(oldPath, path);
    };
    this.onSpaceDeleted = async (path) => {
      this.superstate.onSpaceDeleted(path);
      this.superstate.onPathDeleted(path);
    };
    this.onSpaceDefinitionChanged = async (path) => {
      this.superstate.reloadSpace(this.spaceInfoForPath(path));
    };
    this.onSpacePropertyChanged = async (path) => {
      this.superstate.reloadSpace(this.spaceInfoForPath(path));
    };
    this.onPathPropertyChanged = async (path) => {
      this.superstate.onMetadataChange(path);
    };
    this.spaceTypeByString = (uri) => {
      var _a2;
      if (uri.scheme == "space") {
        return "folder";
      }
      if (((_a2 = uri.authority) == null ? void 0 : _a2.charAt(0)) == "#") {
        return "tag";
      }
      if (uri.path.charAt(uri.path.length - 1) == "/") {
        if (uri.path == "/")
          return "vault";
        return "folder";
      }
      return "folder";
    };
  }
  resolvePath(path, source) {
    return this.primarySpaceAdapter.resolvePath(path, source);
  }
  uriByString(uri, source) {
    if (!uri)
      return null;
    if (uri.indexOf("/") == -1 && source) {
      uri = this.resolvePath(uri, source);
      if (!uri)
        return null;
    }
    const fullPath = uri;
    let refTypeChar = "";
    const parseQuery2 = (queryString) => {
      const query2 = {};
      queryString.split("&").forEach((param) => {
        const [key2, value] = param.split("=");
        query2[decodeURIComponent(key2)] = decodeURIComponent(value);
      });
      return query2;
    };
    const mapRefType = (refTypeChar2) => {
      if (refTypeChar2 === "^")
        return "context";
      if (refTypeChar2 === "*")
        return "frame";
      return null;
    };
    let space = null;
    let path = null;
    let alias = null;
    let reference = null;
    let refType = null;
    let query = null;
    let scheme = "vault";
    if (fullPath.indexOf("://") != -1) {
      scheme = uri.slice(0, uri.indexOf("://"));
      const spaceStr = uri.slice(uri.indexOf("://") + 3);
      if (spaceStr.charAt(0) == "#") {
        const endIndex = spaceStr.lastIndexOf("/#");
        if (endIndex != -1) {
          space = spaceStr.slice(0, endIndex);
          uri = spaceStr.slice(endIndex);
        } else {
          space = spaceStr;
          uri = "/";
        }
      } else {
        const spaceParts = spaceStr.split("/");
        space = spaceParts[0];
        uri = "/" + (spaceParts.slice(1).join("/") || "");
      }
    }
    const queryDelimiter = "?";
    const aliasDelimiter = "|";
    const fragmentDelimiter = "#";
    const pathSeparator = "/";
    const lastSlashIndex = uri.lastIndexOf("/");
    const lastHashIndex = uri.lastIndexOf("#");
    const lastPipeIndex = uri.lastIndexOf("|");
    const queryIndex = uri.lastIndexOf("?");
    if (queryIndex !== -1) {
      query = parseQuery2(uri.slice(queryIndex + 1));
      uri = uri.slice(0, queryIndex);
    }
    if (lastHashIndex !== -1 && lastHashIndex > lastSlashIndex) {
      const refPart = uri.slice(lastHashIndex + 1);
      refType = mapRefType(refPart[0]);
      if (refType || lastHashIndex != lastSlashIndex + 1) {
        refTypeChar = refPart[0];
        reference = refType ? refPart.slice(1) : refPart;
        uri = uri.slice(0, lastHashIndex);
      }
    }
    if (lastPipeIndex !== -1 && lastPipeIndex > lastSlashIndex) {
      alias = uri.slice(lastPipeIndex + 1);
      uri = uri.slice(0, lastPipeIndex);
    }
    path = uri;
    return {
      basePath: `${space ? `${scheme}://${space}${path != "/" ? path : ""}` : removeTrailingSlashFromFolder(path)}`,
      authority: space,
      fullPath,
      scheme,
      path: removeTrailingSlashFromFolder(uri),
      alias,
      ref: reference,
      refType,
      refStr: refType ? refTypeChar + reference : reference,
      query
    };
  }
  allCaches() {
    return this.primarySpaceAdapter.allCaches();
  }
  pathExists(path) {
    return this.primarySpaceAdapter.pathExists(path);
  }
  addSpaceAdapter(spaceAdapter, primary) {
    spaceAdapter.initiateAdapter(this);
    if (primary)
      this.primarySpaceAdapter = spaceAdapter;
    this.spaceAdapters.push(spaceAdapter);
  }
  createSpace(name, parentPath, definition) {
    return this.primarySpaceAdapter.createSpace(name, parentPath, definition);
  }
  saveSpace(path, definition, properties2) {
    return this.primarySpaceAdapter.saveSpace(path, definition, properties2);
  }
  renameSpace(path, newPath) {
    return this.primarySpaceAdapter.renameSpace(path, newPath);
  }
  deleteSpace(path) {
    return this.primarySpaceAdapter.deleteSpace(path);
  }
  childrenForSpace(path) {
    return this.primarySpaceAdapter.childrenForSpace(path);
  }
  contextForSpace(path) {
    return this.primarySpaceAdapter.contextForSpace(path);
  }
  async tablesForSpace(path) {
    return this.primarySpaceAdapter.tablesForSpace(path);
  }
  readTable(path, schema) {
    return this.primarySpaceAdapter.readTable(path, schema);
  }
  createTable(path, schema) {
    return this.primarySpaceAdapter.createTable(path, schema);
  }
  saveTableSchema(path, schemaId, saveSchema) {
    return this.primarySpaceAdapter.saveTableSchema(path, schemaId, saveSchema);
  }
  saveTable(path, table, force) {
    return this.primarySpaceAdapter.saveTable(path, table, force);
  }
  deleteTable(path, name) {
    return this.primarySpaceAdapter.deleteTable(path, name);
  }
  readAllTables(path) {
    return this.primarySpaceAdapter.readAllTables(path);
  }
  framesForSpace(path) {
    return this.primarySpaceAdapter.framesForSpace(path);
  }
  readFrame(path, schema) {
    return this.primarySpaceAdapter.readFrame(path, schema);
  }
  readAllFrames(path) {
    return this.primarySpaceAdapter.readAllFrames(path);
  }
  createFrame(path, schema) {
    return this.primarySpaceAdapter.createFrame(path, schema);
  }
  deleteFrame(path, name) {
    return this.primarySpaceAdapter.deleteFrame(path, name);
  }
  saveFrameSchema(path, schemaId, saveSchema) {
    return this.primarySpaceAdapter.saveFrameSchema(path, schemaId, saveSchema);
  }
  saveFrame(path, frame) {
    return this.primarySpaceAdapter.saveFrame(path, frame);
  }
  allPaths(type) {
    return this.primarySpaceAdapter.allPaths(type);
  }
  createItemAtPath(parent, type, name, content) {
    return this.primarySpaceAdapter.createItemAtPath(parent, type, name, content);
  }
  renamePath(oldPath, newPath) {
    return this.primarySpaceAdapter.renamePath(oldPath, newPath);
  }
  copyPath(source, destination) {
    return this.primarySpaceAdapter.copyPath(source, destination);
  }
  deletePath(path) {
    return this.primarySpaceAdapter.deletePath(path);
  }
  readPath(path) {
    return this.primarySpaceAdapter.readPath(path);
  }
  writeToPath(path, content, binary) {
    return this.primarySpaceAdapter.writeToPath(path, content, binary);
  }
  parentPathForPath(path) {
    return this.primarySpaceAdapter.parentPathForPath(path);
  }
  readPathCache(path) {
    return this.primarySpaceAdapter.readPathCache(path);
  }
  allSpaces() {
    return this.primarySpaceAdapter.allSpaces();
  }
  spaceInfoForPath(path) {
    return this.primarySpaceAdapter.spaceInfoForPath(path);
  }
  spaceDefForSpace(path) {
    return this.primarySpaceAdapter.spaceDefForSpace(path);
  }
  readLabel(path) {
    return this.primarySpaceAdapter.readLabel(path);
  }
  saveLabel(path, key2, value) {
    return this.primarySpaceAdapter.saveLabel(path, key2, value);
  }
  addProperty(path, property) {
    return this.primarySpaceAdapter.addProperty(path, property);
  }
  saveProperties(path, properties2) {
    if (!path)
      return;
    return this.primarySpaceAdapter.saveProperties(path, properties2);
  }
  readProperties(path) {
    return this.primarySpaceAdapter.readProperties(path);
  }
  renameProperty(path, property, newProperty) {
    return this.primarySpaceAdapter.renameProperty(path, property, newProperty);
  }
  deleteProperty(path, property) {
    return this.primarySpaceAdapter.deleteProperty(path, property);
  }
  addSpaceProperty(path, property) {
    return this.primarySpaceAdapter.addSpaceProperty(path, property);
  }
  deleteSpaceProperty(path, property) {
    return this.primarySpaceAdapter.deleteSpaceProperty(path, property);
  }
  saveSpaceProperty(path, property, oldProperty) {
    return this.primarySpaceAdapter.saveSpaceProperty(path, property, oldProperty);
  }
  addTag(path, tag) {
    return this.primarySpaceAdapter.addTag(path, tag);
  }
  deleteTag(path, tag) {
    return this.primarySpaceAdapter.deleteTag(path, tag);
  }
  renameTag(path, tag, newTag) {
    return this.primarySpaceAdapter.renameTag(path, tag, newTag);
  }
  readTags() {
    return this.primarySpaceAdapter.readTags();
  }
  pathsForTag(tag) {
    return this.primarySpaceAdapter.pathsForTag(tag);
  }
};

// src/core/types/context.ts
var PathPropertyName = "File";

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}

// node_modules/date-fns/esm/toDate/index.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof5(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof5(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

// node_modules/date-fns/esm/addDays/index.js
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

// node_modules/date-fns/esm/addMonths/index.js
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  var dayOfMonth = date.getDate();
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

// node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

// node_modules/date-fns/esm/startOfWeek/index.js
function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfISOWeek/index.js
function startOfISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  return startOfWeek(dirtyDate, {
    weekStartsOn: 1
  });
}

// node_modules/date-fns/esm/getISOWeekYear/index.js
function getISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/startOfISOWeekYear/index.js
function startOfISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = startOfISOWeek(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

// node_modules/date-fns/esm/addWeeks/index.js
function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}

// node_modules/date-fns/esm/addYears/index.js
function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

// node_modules/date-fns/esm/max/index.js
function _typeof2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function _typeof5(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function _typeof5(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function max(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof2(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/min/index.js
function _typeof3(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof3 = function _typeof5(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof3 = function _typeof5(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof3(obj);
}
function min(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof3(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/compareAsc/index.js
function compareAsc(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();
  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
  } else {
    return diff;
  }
}

// node_modules/date-fns/esm/isSameDay/index.js
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/date-fns/esm/isDate/index.js
function _typeof4(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof4 = function _typeof5(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof4 = function _typeof5(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof4(obj);
}
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof4(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}

// node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}

// node_modules/date-fns/esm/differenceInCalendarMonths/index.js
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

// node_modules/date-fns/esm/differenceInCalendarWeeks/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, options) {
  requiredArgs(2, arguments);
  var startOfWeekLeft = startOfWeek(dirtyDateLeft, options);
  var startOfWeekRight = startOfWeek(dirtyDateRight, options);
  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);
  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}

// node_modules/date-fns/esm/differenceInMilliseconds/index.js
function differenceInMilliseconds(dateLeft, dateRight) {
  requiredArgs(2, arguments);
  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();
}

// node_modules/date-fns/esm/_lib/roundingMethods/index.js
var roundingMap = {
  ceil: Math.ceil,
  round: Math.round,
  floor: Math.floor,
  trunc: function trunc(value) {
    return value < 0 ? Math.ceil(value) : Math.floor(value);
  }
};
var defaultRoundingMethod = "trunc";
function getRoundingMethod(method) {
  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
}

// node_modules/date-fns/esm/endOfDay/index.js
function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/endOfMonth/index.js
function endOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/isLastDayOfMonth/index.js
function isLastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  return endOfDay(date).getTime() === endOfMonth(date).getTime();
}

// node_modules/date-fns/esm/differenceInMonths/index.js
function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));
  var result;
  if (difference < 1) {
    result = 0;
  } else {
    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
      dateLeft.setDate(30);
    }
    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;
    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {
      isLastMonthNotFull = false;
    }
    result = sign * (difference - Number(isLastMonthNotFull));
  }
  return result === 0 ? 0 : result;
}

// node_modules/date-fns/esm/differenceInSeconds/index.js
function differenceInSeconds(dateLeft, dateRight, options) {
  requiredArgs(2, arguments);
  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1e3;
  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
}

// node_modules/date-fns/esm/startOfMonth/index.js
function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfYear/index.js
function startOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var cleanDate = toDate(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/endOfWeek/index.js
function endOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  date.setDate(date.getDate() + diff);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/endOfISOWeek/index.js
function endOfISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  return endOfWeek(dirtyDate, {
    weekStartsOn: 1
  });
}

// node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

// node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
var MILLISECONDS_IN_DAY2 = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK3 = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK3) + 1;
}

// node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}

// node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters = {
  y: function y3(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  M: function M3(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  d: function d3(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  a: function a3(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  h: function h3(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  H: function H3(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  m: function m3(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  s: function s3(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  S: function S2(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var lightFormatters_default = formatters;

// node_modules/date-fns/esm/_lib/format/formatters/index.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters2 = {
  G: function G2(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  y: function y4(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, {
        unit: "year"
      });
    }
    return lightFormatters_default.y(date, token);
  },
  Y: function Y2(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  R: function R2(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  u: function u3(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  Q: function Q2(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  q: function q4(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  M: function M4(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters_default.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  L: function L3(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  w: function w4(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  I: function I3(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  d: function d4(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getUTCDate(), {
        unit: "date"
      });
    }
    return lightFormatters_default.d(date, token);
  },
  D: function D3(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  E: function E3(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  e: function e3(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  c: function c3(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  i: function i3(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  a: function a4(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  b: function b3(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  B: function B4(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  h: function h4(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0)
        hours = 12;
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return lightFormatters_default.h(date, token);
  },
  H: function H4(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getUTCHours(), {
        unit: "hour"
      });
    }
    return lightFormatters_default.H(date, token);
  },
  K: function K2(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  k: function k4(date, token, localize2) {
    var hours = date.getUTCHours();
    if (hours === 0)
      hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  m: function m4(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return lightFormatters_default.m(date, token);
  },
  s: function s4(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getUTCSeconds(), {
        unit: "second"
      });
    }
    return lightFormatters_default.s(date, token);
  },
  S: function S3(date, token) {
    return lightFormatters_default.S(date, token);
  },
  X: function X2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  x: function x4(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  O: function O3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  z: function z4(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  t: function t3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  T: function T5(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset2, dirtyDelimiter) {
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset2, dirtyDelimiter) {
  if (offset2 % 60 === 0) {
    var sign = offset2 > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset2) / 60, 2);
  }
  return formatTimezone(offset2, dirtyDelimiter);
}
function formatTimezone(offset2, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var formatters_default = formatters2;

// node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
var longFormatters_default = longFormatters;

// node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format3, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count2, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count2 === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count2.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
var formatDistance_default = formatDistance;

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatLong_default = formatLong;

// node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
var formatRelative_default = formatRelative;

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
var localize_default = localize;

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key2 = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key2) : key2;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key2 in object) {
    if (object.hasOwnProperty(key2) && predicate(object[key2])) {
      return key2;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key2 = 0; key2 < array.length; key2++) {
    if (predicate(array[key2])) {
      return key2;
    }
  }
  return void 0;
}

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var match_default = match;

// node_modules/date-fns/esm/locale/en-US/index.js
var locale = {
  code: "en-US",
  formatDistance: formatDistance_default,
  formatLong: formatLong_default,
  formatRelative: formatRelative_default,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var en_US_default = locale;

// node_modules/date-fns/esm/_lib/defaultLocale/index.js
var defaultLocale_default = en_US_default;

// node_modules/date-fns/esm/format/index.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions4 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions4.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions4.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions4.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions4.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale2.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale2.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters_default[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale2.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

// node_modules/date-fns/esm/_lib/assign/index.js
function assign(target, object) {
  if (target == null) {
    throw new TypeError("assign requires that input parameter not be null or undefined");
  }
  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      ;
      target[property] = object[property];
    }
  }
  return target;
}

// node_modules/date-fns/esm/_lib/cloneObject/index.js
function cloneObject(object) {
  return assign({}, object);
}

// node_modules/date-fns/esm/formatDistance/index.js
var MINUTES_IN_DAY = 1440;
var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_TWO_MONTHS = 86400;
function formatDistance3(dirtyDate, dirtyBaseDate, options) {
  var _ref, _options$locale;
  requiredArgs(2, arguments);
  var defaultOptions4 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions4.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  if (!locale2.formatDistance) {
    throw new RangeError("locale must contain formatDistance property");
  }
  var comparison = compareAsc(dirtyDate, dirtyBaseDate);
  if (isNaN(comparison)) {
    throw new RangeError("Invalid time value");
  }
  var localizeOptions = assign(cloneObject(options), {
    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),
    comparison
  });
  var dateLeft;
  var dateRight;
  if (comparison > 0) {
    dateLeft = toDate(dirtyBaseDate);
    dateRight = toDate(dirtyDate);
  } else {
    dateLeft = toDate(dirtyDate);
    dateRight = toDate(dirtyBaseDate);
  }
  var seconds = differenceInSeconds(dateRight, dateLeft);
  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1e3;
  var minutes = Math.round((seconds - offsetInSeconds) / 60);
  var months;
  if (minutes < 2) {
    if (options !== null && options !== void 0 && options.includeSeconds) {
      if (seconds < 5) {
        return locale2.formatDistance("lessThanXSeconds", 5, localizeOptions);
      } else if (seconds < 10) {
        return locale2.formatDistance("lessThanXSeconds", 10, localizeOptions);
      } else if (seconds < 20) {
        return locale2.formatDistance("lessThanXSeconds", 20, localizeOptions);
      } else if (seconds < 40) {
        return locale2.formatDistance("halfAMinute", 0, localizeOptions);
      } else if (seconds < 60) {
        return locale2.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale2.formatDistance("xMinutes", 1, localizeOptions);
      }
    } else {
      if (minutes === 0) {
        return locale2.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale2.formatDistance("xMinutes", minutes, localizeOptions);
      }
    }
  } else if (minutes < 45) {
    return locale2.formatDistance("xMinutes", minutes, localizeOptions);
  } else if (minutes < 90) {
    return locale2.formatDistance("aboutXHours", 1, localizeOptions);
  } else if (minutes < MINUTES_IN_DAY) {
    var hours = Math.round(minutes / 60);
    return locale2.formatDistance("aboutXHours", hours, localizeOptions);
  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
    return locale2.formatDistance("xDays", 1, localizeOptions);
  } else if (minutes < MINUTES_IN_MONTH) {
    var days = Math.round(minutes / MINUTES_IN_DAY);
    return locale2.formatDistance("xDays", days, localizeOptions);
  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
    months = Math.round(minutes / MINUTES_IN_MONTH);
    return locale2.formatDistance("aboutXMonths", months, localizeOptions);
  }
  months = differenceInMonths(dateRight, dateLeft);
  if (months < 12) {
    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
    return locale2.formatDistance("xMonths", nearestMonth, localizeOptions);
  } else {
    var monthsSinceStartOfYear = months % 12;
    var years = Math.floor(months / 12);
    if (monthsSinceStartOfYear < 3) {
      return locale2.formatDistance("aboutXYears", years, localizeOptions);
    } else if (monthsSinceStartOfYear < 9) {
      return locale2.formatDistance("overXYears", years, localizeOptions);
    } else {
      return locale2.formatDistance("almostXYears", years + 1, localizeOptions);
    }
  }
}

// node_modules/date-fns/esm/getDaysInMonth/index.js
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth2 = new Date(0);
  lastDayOfMonth2.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}

// node_modules/date-fns/esm/getISOWeek/index.js
var MILLISECONDS_IN_WEEK4 = 6048e5;
function getISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK4) + 1;
}

// node_modules/date-fns/esm/getTime/index.js
function getTime(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

// node_modules/date-fns/esm/getUnixTime/index.js
function getUnixTime(dirtyDate) {
  requiredArgs(1, arguments);
  return Math.floor(getTime(dirtyDate) / 1e3);
}

// node_modules/date-fns/esm/getWeekYear/index.js
function getWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/startOfWeekYear/index.js
function startOfWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  var date = startOfWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/getWeek/index.js
var MILLISECONDS_IN_WEEK5 = 6048e5;
function getWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK5) + 1;
}

// node_modules/date-fns/esm/lastDayOfMonth/index.js
function lastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/getWeeksInMonth/index.js
function getWeeksInMonth(date, options) {
  requiredArgs(1, arguments);
  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;
}

// node_modules/date-fns/esm/isAfter/index.js
function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

// node_modules/date-fns/esm/isBefore/index.js
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

// node_modules/date-fns/esm/isSameMonth/index.js
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

// node_modules/date-fns/esm/isSameYear/index.js
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

// node_modules/date-fns/esm/subDays/index.js
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}

// node_modules/date-fns/esm/setMonth/index.js
function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

// node_modules/date-fns/esm/setYear/index.js
function setYear(dirtyDate, dirtyYear) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var year = toInteger(dirtyYear);
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  date.setFullYear(year);
  return date;
}

// src/utils/array.ts
var insert = (arr, index, newItem) => !index || index <= 0 ? [
  newItem,
  ...arr
] : [
  ...arr.slice(0, index),
  newItem,
  ...arr.slice(index)
];
var insertMulti = (arr, index, newItem) => !index || index <= 0 ? [
  ...newItem,
  ...arr
] : [
  ...arr.slice(0, index),
  ...newItem,
  ...arr.slice(index)
];
var uniq = (a5) => [...new Set(a5)];
var uniqCaseInsensitive = (a5) => [
  ...new Map(a5.map((s5) => [s5.toLowerCase(), s5])).values()
];
var uniqueNameFromString = (name, cols) => {
  let newName = name;
  if (cols.includes(newName)) {
    let append = 1;
    while (cols.includes(newName)) {
      newName = name + append.toString();
      append += 1;
    }
  }
  return newName;
};
var onlyUniqueProp = (prop) => (value, index, self2) => {
  return self2.findIndex((v3) => value[prop] == v3[prop]) === index;
};
var orderArrayByArrayWithKey = (array, order, key2) => {
  return array.sort(function(a5, b4) {
    const A4 = order.indexOf(a5[key2]), B5 = order.indexOf(b4[key2]);
    if (A4 > B5) {
      if (A4 != -1 && B5 == -1) {
        return -1;
      }
      return 1;
    } else {
      if (B5 != -1 && A4 == -1) {
        return 1;
      }
      return -1;
    }
  });
};

// src/utils/properties.ts
var detectPropertyType = (value, key2) => {
  if (typeof value === "string") {
    if (/\/\/(\S+?(?:jpe?g|png|gif|svg))/gi.test(value) || value.includes("unsplash")) {
      return "image";
    }
    if (/^\d{4}-\d{2}-\d{2}$/.test(value)) {
      return "date";
    }
    if (key2 == "tag" || key2 == "tags") {
      return "tag";
    }
    if (/\[\[.*?\]\]/.test(value)) {
      return "link";
    }
  } else if (typeof value === "number") {
    return "number";
  } else if (typeof value === "boolean") {
    return "boolean";
  } else if (!value) {
    return "unknown";
  } else if (Array.isArray(value) || typeof value === "string" && value.indexOf(",") > -1) {
    let arrayValue = Array.isArray(value) ? value : [];
    if (typeof value === "string" && value.indexOf(",") > -1) {
      arrayValue = parseMultiString(value);
    }
    if (key2 == "tag" || key2 == "tags") {
      return "tag-multi";
    }
    if (arrayValue.length == 1 && Array.isArray(arrayValue[0]) && arrayValue[0].length == 1 && typeof arrayValue[0][0] === "string") {
      return "link";
    }
    const types2 = uniq(arrayValue.map((f4) => detectPropertyType(f4, key2)));
    if (types2.length == 1 && types2[0] == "link") {
      return "link-multi";
    }
    if (types2.some((f4) => f4 == "object")) {
      return "object-multi";
    }
    return "option-multi";
  } else if (value.isLuxonDateTime) {
    return "date";
  } else if (value.isLuxonDuration) {
    return "duration";
  } else if (value.type == "file") {
    return "link";
  } else if (typeof value === "object" && !Array.isArray(value) && value !== null) {
    return "object";
  }
  return "text";
};
var defaultValueForType = (type) => {
  if (type == "date") {
    return format(Date.now(), "yyyy-MM-dd");
  }
  if (type == "number") {
    return 0;
  }
  if (type == "boolean") {
    return true;
  }
  if (type == "link") {
    return "[[Select Note]]";
  }
  if (type == "option") {
    return "one, two";
  }
  if (type == "text") {
    return " ";
  }
  if (type == "image") {
    return "https://images.unsplash.com/photo-1675789652575-0a5d2425b6c2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80";
  }
};
var parseMDBValue = (type, value) => {
  if (type == "number") {
    return parseFloat(value);
  } else if (type == "boolean") {
    return value == "true";
  } else if (type.includes("multi")) {
    return parseMultiString(value).map(
      (f4) => parseMDBValue(type.replace("-multi", ""), f4)
    );
  } else if (type.includes("link") || type.includes("context")) {
    return `[[${value}]]`;
  }
  return value;
};
var yamlTypeToMDBType = (YAMLtype) => {
  switch (YAMLtype) {
    case "duration":
      return "text";
      break;
    case "unknown":
      return "text";
      break;
  }
  return YAMLtype;
};

// src/utils/serializers.ts
var serializeMultiDisplayString = (value) => value.join(", ");
var serializeMultiString = (value) => value.join(",");
var serializeSQLValues = (value) => value.join(", ");
var serializeSQLStatements = (value) => value.join("; ");
var serializeSQLFieldNames = (value) => value.join(",");

// src/utils/parsers.ts
var parseMultiString = (str) => {
  var _a2;
  return (_a2 = str == null ? void 0 : str.match(/(\\.|[^,])+/g)) != null ? _a2 : [];
};
var parseProperty = (field, value) => {
  const YAMLtype = detectPropertyType(value, field);
  switch (YAMLtype) {
    case "object":
      return JSON.stringify(value);
      break;
    case "number":
      return value.toString();
      break;
    case "boolean":
      return value ? "true" : "false";
      break;
    case "date":
      return value;
      break;
    case "duration":
      return serializeMultiDisplayString(Object.keys(value.values).reduce(
        (p3, c4) => [
          ...p3,
          ...value.values[c4] > 0 ? [value.values[c4] + " " + c4] : []
        ],
        []
      ));
      break;
    case "option-multi":
    case "link-multi":
      if (typeof value === "string") {
        return parseLinkString(value);
      }
      return serializeMultiString(
        value.map((v3) => {
          if (!v3) {
            return "";
          }
          if (typeof v3 === "string") {
            return parseLinkString(v3);
          }
          if (v3.path) {
            return v3.path;
          }
          if (Array.isArray(value) && v3.length == 1 && Array.isArray(v3[0]) && v3[0].length == 1 && typeof v3[0][0] === "string") {
            return v3[0][0];
          }
          return JSON.stringify(v3);
        })
      );
      break;
    case "link":
      {
        if (Array.isArray(value) && value.length == 1 && Array.isArray(value[0]) && value[0].length == 1 && typeof value[0][0] === "string") {
          return value[0][0];
        } else if (typeof value === "string") {
          return parseLinkString(value);
        }
        return value.path;
      }
      break;
    case "text":
    case "tag":
    case "image":
      return value;
      break;
  }
  return "";
};
var safelyParseJSON = (json) => {
  let parsed;
  try {
    parsed = JSON.parse(json);
  } catch (e4) {
  }
  return parsed;
};
var parseLinkString = (string) => {
  if (!string)
    return "";
  const match2 = /\[\[(.*?)\]\]/g.exec(string);
  const stringValue = (match2 == null ? void 0 : match2.length) > 1 ? match2[1].substring(0, indexOfCharElseEOS("|", match2[1])) : string;
  if (stringValue)
    return stringValue;
  return string;
};

// src/core/utils/contexts/links.ts
var valueContainsLink = (link, value) => {
  return parseMultiString(value).some((f4) => link == parseLinkString(f4));
};
var replaceLinkInValue = (link, newLink, value) => {
  return serializeMultiString(parseMultiString(value).map((f4) => parseLinkString(f4) == link ? newLink : link));
};
var removeLinkInValue = (link, value) => {
  return serializeMultiString(parseMultiString(value).filter((f4) => f4 != link));
};
var linkColumns = (cols) => {
  return cols.filter((f4) => f4.type.startsWith("link") || f4.type.startsWith("context"));
};
var removeLinksInRow = (manager, row, link, cols) => {
  if (cols.length == 0) {
    return row;
  }
  const deltaRow = cols.reduce((p3, c4) => {
    if (valueContainsLink(link, row[c4.name])) {
      const newValue = removeLinkInValue(link, row[c4.name]);
      manager.saveProperties(row[PathPropertyName], { [c4.name]: parseMDBValue(c4.type, newValue) });
      return { ...p3, [c4.name]: newValue };
    }
    return p3;
  }, {});
  return { ...row, ...deltaRow };
};
var renameLinksInRow = (manager, row, link, newLink, cols) => {
  if (cols.length == 0) {
    return row;
  }
  const deltaRow = cols.reduce((p3, c4) => {
    if (valueContainsLink(link, row[c4.name])) {
      const newValue = replaceLinkInValue(link, newLink, row[c4.name]);
      manager.saveProperties(row[PathPropertyName], { [c4.name]: parseMDBValue(c4.type, newValue) });
      return { ...p3, [c4.name]: newValue };
    }
    return p3;
  }, {});
  return { ...row, ...deltaRow };
};

// src/core/utils/contexts/pathUpdates.ts
var renameRowForPath = (spaceTable, paths, newPath) => {
  return {
    ...spaceTable,
    rows: spaceTable.rows.map(
      (f4) => f4[PathPropertyName] == paths ? { ...f4, [PathPropertyName]: newPath } : f4
    )
  };
};
var removeRowForPath = (spaceTable, paths) => {
  return {
    ...spaceTable,
    rows: spaceTable.rows.filter(
      (f4) => f4[PathPropertyName] != paths
    )
  };
};
var removeRowsForPath = (spaceTable, paths) => {
  return {
    ...spaceTable,
    rows: spaceTable.rows.filter(
      (f4) => !paths.includes(f4[PathPropertyName])
    )
  };
};
var reorderRowsForPath = (spaceTable, paths, index) => {
  const rows = spaceTable.rows.filter(
    (f4) => paths.includes(f4[PathPropertyName])
  );
  return {
    ...spaceTable,
    rows: insertMulti(spaceTable.rows.filter(
      (f4) => !paths.includes(f4[PathPropertyName])
    ), index, rows)
  };
};

// src/core/utils/contexts/context.ts
var import_lodash = __toESM(require_lodash());
var processContext = async (manager, space, processor) => {
  const contextDB = await manager.contextForSpace(space.path);
  if (contextDB) {
    await processor(contextDB, space);
  }
};
var saveContext = async (manager, context, newTable, force) => {
  return manager.saveTable(context.path, newTable, force);
};
var deletePropertyMultiValue = (folder, lookupField, lookupValue, field, value) => {
  return {
    ...folder,
    rows: folder.rows.map(
      (f4) => f4[lookupField] == lookupValue ? {
        ...f4,
        [field]: serializeMultiString(parseMultiString(f4[field]).filter((g4) => g4 != value))
      } : f4
    )
  };
};
var updateValue = (folder, lookupField, lookupValue, field, value) => {
  return {
    ...folder,
    rows: folder.rows.map(
      (f4) => f4[lookupField] == lookupValue ? {
        ...f4,
        [field]: value
      } : f4
    )
  };
};
var insertRowsIfUnique = (folder, rows, index) => {
  return { ...folder, rows: index ? insertMulti(folder.rows, index, rows.filter((f4) => !folder.rows.some((g4) => g4[PathPropertyName] == f4[PathPropertyName]))) : [...rows.filter((f4) => !folder.rows.some((g4) => g4[PathPropertyName] == f4[PathPropertyName])), ...folder.rows] };
};
var saveContextToProperties = (manager, path, cols, context) => {
  if (!path)
    return;
  manager.saveProperties(path, Object.keys(context).filter(
    (f4) => cols.find((c4) => c4.name == f4) && cols.find((c4) => c4.name == f4).hidden != "true" && !cols.find((c4) => c4.name == f4).type.includes("file") && context[f4]
  ).reduce((f4, g4) => {
    const col = cols.find((c4) => c4.name == g4);
    return { ...f4, [g4]: parseMDBValue(col.type, context[g4]) };
  }, {}));
};
var updateContextValue = async (manager, space, path, field, value, _updateFunction) => {
  manager.contextForSpace(space.path).then(
    (f4) => {
      const updateFunction = _updateFunction != null ? _updateFunction : updateValue;
      const newMDB = updateFunction(f4, PathPropertyName, path, field, value);
      return saveContext(manager, space, newMDB).then((f5) => newMDB);
    }
  );
};
var insertContextItems = async (manager, newPaths, t4) => {
  const saveNewContextRows = async (tag, space) => {
    const newRow = newPaths.map((newPath) => ({ [PathPropertyName]: newPath }));
    await saveContext(manager, space, insertRowsIfUnique(tag, newRow));
  };
  const spaceInfo = manager.spaceInfoForPath(t4);
  await manager.contextForSpace(t4).then(
    (tagDB) => saveNewContextRows(tagDB, spaceInfo)
  );
};
var getPathProperties = async (manager, path, cols) => {
  const properties2 = await manager.readProperties(path);
  if (!properties2)
    return {};
  return Object.keys(properties2).reduce((p3, c4) => {
    if (cols.includes(c4)) {
      return { ...p3, [c4]: properties2[c4] };
    }
    return p3;
  }, {});
};
var updateContextWithProperties = async (manager, path, spaces) => {
  const updatePath = async (mdb) => {
    const objectExists = mdb.rows.some((item) => item[PathPropertyName] === path);
    const properties2 = await getPathProperties(
      manager,
      path,
      mdb.cols.map((f4) => f4.name)
    );
    if (objectExists) {
      return mdb.rows.map(
        (f4) => f4[PathPropertyName] == path ? {
          ...f4,
          ...properties2
        } : f4
      );
    } else {
      return [
        ...mdb.rows,
        {
          [PathPropertyName]: path,
          ...properties2
        }
      ];
    }
  };
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const newRows = await updatePath(mdb);
      const newDB = {
        ...mdb,
        rows: newRows
      };
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  await Promise.all(promises);
  return;
};
var updateValueInContext = async (manager, row, field, value, space) => {
  const changeTagInContextMDB = (mdb) => {
    return { ...mdb, rows: mdb.rows.map((f4) => f4[PathPropertyName] == row ? { ...f4, [field]: value } : f4) };
  };
  return processContext(manager, space, async (mdb, space2) => {
    const newDB = changeTagInContextMDB(mdb);
    if (!import_lodash.default.isEqual(mdb, newDB)) {
      await saveContext(manager, space2, newDB);
    }
    return newDB;
  });
};
var renameTagInContexts = async (manager, oldTag, newTag, spaces) => {
  const changeTagInContextMDB = (mdb) => {
    const cols = mdb.cols.map((f4) => f4.type.startsWith("context") && f4.value == oldTag ? { ...f4, value: newTag } : f4);
    return { ...mdb, cols };
  };
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const newDB = changeTagInContextMDB(mdb);
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeTagInContexts = async (manager, tag, spaces) => {
  const deleteTagInContextMDB = (mdb) => {
    const cols = mdb.cols.map((f4) => f4.type.startsWith("context") && f4.value == tag ? { ...f4, type: "link-multi" } : f4);
    return { ...mdb, cols };
  };
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const newDB = deleteTagInContextMDB(mdb);
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var renameLinkInContexts = async (manager, oldPath, newPath, spaces) => {
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const linkCols = linkColumns(mdb.cols);
      const newDB = {
        ...mdb,
        rows: mdb.rows.map((r3) => renameLinksInRow(manager, r3, oldPath, newPath, linkCols))
      };
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeLinkInContexts = async (manager, path, spaces) => {
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const linkCols = linkColumns(mdb.cols);
      const newDB = {
        ...mdb,
        rows: mdb.rows.map((r3) => removeLinksInRow(manager, r3, path, linkCols))
      };
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var renamePathInContexts = async (manager, oldPath, newPath, spaces) => {
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const newDB = renameRowForPath(mdb, oldPath, newPath);
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removePathInContexts = async (manager, path, spaces) => {
  const promises = spaces.map((space) => {
    return processContext(manager, space, async (mdb, space2) => {
      const removeRow = mdb.rows.find((f4) => f4[PathPropertyName] == path);
      if (removeRow) {
        saveContextToProperties(manager, path, mdb.cols, removeRow);
      }
      const newDB = removeRowForPath(mdb, path);
      if (!import_lodash.default.isEqual(mdb, newDB)) {
        await saveContext(manager, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var reorderPathsInContext = async (manager, paths, index, space) => {
  return processContext(manager, space, async (mdb, context) => {
    const newDB = reorderRowsForPath(mdb, paths, index);
    if (!import_lodash.default.isEqual(mdb, newDB)) {
      await saveContext(manager, context, newDB, true);
    }
    return newDB;
  });
};
var removePathsInContext = async (manager, paths, space) => {
  return processContext(manager, space, async (mdb, context) => {
    mdb.rows.forEach((row) => {
      if (paths.includes(row[PathPropertyName]))
        saveContextToProperties(manager, row[PathPropertyName], mdb.cols, row);
    });
    const newDB = removeRowsForPath(mdb, paths);
    if (!import_lodash.default.isEqual(mdb, newDB)) {
      await saveContext(manager, context, newDB);
    }
    return newDB;
  });
};

// src/core/utils/date.ts
var formatDate = (superstate, date, dateFormat) => {
  let dateString;
  try {
    dateString = format(
      date,
      (dateFormat == null ? void 0 : dateFormat.length) > 0 ? dateFormat : superstate.settings.defaultDateFormat
    );
  } catch (e4) {
    dateString = "Date Format Invalid";
  }
  return dateString;
};

// src/core/superstate/api.ts
var API = class {
  constructor(superstate) {
    this.buttonCommand = (action, actionValue) => {
      if (action == "$commands") {
        this.superstate.commands.runCommand(actionValue);
      }
      if (action == "$links") {
        this.openLink(actionValue, false);
      }
    };
    this.formatDate = (date, format3) => {
      return formatDate(this.superstate, date, format3 != null ? format3 : "yyyy-MM-dd");
    };
    this.now = () => {
      return new Date();
    };
    this.superstate = superstate;
  }
  openLink(path, target) {
    this.superstate.ui.openPath(path, target);
  }
  getLocalFile(path) {
    return this.superstate.ui.getUIPath(path);
  }
  getContext(path, table) {
    var _a2;
    return (_a2 = this.superstate.contextsIndex.get(path)) == null ? void 0 : _a2.tables[table];
  }
  setContextValue(path, file, field, value) {
    const space = this.superstate.spacesIndex.get(path);
    if (space)
      updateValueInContext(this.superstate.spaceManager, file, field, value, space.space);
  }
};

// src/core/middleware/dispatchers/dispatcher.ts
var EventDispatcher = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
  }
  addListener(eventType, listener, priority = 0, context) {
    const newListener = { callback: listener, priority, once: false, context };
    const listeners = this.listeners.get(eventType) || [];
    listeners.push(newListener);
    listeners.sort((a5, b4) => b4.priority - a5.priority);
    this.listeners.set(eventType, listeners);
  }
  addOnceListener(eventType, listener, priority = 0, context) {
    const newListener = { callback: listener, priority, once: true, context };
    const listeners = this.listeners.get(eventType) || [];
    listeners.push(newListener);
    listeners.sort((a5, b4) => b4.priority - a5.priority);
    this.listeners.set(eventType, listeners);
  }
  removeListener(eventType, listener) {
    const listeners = this.listeners.get(eventType);
    if (listeners) {
      this.listeners.set(eventType, listeners.filter((l3) => l3.callback !== listener));
    }
  }
  async dispatchEvent(eventType, event) {
    const listeners = this.listeners.get(eventType);
    if (listeners) {
      for (const listener of listeners) {
        try {
          await listener.callback.call(listener.context, event);
        } catch (error) {
          console.error(`Error in listener for event '${String(eventType)}':`, error);
        }
        if (listener.once) {
          this.removeListener(eventType, listener.callback);
        }
      }
    }
  }
};

// src/core/utils/objects.ts
function applyFunctionToObject(object, func) {
  const newObject = {};
  for (const key2 in object) {
    if (Object.prototype.hasOwnProperty.call(object, key2)) {
      newObject[key2] = func(object[key2]);
    }
  }
  return newObject;
}

// src/types/mframe.ts
var defaultFrameEditorProps = { editMode: 0 };

// node_modules/acorn/dist/acorn.mjs
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];
var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};
var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
var keywords$1 = {
  5: ecma5AndLessKeywords,
  "5module": ecma5AndLessKeywords + " export import",
  6: ecma5AndLessKeywords + " const class extends export import super"
};
var keywordRelationalOperator = /^in(stanceof)?$/;
var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
function isInAstralSet(code, set) {
  var pos = 65536;
  for (var i4 = 0; i4 < set.length; i4 += 2) {
    pos += set[i4];
    if (pos > code) {
      return false;
    }
    pos += set[i4 + 1];
    if (pos >= code) {
      return true;
    }
  }
  return false;
}
function isIdentifierStart(code, astral) {
  if (code < 65) {
    return code === 36;
  }
  if (code < 91) {
    return true;
  }
  if (code < 97) {
    return code === 95;
  }
  if (code < 123) {
    return true;
  }
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code, astralIdentifierStartCodes);
}
function isIdentifierChar(code, astral) {
  if (code < 48) {
    return code === 36;
  }
  if (code < 58) {
    return true;
  }
  if (code < 65) {
    return false;
  }
  if (code < 91) {
    return true;
  }
  if (code < 97) {
    return code === 95;
  }
  if (code < 123) {
    return true;
  }
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}
var TokenType = function TokenType2(label, conf) {
  if (conf === void 0)
    conf = {};
  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};
function binop(name, prec) {
  return new TokenType(name, { beforeExpr: true, binop: prec });
}
var beforeExpr = { beforeExpr: true };
var startsExpr = { startsExpr: true };
var keywords = {};
function kw(name, options) {
  if (options === void 0)
    options = {};
  options.keyword = name;
  return keywords[name] = new TokenType(name, options);
}
var types$1 = {
  num: new TokenType("num", startsExpr),
  regexp: new TokenType("regexp", startsExpr),
  string: new TokenType("string", startsExpr),
  name: new TokenType("name", startsExpr),
  privateId: new TokenType("privateId", startsExpr),
  eof: new TokenType("eof"),
  bracketL: new TokenType("[", { beforeExpr: true, startsExpr: true }),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", { beforeExpr: true, startsExpr: true }),
  braceR: new TokenType("}"),
  parenL: new TokenType("(", { beforeExpr: true, startsExpr: true }),
  parenR: new TokenType(")"),
  comma: new TokenType(",", beforeExpr),
  semi: new TokenType(";", beforeExpr),
  colon: new TokenType(":", beforeExpr),
  dot: new TokenType("."),
  question: new TokenType("?", beforeExpr),
  questionDot: new TokenType("?."),
  arrow: new TokenType("=>", beforeExpr),
  template: new TokenType("template"),
  invalidTemplate: new TokenType("invalidTemplate"),
  ellipsis: new TokenType("...", beforeExpr),
  backQuote: new TokenType("`", startsExpr),
  dollarBraceL: new TokenType("${", { beforeExpr: true, startsExpr: true }),
  eq: new TokenType("=", { beforeExpr: true, isAssign: true }),
  assign: new TokenType("_=", { beforeExpr: true, isAssign: true }),
  incDec: new TokenType("++/--", { prefix: true, postfix: true, startsExpr: true }),
  prefix: new TokenType("!/~", { beforeExpr: true, prefix: true, startsExpr: true }),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType("**", { beforeExpr: true }),
  coalesce: binop("??", 1),
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", { isLoop: true, beforeExpr: true }),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", { isLoop: true }),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", { isLoop: true }),
  _with: kw("with"),
  _new: kw("new", { beforeExpr: true, startsExpr: true }),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import", startsExpr),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", { beforeExpr: true, binop: 7 }),
  _instanceof: kw("instanceof", { beforeExpr: true, binop: 7 }),
  _typeof: kw("typeof", { beforeExpr: true, prefix: true, startsExpr: true }),
  _void: kw("void", { beforeExpr: true, prefix: true, startsExpr: true }),
  _delete: kw("delete", { beforeExpr: true, prefix: true, startsExpr: true })
};
var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");
function isNewLine(code) {
  return code === 10 || code === 13 || code === 8232 || code === 8233;
}
function nextLineBreak(code, from, end) {
  if (end === void 0)
    end = code.length;
  for (var i4 = from; i4 < end; i4++) {
    var next = code.charCodeAt(i4);
    if (isNewLine(next)) {
      return i4 < end - 1 && next === 13 && code.charCodeAt(i4 + 1) === 10 ? i4 + 2 : i4 + 1;
    }
  }
  return -1;
}
var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
var ref = Object.prototype;
var hasOwnProperty = ref.hasOwnProperty;
var toString = ref.toString;
var hasOwn = Object.hasOwn || function(obj, propName) {
  return hasOwnProperty.call(obj, propName);
};
var isArray = Array.isArray || function(obj) {
  return toString.call(obj) === "[object Array]";
};
function wordsRegexp(words) {
  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
}
function codePointToString(code) {
  if (code <= 65535) {
    return String.fromCharCode(code);
  }
  code -= 65536;
  return String.fromCharCode((code >> 10) + 55296, (code & 1023) + 56320);
}
var loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;
var Position = function Position2(line, col) {
  this.line = line;
  this.column = col;
};
Position.prototype.offset = function offset(n2) {
  return new Position(this.line, this.column + n2);
};
var SourceLocation = function SourceLocation2(p3, start, end) {
  this.start = start;
  this.end = end;
  if (p3.sourceFile !== null) {
    this.source = p3.sourceFile;
  }
};
function getLineInfo(input, offset2) {
  for (var line = 1, cur = 0; ; ) {
    var nextBreak = nextLineBreak(input, cur, offset2);
    if (nextBreak < 0) {
      return new Position(line, offset2 - cur);
    }
    ++line;
    cur = nextBreak;
  }
}
var defaultOptions2 = {
  ecmaVersion: null,
  sourceType: "script",
  onInsertedSemicolon: null,
  onTrailingComma: null,
  allowReserved: null,
  allowReturnOutsideFunction: false,
  allowImportExportEverywhere: false,
  allowAwaitOutsideFunction: null,
  allowSuperOutsideMethod: null,
  allowHashBang: false,
  locations: false,
  onToken: null,
  onComment: null,
  ranges: false,
  program: null,
  sourceFile: null,
  directSourceFile: null,
  preserveParens: false
};
var warnedAboutEcmaVersion = false;
function getOptions(opts) {
  var options = {};
  for (var opt in defaultOptions2) {
    options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions2[opt];
  }
  if (options.ecmaVersion === "latest") {
    options.ecmaVersion = 1e8;
  } else if (options.ecmaVersion == null) {
    if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
      warnedAboutEcmaVersion = true;
      console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
    }
    options.ecmaVersion = 11;
  } else if (options.ecmaVersion >= 2015) {
    options.ecmaVersion -= 2009;
  }
  if (options.allowReserved == null) {
    options.allowReserved = options.ecmaVersion < 5;
  }
  if (!opts || opts.allowHashBang == null) {
    options.allowHashBang = options.ecmaVersion >= 14;
  }
  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function(token) {
      return tokens.push(token);
    };
  }
  if (isArray(options.onComment)) {
    options.onComment = pushComment(options, options.onComment);
  }
  return options;
}
function pushComment(options, array) {
  return function(block, text2, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text2,
      start,
      end
    };
    if (options.locations) {
      comment.loc = new SourceLocation(this, startLoc, endLoc);
    }
    if (options.ranges) {
      comment.range = [start, end];
    }
    array.push(comment);
  };
}
var SCOPE_TOP = 1;
var SCOPE_FUNCTION = 2;
var SCOPE_ASYNC = 4;
var SCOPE_GENERATOR = 8;
var SCOPE_ARROW = 16;
var SCOPE_SIMPLE_CATCH = 32;
var SCOPE_SUPER = 64;
var SCOPE_DIRECT_SUPER = 128;
var SCOPE_CLASS_STATIC_BLOCK = 256;
var SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;
function functionFlags(async, generator) {
  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);
}
var BIND_NONE = 0;
var BIND_VAR = 1;
var BIND_LEXICAL = 2;
var BIND_FUNCTION = 3;
var BIND_SIMPLE_CATCH = 4;
var BIND_OUTSIDE = 5;
var Parser = function Parser2(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
  var reserved = "";
  if (options.allowReserved !== true) {
    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
    if (options.sourceType === "module") {
      reserved += " await";
    }
  }
  this.reservedWords = wordsRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = wordsRegexp(reservedStrict);
  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);
  this.containsEsc = false;
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }
  this.type = types$1.eof;
  this.value = null;
  this.start = this.end = this.pos;
  this.startLoc = this.endLoc = this.curPosition();
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;
  this.context = this.initialContext();
  this.exprAllowed = true;
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);
  this.potentialArrowAt = -1;
  this.potentialArrowInForAwait = false;
  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
  this.labels = [];
  this.undefinedExports = /* @__PURE__ */ Object.create(null);
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
    this.skipLineComment(2);
  }
  this.scopeStack = [];
  this.enterScope(SCOPE_TOP);
  this.regexpState = null;
  this.privateNameStack = [];
};
var prototypeAccessors = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, canAwait: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true }, allowNewDotTarget: { configurable: true }, inClassStaticBlock: { configurable: true } };
Parser.prototype.parse = function parse() {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node);
};
prototypeAccessors.inFunction.get = function() {
  return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
};
prototypeAccessors.inGenerator.get = function() {
  return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit;
};
prototypeAccessors.inAsync.get = function() {
  return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit;
};
prototypeAccessors.canAwait.get = function() {
  for (var i4 = this.scopeStack.length - 1; i4 >= 0; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) {
      return false;
    }
    if (scope.flags & SCOPE_FUNCTION) {
      return (scope.flags & SCOPE_ASYNC) > 0;
    }
  }
  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
};
prototypeAccessors.allowSuper.get = function() {
  var ref2 = this.currentThisScope();
  var flags = ref2.flags;
  var inClassFieldInit = ref2.inClassFieldInit;
  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;
};
prototypeAccessors.allowDirectSuper.get = function() {
  return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
};
prototypeAccessors.treatFunctionsAsVar.get = function() {
  return this.treatFunctionsAsVarInScope(this.currentScope());
};
prototypeAccessors.allowNewDotTarget.get = function() {
  var ref2 = this.currentThisScope();
  var flags = ref2.flags;
  var inClassFieldInit = ref2.inClassFieldInit;
  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit;
};
prototypeAccessors.inClassStaticBlock.get = function() {
  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0;
};
Parser.extend = function extend() {
  var plugins = [], len = arguments.length;
  while (len--)
    plugins[len] = arguments[len];
  var cls = this;
  for (var i4 = 0; i4 < plugins.length; i4++) {
    cls = plugins[i4](cls);
  }
  return cls;
};
Parser.parse = function parse2(input, options) {
  return new this(options, input).parse();
};
Parser.parseExpressionAt = function parseExpressionAt(input, pos, options) {
  var parser = new this(options, input, pos);
  parser.nextToken();
  return parser.parseExpression();
};
Parser.tokenizer = function tokenizer(input, options) {
  return new this(options, input);
};
Object.defineProperties(Parser.prototype, prototypeAccessors);
var pp$9 = Parser.prototype;
var literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
pp$9.strictDirective = function(start) {
  if (this.options.ecmaVersion < 5) {
    return false;
  }
  for (; ; ) {
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    var match2 = literal.exec(this.input.slice(start));
    if (!match2) {
      return false;
    }
    if ((match2[1] || match2[2]) === "use strict") {
      skipWhiteSpace.lastIndex = start + match2[0].length;
      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
      var next = this.input.charAt(end);
      return next === ";" || next === "}" || lineBreak.test(spaceAfter[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "=");
    }
    start += match2[0].length;
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    if (this.input[start] === ";") {
      start++;
    }
  }
};
pp$9.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true;
  } else {
    return false;
  }
};
pp$9.isContextual = function(name) {
  return this.type === types$1.name && this.value === name && !this.containsEsc;
};
pp$9.eatContextual = function(name) {
  if (!this.isContextual(name)) {
    return false;
  }
  this.next();
  return true;
};
pp$9.expectContextual = function(name) {
  if (!this.eatContextual(name)) {
    this.unexpected();
  }
};
pp$9.canInsertSemicolon = function() {
  return this.type === types$1.eof || this.type === types$1.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
};
pp$9.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon) {
      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
    }
    return true;
  }
};
pp$9.semicolon = function() {
  if (!this.eat(types$1.semi) && !this.insertSemicolon()) {
    this.unexpected();
  }
};
pp$9.afterTrailingComma = function(tokType, notNext) {
  if (this.type === tokType) {
    if (this.options.onTrailingComma) {
      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
    }
    if (!notNext) {
      this.next();
    }
    return true;
  }
};
pp$9.expect = function(type) {
  this.eat(type) || this.unexpected();
};
pp$9.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};
var DestructuringErrors = function DestructuringErrors2() {
  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
};
pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) {
    return;
  }
  if (refDestructuringErrors.trailingComma > -1) {
    this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
  }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) {
    this.raiseRecoverable(parens, isAssign ? "Assigning to rvalue" : "Parenthesized pattern");
  }
};
pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) {
    return false;
  }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) {
    return shorthandAssign >= 0 || doubleProto >= 0;
  }
  if (shorthandAssign >= 0) {
    this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
  }
  if (doubleProto >= 0) {
    this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
  }
};
pp$9.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
    this.raise(this.yieldPos, "Yield expression cannot be a default value");
  }
  if (this.awaitPos) {
    this.raise(this.awaitPos, "Await expression cannot be a default value");
  }
};
pp$9.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression") {
    return this.isSimpleAssignTarget(expr.expression);
  }
  return expr.type === "Identifier" || expr.type === "MemberExpression";
};
var pp$8 = Parser.prototype;
pp$8.parseTopLevel = function(node) {
  var exports = /* @__PURE__ */ Object.create(null);
  if (!node.body) {
    node.body = [];
  }
  while (this.type !== types$1.eof) {
    var stmt = this.parseStatement(null, true, exports);
    node.body.push(stmt);
  }
  if (this.inModule) {
    for (var i4 = 0, list = Object.keys(this.undefinedExports); i4 < list.length; i4 += 1) {
      var name = list[i4];
      this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
    }
  }
  this.adaptDirectivePrologue(node.body);
  this.next();
  node.sourceType = this.options.sourceType;
  return this.finishNode(node, "Program");
};
var loopLabel = { kind: "loop" };
var switchLabel = { kind: "switch" };
pp$8.isLet = function(context) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
    return false;
  }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  if (nextCh === 91 || nextCh === 92) {
    return true;
  }
  if (context) {
    return false;
  }
  if (nextCh === 123 || nextCh > 55295 && nextCh < 56320) {
    return true;
  }
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) {
      ++pos;
    }
    if (nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
      return true;
    }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) {
      return true;
    }
  }
  return false;
};
pp$8.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
    return false;
  }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, after;
  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 55295 && after < 56320));
};
pp$8.parseStatement = function(context, topLevel, exports) {
  var starttype = this.type, node = this.startNode(), kind;
  if (this.isLet(context)) {
    starttype = types$1._var;
    kind = "let";
  }
  switch (starttype) {
    case types$1._break:
    case types$1._continue:
      return this.parseBreakContinueStatement(node, starttype.keyword);
    case types$1._debugger:
      return this.parseDebuggerStatement(node);
    case types$1._do:
      return this.parseDoStatement(node);
    case types$1._for:
      return this.parseForStatement(node);
    case types$1._function:
      if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
        this.unexpected();
      }
      return this.parseFunctionStatement(node, false, !context);
    case types$1._class:
      if (context) {
        this.unexpected();
      }
      return this.parseClass(node, true);
    case types$1._if:
      return this.parseIfStatement(node);
    case types$1._return:
      return this.parseReturnStatement(node);
    case types$1._switch:
      return this.parseSwitchStatement(node);
    case types$1._throw:
      return this.parseThrowStatement(node);
    case types$1._try:
      return this.parseTryStatement(node);
    case types$1._const:
    case types$1._var:
      kind = kind || this.value;
      if (context && kind !== "var") {
        this.unexpected();
      }
      return this.parseVarStatement(node, kind);
    case types$1._while:
      return this.parseWhileStatement(node);
    case types$1._with:
      return this.parseWithStatement(node);
    case types$1.braceL:
      return this.parseBlock(true, node);
    case types$1.semi:
      return this.parseEmptyStatement(node);
    case types$1._export:
    case types$1._import:
      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
        skipWhiteSpace.lastIndex = this.pos;
        var skip = skipWhiteSpace.exec(this.input);
        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
        if (nextCh === 40 || nextCh === 46) {
          return this.parseExpressionStatement(node, this.parseExpression());
        }
      }
      if (!this.options.allowImportExportEverywhere) {
        if (!topLevel) {
          this.raise(this.start, "'import' and 'export' may only appear at the top level");
        }
        if (!this.inModule) {
          this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
        }
      }
      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports);
    default:
      if (this.isAsyncFunction()) {
        if (context) {
          this.unexpected();
        }
        this.next();
        return this.parseFunctionStatement(node, true, !context);
      }
      var maybeName = this.value, expr = this.parseExpression();
      if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon)) {
        return this.parseLabeledStatement(node, maybeName, expr, context);
      } else {
        return this.parseExpressionStatement(node, expr);
      }
  }
};
pp$8.parseBreakContinueStatement = function(node, keyword) {
  var isBreak = keyword === "break";
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) {
    node.label = null;
  } else if (this.type !== types$1.name) {
    this.unexpected();
  } else {
    node.label = this.parseIdent();
    this.semicolon();
  }
  var i4 = 0;
  for (; i4 < this.labels.length; ++i4) {
    var lab = this.labels[i4];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) {
        break;
      }
      if (node.label && isBreak) {
        break;
      }
    }
  }
  if (i4 === this.labels.length) {
    this.raise(node.start, "Unsyntactic " + keyword);
  }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
};
pp$8.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement");
};
pp$8.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("do");
  this.labels.pop();
  this.expect(types$1._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6) {
    this.eat(types$1.semi);
  } else {
    this.semicolon();
  }
  return this.finishNode(node, "DoWhileStatement");
};
pp$8.parseForStatement = function(node) {
  this.next();
  var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterScope(0);
  this.expect(types$1.parenL);
  if (this.type === types$1.semi) {
    if (awaitAt > -1) {
      this.unexpected(awaitAt);
    }
    return this.parseFor(node, null);
  }
  var isLet = this.isLet();
  if (this.type === types$1._var || this.type === types$1._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    if ((this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types$1._in) {
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
        } else {
          node.await = awaitAt > -1;
        }
      }
      return this.parseForIn(node, init$1);
    }
    if (awaitAt > -1) {
      this.unexpected(awaitAt);
    }
    return this.parseFor(node, init$1);
  }
  var startsWithLet = this.isContextual("let"), isForOf = false;
  var refDestructuringErrors = new DestructuringErrors();
  var init = this.parseExpression(awaitAt > -1 ? "await" : true, refDestructuringErrors);
  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (this.options.ecmaVersion >= 9) {
      if (this.type === types$1._in) {
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
      } else {
        node.await = awaitAt > -1;
      }
    }
    if (startsWithLet && isForOf) {
      this.raise(init.start, "The left-hand side of a for-of loop may not start with 'let'.");
    }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLValPattern(init);
    return this.parseForIn(node, init);
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) {
    this.unexpected(awaitAt);
  }
  return this.parseFor(node, init);
};
pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
  this.next();
  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);
};
pp$8.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  node.consequent = this.parseStatement("if");
  node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
  return this.finishNode(node, "IfStatement");
};
pp$8.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
    this.raise(this.start, "'return' outside of function");
  }
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) {
    node.argument = null;
  } else {
    node.argument = this.parseExpression();
    this.semicolon();
  }
  return this.finishNode(node, "ReturnStatement");
};
pp$8.parseSwitchStatement = function(node) {
  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types$1.braceL);
  this.labels.push(switchLabel);
  this.enterScope(0);
  var cur;
  for (var sawDefault = false; this.type !== types$1.braceR; ) {
    if (this.type === types$1._case || this.type === types$1._default) {
      var isCase = this.type === types$1._case;
      if (cur) {
        this.finishNode(cur, "SwitchCase");
      }
      node.cases.push(cur = this.startNode());
      cur.consequent = [];
      this.next();
      if (isCase) {
        cur.test = this.parseExpression();
      } else {
        if (sawDefault) {
          this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
        }
        sawDefault = true;
        cur.test = null;
      }
      this.expect(types$1.colon);
    } else {
      if (!cur) {
        this.unexpected();
      }
      cur.consequent.push(this.parseStatement(null));
    }
  }
  this.exitScope();
  if (cur) {
    this.finishNode(cur, "SwitchCase");
  }
  this.next();
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement");
};
pp$8.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {
    this.raise(this.lastTokEnd, "Illegal newline after throw");
  }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement");
};
var empty$1 = [];
pp$8.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types$1._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types$1.parenL)) {
      clause.param = this.parseBindingAtom();
      var simple = clause.param.type === "Identifier";
      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
      this.expect(types$1.parenR);
    } else {
      if (this.options.ecmaVersion < 10) {
        this.unexpected();
      }
      clause.param = null;
      this.enterScope(0);
    }
    clause.body = this.parseBlock(false);
    this.exitScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer) {
    this.raise(node.start, "Missing catch or finally clause");
  }
  return this.finishNode(node, "TryStatement");
};
pp$8.parseVarStatement = function(node, kind) {
  this.next();
  this.parseVar(node, false, kind);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration");
};
pp$8.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("while");
  this.labels.pop();
  return this.finishNode(node, "WhileStatement");
};
pp$8.parseWithStatement = function(node) {
  if (this.strict) {
    this.raise(this.start, "'with' in strict mode");
  }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement("with");
  return this.finishNode(node, "WithStatement");
};
pp$8.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement");
};
pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {
    var label = list[i$1];
    if (label.name === maybeName) {
      this.raise(expr.start, "Label '" + maybeName + "' is already declared");
    }
  }
  var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
  for (var i4 = this.labels.length - 1; i4 >= 0; i4--) {
    var label$1 = this.labels[i4];
    if (label$1.statementStart === node.start) {
      label$1.statementStart = this.start;
      label$1.kind = kind;
    } else {
      break;
    }
  }
  this.labels.push({ name: maybeName, kind, statementStart: this.start });
  node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement");
};
pp$8.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement");
};
pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
  if (createNewLexicalScope === void 0)
    createNewLexicalScope = true;
  if (node === void 0)
    node = this.startNode();
  node.body = [];
  this.expect(types$1.braceL);
  if (createNewLexicalScope) {
    this.enterScope(0);
  }
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  if (exitStrict) {
    this.strict = false;
  }
  this.next();
  if (createNewLexicalScope) {
    this.exitScope();
  }
  return this.finishNode(node, "BlockStatement");
};
pp$8.parseFor = function(node, init) {
  node.init = init;
  this.expect(types$1.semi);
  node.test = this.type === types$1.semi ? null : this.parseExpression();
  this.expect(types$1.semi);
  node.update = this.type === types$1.parenR ? null : this.parseExpression();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, "ForStatement");
};
pp$8.parseForIn = function(node, init) {
  var isForIn = this.type === types$1._in;
  this.next();
  if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {
    this.raise(
      init.start,
      (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
    );
  }
  node.left = init;
  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
};
pp$8.parseVar = function(node, isFor, kind) {
  node.declarations = [];
  node.kind = kind;
  for (; ; ) {
    var decl = this.startNode();
    this.parseVarId(decl, kind);
    if (this.eat(types$1.eq)) {
      decl.init = this.parseMaybeAssign(isFor);
    } else if (kind === "const" && !(this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
      this.unexpected();
    } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
      this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
    if (!this.eat(types$1.comma)) {
      break;
    }
  }
  return node;
};
pp$8.parseVarId = function(decl, kind) {
  decl.id = this.parseBindingAtom();
  this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
};
var FUNC_STATEMENT = 1;
var FUNC_HANGING_STATEMENT = 2;
var FUNC_NULLABLE_ID = 4;
pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
    if (this.type === types$1.star && statement & FUNC_HANGING_STATEMENT) {
      this.unexpected();
    }
    node.generator = this.eat(types$1.star);
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  if (statement & FUNC_STATEMENT) {
    node.id = statement & FUNC_NULLABLE_ID && this.type !== types$1.name ? null : this.parseIdent();
    if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {
      this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);
    }
  }
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(node.async, node.generator));
  if (!(statement & FUNC_STATEMENT)) {
    node.id = this.type === types$1.name ? this.parseIdent() : null;
  }
  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody, false, forInit);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");
};
pp$8.parseFunctionParams = function(node) {
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};
pp$8.parseClass = function(node, isStatement) {
  this.next();
  var oldStrict = this.strict;
  this.strict = true;
  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var privateNameMap = this.enterClassBody();
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types$1.braceL);
  while (this.type !== types$1.braceR) {
    var element = this.parseClassElement(node.superClass !== null);
    if (element) {
      classBody.body.push(element);
      if (element.type === "MethodDefinition" && element.kind === "constructor") {
        if (hadConstructor) {
          this.raise(element.start, "Duplicate constructor in the same class");
        }
        hadConstructor = true;
      } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element)) {
        this.raiseRecoverable(element.key.start, "Identifier '#" + element.key.name + "' has already been declared");
      }
    }
  }
  this.strict = oldStrict;
  this.next();
  node.body = this.finishNode(classBody, "ClassBody");
  this.exitClassBody();
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
};
pp$8.parseClassElement = function(constructorAllowsSuper) {
  if (this.eat(types$1.semi)) {
    return null;
  }
  var ecmaVersion = this.options.ecmaVersion;
  var node = this.startNode();
  var keyName = "";
  var isGenerator = false;
  var isAsync = false;
  var kind = "method";
  var isStatic = false;
  if (this.eatContextual("static")) {
    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
      this.parseClassStaticBlock(node);
      return node;
    }
    if (this.isClassElementNameStart() || this.type === types$1.star) {
      isStatic = true;
    } else {
      keyName = "static";
    }
  }
  node.static = isStatic;
  if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
      isAsync = true;
    } else {
      keyName = "async";
    }
  }
  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
    isGenerator = true;
  }
  if (!keyName && !isAsync && !isGenerator) {
    var lastValue = this.value;
    if (this.eatContextual("get") || this.eatContextual("set")) {
      if (this.isClassElementNameStart()) {
        kind = lastValue;
      } else {
        keyName = lastValue;
      }
    }
  }
  if (keyName) {
    node.computed = false;
    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
    node.key.name = keyName;
    this.finishNode(node.key, "Identifier");
  } else {
    this.parseClassElementName(node);
  }
  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
    var isConstructor = !node.static && checkKeyName(node, "constructor");
    var allowsDirectSuper = isConstructor && constructorAllowsSuper;
    if (isConstructor && kind !== "method") {
      this.raise(node.key.start, "Constructor can't have get/set modifier");
    }
    node.kind = isConstructor ? "constructor" : kind;
    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
  } else {
    this.parseClassField(node);
  }
  return node;
};
pp$8.isClassElementNameStart = function() {
  return this.type === types$1.name || this.type === types$1.privateId || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword;
};
pp$8.parseClassElementName = function(element) {
  if (this.type === types$1.privateId) {
    if (this.value === "constructor") {
      this.raise(this.start, "Classes can't have an element named '#constructor'");
    }
    element.computed = false;
    element.key = this.parsePrivateIdent();
  } else {
    this.parsePropertyName(element);
  }
};
pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
  var key2 = method.key;
  if (method.kind === "constructor") {
    if (isGenerator) {
      this.raise(key2.start, "Constructor can't be a generator");
    }
    if (isAsync) {
      this.raise(key2.start, "Constructor can't be an async method");
    }
  } else if (method.static && checkKeyName(method, "prototype")) {
    this.raise(key2.start, "Classes may not have a static property named prototype");
  }
  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
  if (method.kind === "get" && value.params.length !== 0) {
    this.raiseRecoverable(value.start, "getter should have no params");
  }
  if (method.kind === "set" && value.params.length !== 1) {
    this.raiseRecoverable(value.start, "setter should have exactly one param");
  }
  if (method.kind === "set" && value.params[0].type === "RestElement") {
    this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params");
  }
  return this.finishNode(method, "MethodDefinition");
};
pp$8.parseClassField = function(field) {
  if (checkKeyName(field, "constructor")) {
    this.raise(field.key.start, "Classes can't have a field named 'constructor'");
  } else if (field.static && checkKeyName(field, "prototype")) {
    this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
  }
  if (this.eat(types$1.eq)) {
    var scope = this.currentThisScope();
    var inClassFieldInit = scope.inClassFieldInit;
    scope.inClassFieldInit = true;
    field.value = this.parseMaybeAssign();
    scope.inClassFieldInit = inClassFieldInit;
  } else {
    field.value = null;
  }
  this.semicolon();
  return this.finishNode(field, "PropertyDefinition");
};
pp$8.parseClassStaticBlock = function(node) {
  node.body = [];
  var oldLabels = this.labels;
  this.labels = [];
  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  this.next();
  this.exitScope();
  this.labels = oldLabels;
  return this.finishNode(node, "StaticBlock");
};
pp$8.parseClassId = function(node, isStatement) {
  if (this.type === types$1.name) {
    node.id = this.parseIdent();
    if (isStatement) {
      this.checkLValSimple(node.id, BIND_LEXICAL, false);
    }
  } else {
    if (isStatement === true) {
      this.unexpected();
    }
    node.id = null;
  }
};
pp$8.parseClassSuper = function(node) {
  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;
};
pp$8.enterClassBody = function() {
  var element = { declared: /* @__PURE__ */ Object.create(null), used: [] };
  this.privateNameStack.push(element);
  return element.declared;
};
pp$8.exitClassBody = function() {
  var ref2 = this.privateNameStack.pop();
  var declared = ref2.declared;
  var used = ref2.used;
  var len = this.privateNameStack.length;
  var parent = len === 0 ? null : this.privateNameStack[len - 1];
  for (var i4 = 0; i4 < used.length; ++i4) {
    var id2 = used[i4];
    if (!hasOwn(declared, id2.name)) {
      if (parent) {
        parent.used.push(id2);
      } else {
        this.raiseRecoverable(id2.start, "Private field '#" + id2.name + "' must be declared in an enclosing class");
      }
    }
  }
};
function isPrivateNameConflicted(privateNameMap, element) {
  var name = element.key.name;
  var curr = privateNameMap[name];
  var next = "true";
  if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {
    next = (element.static ? "s" : "i") + element.kind;
  }
  if (curr === "iget" && next === "iset" || curr === "iset" && next === "iget" || curr === "sget" && next === "sset" || curr === "sset" && next === "sget") {
    privateNameMap[name] = "true";
    return false;
  } else if (!curr) {
    privateNameMap[name] = next;
    return false;
  } else {
    return true;
  }
}
function checkKeyName(node, name) {
  var computed = node.computed;
  var key2 = node.key;
  return !computed && (key2.type === "Identifier" && key2.name === name || key2.type === "Literal" && key2.value === name);
}
pp$8.parseExport = function(node, exports) {
  this.next();
  if (this.eat(types$1.star)) {
    if (this.options.ecmaVersion >= 11) {
      if (this.eatContextual("as")) {
        node.exported = this.parseModuleExportName();
        this.checkExport(exports, node.exported, this.lastTokStart);
      } else {
        node.exported = null;
      }
    }
    this.expectContextual("from");
    if (this.type !== types$1.string) {
      this.unexpected();
    }
    node.source = this.parseExprAtom();
    this.semicolon();
    return this.finishNode(node, "ExportAllDeclaration");
  }
  if (this.eat(types$1._default)) {
    this.checkExport(exports, "default", this.lastTokStart);
    var isAsync;
    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
      var fNode = this.startNode();
      this.next();
      if (isAsync) {
        this.next();
      }
      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);
    } else if (this.type === types$1._class) {
      var cNode = this.startNode();
      node.declaration = this.parseClass(cNode, "nullableID");
    } else {
      node.declaration = this.parseMaybeAssign();
      this.semicolon();
    }
    return this.finishNode(node, "ExportDefaultDeclaration");
  }
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseStatement(null);
    if (node.declaration.type === "VariableDeclaration") {
      this.checkVariableExport(exports, node.declaration.declarations);
    } else {
      this.checkExport(exports, node.declaration.id, node.declaration.id.start);
    }
    node.specifiers = [];
    node.source = null;
  } else {
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports);
    if (this.eatContextual("from")) {
      if (this.type !== types$1.string) {
        this.unexpected();
      }
      node.source = this.parseExprAtom();
    } else {
      for (var i4 = 0, list = node.specifiers; i4 < list.length; i4 += 1) {
        var spec = list[i4];
        this.checkUnreserved(spec.local);
        this.checkLocalExport(spec.local);
        if (spec.local.type === "Literal") {
          this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
        }
      }
      node.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration");
};
pp$8.checkExport = function(exports, name, pos) {
  if (!exports) {
    return;
  }
  if (typeof name !== "string") {
    name = name.type === "Identifier" ? name.name : name.value;
  }
  if (hasOwn(exports, name)) {
    this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
  }
  exports[name] = true;
};
pp$8.checkPatternExport = function(exports, pat) {
  var type = pat.type;
  if (type === "Identifier") {
    this.checkExport(exports, pat, pat.start);
  } else if (type === "ObjectPattern") {
    for (var i4 = 0, list = pat.properties; i4 < list.length; i4 += 1) {
      var prop = list[i4];
      this.checkPatternExport(exports, prop);
    }
  } else if (type === "ArrayPattern") {
    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];
      if (elt) {
        this.checkPatternExport(exports, elt);
      }
    }
  } else if (type === "Property") {
    this.checkPatternExport(exports, pat.value);
  } else if (type === "AssignmentPattern") {
    this.checkPatternExport(exports, pat.left);
  } else if (type === "RestElement") {
    this.checkPatternExport(exports, pat.argument);
  } else if (type === "ParenthesizedExpression") {
    this.checkPatternExport(exports, pat.expression);
  }
};
pp$8.checkVariableExport = function(exports, decls) {
  if (!exports) {
    return;
  }
  for (var i4 = 0, list = decls; i4 < list.length; i4 += 1) {
    var decl = list[i4];
    this.checkPatternExport(exports, decl.id);
  }
};
pp$8.shouldParseExportStatement = function() {
  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
};
pp$8.parseExportSpecifiers = function(exports) {
  var nodes = [], first = true;
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var node = this.startNode();
    node.local = this.parseModuleExportName();
    node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
    this.checkExport(
      exports,
      node.exported,
      node.exported.start
    );
    nodes.push(this.finishNode(node, "ExportSpecifier"));
  }
  return nodes;
};
pp$8.parseImport = function(node) {
  this.next();
  if (this.type === types$1.string) {
    node.specifiers = empty$1;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
  }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration");
};
pp$8.parseImportSpecifiers = function() {
  var nodes = [], first = true;
  if (this.type === types$1.name) {
    var node = this.startNode();
    node.local = this.parseIdent();
    this.checkLValSimple(node.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
    if (!this.eat(types$1.comma)) {
      return nodes;
    }
  }
  if (this.type === types$1.star) {
    var node$1 = this.startNode();
    this.next();
    this.expectContextual("as");
    node$1.local = this.parseIdent();
    this.checkLValSimple(node$1.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
    return nodes;
  }
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var node$2 = this.startNode();
    node$2.imported = this.parseModuleExportName();
    if (this.eatContextual("as")) {
      node$2.local = this.parseIdent();
    } else {
      this.checkUnreserved(node$2.imported);
      node$2.local = node$2.imported;
    }
    this.checkLValSimple(node$2.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node$2, "ImportSpecifier"));
  }
  return nodes;
};
pp$8.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
    var stringLiteral = this.parseLiteral(this.value);
    if (loneSurrogate.test(stringLiteral.value)) {
      this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
    }
    return stringLiteral;
  }
  return this.parseIdent(true);
};
pp$8.adaptDirectivePrologue = function(statements) {
  for (var i4 = 0; i4 < statements.length && this.isDirectiveCandidate(statements[i4]); ++i4) {
    statements[i4].directive = statements[i4].expression.raw.slice(1, -1);
  }
};
pp$8.isDirectiveCandidate = function(statement) {
  return this.options.ecmaVersion >= 5 && statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === '"' || this.input[statement.start] === "'");
};
var pp$7 = Parser.prototype;
pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
      case "Identifier":
        if (this.inAsync && node.name === "await") {
          this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
        }
        break;
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
      case "RestElement":
        break;
      case "ObjectExpression":
        node.type = "ObjectPattern";
        if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
          var prop = list[i4];
          this.toAssignable(prop, isBinding);
          if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
            this.raise(prop.argument.start, "Unexpected token");
          }
        }
        break;
      case "Property":
        if (node.kind !== "init") {
          this.raise(node.key.start, "Object pattern can't contain getter or setter");
        }
        this.toAssignable(node.value, isBinding);
        break;
      case "ArrayExpression":
        node.type = "ArrayPattern";
        if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        this.toAssignableList(node.elements, isBinding);
        break;
      case "SpreadElement":
        node.type = "RestElement";
        this.toAssignable(node.argument, isBinding);
        if (node.argument.type === "AssignmentPattern") {
          this.raise(node.argument.start, "Rest elements cannot have a default value");
        }
        break;
      case "AssignmentExpression":
        if (node.operator !== "=") {
          this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
        }
        node.type = "AssignmentPattern";
        delete node.operator;
        this.toAssignable(node.left, isBinding);
        break;
      case "ParenthesizedExpression":
        this.toAssignable(node.expression, isBinding, refDestructuringErrors);
        break;
      case "ChainExpression":
        this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        if (!isBinding) {
          break;
        }
      default:
        this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) {
    this.checkPatternErrors(refDestructuringErrors, true);
  }
  return node;
};
pp$7.toAssignableList = function(exprList, isBinding) {
  var end = exprList.length;
  for (var i4 = 0; i4 < end; i4++) {
    var elt = exprList[i4];
    if (elt) {
      this.toAssignable(elt, isBinding);
    }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
      this.unexpected(last.argument.start);
    }
  }
  return exprList;
};
pp$7.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement");
};
pp$7.parseRestBinding = function() {
  var node = this.startNode();
  this.next();
  if (this.options.ecmaVersion === 6 && this.type !== types$1.name) {
    this.unexpected();
  }
  node.argument = this.parseBindingAtom();
  return this.finishNode(node, "RestElement");
};
pp$7.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
      case types$1.bracketL:
        var node = this.startNode();
        this.next();
        node.elements = this.parseBindingList(types$1.bracketR, true, true);
        return this.finishNode(node, "ArrayPattern");
      case types$1.braceL:
        return this.parseObj(true);
    }
  }
  return this.parseIdent();
};
pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) {
      first = false;
    } else {
      this.expect(types$1.comma);
    }
    if (allowEmpty && this.type === types$1.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this.afterTrailingComma(close)) {
      break;
    } else if (this.type === types$1.ellipsis) {
      var rest = this.parseRestBinding();
      this.parseBindingListItem(rest);
      elts.push(rest);
      if (this.type === types$1.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      this.expect(close);
      break;
    } else {
      var elem = this.parseMaybeDefault(this.start, this.startLoc);
      this.parseBindingListItem(elem);
      elts.push(elem);
    }
  }
  return elts;
};
pp$7.parseBindingListItem = function(param) {
  return param;
};
pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) {
    return left;
  }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern");
};
pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  var isBind = bindingType !== BIND_NONE;
  switch (expr.type) {
    case "Identifier":
      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
        this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
      }
      if (isBind) {
        if (bindingType === BIND_LEXICAL && expr.name === "let") {
          this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
        }
        if (checkClashes) {
          if (hasOwn(checkClashes, expr.name)) {
            this.raiseRecoverable(expr.start, "Argument name clash");
          }
          checkClashes[expr.name] = true;
        }
        if (bindingType !== BIND_OUTSIDE) {
          this.declareName(expr.name, bindingType, expr.start);
        }
      }
      break;
    case "ChainExpression":
      this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
      break;
    case "MemberExpression":
      if (isBind) {
        this.raiseRecoverable(expr.start, "Binding member expression");
      }
      break;
    case "ParenthesizedExpression":
      if (isBind) {
        this.raiseRecoverable(expr.start, "Binding parenthesized expression");
      }
      return this.checkLValSimple(expr.expression, bindingType, checkClashes);
    default:
      this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
  }
};
pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  switch (expr.type) {
    case "ObjectPattern":
      for (var i4 = 0, list = expr.properties; i4 < list.length; i4 += 1) {
        var prop = list[i4];
        this.checkLValInnerPattern(prop, bindingType, checkClashes);
      }
      break;
    case "ArrayPattern":
      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
        var elem = list$1[i$1];
        if (elem) {
          this.checkLValInnerPattern(elem, bindingType, checkClashes);
        }
      }
      break;
    default:
      this.checkLValSimple(expr, bindingType, checkClashes);
  }
};
pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  switch (expr.type) {
    case "Property":
      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
      break;
    case "AssignmentPattern":
      this.checkLValPattern(expr.left, bindingType, checkClashes);
      break;
    case "RestElement":
      this.checkLValPattern(expr.argument, bindingType, checkClashes);
      break;
    default:
      this.checkLValPattern(expr, bindingType, checkClashes);
  }
};
var TokContext = function TokContext2(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};
var types = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function(p3) {
    return p3.tryReadTemplateToken();
  }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};
var pp$6 = Parser.prototype;
pp$6.initialContext = function() {
  return [types.b_stat];
};
pp$6.curContext = function() {
  return this.context[this.context.length - 1];
};
pp$6.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types.f_expr || parent === types.f_stat) {
    return true;
  }
  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr)) {
    return !parent.isExpr;
  }
  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed) {
    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
  }
  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {
    return true;
  }
  if (prevType === types$1.braceL) {
    return parent === types.b_stat;
  }
  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {
    return false;
  }
  return !this.exprAllowed;
};
pp$6.inGeneratorContext = function() {
  for (var i4 = this.context.length - 1; i4 >= 1; i4--) {
    var context = this.context[i4];
    if (context.token === "function") {
      return context.generator;
    }
  }
  return false;
};
pp$6.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType === types$1.dot) {
    this.exprAllowed = false;
  } else if (update = type.updateContext) {
    update.call(this, prevType);
  } else {
    this.exprAllowed = type.beforeExpr;
  }
};
pp$6.overrideContext = function(tokenCtx) {
  if (this.curContext() !== tokenCtx) {
    this.context[this.context.length - 1] = tokenCtx;
  }
};
types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = true;
    return;
  }
  var out = this.context.pop();
  if (out === types.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};
types$1.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);
  this.exprAllowed = true;
};
types$1.dollarBraceL.updateContext = function() {
  this.context.push(types.b_tmpl);
  this.exprAllowed = true;
};
types$1.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
  this.context.push(statementParens ? types.p_stat : types.p_expr);
  this.exprAllowed = true;
};
types$1.incDec.updateContext = function() {
};
types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types$1._else && !(prevType === types$1.semi && this.curContext() !== types.p_stat) && !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {
    this.context.push(types.f_expr);
  } else {
    this.context.push(types.f_stat);
  }
  this.exprAllowed = false;
};
types$1.backQuote.updateContext = function() {
  if (this.curContext() === types.q_tmpl) {
    this.context.pop();
  } else {
    this.context.push(types.q_tmpl);
  }
  this.exprAllowed = false;
};
types$1.star.updateContext = function(prevType) {
  if (prevType === types$1._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types.f_expr) {
      this.context[index] = types.f_expr_gen;
    } else {
      this.context[index] = types.f_gen;
    }
  }
  this.exprAllowed = true;
};
types$1.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
    if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
      allowed = true;
    }
  }
  this.exprAllowed = allowed;
};
var pp$5 = Parser.prototype;
pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
    return;
  }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
    return;
  }
  var key2 = prop.key;
  var name;
  switch (key2.type) {
    case "Identifier":
      name = key2.name;
      break;
    case "Literal":
      name = String(key2.value);
      break;
    default:
      return;
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors) {
          if (refDestructuringErrors.doubleProto < 0) {
            refDestructuringErrors.doubleProto = key2.start;
          }
        } else {
          this.raiseRecoverable(key2.start, "Redefinition of __proto__ property");
        }
      }
      propHash.proto = true;
    }
    return;
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition) {
      this.raiseRecoverable(key2.start, "Redefinition of property");
    }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};
pp$5.parseExpression = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
  if (this.type === types$1.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types$1.comma)) {
      node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));
    }
    return this.finishNode(node, "SequenceExpression");
  }
  return expr;
};
pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
  if (this.isContextual("yield")) {
    if (this.inGenerator) {
      return this.parseYield(forInit);
    } else {
      this.exprAllowed = false;
    }
  }
  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    oldDoubleProto = refDestructuringErrors.doubleProto;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors();
    ownDestructuringErrors = true;
  }
  var startPos = this.start, startLoc = this.startLoc;
  if (this.type === types$1.parenL || this.type === types$1.name) {
    this.potentialArrowAt = this.start;
    this.potentialArrowInForAwait = forInit === "await";
  }
  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
  if (afterLeftParse) {
    left = afterLeftParse.call(this, left, startPos, startLoc);
  }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    if (this.type === types$1.eq) {
      left = this.toAssignable(left, false, refDestructuringErrors);
    }
    if (!ownDestructuringErrors) {
      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
    }
    if (refDestructuringErrors.shorthandAssign >= left.start) {
      refDestructuringErrors.shorthandAssign = -1;
    }
    if (this.type === types$1.eq) {
      this.checkLValPattern(left);
    } else {
      this.checkLValSimple(left);
    }
    node.left = left;
    this.next();
    node.right = this.parseMaybeAssign(forInit);
    if (oldDoubleProto > -1) {
      refDestructuringErrors.doubleProto = oldDoubleProto;
    }
    return this.finishNode(node, "AssignmentExpression");
  } else {
    if (ownDestructuringErrors) {
      this.checkExpressionErrors(refDestructuringErrors, true);
    }
  }
  if (oldParenAssign > -1) {
    refDestructuringErrors.parenthesizedAssign = oldParenAssign;
  }
  if (oldTrailingComma > -1) {
    refDestructuringErrors.trailingComma = oldTrailingComma;
  }
  return left;
};
pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(forInit, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) {
    return expr;
  }
  if (this.eat(types$1.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types$1.colon);
    node.alternate = this.parseMaybeAssign(forInit);
    return this.finishNode(node, "ConditionalExpression");
  }
  return expr;
};
pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
  if (this.checkExpressionErrors(refDestructuringErrors)) {
    return expr;
  }
  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);
};
pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
  var prec = this.type.binop;
  if (prec != null && (!forInit || this.type !== types$1._in)) {
    if (prec > minPrec) {
      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
      var coalesce = this.type === types$1.coalesce;
      if (coalesce) {
        prec = types$1.logicalAND.binop;
      }
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
      if (logical && this.type === types$1.coalesce || coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND)) {
        this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
      }
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);
    }
  }
  return left;
};
pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  if (right.type === "PrivateIdentifier") {
    this.raise(right.start, "Private identifier can only be left side of binary expression");
  }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
};
pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && this.canAwait) {
    expr = this.parseAwait(forInit);
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types$1.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true, update, forInit);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) {
      this.checkLValSimple(node.argument);
    } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
      this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
    } else if (node.operator === "delete" && isPrivateFieldAccess(node.argument)) {
      this.raiseRecoverable(node.start, "Private fields can not be deleted");
    } else {
      sawUnary = true;
    }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else if (!sawUnary && this.type === types$1.privateId) {
    if (forInit || this.privateNameStack.length === 0) {
      this.unexpected();
    }
    expr = this.parsePrivateIdent();
    if (this.type !== types$1._in) {
      this.unexpected();
    }
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
    if (this.checkExpressionErrors(refDestructuringErrors)) {
      return expr;
    }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this.startNodeAt(startPos, startLoc);
      node$1.operator = this.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this.checkLValSimple(expr);
      this.next();
      expr = this.finishNode(node$1, "UpdateExpression");
    }
  }
  if (!incDec && this.eat(types$1.starstar)) {
    if (sawUnary) {
      this.unexpected(this.lastTokStart);
    } else {
      return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false);
    }
  } else {
    return expr;
  }
};
function isPrivateFieldAccess(node) {
  return node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" || node.type === "ChainExpression" && isPrivateFieldAccess(node.expression);
}
pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors, forInit);
  if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
    return expr;
  }
  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) {
      refDestructuringErrors.parenthesizedAssign = -1;
    }
    if (refDestructuringErrors.parenthesizedBind >= result.start) {
      refDestructuringErrors.parenthesizedBind = -1;
    }
    if (refDestructuringErrors.trailingComma >= result.start) {
      refDestructuringErrors.trailingComma = -1;
    }
  }
  return result;
};
pp$5.parseSubscripts = function(base2, startPos, startLoc, noCalls, forInit) {
  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base2.type === "Identifier" && base2.name === "async" && this.lastTokEnd === base2.end && !this.canInsertSemicolon() && base2.end - base2.start === 5 && this.potentialArrowAt === base2.start;
  var optionalChained = false;
  while (true) {
    var element = this.parseSubscript(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);
    if (element.optional) {
      optionalChained = true;
    }
    if (element === base2 || element.type === "ArrowFunctionExpression") {
      if (optionalChained) {
        var chainNode = this.startNodeAt(startPos, startLoc);
        chainNode.expression = element;
        element = this.finishNode(chainNode, "ChainExpression");
      }
      return element;
    }
    base2 = element;
  }
};
pp$5.parseSubscript = function(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
  var optionalSupported = this.options.ecmaVersion >= 11;
  var optional = optionalSupported && this.eat(types$1.questionDot);
  if (noCalls && optional) {
    this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
  }
  var computed = this.eat(types$1.bracketL);
  if (computed || optional && this.type !== types$1.parenL && this.type !== types$1.backQuote || this.eat(types$1.dot)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.object = base2;
    if (computed) {
      node.property = this.parseExpression();
      this.expect(types$1.bracketR);
    } else if (this.type === types$1.privateId && base2.type !== "Super") {
      node.property = this.parsePrivateIdent();
    } else {
      node.property = this.parseIdent(this.options.allowReserved !== "never");
    }
    node.computed = !!computed;
    if (optionalSupported) {
      node.optional = optional;
    }
    base2 = this.finishNode(node, "MemberExpression");
  } else if (!noCalls && this.eat(types$1.parenL)) {
    var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      if (this.awaitIdentPos > 0) {
        this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
      }
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
    var node$1 = this.startNodeAt(startPos, startLoc);
    node$1.callee = base2;
    node$1.arguments = exprList;
    if (optionalSupported) {
      node$1.optional = optional;
    }
    base2 = this.finishNode(node$1, "CallExpression");
  } else if (this.type === types$1.backQuote) {
    if (optional || optionalChained) {
      this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    }
    var node$2 = this.startNodeAt(startPos, startLoc);
    node$2.tag = base2;
    node$2.quasi = this.parseTemplate({ isTagged: true });
    base2 = this.finishNode(node$2, "TaggedTemplateExpression");
  }
  return base2;
};
pp$5.parseExprAtom = function(refDestructuringErrors, forInit) {
  if (this.type === types$1.slash) {
    this.readRegexp();
  }
  var node, canBeArrow = this.potentialArrowAt === this.start;
  switch (this.type) {
    case types$1._super:
      if (!this.allowSuper) {
        this.raise(this.start, "'super' keyword outside a method");
      }
      node = this.startNode();
      this.next();
      if (this.type === types$1.parenL && !this.allowDirectSuper) {
        this.raise(node.start, "super() call outside constructor of a subclass");
      }
      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL) {
        this.unexpected();
      }
      return this.finishNode(node, "Super");
    case types$1._this:
      node = this.startNode();
      this.next();
      return this.finishNode(node, "ThisExpression");
    case types$1.name:
      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
      var id2 = this.parseIdent(false);
      if (this.options.ecmaVersion >= 8 && !containsEsc && id2.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
        this.overrideContext(types.f_expr);
        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);
      }
      if (canBeArrow && !this.canInsertSemicolon()) {
        if (this.eat(types$1.arrow)) {
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id2], false, forInit);
        }
        if (this.options.ecmaVersion >= 8 && id2.name === "async" && this.type === types$1.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
          id2 = this.parseIdent(false);
          if (this.canInsertSemicolon() || !this.eat(types$1.arrow)) {
            this.unexpected();
          }
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id2], true, forInit);
        }
      }
      return id2;
    case types$1.regexp:
      var value = this.value;
      node = this.parseLiteral(value.value);
      node.regex = { pattern: value.pattern, flags: value.flags };
      return node;
    case types$1.num:
    case types$1.string:
      return this.parseLiteral(this.value);
    case types$1._null:
    case types$1._true:
    case types$1._false:
      node = this.startNode();
      node.value = this.type === types$1._null ? null : this.type === types$1._true;
      node.raw = this.type.keyword;
      this.next();
      return this.finishNode(node, "Literal");
    case types$1.parenL:
      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
      if (refDestructuringErrors) {
        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
          refDestructuringErrors.parenthesizedAssign = start;
        }
        if (refDestructuringErrors.parenthesizedBind < 0) {
          refDestructuringErrors.parenthesizedBind = start;
        }
      }
      return expr;
    case types$1.bracketL:
      node = this.startNode();
      this.next();
      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
      return this.finishNode(node, "ArrayExpression");
    case types$1.braceL:
      this.overrideContext(types.b_expr);
      return this.parseObj(false, refDestructuringErrors);
    case types$1._function:
      node = this.startNode();
      this.next();
      return this.parseFunction(node, 0);
    case types$1._class:
      return this.parseClass(this.startNode(), false);
    case types$1._new:
      return this.parseNew();
    case types$1.backQuote:
      return this.parseTemplate();
    case types$1._import:
      if (this.options.ecmaVersion >= 11) {
        return this.parseExprImport();
      } else {
        return this.unexpected();
      }
    default:
      this.unexpected();
  }
};
pp$5.parseExprImport = function() {
  var node = this.startNode();
  if (this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword import");
  }
  var meta = this.parseIdent(true);
  switch (this.type) {
    case types$1.parenL:
      return this.parseDynamicImport(node);
    case types$1.dot:
      node.meta = meta;
      return this.parseImportMeta(node);
    default:
      this.unexpected();
  }
};
pp$5.parseDynamicImport = function(node) {
  this.next();
  node.source = this.parseMaybeAssign();
  if (!this.eat(types$1.parenR)) {
    var errorPos = this.start;
    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
      this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
    } else {
      this.unexpected(errorPos);
    }
  }
  return this.finishNode(node, "ImportExpression");
};
pp$5.parseImportMeta = function(node) {
  this.next();
  var containsEsc = this.containsEsc;
  node.property = this.parseIdent(true);
  if (node.property.name !== "meta") {
    this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'");
  }
  if (containsEsc) {
    this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters");
  }
  if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere) {
    this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module");
  }
  return this.finishNode(node, "MetaProperty");
};
pp$5.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
    node.bigint = node.raw.slice(0, -1).replace(/_/g, "");
  }
  this.next();
  return this.finishNode(node, "Literal");
};
pp$5.parseParenExpression = function() {
  this.expect(types$1.parenL);
  var val = this.parseExpression();
  this.expect(types$1.parenR);
  return val;
};
pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();
    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    while (this.type !== types$1.parenR) {
      first ? first = false : this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
        lastIsComma = true;
        break;
      } else if (this.type === types$1.ellipsis) {
        spreadStart = this.start;
        exprList.push(this.parseParenItem(this.parseRestBinding()));
        if (this.type === types$1.comma) {
          this.raise(this.start, "Comma is not permitted after the rest element");
        }
        break;
      } else {
        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
      }
    }
    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
    this.expect(types$1.parenR);
    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList, forInit);
    }
    if (!exprList.length || lastIsComma) {
      this.unexpected(this.lastTokStart);
    }
    if (spreadStart) {
      this.unexpected(spreadStart);
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }
  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression");
  } else {
    return val;
  }
};
pp$5.parseParenItem = function(item) {
  return item;
};
pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);
};
var empty = [];
pp$5.parseNew = function() {
  if (this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword new");
  }
  var node = this.startNode();
  var meta = this.parseIdent(true);
  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {
    node.meta = meta;
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target") {
      this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'");
    }
    if (containsEsc) {
      this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters");
    }
    if (!this.allowNewDotTarget) {
      this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block");
    }
    return this.finishNode(node, "MetaProperty");
  }
  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;
  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);
  if (isImport && node.callee.type === "ImportExpression") {
    this.raise(startPos, "Cannot use new with import()");
  }
  if (this.eat(types$1.parenL)) {
    node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false);
  } else {
    node.arguments = empty;
  }
  return this.finishNode(node, "NewExpression");
};
pp$5.parseTemplateElement = function(ref2) {
  var isTagged = ref2.isTagged;
  var elem = this.startNode();
  if (this.type === types$1.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value,
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types$1.backQuote;
  return this.finishNode(elem, "TemplateElement");
};
pp$5.parseTemplate = function(ref2) {
  if (ref2 === void 0)
    ref2 = {};
  var isTagged = ref2.isTagged;
  if (isTagged === void 0)
    isTagged = false;
  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({ isTagged });
  node.quasis = [curElt];
  while (!curElt.tail) {
    if (this.type === types$1.eof) {
      this.raise(this.pos, "Unterminated template literal");
    }
    this.expect(types$1.dollarBraceL);
    node.expressions.push(this.parseExpression());
    this.expect(types$1.braceR);
    node.quasis.push(curElt = this.parseTemplateElement({ isTagged }));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral");
};
pp$5.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types$1.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
};
pp$5.parseObj = function(isPattern, refDestructuringErrors) {
  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var prop = this.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) {
      this.checkPropClash(prop, propHash, refDestructuringErrors);
    }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
};
pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types$1.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement");
    }
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    return this.finishNode(prop, "SpreadElement");
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern) {
      isGenerator = this.eat(types$1.star);
    }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
    this.parsePropertyName(prop);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property");
};
pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types$1.colon) {
    this.unexpected();
  }
  if (this.eat(types$1.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
    if (isPattern) {
      this.unexpected();
    }
    prop.kind = "init";
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
    if (isGenerator || isAsync) {
      this.unexpected();
    }
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    prop.value = this.parseMethod(false);
    var paramCount = prop.kind === "get" ? 0 : 1;
    if (prop.value.params.length !== paramCount) {
      var start = prop.value.start;
      if (prop.kind === "get") {
        this.raiseRecoverable(start, "getter should have no params");
      } else {
        this.raiseRecoverable(start, "setter should have exactly one param");
      }
    } else {
      if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
        this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
      }
    }
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    if (isGenerator || isAsync) {
      this.unexpected();
    }
    this.checkUnreserved(prop.key);
    if (prop.key.name === "await" && !this.awaitIdentPos) {
      this.awaitIdentPos = startPos;
    }
    prop.kind = "init";
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else if (this.type === types$1.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0) {
        refDestructuringErrors.shorthandAssign = this.start;
      }
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else {
      prop.value = this.copyNode(prop.key);
    }
    prop.shorthand = true;
  } else {
    this.unexpected();
  }
};
pp$5.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types$1.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types$1.bracketR);
      return prop.key;
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
};
pp$5.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) {
    node.generator = node.expression = false;
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = false;
  }
};
pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.initFunction(node);
  if (this.options.ecmaVersion >= 6) {
    node.generator = isGenerator;
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false, true, false);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "FunctionExpression");
};
pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true, false, forInit);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "ArrowFunctionExpression");
};
pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
  var isExpression2 = isArrowFunction && this.type !== types$1.braceL;
  var oldStrict = this.strict, useStrict = false;
  if (isExpression2) {
    node.body = this.parseMaybeAssign(forInit);
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      if (useStrict && nonSimple) {
        this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
      }
    }
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) {
      this.strict = true;
    }
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
    if (this.strict && node.id) {
      this.checkLValSimple(node.id, BIND_OUTSIDE);
    }
    node.body = this.parseBlock(false, void 0, useStrict && !oldStrict);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitScope();
};
pp$5.isSimpleParamList = function(params) {
  for (var i4 = 0, list = params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    if (param.type !== "Identifier") {
      return false;
    }
  }
  return true;
};
pp$5.checkParams = function(node, allowDuplicates) {
  var nameHash = /* @__PURE__ */ Object.create(null);
  for (var i4 = 0, list = node.params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
  }
};
pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(close)) {
        break;
      }
    } else {
      first = false;
    }
    var elt = void 0;
    if (allowEmpty && this.type === types$1.comma) {
      elt = null;
    } else if (this.type === types$1.ellipsis) {
      elt = this.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0) {
        refDestructuringErrors.trailingComma = this.start;
      }
    } else {
      elt = this.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts;
};
pp$5.checkUnreserved = function(ref2) {
  var start = ref2.start;
  var end = ref2.end;
  var name = ref2.name;
  if (this.inGenerator && name === "yield") {
    this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator");
  }
  if (this.inAsync && name === "await") {
    this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function");
  }
  if (this.currentThisScope().inClassFieldInit && name === "arguments") {
    this.raiseRecoverable(start, "Cannot use 'arguments' in class field initializer");
  }
  if (this.inClassStaticBlock && (name === "arguments" || name === "await")) {
    this.raise(start, "Cannot use " + name + " in class static initialization block");
  }
  if (this.keywords.test(name)) {
    this.raise(start, "Unexpected keyword '" + name + "'");
  }
  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf("\\") !== -1) {
    return;
  }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await") {
      this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function");
    }
    this.raiseRecoverable(start, "The keyword '" + name + "' is reserved");
  }
};
pp$5.parseIdent = function(liberal) {
  var node = this.startNode();
  if (this.type === types$1.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;
    if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
  } else {
    this.unexpected();
  }
  this.next(!!liberal);
  this.finishNode(node, "Identifier");
  if (!liberal) {
    this.checkUnreserved(node);
    if (node.name === "await" && !this.awaitIdentPos) {
      this.awaitIdentPos = node.start;
    }
  }
  return node;
};
pp$5.parsePrivateIdent = function() {
  var node = this.startNode();
  if (this.type === types$1.privateId) {
    node.name = this.value;
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "PrivateIdentifier");
  if (this.privateNameStack.length === 0) {
    this.raise(node.start, "Private field '#" + node.name + "' must be declared in an enclosing class");
  } else {
    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
  }
  return node;
};
pp$5.parseYield = function(forInit) {
  if (!this.yieldPos) {
    this.yieldPos = this.start;
  }
  var node = this.startNode();
  this.next();
  if (this.type === types$1.semi || this.canInsertSemicolon() || this.type !== types$1.star && !this.type.startsExpr) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types$1.star);
    node.argument = this.parseMaybeAssign(forInit);
  }
  return this.finishNode(node, "YieldExpression");
};
pp$5.parseAwait = function(forInit) {
  if (!this.awaitPos) {
    this.awaitPos = this.start;
  }
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true, false, forInit);
  return this.finishNode(node, "AwaitExpression");
};
var pp$4 = Parser.prototype;
pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  var err = new SyntaxError(message);
  err.pos = pos;
  err.loc = loc;
  err.raisedAt = this.pos;
  throw err;
};
pp$4.raiseRecoverable = pp$4.raise;
pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart);
  }
};
var pp$3 = Parser.prototype;
var Scope = function Scope2(flags) {
  this.flags = flags;
  this.var = [];
  this.lexical = [];
  this.functions = [];
  this.inClassFieldInit = false;
};
pp$3.enterScope = function(flags) {
  this.scopeStack.push(new Scope(flags));
};
pp$3.exitScope = function() {
  this.scopeStack.pop();
};
pp$3.treatFunctionsAsVarInScope = function(scope) {
  return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;
};
pp$3.declareName = function(name, bindingType, pos) {
  var redeclared = false;
  if (bindingType === BIND_LEXICAL) {
    var scope = this.currentScope();
    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
    scope.lexical.push(name);
    if (this.inModule && scope.flags & SCOPE_TOP) {
      delete this.undefinedExports[name];
    }
  } else if (bindingType === BIND_SIMPLE_CATCH) {
    var scope$1 = this.currentScope();
    scope$1.lexical.push(name);
  } else if (bindingType === BIND_FUNCTION) {
    var scope$2 = this.currentScope();
    if (this.treatFunctionsAsVar) {
      redeclared = scope$2.lexical.indexOf(name) > -1;
    } else {
      redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
    }
    scope$2.functions.push(name);
  } else {
    for (var i4 = this.scopeStack.length - 1; i4 >= 0; --i4) {
      var scope$3 = this.scopeStack[i4];
      if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
        redeclared = true;
        break;
      }
      scope$3.var.push(name);
      if (this.inModule && scope$3.flags & SCOPE_TOP) {
        delete this.undefinedExports[name];
      }
      if (scope$3.flags & SCOPE_VAR) {
        break;
      }
    }
  }
  if (redeclared) {
    this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
  }
};
pp$3.checkLocalExport = function(id2) {
  if (this.scopeStack[0].lexical.indexOf(id2.name) === -1 && this.scopeStack[0].var.indexOf(id2.name) === -1) {
    this.undefinedExports[id2.name] = id2;
  }
};
pp$3.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1];
};
pp$3.currentVarScope = function() {
  for (var i4 = this.scopeStack.length - 1; ; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.flags & SCOPE_VAR) {
      return scope;
    }
  }
};
pp$3.currentThisScope = function() {
  for (var i4 = this.scopeStack.length - 1; ; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {
      return scope;
    }
  }
};
var Node = function Node2(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations) {
    this.loc = new SourceLocation(parser, loc);
  }
  if (parser.options.directSourceFile) {
    this.sourceFile = parser.options.directSourceFile;
  }
  if (parser.options.ranges) {
    this.range = [pos, 0];
  }
};
var pp$2 = Parser.prototype;
pp$2.startNode = function() {
  return new Node(this, this.start, this.startLoc);
};
pp$2.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc);
};
function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations) {
    node.loc.end = loc;
  }
  if (this.options.ranges) {
    node.range[1] = pos;
  }
  return node;
}
pp$2.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
};
pp$2.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc);
};
pp$2.copyNode = function(node) {
  var newNode = new Node(this, node.start, this.startLoc);
  for (var prop in node) {
    newNode[prop] = node[prop];
  }
  return newNode;
};
var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
var ecma11BinaryProperties = ecma10BinaryProperties;
var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
var ecma13BinaryProperties = ecma12BinaryProperties;
var ecma14BinaryProperties = ecma13BinaryProperties;
var unicodeBinaryProperties = {
  9: ecma9BinaryProperties,
  10: ecma10BinaryProperties,
  11: ecma11BinaryProperties,
  12: ecma12BinaryProperties,
  13: ecma13BinaryProperties,
  14: ecma14BinaryProperties
};
var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
var ecma14ScriptValues = ecma13ScriptValues + " Kawi Nag_Mundari Nagm";
var unicodeScriptValues = {
  9: ecma9ScriptValues,
  10: ecma10ScriptValues,
  11: ecma11ScriptValues,
  12: ecma12ScriptValues,
  13: ecma13ScriptValues,
  14: ecma14ScriptValues
};
var data = {};
function buildUnicodeData(ecmaVersion) {
  var d5 = data[ecmaVersion] = {
    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
    nonBinary: {
      General_Category: wordsRegexp(unicodeGeneralCategoryValues),
      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
    }
  };
  d5.nonBinary.Script_Extensions = d5.nonBinary.Script;
  d5.nonBinary.gc = d5.nonBinary.General_Category;
  d5.nonBinary.sc = d5.nonBinary.Script;
  d5.nonBinary.scx = d5.nonBinary.Script_Extensions;
}
for (i4 = 0, list = [9, 10, 11, 12, 13, 14]; i4 < list.length; i4 += 1) {
  ecmaVersion = list[i4];
  buildUnicodeData(ecmaVersion);
}
var ecmaVersion;
var i4;
var list;
var pp$1 = Parser.prototype;
var RegExpValidationState = function RegExpValidationState2(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "");
  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = [];
  this.backReferenceNames = [];
};
RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
};
RegExpValidationState.prototype.raise = function raise(message) {
  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
};
RegExpValidationState.prototype.at = function at(i4, forceU) {
  if (forceU === void 0)
    forceU = false;
  var s5 = this.source;
  var l3 = s5.length;
  if (i4 >= l3) {
    return -1;
  }
  var c4 = s5.charCodeAt(i4);
  if (!(forceU || this.switchU) || c4 <= 55295 || c4 >= 57344 || i4 + 1 >= l3) {
    return c4;
  }
  var next = s5.charCodeAt(i4 + 1);
  return next >= 56320 && next <= 57343 ? (c4 << 10) + next - 56613888 : c4;
};
RegExpValidationState.prototype.nextIndex = function nextIndex(i4, forceU) {
  if (forceU === void 0)
    forceU = false;
  var s5 = this.source;
  var l3 = s5.length;
  if (i4 >= l3) {
    return l3;
  }
  var c4 = s5.charCodeAt(i4), next;
  if (!(forceU || this.switchU) || c4 <= 55295 || c4 >= 57344 || i4 + 1 >= l3 || (next = s5.charCodeAt(i4 + 1)) < 56320 || next > 57343) {
    return i4 + 1;
  }
  return i4 + 2;
};
RegExpValidationState.prototype.current = function current(forceU) {
  if (forceU === void 0)
    forceU = false;
  return this.at(this.pos, forceU);
};
RegExpValidationState.prototype.lookahead = function lookahead(forceU) {
  if (forceU === void 0)
    forceU = false;
  return this.at(this.nextIndex(this.pos, forceU), forceU);
};
RegExpValidationState.prototype.advance = function advance(forceU) {
  if (forceU === void 0)
    forceU = false;
  this.pos = this.nextIndex(this.pos, forceU);
};
RegExpValidationState.prototype.eat = function eat(ch, forceU) {
  if (forceU === void 0)
    forceU = false;
  if (this.current(forceU) === ch) {
    this.advance(forceU);
    return true;
  }
  return false;
};
pp$1.validateRegExpFlags = function(state) {
  var validFlags = state.validFlags;
  var flags = state.flags;
  for (var i4 = 0; i4 < flags.length; i4++) {
    var flag = flags.charAt(i4);
    if (validFlags.indexOf(flag) === -1) {
      this.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i4 + 1) > -1) {
      this.raise(state.start, "Duplicate regular expression flag");
    }
  }
};
pp$1.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);
  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};
pp$1.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames.length = 0;
  state.backReferenceNames.length = 0;
  this.regexp_disjunction(state);
  if (state.pos !== state.source.length) {
    if (state.eat(41)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(93) || state.eat(125)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i4 = 0, list = state.backReferenceNames; i4 < list.length; i4 += 1) {
    var name = list[i4];
    if (state.groupNames.indexOf(name) === -1) {
      state.raise("Invalid named capture referenced");
    }
  }
};
pp$1.regexp_disjunction = function(state) {
  this.regexp_alternative(state);
  while (state.eat(124)) {
    this.regexp_alternative(state);
  }
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(123)) {
    state.raise("Lone quantifier brackets");
  }
};
pp$1.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {
  }
};
pp$1.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true;
  }
  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true;
  }
  return false;
};
pp$1.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;
  if (state.eat(94) || state.eat(36)) {
    return true;
  }
  if (state.eat(92)) {
    if (state.eat(66) || state.eat(98)) {
      return true;
    }
    state.pos = start;
  }
  if (state.eat(40) && state.eat(63)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(60);
    }
    if (state.eat(61) || state.eat(33)) {
      this.regexp_disjunction(state);
      if (!state.eat(41)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true;
    }
  }
  state.pos = start;
  return false;
};
pp$1.regexp_eatQuantifier = function(state, noError) {
  if (noError === void 0)
    noError = false;
  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(63);
    return true;
  }
  return false;
};
pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
  return state.eat(42) || state.eat(43) || state.eat(63) || this.regexp_eatBracedQuantifier(state, noError);
};
pp$1.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(123)) {
    var min3 = 0, max3 = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min3 = state.lastIntValue;
      if (state.eat(44) && this.regexp_eatDecimalDigits(state)) {
        max3 = state.lastIntValue;
      }
      if (state.eat(125)) {
        if (max3 !== -1 && max3 < min3 && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true;
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatAtom = function(state) {
  return this.regexp_eatPatternCharacters(state) || state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
};
pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(92)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(40)) {
    if (state.eat(63) && state.eat(58)) {
      this.regexp_disjunction(state);
      if (state.eat(41)) {
        return true;
      }
      state.raise("Unterminated group");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatCapturingGroup = function(state) {
  if (state.eat(40)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 63) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(41)) {
      state.numCapturingParens += 1;
      return true;
    }
    state.raise("Unterminated group");
  }
  return false;
};
pp$1.regexp_eatExtendedAtom = function(state) {
  return state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
};
pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false;
};
pp$1.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
function isSyntaxCharacter(ch) {
  return ch === 36 || ch >= 40 && ch <= 43 || ch === 46 || ch === 63 || ch >= 91 && ch <= 94 || ch >= 123 && ch <= 125;
}
pp$1.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start;
};
pp$1.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (ch !== -1 && ch !== 36 && !(ch >= 40 && ch <= 43) && ch !== 46 && ch !== 63 && ch !== 91 && ch !== 94 && ch !== 124) {
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_groupSpecifier = function(state) {
  if (state.eat(63)) {
    if (this.regexp_eatGroupName(state)) {
      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
        state.raise("Duplicate capture group name");
      }
      state.groupNames.push(state.lastStringValue);
      return;
    }
    state.raise("Invalid group");
  }
};
pp$1.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(60)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(62)) {
      return true;
    }
    state.raise("Invalid capture group name");
  }
  return false;
};
pp$1.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString(state.lastIntValue);
    }
    return true;
  }
  return false;
};
pp$1.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);
  if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true;
  }
  state.pos = start;
  return false;
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 36 || ch === 95;
}
pp$1.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);
  if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true;
  }
  state.pos = start;
  return false;
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 36 || ch === 95 || ch === 8204 || ch === 8205;
}
pp$1.regexp_eatAtomEscape = function(state) {
  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
    return true;
  }
  if (state.switchU) {
    if (state.current() === 99) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false;
};
pp$1.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n2 = state.lastIntValue;
    if (state.switchU) {
      if (n2 > state.maxBackReference) {
        state.maxBackReference = n2;
      }
      return true;
    }
    if (n2 <= state.numCapturingParens) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatKGroupName = function(state) {
  if (state.eat(107)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true;
    }
    state.raise("Invalid named reference");
  }
  return false;
};
pp$1.regexp_eatCharacterEscape = function(state) {
  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
};
pp$1.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(99)) {
    if (this.regexp_eatControlLetter(state)) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatZero = function(state) {
  if (state.current() === 48 && !isDecimalDigit(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 116) {
    state.lastIntValue = 9;
    state.advance();
    return true;
  }
  if (ch === 110) {
    state.lastIntValue = 10;
    state.advance();
    return true;
  }
  if (ch === 118) {
    state.lastIntValue = 11;
    state.advance();
    return true;
  }
  if (ch === 102) {
    state.lastIntValue = 12;
    state.advance();
    return true;
  }
  if (ch === 114) {
    state.lastIntValue = 13;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 32;
    state.advance();
    return true;
  }
  return false;
};
function isControlLetter(ch) {
  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122;
}
pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
  if (forceU === void 0)
    forceU = false;
  var start = state.pos;
  var switchU = forceU || state.switchU;
  if (state.eat(117)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (switchU && lead >= 55296 && lead <= 56319) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(92) && state.eat(117) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 56320 && trail <= 57343) {
            state.lastIntValue = (lead - 55296) * 1024 + (trail - 56320) + 65536;
            return true;
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true;
    }
    if (switchU && state.eat(123) && this.regexp_eatHexDigits(state) && state.eat(125) && isValidUnicode(state.lastIntValue)) {
      return true;
    }
    if (switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }
  return false;
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 1114111;
}
pp$1.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true;
    }
    if (state.eat(47)) {
      state.lastIntValue = 47;
      return true;
    }
    return false;
  }
  var ch = state.current();
  if (ch !== 99 && (!state.switchN || ch !== 107)) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 49 && ch <= 57) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
      state.advance();
    } while ((ch = state.current()) >= 48 && ch <= 57);
    return true;
  }
  return false;
};
pp$1.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();
  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return true;
  }
  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 80 || ch === 112)) {
    state.lastIntValue = -1;
    state.advance();
    if (state.eat(123) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(125)) {
      return true;
    }
    state.raise("Invalid property name");
  }
  return false;
};
function isCharacterClassEscape(ch) {
  return ch === 100 || ch === 68 || ch === 115 || ch === 83 || ch === 119 || ch === 87;
}
pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(61)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return true;
    }
  }
  state.pos = start;
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
    return true;
  }
  return false;
};
pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!hasOwn(state.unicodeProperties.nonBinary, name)) {
    state.raise("Invalid property name");
  }
  if (!state.unicodeProperties.nonBinary[name].test(value)) {
    state.raise("Invalid property value");
  }
};
pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (!state.unicodeProperties.binary.test(nameOrValue)) {
    state.raise("Invalid property name");
  }
};
pp$1.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== "";
};
function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 95;
}
pp$1.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== "";
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
}
pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state);
};
pp$1.regexp_eatCharacterClass = function(state) {
  if (state.eat(91)) {
    state.eat(94);
    this.regexp_classRanges(state);
    if (state.eat(93)) {
      return true;
    }
    state.raise("Unterminated character class");
  }
  return false;
};
pp$1.regexp_classRanges = function(state) {
  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(45) && this.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};
pp$1.regexp_eatClassAtom = function(state) {
  var start = state.pos;
  if (state.eat(92)) {
    if (this.regexp_eatClassEscape(state)) {
      return true;
    }
    if (state.switchU) {
      var ch$1 = state.current();
      if (ch$1 === 99 || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  var ch = state.current();
  if (ch !== 93) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatClassEscape = function(state) {
  var start = state.pos;
  if (state.eat(98)) {
    state.lastIntValue = 8;
    return true;
  }
  if (state.switchU && state.eat(45)) {
    state.lastIntValue = 45;
    return true;
  }
  if (!state.switchU && state.eat(99)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true;
    }
    state.pos = start;
  }
  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
};
pp$1.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit(ch) || ch === 95) {
    state.lastIntValue = ch % 32;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(120)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true;
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
    state.advance();
  }
  return state.pos !== start;
};
function isDecimalDigit(ch) {
  return ch >= 48 && ch <= 57;
}
pp$1.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start;
};
function isHexDigit(ch) {
  return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102;
}
function hexToInt(ch) {
  if (ch >= 65 && ch <= 70) {
    return 10 + (ch - 65);
  }
  if (ch >= 97 && ch <= 102) {
    return 10 + (ch - 97);
  }
  return ch - 48;
}
pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true;
  }
  return false;
};
pp$1.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 48;
    state.advance();
    return true;
  }
  state.lastIntValue = 0;
  return false;
};
function isOctalDigit(ch) {
  return ch >= 48 && ch <= 55;
}
pp$1.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i4 = 0; i4 < length; ++i4) {
    var ch = state.current();
    if (!isHexDigit(ch)) {
      state.pos = start;
      return false;
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true;
};
var Token = function Token2(p3) {
  this.type = p3.type;
  this.value = p3.value;
  this.start = p3.start;
  this.end = p3.end;
  if (p3.options.locations) {
    this.loc = new SourceLocation(p3, p3.startLoc, p3.endLoc);
  }
  if (p3.options.ranges) {
    this.range = [p3.start, p3.end];
  }
};
var pp = Parser.prototype;
pp.next = function(ignoreEscapeSequenceInKeyword) {
  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
  }
  if (this.options.onToken) {
    this.options.onToken(new Token(this));
  }
  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};
pp.getToken = function() {
  this.next();
  return new Token(this);
};
if (typeof Symbol !== "undefined") {
  pp[Symbol.iterator] = function() {
    var this$1$1 = this;
    return {
      next: function() {
        var token = this$1$1.getToken();
        return {
          done: token.type === types$1.eof,
          value: token
        };
      }
    };
  };
}
pp.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) {
    this.skipSpace();
  }
  this.start = this.pos;
  if (this.options.locations) {
    this.startLoc = this.curPosition();
  }
  if (this.pos >= this.input.length) {
    return this.finishToken(types$1.eof);
  }
  if (curContext.override) {
    return curContext.override(this);
  } else {
    this.readToken(this.fullCharCodeAtPos());
  }
};
pp.readToken = function(code) {
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92) {
    return this.readWord();
  }
  return this.getTokenFromCode(code);
};
pp.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 55295 || code >= 56320) {
    return code;
  }
  var next = this.input.charCodeAt(this.pos + 1);
  return next <= 56319 || next >= 57344 ? code : (code << 10) + next - 56613888;
};
pp.skipBlockComment = function() {
  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) {
    this.raise(this.pos - 2, "Unterminated comment");
  }
  this.pos = end + 2;
  if (this.options.locations) {
    for (var nextBreak = void 0, pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1; ) {
      ++this.curLine;
      pos = this.lineStart = nextBreak;
    }
  }
  if (this.options.onComment) {
    this.options.onComment(
      true,
      this.input.slice(start + 2, end),
      start,
      this.pos,
      startLoc,
      this.curPosition()
    );
  }
};
pp.skipLineComment = function(startSkip) {
  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this.input.charCodeAt(++this.pos);
  }
  if (this.options.onComment) {
    this.options.onComment(
      false,
      this.input.slice(start + startSkip, this.pos),
      start,
      this.pos,
      startLoc,
      this.curPosition()
    );
  }
};
pp.skipSpace = function() {
  loop:
    while (this.pos < this.input.length) {
      var ch = this.input.charCodeAt(this.pos);
      switch (ch) {
        case 32:
        case 160:
          ++this.pos;
          break;
        case 13:
          if (this.input.charCodeAt(this.pos + 1) === 10) {
            ++this.pos;
          }
        case 10:
        case 8232:
        case 8233:
          ++this.pos;
          if (this.options.locations) {
            ++this.curLine;
            this.lineStart = this.pos;
          }
          break;
        case 47:
          switch (this.input.charCodeAt(this.pos + 1)) {
            case 42:
              this.skipBlockComment();
              break;
            case 47:
              this.skipLineComment(2);
              break;
            default:
              break loop;
          }
          break;
        default:
          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
            ++this.pos;
          } else {
            break loop;
          }
      }
    }
};
pp.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) {
    this.endLoc = this.curPosition();
  }
  var prevType = this.type;
  this.type = type;
  this.value = val;
  this.updateContext(prevType);
};
pp.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) {
    return this.readNumber(true);
  }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
    this.pos += 3;
    return this.finishToken(types$1.ellipsis);
  } else {
    ++this.pos;
    return this.finishToken(types$1.dot);
  }
};
pp.readToken_slash = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) {
    ++this.pos;
    return this.readRegexp();
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.slash, 1);
};
pp.readToken_mult_modulo_exp = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types$1.star : types$1.modulo;
  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
    ++size;
    tokentype = types$1.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, size + 1);
  }
  return this.finishOp(tokentype, size);
};
pp.readToken_pipe_amp = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (this.options.ecmaVersion >= 12) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 === 61) {
        return this.finishOp(types$1.assign, 3);
      }
    }
    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);
};
pp.readToken_caret = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.bitwiseXOR, 1);
};
pp.readToken_plus_min = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken();
    }
    return this.finishOp(types$1.incDec, 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.plusMin, 1);
};
pp.readToken_lt_gt = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) {
      return this.finishOp(types$1.assign, size + 1);
    }
    return this.finishOp(types$1.bitShift, size);
  }
  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken();
  }
  if (next === 61) {
    size = 2;
  }
  return this.finishOp(types$1.relational, size);
};
pp.readToken_eq_excl = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) {
    return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
  }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {
    this.pos += 2;
    return this.finishToken(types$1.arrow);
  }
  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1);
};
pp.readToken_question = function() {
  var ecmaVersion = this.options.ecmaVersion;
  if (ecmaVersion >= 11) {
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 46) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 < 48 || next2 > 57) {
        return this.finishOp(types$1.questionDot, 2);
      }
    }
    if (next === 63) {
      if (ecmaVersion >= 12) {
        var next2$1 = this.input.charCodeAt(this.pos + 2);
        if (next2$1 === 61) {
          return this.finishOp(types$1.assign, 3);
        }
      }
      return this.finishOp(types$1.coalesce, 2);
    }
  }
  return this.finishOp(types$1.question, 1);
};
pp.readToken_numberSign = function() {
  var ecmaVersion = this.options.ecmaVersion;
  var code = 35;
  if (ecmaVersion >= 13) {
    ++this.pos;
    code = this.fullCharCodeAtPos();
    if (isIdentifierStart(code, true) || code === 92) {
      return this.finishToken(types$1.privateId, this.readWord1());
    }
  }
  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};
pp.getTokenFromCode = function(code) {
  switch (code) {
    case 46:
      return this.readToken_dot();
    case 40:
      ++this.pos;
      return this.finishToken(types$1.parenL);
    case 41:
      ++this.pos;
      return this.finishToken(types$1.parenR);
    case 59:
      ++this.pos;
      return this.finishToken(types$1.semi);
    case 44:
      ++this.pos;
      return this.finishToken(types$1.comma);
    case 91:
      ++this.pos;
      return this.finishToken(types$1.bracketL);
    case 93:
      ++this.pos;
      return this.finishToken(types$1.bracketR);
    case 123:
      ++this.pos;
      return this.finishToken(types$1.braceL);
    case 125:
      ++this.pos;
      return this.finishToken(types$1.braceR);
    case 58:
      ++this.pos;
      return this.finishToken(types$1.colon);
    case 96:
      if (this.options.ecmaVersion < 6) {
        break;
      }
      ++this.pos;
      return this.finishToken(types$1.backQuote);
    case 48:
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 120 || next === 88) {
        return this.readRadixNumber(16);
      }
      if (this.options.ecmaVersion >= 6) {
        if (next === 111 || next === 79) {
          return this.readRadixNumber(8);
        }
        if (next === 98 || next === 66) {
          return this.readRadixNumber(2);
        }
      }
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return this.readNumber(false);
    case 34:
    case 39:
      return this.readString(code);
    case 47:
      return this.readToken_slash();
    case 37:
    case 42:
      return this.readToken_mult_modulo_exp(code);
    case 124:
    case 38:
      return this.readToken_pipe_amp(code);
    case 94:
      return this.readToken_caret();
    case 43:
    case 45:
      return this.readToken_plus_min(code);
    case 60:
    case 62:
      return this.readToken_lt_gt(code);
    case 61:
    case 33:
      return this.readToken_eq_excl(code);
    case 63:
      return this.readToken_question();
    case 126:
      return this.finishOp(types$1.prefix, 1);
    case 35:
      return this.readToken_numberSign();
  }
  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};
pp.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str);
};
pp.readRegexp = function() {
  var escaped, inClass, start = this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(start, "Unterminated regular expression");
    }
    var ch = this.input.charAt(this.pos);
    if (lineBreak.test(ch)) {
      this.raise(start, "Unterminated regular expression");
    }
    if (!escaped) {
      if (ch === "[") {
        inClass = true;
      } else if (ch === "]" && inClass) {
        inClass = false;
      } else if (ch === "/" && !inClass) {
        break;
      }
      escaped = ch === "\\";
    } else {
      escaped = false;
    }
    ++this.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) {
    this.unexpected(flagsStart);
  }
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e4) {
  }
  return this.finishToken(types$1.regexp, { pattern, flags, value });
};
pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
  var allowSeparators = this.options.ecmaVersion >= 12 && len === void 0;
  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;
  var start = this.pos, total = 0, lastCode = 0;
  for (var i4 = 0, e4 = len == null ? Infinity : len; i4 < e4; ++i4, ++this.pos) {
    var code = this.input.charCodeAt(this.pos), val = void 0;
    if (allowSeparators && code === 95) {
      if (isLegacyOctalNumericLiteral) {
        this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals");
      }
      if (lastCode === 95) {
        this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore");
      }
      if (i4 === 0) {
        this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits");
      }
      lastCode = code;
      continue;
    }
    if (code >= 97) {
      val = code - 97 + 10;
    } else if (code >= 65) {
      val = code - 65 + 10;
    } else if (code >= 48 && code <= 57) {
      val = code - 48;
    } else {
      val = Infinity;
    }
    if (val >= radix) {
      break;
    }
    lastCode = code;
    total = total * radix + val;
  }
  if (allowSeparators && lastCode === 95) {
    this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits");
  }
  if (this.pos === start || len != null && this.pos - start !== len) {
    return null;
  }
  return total;
};
function stringToNumber(str, isLegacyOctalNumericLiteral) {
  if (isLegacyOctalNumericLiteral) {
    return parseInt(str, 8);
  }
  return parseFloat(str.replace(/_/g, ""));
}
function stringToBigInt(str) {
  if (typeof BigInt !== "function") {
    return null;
  }
  return BigInt(str.replace(/_/g, ""));
}
pp.readRadixNumber = function(radix) {
  var start = this.pos;
  this.pos += 2;
  var val = this.readInt(radix);
  if (val == null) {
    this.raise(this.start + 2, "Expected number in radix " + radix);
  }
  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
    val = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
  } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
    this.raise(this.pos, "Identifier directly after number");
  }
  return this.finishToken(types$1.num, val);
};
pp.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10, void 0, true) === null) {
    this.raise(start, "Invalid number");
  }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) {
    this.raise(start, "Invalid number");
  }
  var next = this.input.charCodeAt(this.pos);
  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
    var val$1 = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
    if (isIdentifierStart(this.fullCharCodeAtPos())) {
      this.raise(this.pos, "Identifier directly after number");
    }
    return this.finishToken(types$1.num, val$1);
  }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {
    octal = false;
  }
  if (next === 46 && !octal) {
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) {
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) {
      ++this.pos;
    }
    if (this.readInt(10) === null) {
      this.raise(start, "Invalid number");
    }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) {
    this.raise(this.pos, "Identifier directly after number");
  }
  var val = stringToNumber(this.input.slice(start, this.pos), octal);
  return this.finishToken(types$1.num, val);
};
pp.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;
  if (ch === 123) {
    if (this.options.ecmaVersion < 6) {
      this.unexpected();
    }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 1114111) {
      this.invalidStringToken(codePos, "Code point out of bounds");
    }
  } else {
    code = this.readHexChar(4);
  }
  return code;
};
pp.readString = function(quote) {
  var out = "", chunkStart = ++this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(this.start, "Unterminated string constant");
    }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === quote) {
      break;
    }
    if (ch === 92) {
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(false);
      chunkStart = this.pos;
    } else if (ch === 8232 || ch === 8233) {
      if (this.options.ecmaVersion < 10) {
        this.raise(this.start, "Unterminated string constant");
      }
      ++this.pos;
      if (this.options.locations) {
        this.curLine++;
        this.lineStart = this.pos;
      }
    } else {
      if (isNewLine(ch)) {
        this.raise(this.start, "Unterminated string constant");
      }
      ++this.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types$1.string, out);
};
var INVALID_TEMPLATE_ESCAPE_ERROR = {};
pp.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err;
    }
  }
  this.inTemplateElement = false;
};
pp.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR;
  } else {
    this.raise(position, message);
  }
};
pp.readTmplToken = function() {
  var out = "", chunkStart = this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(this.start, "Unterminated template");
    }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
        if (ch === 36) {
          this.pos += 2;
          return this.finishToken(types$1.dollarBraceL);
        } else {
          ++this.pos;
          return this.finishToken(types$1.backQuote);
        }
      }
      out += this.input.slice(chunkStart, this.pos);
      return this.finishToken(types$1.template, out);
    }
    if (ch === 92) {
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(true);
      chunkStart = this.pos;
    } else if (isNewLine(ch)) {
      out += this.input.slice(chunkStart, this.pos);
      ++this.pos;
      switch (ch) {
        case 13:
          if (this.input.charCodeAt(this.pos) === 10) {
            ++this.pos;
          }
        case 10:
          out += "\n";
          break;
        default:
          out += String.fromCharCode(ch);
          break;
      }
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      chunkStart = this.pos;
    } else {
      ++this.pos;
    }
  }
};
pp.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++) {
    switch (this.input[this.pos]) {
      case "\\":
        ++this.pos;
        break;
      case "$":
        if (this.input[this.pos + 1] !== "{") {
          break;
        }
      case "`":
        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos));
    }
  }
  this.raise(this.start, "Unterminated template");
};
pp.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
    case 110:
      return "\n";
    case 114:
      return "\r";
    case 120:
      return String.fromCharCode(this.readHexChar(2));
    case 117:
      return codePointToString(this.readCodePoint());
    case 116:
      return "	";
    case 98:
      return "\b";
    case 118:
      return "\v";
    case 102:
      return "\f";
    case 13:
      if (this.input.charCodeAt(this.pos) === 10) {
        ++this.pos;
      }
    case 10:
      if (this.options.locations) {
        this.lineStart = this.pos;
        ++this.curLine;
      }
      return "";
    case 56:
    case 57:
      if (this.strict) {
        this.invalidStringToken(
          this.pos - 1,
          "Invalid escape sequence"
        );
      }
      if (inTemplate) {
        var codePos = this.pos - 1;
        this.invalidStringToken(
          codePos,
          "Invalid escape sequence in template string"
        );
      }
    default:
      if (ch >= 48 && ch <= 55) {
        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
        var octal = parseInt(octalStr, 8);
        if (octal > 255) {
          octalStr = octalStr.slice(0, -1);
          octal = parseInt(octalStr, 8);
        }
        this.pos += octalStr.length - 1;
        ch = this.input.charCodeAt(this.pos);
        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
          this.invalidStringToken(
            this.pos - 1 - octalStr.length,
            inTemplate ? "Octal literal in template string" : "Octal literal in strict mode"
          );
        }
        return String.fromCharCode(octal);
      }
      if (isNewLine(ch)) {
        return "";
      }
      return String.fromCharCode(ch);
  }
};
pp.readHexChar = function(len) {
  var codePos = this.pos;
  var n2 = this.readInt(16, len);
  if (n2 === null) {
    this.invalidStringToken(codePos, "Bad character escape sequence");
  }
  return n2;
};
pp.readWord1 = function() {
  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this.pos += ch <= 65535 ? 1 : 2;
    } else if (ch === 92) {
      this.containsEsc = true;
      word += this.input.slice(chunkStart, this.pos);
      var escStart = this.pos;
      if (this.input.charCodeAt(++this.pos) !== 117) {
        this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
      }
      ++this.pos;
      var esc = this.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {
        this.invalidStringToken(escStart, "Invalid Unicode escape");
      }
      word += codePointToString(esc);
      chunkStart = this.pos;
    } else {
      break;
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos);
};
pp.readWord = function() {
  var word = this.readWord1();
  var type = types$1.name;
  if (this.keywords.test(word)) {
    type = keywords[word];
  }
  return this.finishToken(type, word);
};
var version = "8.8.2";
Parser.acorn = {
  Parser,
  version,
  defaultOptions: defaultOptions2,
  Position,
  SourceLocation,
  getLineInfo,
  Node,
  TokenType,
  tokTypes: types$1,
  keywordTypes: keywords,
  TokContext,
  tokContexts: types,
  isIdentifierChar,
  isIdentifierStart,
  Token,
  isNewLine,
  lineBreak,
  lineBreakG,
  nonASCIIwhitespace
};
function parse3(input, options) {
  return Parser.parse(input, options);
}

// node_modules/acorn-walk/dist/walk.mjs
function ancestor(node, visitors, baseVisitor, state, override) {
  var ancestors = [];
  if (!baseVisitor) {
    baseVisitor = base;
  }
  (function c4(node2, st, override2) {
    var type = override2 || node2.type, found = visitors[type];
    var isNew = node2 !== ancestors[ancestors.length - 1];
    if (isNew) {
      ancestors.push(node2);
    }
    baseVisitor[type](node2, st, c4);
    if (found) {
      found(node2, st || ancestors, ancestors);
    }
    if (isNew) {
      ancestors.pop();
    }
  })(node, state, override);
}
function skipThrough(node, st, c4) {
  c4(node, st);
}
function ignore(_node, _st, _c2) {
}
var base = {};
base.Program = base.BlockStatement = base.StaticBlock = function(node, st, c4) {
  for (var i4 = 0, list = node.body; i4 < list.length; i4 += 1) {
    var stmt = list[i4];
    c4(stmt, st, "Statement");
  }
};
base.Statement = skipThrough;
base.EmptyStatement = ignore;
base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression = function(node, st, c4) {
  return c4(node.expression, st, "Expression");
};
base.IfStatement = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.consequent, st, "Statement");
  if (node.alternate) {
    c4(node.alternate, st, "Statement");
  }
};
base.LabeledStatement = function(node, st, c4) {
  return c4(node.body, st, "Statement");
};
base.BreakStatement = base.ContinueStatement = ignore;
base.WithStatement = function(node, st, c4) {
  c4(node.object, st, "Expression");
  c4(node.body, st, "Statement");
};
base.SwitchStatement = function(node, st, c4) {
  c4(node.discriminant, st, "Expression");
  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {
    var cs = list$1[i$1];
    if (cs.test) {
      c4(cs.test, st, "Expression");
    }
    for (var i4 = 0, list = cs.consequent; i4 < list.length; i4 += 1) {
      var cons = list[i4];
      c4(cons, st, "Statement");
    }
  }
};
base.SwitchCase = function(node, st, c4) {
  if (node.test) {
    c4(node.test, st, "Expression");
  }
  for (var i4 = 0, list = node.consequent; i4 < list.length; i4 += 1) {
    var cons = list[i4];
    c4(cons, st, "Statement");
  }
};
base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function(node, st, c4) {
  if (node.argument) {
    c4(node.argument, st, "Expression");
  }
};
base.ThrowStatement = base.SpreadElement = function(node, st, c4) {
  return c4(node.argument, st, "Expression");
};
base.TryStatement = function(node, st, c4) {
  c4(node.block, st, "Statement");
  if (node.handler) {
    c4(node.handler, st);
  }
  if (node.finalizer) {
    c4(node.finalizer, st, "Statement");
  }
};
base.CatchClause = function(node, st, c4) {
  if (node.param) {
    c4(node.param, st, "Pattern");
  }
  c4(node.body, st, "Statement");
};
base.WhileStatement = base.DoWhileStatement = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.body, st, "Statement");
};
base.ForStatement = function(node, st, c4) {
  if (node.init) {
    c4(node.init, st, "ForInit");
  }
  if (node.test) {
    c4(node.test, st, "Expression");
  }
  if (node.update) {
    c4(node.update, st, "Expression");
  }
  c4(node.body, st, "Statement");
};
base.ForInStatement = base.ForOfStatement = function(node, st, c4) {
  c4(node.left, st, "ForInit");
  c4(node.right, st, "Expression");
  c4(node.body, st, "Statement");
};
base.ForInit = function(node, st, c4) {
  if (node.type === "VariableDeclaration") {
    c4(node, st);
  } else {
    c4(node, st, "Expression");
  }
};
base.DebuggerStatement = ignore;
base.FunctionDeclaration = function(node, st, c4) {
  return c4(node, st, "Function");
};
base.VariableDeclaration = function(node, st, c4) {
  for (var i4 = 0, list = node.declarations; i4 < list.length; i4 += 1) {
    var decl = list[i4];
    c4(decl, st);
  }
};
base.VariableDeclarator = function(node, st, c4) {
  c4(node.id, st, "Pattern");
  if (node.init) {
    c4(node.init, st, "Expression");
  }
};
base.Function = function(node, st, c4) {
  if (node.id) {
    c4(node.id, st, "Pattern");
  }
  for (var i4 = 0, list = node.params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    c4(param, st, "Pattern");
  }
  c4(node.body, st, node.expression ? "Expression" : "Statement");
};
base.Pattern = function(node, st, c4) {
  if (node.type === "Identifier") {
    c4(node, st, "VariablePattern");
  } else if (node.type === "MemberExpression") {
    c4(node, st, "MemberPattern");
  } else {
    c4(node, st);
  }
};
base.VariablePattern = ignore;
base.MemberPattern = skipThrough;
base.RestElement = function(node, st, c4) {
  return c4(node.argument, st, "Pattern");
};
base.ArrayPattern = function(node, st, c4) {
  for (var i4 = 0, list = node.elements; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    if (elt) {
      c4(elt, st, "Pattern");
    }
  }
};
base.ObjectPattern = function(node, st, c4) {
  for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
    var prop = list[i4];
    if (prop.type === "Property") {
      if (prop.computed) {
        c4(prop.key, st, "Expression");
      }
      c4(prop.value, st, "Pattern");
    } else if (prop.type === "RestElement") {
      c4(prop.argument, st, "Pattern");
    }
  }
};
base.Expression = skipThrough;
base.ThisExpression = base.Super = base.MetaProperty = ignore;
base.ArrayExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.elements; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    if (elt) {
      c4(elt, st, "Expression");
    }
  }
};
base.ObjectExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
    var prop = list[i4];
    c4(prop, st);
  }
};
base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;
base.SequenceExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.expressions; i4 < list.length; i4 += 1) {
    var expr = list[i4];
    c4(expr, st, "Expression");
  }
};
base.TemplateLiteral = function(node, st, c4) {
  for (var i4 = 0, list = node.quasis; i4 < list.length; i4 += 1) {
    var quasi = list[i4];
    c4(quasi, st);
  }
  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1) {
    var expr = list$1[i$1];
    c4(expr, st, "Expression");
  }
};
base.TemplateElement = ignore;
base.UnaryExpression = base.UpdateExpression = function(node, st, c4) {
  c4(node.argument, st, "Expression");
};
base.BinaryExpression = base.LogicalExpression = function(node, st, c4) {
  c4(node.left, st, "Expression");
  c4(node.right, st, "Expression");
};
base.AssignmentExpression = base.AssignmentPattern = function(node, st, c4) {
  c4(node.left, st, "Pattern");
  c4(node.right, st, "Expression");
};
base.ConditionalExpression = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.consequent, st, "Expression");
  c4(node.alternate, st, "Expression");
};
base.NewExpression = base.CallExpression = function(node, st, c4) {
  c4(node.callee, st, "Expression");
  if (node.arguments) {
    for (var i4 = 0, list = node.arguments; i4 < list.length; i4 += 1) {
      var arg = list[i4];
      c4(arg, st, "Expression");
    }
  }
};
base.MemberExpression = function(node, st, c4) {
  c4(node.object, st, "Expression");
  if (node.computed) {
    c4(node.property, st, "Expression");
  }
};
base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function(node, st, c4) {
  if (node.declaration) {
    c4(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression");
  }
  if (node.source) {
    c4(node.source, st, "Expression");
  }
};
base.ExportAllDeclaration = function(node, st, c4) {
  if (node.exported) {
    c4(node.exported, st);
  }
  c4(node.source, st, "Expression");
};
base.ImportDeclaration = function(node, st, c4) {
  for (var i4 = 0, list = node.specifiers; i4 < list.length; i4 += 1) {
    var spec = list[i4];
    c4(spec, st);
  }
  c4(node.source, st, "Expression");
};
base.ImportExpression = function(node, st, c4) {
  c4(node.source, st, "Expression");
};
base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;
base.TaggedTemplateExpression = function(node, st, c4) {
  c4(node.tag, st, "Expression");
  c4(node.quasi, st, "Expression");
};
base.ClassDeclaration = base.ClassExpression = function(node, st, c4) {
  return c4(node, st, "Class");
};
base.Class = function(node, st, c4) {
  if (node.id) {
    c4(node.id, st, "Pattern");
  }
  if (node.superClass) {
    c4(node.superClass, st, "Expression");
  }
  c4(node.body, st);
};
base.ClassBody = function(node, st, c4) {
  for (var i4 = 0, list = node.body; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    c4(elt, st);
  }
};
base.MethodDefinition = base.PropertyDefinition = base.Property = function(node, st, c4) {
  if (node.computed) {
    c4(node.key, st, "Expression");
  }
  if (node.value) {
    c4(node.value, st, "Expression");
  }
};

// node_modules/astring/dist/astring.mjs
var { stringify } = JSON;
if (!String.prototype.repeat) {
  throw new Error(
    "String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation"
  );
}
if (!String.prototype.endsWith) {
  throw new Error(
    "String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation"
  );
}
var OPERATOR_PRECEDENCE = {
  "||": 3,
  "&&": 4,
  "|": 5,
  "??": 5,
  "^": 6,
  "&": 7,
  "==": 8,
  "!=": 8,
  "===": 8,
  "!==": 8,
  "<": 9,
  ">": 9,
  "<=": 9,
  ">=": 9,
  in: 9,
  instanceof: 9,
  "<<": 10,
  ">>": 10,
  ">>>": 10,
  "+": 11,
  "-": 11,
  "*": 12,
  "%": 12,
  "/": 12,
  "**": 13
};
var NEEDS_PARENTHESES = 17;
var EXPRESSIONS_PRECEDENCE = {
  ArrayExpression: 20,
  TaggedTemplateExpression: 20,
  ThisExpression: 20,
  Identifier: 20,
  PrivateIdentifier: 20,
  Literal: 18,
  TemplateLiteral: 20,
  Super: 20,
  SequenceExpression: 20,
  MemberExpression: 19,
  ChainExpression: 19,
  CallExpression: 19,
  NewExpression: 19,
  ArrowFunctionExpression: NEEDS_PARENTHESES,
  ClassExpression: NEEDS_PARENTHESES,
  FunctionExpression: NEEDS_PARENTHESES,
  ObjectExpression: NEEDS_PARENTHESES,
  UpdateExpression: 16,
  UnaryExpression: 15,
  AwaitExpression: 15,
  BinaryExpression: 14,
  LogicalExpression: 13,
  ConditionalExpression: 4,
  AssignmentExpression: 3,
  YieldExpression: 2,
  RestElement: 1
};
function formatSequence(state, nodes) {
  const { generator } = state;
  state.write("(");
  if (nodes != null && nodes.length > 0) {
    generator[nodes[0].type](nodes[0], state);
    const { length } = nodes;
    for (let i4 = 1; i4 < length; i4++) {
      const param = nodes[i4];
      state.write(", ");
      generator[param.type](param, state);
    }
  }
  state.write(")");
}
function expressionNeedsParenthesis(state, node, parentNode, isRightHand) {
  const nodePrecedence = state.expressionsPrecedence[node.type];
  if (nodePrecedence === NEEDS_PARENTHESES) {
    return true;
  }
  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type];
  if (nodePrecedence !== parentNodePrecedence) {
    return !isRightHand && nodePrecedence === 15 && parentNodePrecedence === 14 && parentNode.operator === "**" || nodePrecedence < parentNodePrecedence;
  }
  if (nodePrecedence !== 13 && nodePrecedence !== 14) {
    return false;
  }
  if (node.operator === "**" && parentNode.operator === "**") {
    return !isRightHand;
  }
  if (isRightHand) {
    return OPERATOR_PRECEDENCE[node.operator] <= OPERATOR_PRECEDENCE[parentNode.operator];
  }
  return OPERATOR_PRECEDENCE[node.operator] < OPERATOR_PRECEDENCE[parentNode.operator];
}
function formatExpression(state, node, parentNode, isRightHand) {
  const { generator } = state;
  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {
    state.write("(");
    generator[node.type](node, state);
    state.write(")");
  } else {
    generator[node.type](node, state);
  }
}
function reindent(state, text2, indent, lineEnd) {
  const lines = text2.split("\n");
  const end = lines.length - 1;
  state.write(lines[0].trim());
  if (end > 0) {
    state.write(lineEnd);
    for (let i4 = 1; i4 < end; i4++) {
      state.write(indent + lines[i4].trim() + lineEnd);
    }
    state.write(indent + lines[end].trim());
  }
}
function formatComments(state, comments, indent, lineEnd) {
  const { length } = comments;
  for (let i4 = 0; i4 < length; i4++) {
    const comment = comments[i4];
    state.write(indent);
    if (comment.type[0] === "L") {
      state.write("// " + comment.value.trim() + "\n", comment);
    } else {
      state.write("/*");
      reindent(state, comment.value, indent, lineEnd);
      state.write("*/" + lineEnd);
    }
  }
}
function hasCallExpression(node) {
  let currentNode = node;
  while (currentNode != null) {
    const { type } = currentNode;
    if (type[0] === "C" && type[1] === "a") {
      return true;
    } else if (type[0] === "M" && type[1] === "e" && type[2] === "m") {
      currentNode = currentNode.object;
    } else {
      return false;
    }
  }
}
function formatVariableDeclaration(state, node) {
  const { generator } = state;
  const { declarations } = node;
  state.write(node.kind + " ");
  const { length } = declarations;
  if (length > 0) {
    generator.VariableDeclarator(declarations[0], state);
    for (let i4 = 1; i4 < length; i4++) {
      state.write(", ");
      generator.VariableDeclarator(declarations[i4], state);
    }
  }
}
var ForInStatement;
var FunctionDeclaration;
var RestElement;
var BinaryExpression;
var ArrayExpression;
var BlockStatement;
var GENERATOR = {
  Program(node, state) {
    const indent = state.indent.repeat(state.indentLevel);
    const { lineEnd, writeComments } = state;
    if (writeComments && node.comments != null) {
      formatComments(state, node.comments, indent, lineEnd);
    }
    const statements = node.body;
    const { length } = statements;
    for (let i4 = 0; i4 < length; i4++) {
      const statement = statements[i4];
      if (writeComments && statement.comments != null) {
        formatComments(state, statement.comments, indent, lineEnd);
      }
      state.write(indent);
      this[statement.type](statement, state);
      state.write(lineEnd);
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, indent, lineEnd);
    }
  },
  BlockStatement: BlockStatement = function(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const statementIndent = indent + state.indent;
    state.write("{");
    const statements = node.body;
    if (statements != null && statements.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, statementIndent, lineEnd);
      }
      const { length } = statements;
      for (let i4 = 0; i4 < length; i4++) {
        const statement = statements[i4];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
      state.write(indent);
    } else {
      if (writeComments && node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, statementIndent, lineEnd);
        state.write(indent);
      }
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, statementIndent, lineEnd);
    }
    state.write("}");
    state.indentLevel--;
  },
  ClassBody: BlockStatement,
  StaticBlock(node, state) {
    state.write("static ");
    this.BlockStatement(node, state);
  },
  EmptyStatement(node, state) {
    state.write(";");
  },
  ExpressionStatement(node, state) {
    const precedence = state.expressionsPrecedence[node.expression.type];
    if (precedence === NEEDS_PARENTHESES || precedence === 3 && node.expression.left.type[0] === "O") {
      state.write("(");
      this[node.expression.type](node.expression, state);
      state.write(")");
    } else {
      this[node.expression.type](node.expression, state);
    }
    state.write(";");
  },
  IfStatement(node, state) {
    state.write("if (");
    this[node.test.type](node.test, state);
    state.write(") ");
    this[node.consequent.type](node.consequent, state);
    if (node.alternate != null) {
      state.write(" else ");
      this[node.alternate.type](node.alternate, state);
    }
  },
  LabeledStatement(node, state) {
    this[node.label.type](node.label, state);
    state.write(": ");
    this[node.body.type](node.body, state);
  },
  BreakStatement(node, state) {
    state.write("break");
    if (node.label != null) {
      state.write(" ");
      this[node.label.type](node.label, state);
    }
    state.write(";");
  },
  ContinueStatement(node, state) {
    state.write("continue");
    if (node.label != null) {
      state.write(" ");
      this[node.label.type](node.label, state);
    }
    state.write(";");
  },
  WithStatement(node, state) {
    state.write("with (");
    this[node.object.type](node.object, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  SwitchStatement(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    state.indentLevel++;
    const caseIndent = indent + state.indent;
    const statementIndent = caseIndent + state.indent;
    state.write("switch (");
    this[node.discriminant.type](node.discriminant, state);
    state.write(") {" + lineEnd);
    const { cases: occurences } = node;
    const { length: occurencesCount } = occurences;
    for (let i4 = 0; i4 < occurencesCount; i4++) {
      const occurence = occurences[i4];
      if (writeComments && occurence.comments != null) {
        formatComments(state, occurence.comments, caseIndent, lineEnd);
      }
      if (occurence.test) {
        state.write(caseIndent + "case ");
        this[occurence.test.type](occurence.test, state);
        state.write(":" + lineEnd);
      } else {
        state.write(caseIndent + "default:" + lineEnd);
      }
      const { consequent } = occurence;
      const { length: consequentCount } = consequent;
      for (let i5 = 0; i5 < consequentCount; i5++) {
        const statement = consequent[i5];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
    }
    state.indentLevel -= 2;
    state.write(indent + "}");
  },
  ReturnStatement(node, state) {
    state.write("return");
    if (node.argument) {
      state.write(" ");
      this[node.argument.type](node.argument, state);
    }
    state.write(";");
  },
  ThrowStatement(node, state) {
    state.write("throw ");
    this[node.argument.type](node.argument, state);
    state.write(";");
  },
  TryStatement(node, state) {
    state.write("try ");
    this[node.block.type](node.block, state);
    if (node.handler) {
      const { handler } = node;
      if (handler.param == null) {
        state.write(" catch ");
      } else {
        state.write(" catch (");
        this[handler.param.type](handler.param, state);
        state.write(") ");
      }
      this[handler.body.type](handler.body, state);
    }
    if (node.finalizer) {
      state.write(" finally ");
      this[node.finalizer.type](node.finalizer, state);
    }
  },
  WhileStatement(node, state) {
    state.write("while (");
    this[node.test.type](node.test, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  DoWhileStatement(node, state) {
    state.write("do ");
    this[node.body.type](node.body, state);
    state.write(" while (");
    this[node.test.type](node.test, state);
    state.write(");");
  },
  ForStatement(node, state) {
    state.write("for (");
    if (node.init != null) {
      const { init } = node;
      if (init.type[0] === "V") {
        formatVariableDeclaration(state, init);
      } else {
        this[init.type](init, state);
      }
    }
    state.write("; ");
    if (node.test) {
      this[node.test.type](node.test, state);
    }
    state.write("; ");
    if (node.update) {
      this[node.update.type](node.update, state);
    }
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  ForInStatement: ForInStatement = function(node, state) {
    state.write(`for ${node.await ? "await " : ""}(`);
    const { left } = node;
    if (left.type[0] === "V") {
      formatVariableDeclaration(state, left);
    } else {
      this[left.type](left, state);
    }
    state.write(node.type[3] === "I" ? " in " : " of ");
    this[node.right.type](node.right, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  ForOfStatement: ForInStatement,
  DebuggerStatement(node, state) {
    state.write("debugger;", node);
  },
  FunctionDeclaration: FunctionDeclaration = function(node, state) {
    state.write(
      (node.async ? "async " : "") + (node.generator ? "function* " : "function ") + (node.id ? node.id.name : ""),
      node
    );
    formatSequence(state, node.params);
    state.write(" ");
    this[node.body.type](node.body, state);
  },
  FunctionExpression: FunctionDeclaration,
  VariableDeclaration(node, state) {
    formatVariableDeclaration(state, node);
    state.write(";");
  },
  VariableDeclarator(node, state) {
    this[node.id.type](node.id, state);
    if (node.init != null) {
      state.write(" = ");
      this[node.init.type](node.init, state);
    }
  },
  ClassDeclaration(node, state) {
    state.write("class " + (node.id ? `${node.id.name} ` : ""), node);
    if (node.superClass) {
      state.write("extends ");
      const { superClass } = node;
      const { type } = superClass;
      const precedence = state.expressionsPrecedence[type];
      if ((type[0] !== "C" || type[1] !== "l" || type[5] !== "E") && (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.ClassExpression)) {
        state.write("(");
        this[node.superClass.type](superClass, state);
        state.write(")");
      } else {
        this[superClass.type](superClass, state);
      }
      state.write(" ");
    }
    this.ClassBody(node.body, state);
  },
  ImportDeclaration(node, state) {
    state.write("import ");
    const { specifiers } = node;
    const { length } = specifiers;
    let i4 = 0;
    if (length > 0) {
      for (; i4 < length; ) {
        if (i4 > 0) {
          state.write(", ");
        }
        const specifier = specifiers[i4];
        const type = specifier.type[6];
        if (type === "D") {
          state.write(specifier.local.name, specifier);
          i4++;
        } else if (type === "N") {
          state.write("* as " + specifier.local.name, specifier);
          i4++;
        } else {
          break;
        }
      }
      if (i4 < length) {
        state.write("{");
        for (; ; ) {
          const specifier = specifiers[i4];
          const { name } = specifier.imported;
          state.write(name, specifier);
          if (name !== specifier.local.name) {
            state.write(" as " + specifier.local.name);
          }
          if (++i4 < length) {
            state.write(", ");
          } else {
            break;
          }
        }
        state.write("}");
      }
      state.write(" from ");
    }
    this.Literal(node.source, state);
    state.write(";");
  },
  ImportExpression(node, state) {
    state.write("import(");
    this[node.source.type](node.source, state);
    state.write(")");
  },
  ExportDefaultDeclaration(node, state) {
    state.write("export default ");
    this[node.declaration.type](node.declaration, state);
    if (state.expressionsPrecedence[node.declaration.type] != null && node.declaration.type[0] !== "F") {
      state.write(";");
    }
  },
  ExportNamedDeclaration(node, state) {
    state.write("export ");
    if (node.declaration) {
      this[node.declaration.type](node.declaration, state);
    } else {
      state.write("{");
      const { specifiers } = node, { length } = specifiers;
      if (length > 0) {
        for (let i4 = 0; ; ) {
          const specifier = specifiers[i4];
          const { name } = specifier.local;
          state.write(name, specifier);
          if (name !== specifier.exported.name) {
            state.write(" as " + specifier.exported.name);
          }
          if (++i4 < length) {
            state.write(", ");
          } else {
            break;
          }
        }
      }
      state.write("}");
      if (node.source) {
        state.write(" from ");
        this.Literal(node.source, state);
      }
      state.write(";");
    }
  },
  ExportAllDeclaration(node, state) {
    if (node.exported != null) {
      state.write("export * as " + node.exported.name + " from ");
    } else {
      state.write("export * from ");
    }
    this.Literal(node.source, state);
    state.write(";");
  },
  MethodDefinition(node, state) {
    if (node.static) {
      state.write("static ");
    }
    const kind = node.kind[0];
    if (kind === "g" || kind === "s") {
      state.write(node.kind + " ");
    }
    if (node.value.async) {
      state.write("async ");
    }
    if (node.value.generator) {
      state.write("*");
    }
    if (node.computed) {
      state.write("[");
      this[node.key.type](node.key, state);
      state.write("]");
    } else {
      this[node.key.type](node.key, state);
    }
    formatSequence(state, node.value.params);
    state.write(" ");
    this[node.value.body.type](node.value.body, state);
  },
  ClassExpression(node, state) {
    this.ClassDeclaration(node, state);
  },
  ArrowFunctionExpression(node, state) {
    state.write(node.async ? "async " : "", node);
    const { params } = node;
    if (params != null) {
      if (params.length === 1 && params[0].type[0] === "I") {
        state.write(params[0].name, params[0]);
      } else {
        formatSequence(state, node.params);
      }
    }
    state.write(" => ");
    if (node.body.type[0] === "O") {
      state.write("(");
      this.ObjectExpression(node.body, state);
      state.write(")");
    } else {
      this[node.body.type](node.body, state);
    }
  },
  ThisExpression(node, state) {
    state.write("this", node);
  },
  Super(node, state) {
    state.write("super", node);
  },
  RestElement: RestElement = function(node, state) {
    state.write("...");
    this[node.argument.type](node.argument, state);
  },
  SpreadElement: RestElement,
  YieldExpression(node, state) {
    state.write(node.delegate ? "yield*" : "yield");
    if (node.argument) {
      state.write(" ");
      this[node.argument.type](node.argument, state);
    }
  },
  AwaitExpression(node, state) {
    state.write("await ", node);
    formatExpression(state, node.argument, node);
  },
  TemplateLiteral(node, state) {
    const { quasis, expressions } = node;
    state.write("`");
    const { length } = expressions;
    for (let i4 = 0; i4 < length; i4++) {
      const expression = expressions[i4];
      const quasi2 = quasis[i4];
      state.write(quasi2.value.raw, quasi2);
      state.write("${");
      this[expression.type](expression, state);
      state.write("}");
    }
    const quasi = quasis[quasis.length - 1];
    state.write(quasi.value.raw, quasi);
    state.write("`");
  },
  TemplateElement(node, state) {
    state.write(node.value.raw, node);
  },
  TaggedTemplateExpression(node, state) {
    formatExpression(state, node.tag, node);
    this[node.quasi.type](node.quasi, state);
  },
  ArrayExpression: ArrayExpression = function(node, state) {
    state.write("[");
    if (node.elements.length > 0) {
      const { elements } = node, { length } = elements;
      for (let i4 = 0; ; ) {
        const element = elements[i4];
        if (element != null) {
          this[element.type](element, state);
        }
        if (++i4 < length) {
          state.write(", ");
        } else {
          if (element == null) {
            state.write(", ");
          }
          break;
        }
      }
    }
    state.write("]");
  },
  ArrayPattern: ArrayExpression,
  ObjectExpression(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const propertyIndent = indent + state.indent;
    state.write("{");
    if (node.properties.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, propertyIndent, lineEnd);
      }
      const comma = "," + lineEnd;
      const { properties: properties2 } = node, { length } = properties2;
      for (let i4 = 0; ; ) {
        const property = properties2[i4];
        if (writeComments && property.comments != null) {
          formatComments(state, property.comments, propertyIndent, lineEnd);
        }
        state.write(propertyIndent);
        this[property.type](property, state);
        if (++i4 < length) {
          state.write(comma);
        } else {
          break;
        }
      }
      state.write(lineEnd);
      if (writeComments && node.trailingComments != null) {
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
      }
      state.write(indent + "}");
    } else if (writeComments) {
      if (node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, propertyIndent, lineEnd);
        if (node.trailingComments != null) {
          formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        }
        state.write(indent + "}");
      } else if (node.trailingComments != null) {
        state.write(lineEnd);
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        state.write(indent + "}");
      } else {
        state.write("}");
      }
    } else {
      state.write("}");
    }
    state.indentLevel--;
  },
  Property(node, state) {
    if (node.method || node.kind[0] !== "i") {
      this.MethodDefinition(node, state);
    } else {
      if (!node.shorthand) {
        if (node.computed) {
          state.write("[");
          this[node.key.type](node.key, state);
          state.write("]");
        } else {
          this[node.key.type](node.key, state);
        }
        state.write(": ");
      }
      this[node.value.type](node.value, state);
    }
  },
  PropertyDefinition(node, state) {
    if (node.static) {
      state.write("static ");
    }
    if (node.computed) {
      state.write("[");
    }
    this[node.key.type](node.key, state);
    if (node.computed) {
      state.write("]");
    }
    if (node.value == null) {
      if (node.key.type[0] !== "F") {
        state.write(";");
      }
      return;
    }
    state.write(" = ");
    this[node.value.type](node.value, state);
    state.write(";");
  },
  ObjectPattern(node, state) {
    state.write("{");
    if (node.properties.length > 0) {
      const { properties: properties2 } = node, { length } = properties2;
      for (let i4 = 0; ; ) {
        this[properties2[i4].type](properties2[i4], state);
        if (++i4 < length) {
          state.write(", ");
        } else {
          break;
        }
      }
    }
    state.write("}");
  },
  SequenceExpression(node, state) {
    formatSequence(state, node.expressions);
  },
  UnaryExpression(node, state) {
    if (node.prefix) {
      const {
        operator,
        argument,
        argument: { type }
      } = node;
      state.write(operator);
      const needsParentheses = expressionNeedsParenthesis(state, argument, node);
      if (!needsParentheses && (operator.length > 1 || type[0] === "U" && (type[1] === "n" || type[1] === "p") && argument.prefix && argument.operator[0] === operator && (operator === "+" || operator === "-"))) {
        state.write(" ");
      }
      if (needsParentheses) {
        state.write(operator.length > 1 ? " (" : "(");
        this[type](argument, state);
        state.write(")");
      } else {
        this[type](argument, state);
      }
    } else {
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  UpdateExpression(node, state) {
    if (node.prefix) {
      state.write(node.operator);
      this[node.argument.type](node.argument, state);
    } else {
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  AssignmentExpression(node, state) {
    this[node.left.type](node.left, state);
    state.write(" " + node.operator + " ");
    this[node.right.type](node.right, state);
  },
  AssignmentPattern(node, state) {
    this[node.left.type](node.left, state);
    state.write(" = ");
    this[node.right.type](node.right, state);
  },
  BinaryExpression: BinaryExpression = function(node, state) {
    const isIn = node.operator === "in";
    if (isIn) {
      state.write("(");
    }
    formatExpression(state, node.left, node, false);
    state.write(" " + node.operator + " ");
    formatExpression(state, node.right, node, true);
    if (isIn) {
      state.write(")");
    }
  },
  LogicalExpression: BinaryExpression,
  ConditionalExpression(node, state) {
    const { test } = node;
    const precedence = state.expressionsPrecedence[test.type];
    if (precedence === NEEDS_PARENTHESES || precedence <= state.expressionsPrecedence.ConditionalExpression) {
      state.write("(");
      this[test.type](test, state);
      state.write(")");
    } else {
      this[test.type](test, state);
    }
    state.write(" ? ");
    this[node.consequent.type](node.consequent, state);
    state.write(" : ");
    this[node.alternate.type](node.alternate, state);
  },
  NewExpression(node, state) {
    state.write("new ");
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.CallExpression || hasCallExpression(node.callee)) {
      state.write("(");
      this[node.callee.type](node.callee, state);
      state.write(")");
    } else {
      this[node.callee.type](node.callee, state);
    }
    formatSequence(state, node["arguments"]);
  },
  CallExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.CallExpression) {
      state.write("(");
      this[node.callee.type](node.callee, state);
      state.write(")");
    } else {
      this[node.callee.type](node.callee, state);
    }
    if (node.optional) {
      state.write("?.");
    }
    formatSequence(state, node["arguments"]);
  },
  ChainExpression(node, state) {
    this[node.expression.type](node.expression, state);
  },
  MemberExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.object.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.MemberExpression) {
      state.write("(");
      this[node.object.type](node.object, state);
      state.write(")");
    } else {
      this[node.object.type](node.object, state);
    }
    if (node.computed) {
      if (node.optional) {
        state.write("?.");
      }
      state.write("[");
      this[node.property.type](node.property, state);
      state.write("]");
    } else {
      if (node.optional) {
        state.write("?.");
      } else {
        state.write(".");
      }
      this[node.property.type](node.property, state);
    }
  },
  MetaProperty(node, state) {
    state.write(node.meta.name + "." + node.property.name, node);
  },
  Identifier(node, state) {
    state.write(node.name, node);
  },
  PrivateIdentifier(node, state) {
    state.write(`#${node.name}`, node);
  },
  Literal(node, state) {
    if (node.raw != null) {
      state.write(node.raw, node);
    } else if (node.regex != null) {
      this.RegExpLiteral(node, state);
    } else if (node.bigint != null) {
      state.write(node.bigint + "n", node);
    } else {
      state.write(stringify(node.value), node);
    }
  },
  RegExpLiteral(node, state) {
    const { regex } = node;
    state.write(`/${regex.pattern}/${regex.flags}`, node);
  }
};
var EMPTY_OBJECT = {};
var State = class {
  constructor(options) {
    const setup = options == null ? EMPTY_OBJECT : options;
    this.output = "";
    if (setup.output != null) {
      this.output = setup.output;
      this.write = this.writeToStream;
    } else {
      this.output = "";
    }
    this.generator = setup.generator != null ? setup.generator : GENERATOR;
    this.expressionsPrecedence = setup.expressionsPrecedence != null ? setup.expressionsPrecedence : EXPRESSIONS_PRECEDENCE;
    this.indent = setup.indent != null ? setup.indent : "  ";
    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : "\n";
    this.indentLevel = setup.startingIndentLevel != null ? setup.startingIndentLevel : 0;
    this.writeComments = setup.comments ? setup.comments : false;
    if (setup.sourceMap != null) {
      this.write = setup.output == null ? this.writeAndMap : this.writeToStreamAndMap;
      this.sourceMap = setup.sourceMap;
      this.line = 1;
      this.column = 0;
      this.lineEndSize = this.lineEnd.split("\n").length - 1;
      this.mapping = {
        original: null,
        generated: this,
        name: void 0,
        source: setup.sourceMap.file || setup.sourceMap._file
      };
    }
  }
  write(code) {
    this.output += code;
  }
  writeToStream(code) {
    this.output.write(code);
  }
  writeAndMap(code, node) {
    this.output += code;
    this.map(code, node);
  }
  writeToStreamAndMap(code, node) {
    this.output.write(code);
    this.map(code, node);
  }
  map(code, node) {
    if (node != null) {
      const { type } = node;
      if (type[0] === "L" && type[2] === "n") {
        this.column = 0;
        this.line++;
        return;
      }
      if (node.loc != null) {
        const { mapping } = this;
        mapping.original = node.loc.start;
        mapping.name = node.name;
        this.sourceMap.addMapping(mapping);
      }
      if (type[0] === "T" && type[8] === "E" || type[0] === "L" && type[1] === "i" && typeof node.value === "string") {
        const { length: length2 } = code;
        let { column, line } = this;
        for (let i4 = 0; i4 < length2; i4++) {
          if (code[i4] === "\n") {
            column = 0;
            line++;
          } else {
            column++;
          }
        }
        this.column = column;
        this.line = line;
        return;
      }
    }
    const { length } = code;
    const { lineEnd } = this;
    if (length > 0) {
      if (this.lineEndSize > 0 && (lineEnd.length === 1 ? code[length - 1] === lineEnd : code.endsWith(lineEnd))) {
        this.line += this.lineEndSize;
        this.column = 0;
      } else {
        this.column += length;
      }
    }
  }
  toString() {
    return this.output;
  }
};
function generate(node, options) {
  const state = new State(options);
  state.generator[node.type](node, state);
  return state.output;
}

// src/core/utils/frames/linker.ts
var preprocessCode = (code, oldName, newName) => {
  let string;
  let codeBlock = ensureString(code);
  const isMultiLine = codeBlock.includes("\n");
  if (isMultiLine) {
    const lines = codeBlock.split("\n").filter((line) => line.trim() !== "");
    lines[lines.length - 1] = `${lines[lines.length - 1].replace("return ", "")}`;
    codeBlock = lines.join("\n");
  }
  try {
    const ast = parse3(codeBlock, { ecmaVersion: 2020, locations: true });
    ancestor(ast, {
      Identifier(node, ancestors) {
        const parent = ancestors[ancestors.length - 2];
        if (parent.type !== "MemberExpression" || parent.object === node) {
          if (node.name == oldName) {
            node.name = newName;
          }
        }
      }
    });
    string = generate(ast).trimEnd();
  } catch (e4) {
    console.log(e4);
    string = `"error"`;
  }
  if (isMultiLine) {
    const lines = string.split("\n").filter((line) => line.trim() !== "");
    lines[lines.length - 1] = `return ${lines[lines.length - 1]}`;
    string = lines.join("\n");
  }
  return string;
};
var linkNodes = (parent, schemaId, props2, flattenedTree, uniqueID) => {
  const relinkProps = (oldParent, newParent2, node, rootId) => {
    var _a2, _b2, _c2;
    return {
      ...node,
      parentId: node.id == rootId ? node.parentId : node.parentId == oldParent ? newParent2 : node.parentId,
      props: Object.keys((_a2 = node == null ? void 0 : node.props) != null ? _a2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.props[c4], oldParent, newParent2)
          };
        },
        node.props
      ),
      actions: Object.keys((_b2 = node == null ? void 0 : node.actions) != null ? _b2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.actions[c4], oldParent, newParent2)
          };
        },
        node.actions
      ),
      styles: Object.keys((_c2 = node == null ? void 0 : node.styles) != null ? _c2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.styles[c4], oldParent, newParent2)
          };
        },
        node.styles
      )
    };
  };
  const assignIDs = (parent2, nodes) => {
    const [newNodes, newID] = nodes.reduce((p3, c4, i4) => {
      const [oldNodes, id2] = p3;
      const newNodeID = c4.parentId ? c4.id + id2 : parent2.id;
      const newNode = {
        ...c4.parentId == "" ? parent2 : oldNodes[i4],
        type: oldNodes[i4].type,
        id: newNodeID
      };
      const returnNodes = oldNodes.map((f4) => f4.id != c4.id ? relinkProps(c4.id, newNodeID, f4, parent2.id) : relinkProps(c4.id, newNodeID, newNode, parent2.id));
      return [returnNodes, id2 + 1];
    }, [nodes, uniqueID]);
    return [newNodes, newID];
  };
  const newParent = schemaId != parent.id ? relinkProps(schemaId, parent.id, parent, parent.id) : parent;
  return assignIDs(newParent, flattenedTree);
};
var linkTreeNodes = (parent, uniqueID) => {
  const relinkProps = (oldParent, newParent, treenode) => {
    var _a2, _b2, _c2;
    let children;
    const node = treenode.node;
    if (treenode.children) {
      children = treenode.children.map((child) => relinkProps(oldParent, newParent, child));
    }
    return {
      ...treenode,
      children,
      node: {
        ...treenode.node,
        parentId: node.parentId == oldParent ? newParent : node.parentId,
        props: Object.keys((_a2 = node == null ? void 0 : node.props) != null ? _a2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.props[c4], oldParent, newParent)
            };
          },
          node.props
        ),
        actions: Object.keys((_b2 = node == null ? void 0 : node.actions) != null ? _b2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.actions[c4], oldParent, newParent)
            };
          },
          node.actions
        ),
        styles: Object.keys((_c2 = node == null ? void 0 : node.styles) != null ? _c2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.styles[c4], oldParent, newParent)
            };
          },
          node.styles
        )
      }
    };
  };
  const assignIDs = (parent2, node, uniqueID2) => {
    const assignIDToTree = (parent3, node2, id2) => {
      const newNodeID = node2.node.parentId ? node2.id + id2 : parent3.id;
      let newNode = { ...node2, node: { ...node2.node, id: newNodeID }, id: newNodeID };
      newNode = relinkProps(node2.id, newNodeID, newNode);
      if (newNode.children) {
        const [newChildren, newID] = newNode.children.reduce(
          (acc, child, i4) => {
            const [newChild, nextID] = assignIDToTree(newNode, child, id2 + i4 + 1);
            acc[0].push(newChild);
            return [acc[0], nextID];
          },
          [[], id2]
        );
        newNode.children = newChildren;
        id2 = newID;
      }
      return [newNode, id2 + 1];
    };
    return assignIDToTree(parent2, node, uniqueID2);
  };
  return assignIDs(parent, parent, uniqueID);
};

// src/core/utils/frames/ast.ts
var calculateEditorProps = (props2, treeNode) => {
  if (props2.editMode == 0 || !props2.rootId)
    return props2;
  if (treeNode.node.id == props2.rootId)
    return props2;
  if (treeNode.isRef)
    return { ...props2, dropMode: 0, dragMode: 0, resizeMode: 0, selectMode: 0 };
  if (props2.editMode == 3) {
    return {
      ...props2,
      resizeMode: 1 /* ResizeSelected */,
      dragMode: 2 /* DragSelected */
    };
  }
  const firstLevelNode = treeNode.node.parentId == props2.rootId;
  const columnChild = treeNode.editorProps.parentType == "column";
  const isColumn = treeNode.node.type == "column";
  const resizeMode = treeNode.node.type == "image" || isColumn ? 2 /* ResizeAlways */ : 0 /* ResizeNever */;
  const dragMode = firstLevelNode && treeNode.node.type != "container" || columnChild && !isColumn || isColumn && treeNode.children.length == 0 ? 1 /* DragHandle */ : 0 /* DragNever */;
  const dropMode = isColumn ? 3 /* DropModeColumnOnly */ : columnChild ? 2 /* DropModeRowOnly */ : firstLevelNode ? 1 /* DropModeRowColumn */ : 0;
  return {
    ...props2,
    dragMode,
    resizeMode,
    dropMode
  };
};
function replaceSubtree(tree, subtree) {
  if (tree.id === subtree.id) {
    return subtree;
  }
  if (tree.children) {
    for (let i4 = 0; i4 < tree.children.length; i4++) {
      const replacedChild = replaceSubtree(tree.children[i4], subtree);
      if (replacedChild !== tree.children[i4]) {
        tree.children[i4] = replacedChild;
      }
    }
  }
  return tree;
}
var getFrameNodesByPath = (superstate, ref2) => {
  const path = superstate.spaceManager.uriByString(ref2);
  if (!path)
    return;
  if (path.authority == "$kit") {
    return superstate.kit.find((f4) => f4.schema.id == path.ref);
  }
  const context = superstate.framesIndex.get(path.basePath);
  return context == null ? void 0 : context.frames[path.ref];
};
function flattenToFrameNodes(root) {
  const flattenedTree = [];
  function traverseAndFlatten(node, parent) {
    var _a2;
    flattenedTree.push({ ...node.node, parentId: parent, schemaId: root.node.schemaId });
    ((_a2 = node.children) != null ? _a2 : []).forEach((child) => {
      traverseAndFlatten(child, node.node.id);
    });
  }
  traverseAndFlatten(root, "");
  return flattenedTree;
}
function insertFrameChildren(root, newChildren) {
  function traverseAndInsert(node) {
    return {
      ...node,
      children: node.node.type === "content" && newChildren.length > 0 ? newChildren.map((f4) => ({ ...f4, node: { ...f4.node, parentId: node.id } })) : node.children.map((child) => {
        return traverseAndInsert(child);
      })
    };
  }
  const newRoot = traverseAndInsert(root);
  return newRoot;
}
var expandNode = (treeNode, id2, superstate) => {
  if (treeNode.node.type == "frame") {
    const mdbFrame = getFrameNodesByPath(superstate, treeNode.node.ref);
    if (treeNode.node.schemaId == (mdbFrame == null ? void 0 : mdbFrame.schema.id))
      return [treeNode, id2];
    if (!mdbFrame || mdbFrame.rows.length == 0) {
      return [treeNode, id2];
    }
    const linkedNode = linkProps(mdbFrame.cols, treeNode);
    const [linkedNodes, newUniqueID] = linkNodes(
      linkedNode.node,
      mdbFrame.schema.id,
      linkedNode.node.props,
      mdbFrame.rows.map((f4) => frameToNode(f4)),
      id2
    );
    const [newTreeNode, newID] = buildFrameTree(
      linkedNode.node,
      linkedNodes,
      superstate,
      newUniqueID,
      true,
      treeNode.editorProps
    );
    if (!newTreeNode) {
      return [linkedNode, newID];
    }
    return [insertFrameChildren({ ...newTreeNode, isRef: false, node: { ...newTreeNode.node, schemaId: linkedNode.node.schemaId, ref: linkedNode.node.ref, types: linkedNode.node.types, propsAttrs: linkedNode.node.propsAttrs, propsValue: linkedNode.node.propsValue, parentId: linkedNode.node.parentId, type: "frame", id: newTreeNode.id } }, treeNode.children), newID];
  }
  return [treeNode, id2];
};
var expandFrame = (node, superstate, uniqueID = 0, editorProps) => {
  const [children, lastID] = node.children.reduce((f4, c4) => {
    const [nodes, id2] = f4;
    const _editorProps = calculateEditorProps({ ...editorProps, parentType: node.node.type }, c4);
    const [newNode2, fid] = expandFrame(c4, superstate, id2 + 1, _editorProps);
    return [[...nodes, newNode2], fid + 1];
  }, [[], uniqueID]);
  const [newNode, newID] = expandNode({ ...node, children, editorProps }, lastID, superstate);
  return [{
    ...newNode,
    editorProps: calculateEditorProps(newNode.editorProps, newNode)
  }, newID];
};
var linkProps = (fields, root) => {
  const props2 = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: "" }), {});
  const types2 = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: c4.type }), {});
  const propsValue = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: c4.value }), {});
  const propsAttrs = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: c4.attrs }), {});
  return { ...root, node: {
    ...root.node,
    props: { ...props2, ...root.node.props },
    types: { ...types2, ...root.node.types },
    propsValue: { ...propsValue, ...root.node.propsValue },
    propsAttrs: { ...propsAttrs, ...root.node.propsAttrs }
  } };
};
var applyPropsToRoot = (root, props2) => ({
  ...root,
  node: {
    ...root.node,
    props: {
      ...root.node.props,
      ...applyFunctionToObject(props2, (e4) => wrapQuotes(e4))
    }
  }
});
var schemaToRoot = (schema) => {
  return {
    schemaId: schema.id,
    id: schema.id,
    type: "group",
    rank: 0,
    name: schema.id
  };
};
var schemaToFrame = (schema) => {
  return {
    schemaId: schema.id,
    id: schema.id,
    type: "frame",
    rank: 0,
    name: schema.id
  };
};
var buildRootFromMDBFrame = (superstate, frame, editorProps = defaultFrameEditorProps) => {
  return buildRoot(mdbSchemaToFrameSchema(frame.schema), frame.cols, frame.rows.map((f4) => frameToNode(f4)), superstate, editorProps);
};
var buildRoot = (schema, fields, nodes, superstate, editorProps = defaultFrameEditorProps) => {
  var _a2;
  const rootNode = (_a2 = nodes.find((f4) => f4.id == schema.id)) != null ? _a2 : schemaToRoot(schema);
  const root = buildFrameTree(rootNode, nodes, superstate, nodes.length, false, { ...editorProps, rootId: schema.id })[0];
  return root && linkProps(fields, root);
};
var propertiesForNode = (node) => Object.keys(node.types).map((f4) => {
  var _a2, _b2;
  return {
    type: node.types[f4],
    name: f4,
    schemaId: f4,
    value: (_a2 = node.propsValue) == null ? void 0 : _a2[f4],
    attrs: (_b2 = node.propsAttrs) == null ? void 0 : _b2[f4]
  };
});
var buildFrameTree = (root, nodes, superstate, uniqueID = 0, isRef, editorProps = defaultFrameEditorProps) => {
  const rootNode = { node: root, id: root.id, children: [], isRef, editorProps };
  const idToNodeMap = { [root.id]: rootNode };
  nodes.forEach((node) => {
    idToNodeMap[node.id] = { id: node.id, node, children: [], isRef, editorProps };
  });
  nodes.forEach((node) => {
    if (node.parentId) {
      const parentNode = idToNodeMap[node.parentId];
      if (parentNode) {
        parentNode.children.push({ ...idToNodeMap[node.id], editorProps: { ...editorProps, parentType: parentNode.node.type } });
        parentNode.children.sort((a5, b4) => a5.node.rank - b4.node.rank);
      }
    } else {
      if (node.id == root.id)
        rootNode.node = idToNodeMap[node.id].node;
    }
  });
  const [treeNode, newID] = expandFrame(idToNodeMap[root.id], superstate, uniqueID, editorProps);
  return [treeNode, newID];
};
var findParent = (tree, targetId, parentId = null) => {
  for (const child of tree.children) {
    if (child.id === targetId) {
      return tree;
    }
  }
  for (const child of tree.children) {
    const foundParent = findParent(child, targetId, tree.id);
    if (foundParent) {
      return foundParent;
    }
  }
  return null;
};

// src/schemas/frames.ts
var defaultFrameSchema = {
  uniques: ["id,schemaId"],
  cols: [
    "id",
    "schemaId",
    "type",
    "parentId",
    "name",
    "rank",
    "icon",
    "props",
    "actions",
    "ref",
    "styles",
    "contexts"
  ]
};
var nodeToTypes = (type) => {
  return type == "flow" ? { value: "link" } : type == "container" || type == "group" || type == "content" || type == "frame" ? {} : {
    value: type
  };
};
var groupNode = {
  def: {
    icon: "lucide//box-select"
  },
  node: {
    id: "group",
    schemaId: "group",
    name: i18n_default.commands.group,
    rank: 0,
    parentId: "",
    styles: {
      layout: `"column"`
    },
    type: "group"
  }
};
var columnsNode = {
  def: {
    icon: "lucide//columns"
  },
  node: {
    id: "container",
    schemaId: "container",
    name: i18n_default.commands.columns,
    rank: 0,
    parentId: "",
    styles: {
      layout: `"row"`,
      width: `'100%'`,
      gap: `'24px'`
    },
    type: "container"
  }
};
var columnNode = {
  def: {
    icon: "lucide//columns"
  },
  node: {
    icon: "lucide//columns",
    id: "column",
    schemaId: "column",
    name: i18n_default.commands.column,
    rank: 0,
    parentId: "",
    styles: {
      layout: `"column"`,
      layoutAlign: `'left'`,
      flex: `1`,
      gap: `'16px'`,
      width: "0"
    },
    type: "column"
  }
};
var groupableTypes = ["content", "group", "container", "column", "list"];
var flowNode = {
  def: {
    icon: "lucide//file-text"
  },
  node: {
    icon: "lucide//file-text",
    schemaId: "flow",
    parentId: "",
    name: i18n_default.commands.flow,
    rank: 0,
    id: "flow",
    type: "flow",
    props: {
      value: ""
    },
    styles: {
      width: `'100%'`
    },
    types: {
      value: "link"
    }
  }
};
var iconNode = {
  def: {
    icon: "lucide//gem"
  },
  node: {
    icon: "lucide//gem",
    schemaId: "icon",
    parentId: "",
    name: i18n_default.properties.icon.label,
    rank: 0,
    id: "icon",
    styles: {},
    type: "icon",
    props: {
      value: ""
    },
    types: {
      value: "icon"
    }
  }
};
var spaceNode = {
  def: {
    icon: "lucide//layout-grid"
  },
  node: {
    icon: "lucide//layout-grid",
    schemaId: "space",
    parentId: "",
    name: i18n_default.properties.space.label,
    rank: 0,
    id: "space",
    styles: { width: `'100%'` },
    type: "space",
    props: {
      value: ""
    },
    types: {
      value: "view"
    }
  }
};
var imageNode = {
  def: {
    icon: "lucide//image"
  },
  node: {
    icon: "lucide//image",
    schemaId: "image",
    parentId: "",
    name: i18n_default.properties.image.label,
    rank: 0,
    id: "image",
    type: "image",
    props: {
      value: ""
    },
    types: {
      value: "image"
    }
  }
};
var textNode = {
  def: {
    icon: "lucide//type",
    description: "Insert a text labels to decorate your Space"
  },
  node: {
    icon: "lucide//type",
    schemaId: "text",
    parentId: "",
    name: i18n_default.commands.label,
    rank: 0,
    id: "text",
    type: "text",
    props: {
      value: ""
    },
    types: {
      value: "text"
    }
  }
};
var dividerNode = {
  def: {
    icon: "lucide//type"
  },
  node: {
    icon: "lucide//type",
    schemaId: "hr",
    parentId: "",
    name: i18n_default.commands.divider,
    rank: 0,
    id: "hr",
    type: "hr",
    styles: {
      as: `'hr'`
    }
  }
};
var contentNode = {
  def: {
    icon: "lucide//type"
  },
  node: {
    icon: "lucide//type",
    schemaId: "content",
    parentId: "",
    name: "Content",
    rank: 0,
    id: "content",
    type: "content"
  }
};
var buttonNode = {
  id: "button",
  def: {
    icon: "lucide//mouse-pointer-click"
  },
  node: {
    icon: "lucide//mouse-pointer-click",
    schemaId: "button",
    parentId: "",
    name: i18n_default.commands.button,
    rank: 0,
    id: "button",
    type: "group",
    props: {
      icon: "",
      label: "",
      action: "",
      actionValue: ""
    },
    types: {
      icon: "icon",
      label: "text",
      action: "option",
      actionValue: "super"
    },
    propsAttrs: {
      action: JSON.stringify({
        name: i18n_default.properties.super.whenClicked,
        icon: "lucide//mouse-pointer-click"
      }),
      actionValue: JSON.stringify({
        name: i18n_default.properties.super.performAction
      })
    },
    propsValue: {
      action: JSON.stringify({
        options: [{ name: i18n_default.properties.super.runCommand, value: "$commands" }, { name: "Open Link", value: "$links" }]
      }),
      actionValue: JSON.stringify({
        dynamic: true,
        field: "action"
      })
    },
    actions: {
      onClick: `(a,b,c,api) => api.buttonCommand(button.props.action, button.props.actionValue)`
    },
    styles: {
      class: `'mk-button'`,
      gap: `'4px'`
    }
  },
  children: [
    { ...iconNode, node: { ...iconNode.node, props: {
      value: `button.props.icon`
    } } },
    { ...textNode, node: { ...textNode.node, props: { value: `button.props.label` } } }
  ]
};
var progressNode = {
  id: "progress",
  def: {
    icon: "lucide//pie-chart"
  },
  node: {
    icon: "lucide//pie-chart",
    schemaId: "progress",
    parentId: "",
    name: i18n_default.commands.progress,
    rank: 0,
    id: "progress",
    type: "group",
    props: {
      value: "50",
      total: "100",
      color: "'var(--background-modifier-form-field)'"
    },
    types: {
      total: "number",
      value: "number",
      color: "color"
    },
    styles: {
      background: `progress.props.color`,
      height: `'10px'`,
      width: `'100px'`,
      borderRadius: `'5px'`
    }
  },
  children: [
    { ...groupNode, node: { ...groupNode.node, styles: {
      width: `progress.props.value/progress.props.total*100+'%'`,
      height: `'100%'`,
      borderRadius: `'5px'`,
      background: `'var(--color-orange)'`,
      display: `'block'`
    } } }
  ]
};
var cardNode = {
  id: "card",
  def: {
    icon: "lucide//mouse-pointer-click"
  },
  node: {
    icon: "lucide//mouse-pointer-click",
    schemaId: "card",
    parentId: "",
    name: i18n_default.commands.card,
    rank: 0,
    id: "card",
    type: "group",
    props: {
      icon: "",
      label: ""
    },
    types: {
      icon: "icon",
      label: "text"
    },
    actions: {},
    styles: {
      borderRadius: `'10px'`,
      background: `'var(--background-primary-alt)'`,
      width: `'160px'`,
      height: `'80px'`,
      padding: `'16px'`,
      border: `'thin solid var(--divider-color)'`
    }
  },
  children: [
    { ...iconNode, node: { ...iconNode.node, props: {
      value: `card.props.icon`
    } } },
    { ...textNode, node: { ...textNode.node, props: { value: `card.props.label` } } }
  ]
};
var linkNode = {
  id: "link",
  def: {
    icon: "lucide//link"
  },
  node: {
    icon: "lucide//link",
    schemaId: "link",
    parentId: "",
    name: i18n_default.commands.link,
    rank: 0,
    id: "link",
    type: "group",
    props: {
      label: `"Link"`,
      link: ""
    },
    styles: {
      class: `'mk-a'`
    },
    actions: {
      onClick: "(e,v,k,api) => { api.openLink(link.props.link, false) }"
    },
    types: {
      label: "text",
      link: "link"
    }
  },
  children: [
    { ...textNode, node: { ...textNode.node, props: { value: `link.props.label` } } }
  ]
};
var rootToFrame = (root) => {
  var _a2;
  return {
    schema: { id: root.id, name: root.node.name, type: "frame" },
    cols: Object.keys((_a2 = root.node.types) != null ? _a2 : {}).map((f4) => {
      var _a3, _b2;
      return {
        name: f4,
        schemaId: root.id,
        type: root.node.types[f4],
        value: (_a3 = root.node.propsValue) == null ? void 0 : _a3[f4],
        attrs: (_b2 = root.node.propsAttrs) == null ? void 0 : _b2[f4]
      };
    }),
    rows: flattenToFrameNodes(root).map((f4) => nodeToFrame(f4))
  };
};

// src/core/utils/frames/nodes.ts
var mdbSchemaToFrameSchema = (schema) => {
  if (!schema)
    return null;
  return {
    ...schema,
    def: safelyParseJSON(schema.def)
  };
};
var frameSchemaToMDBSchema = (frameSchema) => {
  return {
    ...frameSchema,
    def: JSON.stringify(frameSchema.def)
  };
};
var frameToNode = (frame) => {
  return {
    ...frame,
    rank: parseInt(frame.rank),
    contexts: safelyParseJSON(frame.contexts),
    styles: safelyParseJSON(frame.styles),
    actions: safelyParseJSON(frame.actions),
    props: safelyParseJSON(frame.props),
    types: nodeToTypes(frame.type)
  };
};
var nodeToFrame = (node) => {
  var _a2, _b2;
  const { contexts, styles: styles2, props: props2, actions, ...otherProps } = node;
  return {
    ...otherProps,
    rank: (_b2 = (_a2 = node.rank) == null ? void 0 : _a2.toString()) != null ? _b2 : "0",
    contexts: JSON.stringify(contexts),
    styles: JSON.stringify(styles2),
    actions: JSON.stringify(actions),
    props: JSON.stringify(props2)
  };
};

// src/schemas/mdb.ts
var stickerForField = (f4) => {
  var _a2, _b2, _c2, _d2, _e2;
  return ((_a2 = f4.attrs) == null ? void 0 : _a2.length) > 0 ? (_d2 = (_b2 = safelyParseJSON(f4.attrs)) == null ? void 0 : _b2.icon) != null ? _d2 : (_c2 = fieldTypeForType(f4.type, f4.name)) == null ? void 0 : _c2.icon : (_e2 = fieldTypeForType(f4.type, f4.name)) == null ? void 0 : _e2.icon;
};
var fieldTypeForType = (type, name) => name == PathPropertyName ? fieldTypes.find((t4) => t4.type == "file") : name == "tags" ? fieldTypes.find((t4) => t4.type == "tags") : name == "aliases" ? fieldTypes.find((t4) => t4.type == "option-multi") : name == "sticker" ? fieldTypes.find((t4) => type == "icon") : fieldTypes.find((t4) => type == t4.type) || fieldTypes.find((t4) => type == t4.multiType);
var fieldTypes = [
  {
    type: "unknown",
    label: "",
    restricted: true,
    icon: "lucide//file-question"
  },
  {
    type: "text",
    label: i18n_default.properties.text.label,
    metadata: true,
    icon: "lucide//text"
  },
  {
    type: "number",
    label: i18n_default.properties.number.label,
    metadata: true,
    icon: "lucide//binary",
    configKeys: ["unit"]
  },
  {
    type: "boolean",
    label: i18n_default.properties.boolean.label,
    metadata: true,
    icon: "lucide//check-square"
  },
  {
    type: "date",
    label: i18n_default.properties.date.label,
    metadata: true,
    icon: "lucide//calendar",
    configKeys: ["format"]
  },
  {
    type: "option",
    label: i18n_default.properties.option.label,
    multi: true,
    multiType: "option-multi",
    icon: "lucide//list",
    configKeys: ["options"]
  },
  {
    type: "tags",
    label: i18n_default.properties.tags.label,
    icon: "lucide//tags"
  },
  {
    type: "file",
    label: i18n_default.properties.file.label,
    restricted: true,
    icon: "ui//mk-make-h3"
  },
  {
    type: "fileprop",
    label: i18n_default.properties.fileProperty.label,
    icon: "lucide//list",
    configKeys: ["field", "value"]
  },
  {
    type: "link",
    label: i18n_default.properties.link.label,
    multi: true,
    multiType: "link-multi",
    metadata: true,
    icon: "lucide//file-text"
  },
  {
    type: "context",
    label: i18n_default.properties.context.label,
    icon: "ui//mk-make-note",
    multi: true,
    multiType: "context-multi",
    configKeys: ["space"]
  },
  {
    type: "object",
    label: i18n_default.properties.object.label,
    multi: true,
    multiType: "object-multi",
    metadata: true,
    icon: "lucide//list-tree"
  },
  {
    type: "icon",
    label: i18n_default.properties.icon.label,
    multi: true,
    multiType: "icon-multi",
    icon: "lucide//gem",
    restricted: true
  },
  {
    type: "image",
    label: i18n_default.properties.image.label,
    multi: true,
    multiType: "image-multi",
    metadata: true,
    icon: "ui//mk-make-image"
  },
  {
    type: "color",
    label: i18n_default.properties.color.label,
    icon: "ui//mk-make-image",
    restricted: true
  },
  {
    type: "space",
    label: i18n_default.properties.space.label,
    icon: "lucide//layout-grid",
    restricted: true
  },
  {
    type: "super",
    label: i18n_default.properties.super.label,
    icon: "lucide//zap",
    restricted: true,
    configKeys: ["dynamic", "field"]
  }
];
var defaultContextSchemaID = "files";
var defaultContextDBSchema = {
  id: defaultContextSchemaID,
  name: "Files",
  type: "db",
  primary: "true"
};
var defaultFrameListViewID = "filesView";
var defaultFrameListViewSchema = {
  id: defaultFrameListViewID,
  name: "Files",
  type: "view",
  def: { db: defaultContextSchemaID }
};
var mainFrameID = "main";
var defaultMainFrameSchema = (id2) => ({ id: id2, name: id2, type: "frame", def: "", predicate: "", primary: "true" });
var defaultFramesTable = {
  uniques: [],
  cols: ["id", "name", "type", "def", "predicate", "primary"],
  rows: [defaultMainFrameSchema(mainFrameID), frameSchemaToMDBSchema(defaultFrameListViewSchema)]
};
var defaultContextTable = {
  uniques: [],
  cols: ["id", "name", "type", "def", "predicate", "primary"],
  rows: [defaultContextDBSchema]
};
var fieldSchema = {
  uniques: ["name,schemaId"],
  cols: [
    "name",
    "schemaId",
    "type",
    "value",
    "attrs",
    "hidden",
    "unique",
    "primary"
  ]
};
var defaultContextFields = {
  ...fieldSchema,
  rows: [
    {
      name: PathPropertyName,
      schemaId: defaultContextSchemaID,
      type: "file",
      primary: "true",
      hidden: "",
      unique: "",
      attrs: "",
      value: ""
    },
    {
      name: i18n_default.properties.fileProperty.createdTime,
      schemaId: defaultContextSchemaID,
      type: "fileprop",
      value: PathPropertyName + ".ctime",
      hidden: "",
      unique: "",
      attrs: "",
      primary: "true"
    }
  ]
};
var defaultFieldsForContext = (space) => {
  return defaultContextFields;
};
var defaultTableFields = [
  {
    name: i18n_default.properties.defaultField,
    schemaId: "",
    type: "text"
  }
];
var defaultTagFields = {
  ...fieldSchema,
  rows: [
    {
      name: PathPropertyName,
      schemaId: defaultContextSchemaID,
      type: "file",
      primary: "true",
      hidden: "",
      unique: "",
      attrs: "",
      value: ""
    }
  ]
};
var defaultMDBTableForContext = (space) => {
  return defaultFolderMDBTable;
};
var defaultFolderMDBTable = {
  schema: defaultContextDBSchema,
  cols: defaultContextFields.rows,
  rows: []
};
var defaultQueryMDBTable = {
  schema: defaultContextDBSchema,
  cols: defaultContextFields.rows,
  rows: []
};
var defaultTagMDBTable = {
  schema: defaultContextDBSchema,
  cols: defaultTagFields.rows,
  rows: []
};
var fieldsToTable = (fields, schemas) => {
  return fields.filter((s5) => schemas.find((g4) => g4.id == s5.schemaId && g4.type == "db")).reduce((p3, c4) => {
    return {
      ...p3,
      ...p3[c4.schemaId] ? {
        [c4.schemaId]: {
          uniques: c4.unique == "true" ? [...p3[c4.schemaId].uniques, c4.name] : p3[c4.schemaId].uniques,
          cols: [...p3[c4.schemaId].cols, c4.name],
          rows: []
        }
      } : {
        [c4.schemaId]: {
          uniques: c4.unique == "true" ? [c4.name] : [],
          cols: [c4.name],
          rows: []
        }
      }
    };
  }, {});
};
var defaultTablesForContext = (space) => {
  return defaultFolderTables;
};
var defaultFolderTables = {
  m_schema: defaultContextTable,
  m_fields: defaultContextFields,
  ...fieldsToTable(
    defaultContextFields.rows,
    defaultContextTable.rows
  )
};
var defaultTagTables = {
  m_schema: defaultContextTable,
  m_fields: defaultTagFields,
  ...fieldsToTable(
    defaultTagFields.rows,
    defaultContextTable.rows
  )
};

// src/core/schemas/parseFieldValue.ts
var parseFieldValue = (value, type) => {
  var _a2;
  let valueProp = safelyParseJSON(value);
  if (valueProp) {
    return [...(_a2 = fieldTypeForType(type).configKeys) != null ? _a2 : [], "alias", "default"].reduce((p3, c4) => ({ ...p3, [c4]: valueProp[c4] }), {});
  }
  if (!type)
    return {};
  if (!valueProp) {
    if (type == "context") {
      if ((value == null ? void 0 : value.length) > 0) {
        valueProp = {
          space: value
        };
      } else {
        valueProp = {};
      }
    } else if (type.startsWith("date")) {
      if ((value == null ? void 0 : value.length) > 0) {
        valueProp = {
          format: value
        };
      } else {
        valueProp = {};
      }
    } else if (type.startsWith("fileprop")) {
      if ((value == null ? void 0 : value.length) > 0) {
        const [field, val] = value.split(".");
        valueProp = {
          field,
          value: val
        };
      } else {
        valueProp = {};
      }
    } else if (type.startsWith("option")) {
      if ((value == null ? void 0 : value.length) > 0) {
        const options = parseMultiString(value).map((f4) => ({ name: f4, value: f4 }));
        valueProp = {
          options
        };
      } else {
        valueProp = {};
      }
    }
  }
  return valueProp != null ? valueProp : {};
};

// src/core/utils/spaces/space.ts
var pathIsSpace = (superstate, path) => {
  if (!path)
    return false;
  return superstate.spacesIndex.has(path);
};
var spaceFolderPathFromSpace = (path, manager) => {
  if (manager.superstate.settings.spacesMDBInHidden) {
    if (path == "/")
      return ".space/";
    return path + ".space/";
  }
  return path;
};
var folderForTagSpace = (space, settings) => settings.spacesFolder + "/" + space;

// src/core/utils/contexts/optionValuesForColumn.ts
var optionValuesForColumn = (column, table) => {
  var _a2;
  return uniq(
    (_a2 = table == null ? void 0 : table.rows.reduce((p3, c4) => {
      return [...p3, ...parseMultiString(c4[column])];
    }, [])) != null ? _a2 : []
  );
};
var defaultTableDataForContext = (superstate, space) => {
  const paths = [...superstate.getSpaceItems(space.path, true)];
  return {
    ...defaultMDBTableForContext(space),
    rows: paths.map((f4) => ({ [PathPropertyName]: f4.path }))
  };
};
var createNewRow = (mdb, row, index) => {
  if (index) {
    return {
      ...mdb,
      rows: insert(mdb.rows, index, row)
    };
  }
  return {
    ...mdb,
    rows: [...mdb.rows, row]
  };
};
var renameTagSpacePath = async (superstate, space, newSpace) => {
  const spacePath = folderForTagSpace(space, superstate.settings);
  if (await superstate.spaceManager.pathExists(spacePath)) {
    superstate.onPathDeleted(spacePath);
  } else {
    superstate.onPathRename(spacePath, pathToParentPath(spacePath) + "/" + newSpace);
  }
};

// src/utils/tags.ts
var renameTag = async (superstate, tag, toTag) => {
  const tags = getAllSubtags(superstate, tag);
  const newTag = validateName(toTag);
  const paths = superstate.spaceManager.pathsForTag(tag);
  for (const path of paths) {
    superstate.spaceManager.renameTag(path, tag, toTag);
  }
  await renameTagSpacePath(superstate, tag, toTag);
  for (const subtag of tags) {
    await renameTag(superstate, subtag, subtag.replace(tag, newTag));
  }
};
var getAllParentTags = (str) => {
  if (str.startsWith("#")) {
    str = str.slice(1);
  }
  const parts = str.split("/");
  const result = [];
  for (let i4 = 0; i4 < parts.length - 1; i4++) {
    if (i4 === 0) {
      result.push(parts[i4]);
    } else {
      result.push(result[i4 - 1] + "/" + parts[i4]);
    }
  }
  return result;
};
var validateName = (tag) => {
  return tag.trim();
};
var getAllSubtags = (superstate, tag) => {
  const tags = superstate.spaceManager.readTags();
  return tags.filter((f4) => f4.startsWith(tag) && f4 != tag);
};
var tagToTagPath = (tag) => {
  return encodeSpaceName(ensureTag(tag));
};
var tagPathToTag = (string) => {
  return pathToString(string).replace(/\+/g, "/");
};
var ensureTag = (tag) => {
  if (!tag)
    return null;
  let string = tag;
  if (string.charAt(0) != "#")
    string = "#" + string;
  return string;
};
var stringFromTag = (string) => {
  if (string.charAt(0) == "#") {
    if (string.charAt(1) == "#") {
      return string.substring(2, string.length);
    }
    return string.substring(1, string.length);
  }
  return string;
};

// src/core/spaceManager/filesystemAdapter/spaceInfo.ts
var fileSystemSpaceInfoFromTag = (manager, tag, readOnly) => {
  const path = tagSpacePathFromTag(tag);
  const folderPath = manager.superstate.settings.spacesFolder + "/" + tagToTagPath(tag);
  return {
    name: tag,
    path,
    isRemote: false,
    readOnly,
    folderPath,
    defPath: `${folderPath}/${encodeSpaceName(tag)}.md`,
    framePath: spaceFolderPathFromSpace(folderPath + "/", manager) + "frames.mdb",
    dbPath: spaceFolderPathFromSpace(folderPath + "/", manager) + manager.superstate.settings.folderContextFile + ".mdb"
  };
};
var fileSystemSpaceInfoByPath = (manager, contextPath) => {
  if (!contextPath)
    return;
  const uri = manager.uriByString(contextPath);
  const pathType = manager.spaceTypeByString(uri);
  if (pathType == "folder") {
    return fileSystemSpaceInfoFromFolder(manager, removeTrailingSlashFromFolder(uri.path));
  } else if (pathType == "tag") {
    return fileSystemSpaceInfoFromTag(manager, uri.authority);
  } else if (pathType == "vault") {
    return fileSystemSpaceInfoFromFolder(manager, "/");
  }
  return null;
};
var fileSystemSpaceInfoFromFolder = (manager, folder, readOnly) => {
  if (folder == "/") {
    const vaultName = manager.superstate.settings.systemName;
    return {
      name: vaultName,
      path: folder,
      isRemote: false,
      readOnly,
      folderPath: folder,
      defPath: vaultName + ".md",
      dbPath: spaceFolderPathFromSpace(folder, manager) + manager.superstate.settings.folderContextFile + ".mdb",
      framePath: spaceFolderPathFromSpace(folder, manager) + "views.mdb"
    };
  }
  const folderName = folderPathToString(folder);
  return {
    name: folderName,
    path: folder,
    isRemote: false,
    readOnly,
    folderPath: folder,
    defPath: folder + "/" + folderName + ".md",
    dbPath: spaceFolderPathFromSpace(folder + "/", manager) + manager.superstate.settings.folderContextFile + ".mdb",
    framePath: spaceFolderPathFromSpace(folder + "/", manager) + "views.mdb"
  };
};

// node_modules/@dnd-kit/utilities/dist/utilities.esm.js
function useCombinedRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return F2(
    () => (node) => {
      refs.forEach((ref2) => ref2(node));
    },
    refs
  );
}
var canUseDOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
function isWindow(element) {
  const elementString = Object.prototype.toString.call(element);
  return elementString === "[object Window]" || elementString === "[object global]";
}
function isNode(node) {
  return "nodeType" in node;
}
function getWindow(target) {
  var _target$ownerDocument, _target$ownerDocument2;
  if (!target) {
    return window;
  }
  if (isWindow(target)) {
    return target;
  }
  if (!isNode(target)) {
    return window;
  }
  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;
}
function isDocument(node) {
  const {
    Document
  } = getWindow(node);
  return node instanceof Document;
}
function isHTMLElement(node) {
  if (isWindow(node)) {
    return false;
  }
  return node instanceof getWindow(node).HTMLElement;
}
function isSVGElement(node) {
  return node instanceof getWindow(node).SVGElement;
}
function getOwnerDocument(target) {
  if (!target) {
    return document;
  }
  if (isWindow(target)) {
    return target.document;
  }
  if (!isNode(target)) {
    return document;
  }
  if (isDocument(target)) {
    return target;
  }
  if (isHTMLElement(target)) {
    return target.ownerDocument;
  }
  return document;
}
var useIsomorphicLayoutEffect = canUseDOM ? y2 : p2;
function useEvent(handler) {
  const handlerRef = _2(handler);
  useIsomorphicLayoutEffect(() => {
    handlerRef.current = handler;
  });
  return T2(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return handlerRef.current == null ? void 0 : handlerRef.current(...args);
  }, []);
}
function useInterval() {
  const intervalRef = _2(null);
  const set = T2((listener, duration) => {
    intervalRef.current = setInterval(listener, duration);
  }, []);
  const clear = T2(() => {
    if (intervalRef.current !== null) {
      clearInterval(intervalRef.current);
      intervalRef.current = null;
    }
  }, []);
  return [set, clear];
}
function useLatestValue(value, dependencies) {
  if (dependencies === void 0) {
    dependencies = [value];
  }
  const valueRef = _2(value);
  useIsomorphicLayoutEffect(() => {
    if (valueRef.current !== value) {
      valueRef.current = value;
    }
  }, dependencies);
  return valueRef;
}
function useLazyMemo(callback, dependencies) {
  const valueRef = _2();
  return F2(
    () => {
      const newValue = callback(valueRef.current);
      valueRef.current = newValue;
      return newValue;
    },
    [...dependencies]
  );
}
function useNodeRef(onChange) {
  const onChangeHandler = useEvent(onChange);
  const node = _2(null);
  const setNodeRef = T2(
    (element) => {
      if (element !== node.current) {
        onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);
      }
      node.current = element;
    },
    []
  );
  return [node, setNodeRef];
}
function usePrevious(value) {
  const ref2 = _2();
  p2(() => {
    ref2.current = value;
  }, [value]);
  return ref2.current;
}
var ids = {};
function useUniqueId(prefix, value) {
  return F2(() => {
    if (value) {
      return value;
    }
    const id2 = ids[prefix] == null ? 0 : ids[prefix] + 1;
    ids[prefix] = id2;
    return prefix + "-" + id2;
  }, [prefix, value]);
}
function createAdjustmentFn(modifier) {
  return function(object) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((accumulator, adjustment) => {
      const entries = Object.entries(adjustment);
      for (const [key2, valueAdjustment] of entries) {
        const value = accumulator[key2];
        if (value != null) {
          accumulator[key2] = value + modifier * valueAdjustment;
        }
      }
      return accumulator;
    }, {
      ...object
    });
  };
}
var add = /* @__PURE__ */ createAdjustmentFn(1);
var subtract = /* @__PURE__ */ createAdjustmentFn(-1);
function hasViewportRelativeCoordinates(event) {
  return "clientX" in event && "clientY" in event;
}
function isKeyboardEvent(event) {
  if (!event) {
    return false;
  }
  const {
    KeyboardEvent
  } = getWindow(event.target);
  return KeyboardEvent && event instanceof KeyboardEvent;
}
function isTouchEvent(event) {
  if (!event) {
    return false;
  }
  const {
    TouchEvent
  } = getWindow(event.target);
  return TouchEvent && event instanceof TouchEvent;
}
function getEventCoordinates(event) {
  if (isTouchEvent(event)) {
    if (event.touches && event.touches.length) {
      const {
        clientX: x5,
        clientY: y5
      } = event.touches[0];
      return {
        x: x5,
        y: y5
      };
    } else if (event.changedTouches && event.changedTouches.length) {
      const {
        clientX: x5,
        clientY: y5
      } = event.changedTouches[0];
      return {
        x: x5,
        y: y5
      };
    }
  }
  if (hasViewportRelativeCoordinates(event)) {
    return {
      x: event.clientX,
      y: event.clientY
    };
  }
  return null;
}
var CSS = /* @__PURE__ */ Object.freeze({
  Translate: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        x: x5,
        y: y5
      } = transform;
      return "translate3d(" + (x5 ? Math.round(x5) : 0) + "px, " + (y5 ? Math.round(y5) : 0) + "px, 0)";
    }
  },
  Scale: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        scaleX,
        scaleY
      } = transform;
      return "scaleX(" + scaleX + ") scaleY(" + scaleY + ")";
    }
  },
  Transform: {
    toString(transform) {
      if (!transform) {
        return;
      }
      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(" ");
    }
  },
  Transition: {
    toString(_ref) {
      let {
        property,
        duration,
        easing
      } = _ref;
      return property + " " + duration + "ms " + easing;
    }
  }
});
var SELECTOR = "a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]";
function findFirstFocusableNode(element) {
  if (element.matches(SELECTOR)) {
    return element;
  }
  return element.querySelector(SELECTOR);
}

// node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js
var hiddenStyles = {
  display: "none"
};
function HiddenText(_ref) {
  let {
    id: id2,
    value
  } = _ref;
  return Cn.createElement("div", {
    id: id2,
    style: hiddenStyles
  }, value);
}
var visuallyHidden = {
  position: "fixed",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0 0 0 0)",
  clipPath: "inset(100%)",
  whiteSpace: "nowrap"
};
function LiveRegion(_ref) {
  let {
    id: id2,
    announcement
  } = _ref;
  return Cn.createElement("div", {
    id: id2,
    style: visuallyHidden,
    role: "status",
    "aria-live": "assertive",
    "aria-atomic": true
  }, announcement);
}
function useAnnouncement() {
  const [announcement, setAnnouncement] = h2("");
  const announce = T2((value) => {
    if (value != null) {
      setAnnouncement(value);
    }
  }, []);
  return {
    announce,
    announcement
  };
}

// node_modules/@dnd-kit/core/dist/core.esm.js
var DndMonitorContext = /* @__PURE__ */ F(null);
function useDndMonitor(listener) {
  const registerListener = q2(DndMonitorContext);
  p2(() => {
    if (!registerListener) {
      throw new Error("useDndMonitor must be used within a children of <DndContext>");
    }
    const unsubscribe = registerListener(listener);
    return unsubscribe;
  }, [listener, registerListener]);
}
function useDndMonitorProvider() {
  const [listeners] = h2(() => /* @__PURE__ */ new Set());
  const registerListener = T2((listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  }, [listeners]);
  const dispatch = T2((_ref) => {
    let {
      type,
      event
    } = _ref;
    listeners.forEach((listener) => {
      var _listener$type;
      return (_listener$type = listener[type]) == null ? void 0 : _listener$type.call(listener, event);
    });
  }, [listeners]);
  return [dispatch, registerListener];
}
var defaultScreenReaderInstructions = {
  draggable: "\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  "
};
var defaultAnnouncements = {
  onDragStart(_ref) {
    let {
      active
    } = _ref;
    return "Picked up draggable item " + active.id + ".";
  },
  onDragOver(_ref2) {
    let {
      active,
      over
    } = _ref2;
    if (over) {
      return "Draggable item " + active.id + " was moved over droppable area " + over.id + ".";
    }
    return "Draggable item " + active.id + " is no longer over a droppable area.";
  },
  onDragEnd(_ref3) {
    let {
      active,
      over
    } = _ref3;
    if (over) {
      return "Draggable item " + active.id + " was dropped over droppable area " + over.id;
    }
    return "Draggable item " + active.id + " was dropped.";
  },
  onDragCancel(_ref4) {
    let {
      active
    } = _ref4;
    return "Dragging was cancelled. Draggable item " + active.id + " was dropped.";
  }
};
function Accessibility(_ref) {
  let {
    announcements = defaultAnnouncements,
    container,
    hiddenTextDescribedById,
    screenReaderInstructions = defaultScreenReaderInstructions
  } = _ref;
  const {
    announce,
    announcement
  } = useAnnouncement();
  const liveRegionId = useUniqueId("DndLiveRegion");
  const [mounted, setMounted] = h2(false);
  p2(() => {
    setMounted(true);
  }, []);
  useDndMonitor(F2(() => ({
    onDragStart(_ref2) {
      let {
        active
      } = _ref2;
      announce(announcements.onDragStart({
        active
      }));
    },
    onDragMove(_ref3) {
      let {
        active,
        over
      } = _ref3;
      if (announcements.onDragMove) {
        announce(announcements.onDragMove({
          active,
          over
        }));
      }
    },
    onDragOver(_ref4) {
      let {
        active,
        over
      } = _ref4;
      announce(announcements.onDragOver({
        active,
        over
      }));
    },
    onDragEnd(_ref5) {
      let {
        active,
        over
      } = _ref5;
      announce(announcements.onDragEnd({
        active,
        over
      }));
    },
    onDragCancel(_ref6) {
      let {
        active,
        over
      } = _ref6;
      announce(announcements.onDragCancel({
        active,
        over
      }));
    }
  }), [announce, announcements]));
  if (!mounted) {
    return null;
  }
  const markup = Cn.createElement(Cn.Fragment, null, Cn.createElement(HiddenText, {
    id: hiddenTextDescribedById,
    value: screenReaderInstructions.draggable
  }), Cn.createElement(LiveRegion, {
    id: liveRegionId,
    announcement
  }));
  return container ? z3(markup, container) : markup;
}
var Action;
(function(Action2) {
  Action2["DragStart"] = "dragStart";
  Action2["DragMove"] = "dragMove";
  Action2["DragEnd"] = "dragEnd";
  Action2["DragCancel"] = "dragCancel";
  Action2["DragOver"] = "dragOver";
  Action2["RegisterDroppable"] = "registerDroppable";
  Action2["SetDroppableDisabled"] = "setDroppableDisabled";
  Action2["UnregisterDroppable"] = "unregisterDroppable";
})(Action || (Action = {}));
function noop() {
}
function useSensor(sensor, options) {
  return F2(
    () => ({
      sensor,
      options: options != null ? options : {}
    }),
    [sensor, options]
  );
}
function useSensors() {
  for (var _len = arguments.length, sensors = new Array(_len), _key = 0; _key < _len; _key++) {
    sensors[_key] = arguments[_key];
  }
  return F2(
    () => [...sensors].filter((sensor) => sensor != null),
    [...sensors]
  );
}
var defaultCoordinates = /* @__PURE__ */ Object.freeze({
  x: 0,
  y: 0
});
function distanceBetween(p1, p22) {
  return Math.sqrt(Math.pow(p1.x - p22.x, 2) + Math.pow(p1.y - p22.y, 2));
}
function getRelativeTransformOrigin(event, rect) {
  const eventCoordinates = getEventCoordinates(event);
  if (!eventCoordinates) {
    return "0 0";
  }
  const transformOrigin = {
    x: (eventCoordinates.x - rect.left) / rect.width * 100,
    y: (eventCoordinates.y - rect.top) / rect.height * 100
  };
  return transformOrigin.x + "% " + transformOrigin.y + "%";
}
function sortCollisionsAsc(_ref, _ref2) {
  let {
    data: {
      value: a5
    }
  } = _ref;
  let {
    data: {
      value: b4
    }
  } = _ref2;
  return a5 - b4;
}
function sortCollisionsDesc(_ref3, _ref4) {
  let {
    data: {
      value: a5
    }
  } = _ref3;
  let {
    data: {
      value: b4
    }
  } = _ref4;
  return b4 - a5;
}
function cornersOfRectangle(_ref5) {
  let {
    left,
    top,
    height,
    width
  } = _ref5;
  return [{
    x: left,
    y: top
  }, {
    x: left + width,
    y: top
  }, {
    x: left,
    y: top + height
  }, {
    x: left + width,
    y: top + height
  }];
}
function getFirstCollision(collisions, property) {
  if (!collisions || collisions.length === 0) {
    return null;
  }
  const [firstCollision] = collisions;
  return property ? firstCollision[property] : firstCollision;
}
function centerOfRectangle(rect, left, top) {
  if (left === void 0) {
    left = rect.left;
  }
  if (top === void 0) {
    top = rect.top;
  }
  return {
    x: left + rect.width * 0.5,
    y: top + rect.height * 0.5
  };
}
var closestCenter = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);
      collisions.push({
        id: id2,
        data: {
          droppableContainer,
          value: distBetween
        }
      });
    }
  }
  return collisions.sort(sortCollisionsAsc);
};
var closestCorners = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const corners = cornersOfRectangle(collisionRect);
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const rectCorners = cornersOfRectangle(rect);
      const distances = corners.reduce((accumulator, corner, index) => {
        return accumulator + distanceBetween(rectCorners[index], corner);
      }, 0);
      const effectiveDistance = Number((distances / 4).toFixed(4));
      collisions.push({
        id: id2,
        data: {
          droppableContainer,
          value: effectiveDistance
        }
      });
    }
  }
  return collisions.sort(sortCollisionsAsc);
};
function getIntersectionRatio(entry, target) {
  const top = Math.max(target.top, entry.top);
  const left = Math.max(target.left, entry.left);
  const right = Math.min(target.left + target.width, entry.left + entry.width);
  const bottom = Math.min(target.top + target.height, entry.top + entry.height);
  const width = right - left;
  const height = bottom - top;
  if (left < right && top < bottom) {
    const targetArea = target.width * target.height;
    const entryArea = entry.width * entry.height;
    const intersectionArea = width * height;
    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
    return Number(intersectionRatio.toFixed(4));
  }
  return 0;
}
var rectIntersection = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const intersectionRatio = getIntersectionRatio(rect, collisionRect);
      if (intersectionRatio > 0) {
        collisions.push({
          id: id2,
          data: {
            droppableContainer,
            value: intersectionRatio
          }
        });
      }
    }
  }
  return collisions.sort(sortCollisionsDesc);
};
function adjustScale(transform, rect1, rect2) {
  return {
    ...transform,
    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,
    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1
  };
}
function getRectDelta(rect1, rect2) {
  return rect1 && rect2 ? {
    x: rect1.left - rect2.left,
    y: rect1.top - rect2.top
  } : defaultCoordinates;
}
function createRectAdjustmentFn(modifier) {
  return function adjustClientRect(rect) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((acc, adjustment) => ({
      ...acc,
      top: acc.top + modifier * adjustment.y,
      bottom: acc.bottom + modifier * adjustment.y,
      left: acc.left + modifier * adjustment.x,
      right: acc.right + modifier * adjustment.x
    }), {
      ...rect
    });
  };
}
var getAdjustedRect = /* @__PURE__ */ createRectAdjustmentFn(1);
function parseTransform(transform) {
  if (transform.startsWith("matrix3d(")) {
    const transformArray = transform.slice(9, -1).split(/, /);
    return {
      x: +transformArray[12],
      y: +transformArray[13],
      scaleX: +transformArray[0],
      scaleY: +transformArray[5]
    };
  } else if (transform.startsWith("matrix(")) {
    const transformArray = transform.slice(7, -1).split(/, /);
    return {
      x: +transformArray[4],
      y: +transformArray[5],
      scaleX: +transformArray[0],
      scaleY: +transformArray[3]
    };
  }
  return null;
}
function inverseTransform(rect, transform, transformOrigin) {
  const parsedTransform = parseTransform(transform);
  if (!parsedTransform) {
    return rect;
  }
  const {
    scaleX,
    scaleY,
    x: translateX,
    y: translateY
  } = parsedTransform;
  const x5 = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);
  const y5 = rect.top - translateY - (1 - scaleY) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(" ") + 1));
  const w5 = scaleX ? rect.width / scaleX : rect.width;
  const h5 = scaleY ? rect.height / scaleY : rect.height;
  return {
    width: w5,
    height: h5,
    top: y5,
    right: x5 + w5,
    bottom: y5 + h5,
    left: x5
  };
}
var defaultOptions3 = {
  ignoreTransform: false
};
function getClientRect(element, options) {
  if (options === void 0) {
    options = defaultOptions3;
  }
  let rect = element.getBoundingClientRect();
  if (options.ignoreTransform) {
    const {
      transform,
      transformOrigin
    } = getWindow(element).getComputedStyle(element);
    if (transform) {
      rect = inverseTransform(rect, transform, transformOrigin);
    }
  }
  const {
    top,
    left,
    width,
    height,
    bottom,
    right
  } = rect;
  return {
    top,
    left,
    width,
    height,
    bottom,
    right
  };
}
function getTransformAgnosticClientRect(element) {
  return getClientRect(element, {
    ignoreTransform: true
  });
}
function getWindowClientRect(element) {
  const width = element.innerWidth;
  const height = element.innerHeight;
  return {
    top: 0,
    left: 0,
    right: width,
    bottom: height,
    width,
    height
  };
}
function isFixed(node, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(node).getComputedStyle(node);
  }
  return computedStyle.position === "fixed";
}
function isScrollable(element, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(element).getComputedStyle(element);
  }
  const overflowRegex = /(auto|scroll|overlay)/;
  const properties2 = ["overflow", "overflowX", "overflowY"];
  return properties2.some((property) => {
    const value = computedStyle[property];
    return typeof value === "string" ? overflowRegex.test(value) : false;
  });
}
function getScrollableAncestors(element, limit) {
  const scrollParents = [];
  function findScrollableAncestors(node) {
    if (limit != null && scrollParents.length >= limit) {
      return scrollParents;
    }
    if (!node) {
      return scrollParents;
    }
    if (isDocument(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {
      scrollParents.push(node.scrollingElement);
      return scrollParents;
    }
    if (!isHTMLElement(node) || isSVGElement(node)) {
      return scrollParents;
    }
    if (scrollParents.includes(node)) {
      return scrollParents;
    }
    const computedStyle = getWindow(element).getComputedStyle(node);
    if (node !== element) {
      if (isScrollable(node, computedStyle)) {
        scrollParents.push(node);
      }
    }
    if (isFixed(node, computedStyle)) {
      return scrollParents;
    }
    return findScrollableAncestors(node.parentNode);
  }
  if (!element) {
    return scrollParents;
  }
  return findScrollableAncestors(element);
}
function getFirstScrollableAncestor(node) {
  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);
  return firstScrollableAncestor != null ? firstScrollableAncestor : null;
}
function getScrollableElement(element) {
  if (!canUseDOM || !element) {
    return null;
  }
  if (isWindow(element)) {
    return element;
  }
  if (!isNode(element)) {
    return null;
  }
  if (isDocument(element) || element === getOwnerDocument(element).scrollingElement) {
    return window;
  }
  if (isHTMLElement(element)) {
    return element;
  }
  return null;
}
function getScrollXCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollX;
  }
  return element.scrollLeft;
}
function getScrollYCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollY;
  }
  return element.scrollTop;
}
function getScrollCoordinates(element) {
  return {
    x: getScrollXCoordinate(element),
    y: getScrollYCoordinate(element)
  };
}
var Direction2;
(function(Direction3) {
  Direction3[Direction3["Forward"] = 1] = "Forward";
  Direction3[Direction3["Backward"] = -1] = "Backward";
})(Direction2 || (Direction2 = {}));
function isDocumentScrollingElement(element) {
  if (!canUseDOM || !element) {
    return false;
  }
  return element === document.scrollingElement;
}
function getScrollPosition(scrollingContainer) {
  const minScroll = {
    x: 0,
    y: 0
  };
  const dimensions = isDocumentScrollingElement(scrollingContainer) ? {
    height: window.innerHeight,
    width: window.innerWidth
  } : {
    height: scrollingContainer.clientHeight,
    width: scrollingContainer.clientWidth
  };
  const maxScroll = {
    x: scrollingContainer.scrollWidth - dimensions.width,
    y: scrollingContainer.scrollHeight - dimensions.height
  };
  const isTop = scrollingContainer.scrollTop <= minScroll.y;
  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;
  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;
  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;
  return {
    isTop,
    isLeft,
    isBottom,
    isRight,
    maxScroll,
    minScroll
  };
}
var defaultThreshold = {
  x: 0.2,
  y: 0.2
};
function getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, _ref, acceleration, thresholdPercentage) {
  let {
    top,
    left,
    right,
    bottom
  } = _ref;
  if (acceleration === void 0) {
    acceleration = 10;
  }
  if (thresholdPercentage === void 0) {
    thresholdPercentage = defaultThreshold;
  }
  const {
    isTop,
    isBottom,
    isLeft,
    isRight
  } = getScrollPosition(scrollContainer);
  const direction = {
    x: 0,
    y: 0
  };
  const speed = {
    x: 0,
    y: 0
  };
  const threshold = {
    height: scrollContainerRect.height * thresholdPercentage.y,
    width: scrollContainerRect.width * thresholdPercentage.x
  };
  if (!isTop && top <= scrollContainerRect.top + threshold.height) {
    direction.y = Direction2.Backward;
    speed.y = acceleration * Math.abs((scrollContainerRect.top + threshold.height - top) / threshold.height);
  } else if (!isBottom && bottom >= scrollContainerRect.bottom - threshold.height) {
    direction.y = Direction2.Forward;
    speed.y = acceleration * Math.abs((scrollContainerRect.bottom - threshold.height - bottom) / threshold.height);
  }
  if (!isRight && right >= scrollContainerRect.right - threshold.width) {
    direction.x = Direction2.Forward;
    speed.x = acceleration * Math.abs((scrollContainerRect.right - threshold.width - right) / threshold.width);
  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {
    direction.x = Direction2.Backward;
    speed.x = acceleration * Math.abs((scrollContainerRect.left + threshold.width - left) / threshold.width);
  }
  return {
    direction,
    speed
  };
}
function getScrollElementRect(element) {
  if (element === document.scrollingElement) {
    const {
      innerWidth: innerWidth2,
      innerHeight: innerHeight2
    } = window;
    return {
      top: 0,
      left: 0,
      right: innerWidth2,
      bottom: innerHeight2,
      width: innerWidth2,
      height: innerHeight2
    };
  }
  const {
    top,
    left,
    right,
    bottom
  } = element.getBoundingClientRect();
  return {
    top,
    left,
    right,
    bottom,
    width: element.clientWidth,
    height: element.clientHeight
  };
}
function getScrollOffsets(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return add(acc, getScrollCoordinates(node));
  }, defaultCoordinates);
}
function getScrollXOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollXCoordinate(node);
  }, 0);
}
function getScrollYOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollYCoordinate(node);
  }, 0);
}
function scrollIntoViewIfNeeded(element, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  if (!element) {
    return;
  }
  const {
    top,
    left,
    bottom,
    right
  } = measure(element);
  const firstScrollableAncestor = getFirstScrollableAncestor(element);
  if (!firstScrollableAncestor) {
    return;
  }
  if (bottom <= 0 || right <= 0 || top >= window.innerHeight || left >= window.innerWidth) {
    element.scrollIntoView({
      block: "center",
      inline: "center"
    });
  }
}
var properties = [["x", ["left", "right"], getScrollXOffset], ["y", ["top", "bottom"], getScrollYOffset]];
var Rect = class {
  constructor(rect, element) {
    this.rect = void 0;
    this.width = void 0;
    this.height = void 0;
    this.top = void 0;
    this.bottom = void 0;
    this.right = void 0;
    this.left = void 0;
    const scrollableAncestors = getScrollableAncestors(element);
    const scrollOffsets = getScrollOffsets(scrollableAncestors);
    this.rect = {
      ...rect
    };
    this.width = rect.width;
    this.height = rect.height;
    for (const [axis, keys, getScrollOffset] of properties) {
      for (const key2 of keys) {
        Object.defineProperty(this, key2, {
          get: () => {
            const currentOffsets = getScrollOffset(scrollableAncestors);
            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;
            return this.rect[key2] + scrollOffsetsDeltla;
          },
          enumerable: true
        });
      }
    }
    Object.defineProperty(this, "rect", {
      enumerable: false
    });
  }
};
var Listeners = class {
  constructor(target) {
    this.target = void 0;
    this.listeners = [];
    this.removeAll = () => {
      this.listeners.forEach((listener) => {
        var _this$target;
        return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);
      });
    };
    this.target = target;
  }
  add(eventName, handler, options) {
    var _this$target2;
    (_this$target2 = this.target) == null ? void 0 : _this$target2.addEventListener(eventName, handler, options);
    this.listeners.push([eventName, handler, options]);
  }
};
function getEventListenerTarget(target) {
  const {
    EventTarget
  } = getWindow(target);
  return target instanceof EventTarget ? target : getOwnerDocument(target);
}
function hasExceededDistance(delta, measurement) {
  const dx = Math.abs(delta.x);
  const dy = Math.abs(delta.y);
  if (typeof measurement === "number") {
    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;
  }
  if ("x" in measurement && "y" in measurement) {
    return dx > measurement.x && dy > measurement.y;
  }
  if ("x" in measurement) {
    return dx > measurement.x;
  }
  if ("y" in measurement) {
    return dy > measurement.y;
  }
  return false;
}
var EventName;
(function(EventName2) {
  EventName2["Click"] = "click";
  EventName2["DragStart"] = "dragstart";
  EventName2["Keydown"] = "keydown";
  EventName2["ContextMenu"] = "contextmenu";
  EventName2["Resize"] = "resize";
  EventName2["SelectionChange"] = "selectionchange";
  EventName2["VisibilityChange"] = "visibilitychange";
})(EventName || (EventName = {}));
function preventDefault(event) {
  event.preventDefault();
}
function stopPropagation(event) {
  event.stopPropagation();
}
var KeyboardCode;
(function(KeyboardCode2) {
  KeyboardCode2["Space"] = "Space";
  KeyboardCode2["Down"] = "ArrowDown";
  KeyboardCode2["Right"] = "ArrowRight";
  KeyboardCode2["Left"] = "ArrowLeft";
  KeyboardCode2["Up"] = "ArrowUp";
  KeyboardCode2["Esc"] = "Escape";
  KeyboardCode2["Enter"] = "Enter";
})(KeyboardCode || (KeyboardCode = {}));
var defaultKeyboardCodes = {
  start: [KeyboardCode.Space, KeyboardCode.Enter],
  cancel: [KeyboardCode.Esc],
  end: [KeyboardCode.Space, KeyboardCode.Enter]
};
var defaultKeyboardCoordinateGetter = (event, _ref) => {
  let {
    currentCoordinates
  } = _ref;
  switch (event.code) {
    case KeyboardCode.Right:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x + 25
      };
    case KeyboardCode.Left:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x - 25
      };
    case KeyboardCode.Down:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y + 25
      };
    case KeyboardCode.Up:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y - 25
      };
  }
  return void 0;
};
var KeyboardSensor = class {
  constructor(props2) {
    this.props = void 0;
    this.autoScrollEnabled = false;
    this.referenceCoordinates = void 0;
    this.listeners = void 0;
    this.windowListeners = void 0;
    this.props = props2;
    const {
      event: {
        target
      }
    } = props2;
    this.props = props2;
    this.listeners = new Listeners(getOwnerDocument(target));
    this.windowListeners = new Listeners(getWindow(target));
    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.attach();
  }
  attach() {
    this.handleStart();
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));
  }
  handleStart() {
    const {
      activeNode,
      onStart
    } = this.props;
    const node = activeNode.node.current;
    if (node) {
      scrollIntoViewIfNeeded(node);
    }
    onStart(defaultCoordinates);
  }
  handleKeyDown(event) {
    if (isKeyboardEvent(event)) {
      const {
        active,
        context,
        options
      } = this.props;
      const {
        keyboardCodes = defaultKeyboardCodes,
        coordinateGetter = defaultKeyboardCoordinateGetter,
        scrollBehavior = "smooth"
      } = options;
      const {
        code
      } = event;
      if (keyboardCodes.end.includes(code)) {
        this.handleEnd(event);
        return;
      }
      if (keyboardCodes.cancel.includes(code)) {
        this.handleCancel(event);
        return;
      }
      const {
        collisionRect
      } = context.current;
      const currentCoordinates = collisionRect ? {
        x: collisionRect.left,
        y: collisionRect.top
      } : defaultCoordinates;
      if (!this.referenceCoordinates) {
        this.referenceCoordinates = currentCoordinates;
      }
      const newCoordinates = coordinateGetter(event, {
        active,
        context: context.current,
        currentCoordinates
      });
      if (newCoordinates) {
        const coordinatesDelta = subtract(newCoordinates, currentCoordinates);
        const scrollDelta = {
          x: 0,
          y: 0
        };
        const {
          scrollableAncestors
        } = context.current;
        for (const scrollContainer of scrollableAncestors) {
          const direction = event.code;
          const {
            isTop,
            isRight,
            isLeft,
            isBottom,
            maxScroll,
            minScroll
          } = getScrollPosition(scrollContainer);
          const scrollElementRect = getScrollElementRect(scrollContainer);
          const clampedCoordinates = {
            x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),
            y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))
          };
          const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;
          const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;
          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {
            const newScrollCoordinates = scrollContainer.scrollLeft + coordinatesDelta.x;
            const canScrollToNewCoordinates = direction === KeyboardCode.Right && newScrollCoordinates <= maxScroll.x || direction === KeyboardCode.Left && newScrollCoordinates >= minScroll.x;
            if (canScrollToNewCoordinates && !coordinatesDelta.y) {
              scrollContainer.scrollTo({
                left: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;
            } else {
              scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;
            }
            if (scrollDelta.x) {
              scrollContainer.scrollBy({
                left: -scrollDelta.x,
                behavior: scrollBehavior
              });
            }
            break;
          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {
            const newScrollCoordinates = scrollContainer.scrollTop + coordinatesDelta.y;
            const canScrollToNewCoordinates = direction === KeyboardCode.Down && newScrollCoordinates <= maxScroll.y || direction === KeyboardCode.Up && newScrollCoordinates >= minScroll.y;
            if (canScrollToNewCoordinates && !coordinatesDelta.x) {
              scrollContainer.scrollTo({
                top: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;
            } else {
              scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;
            }
            if (scrollDelta.y) {
              scrollContainer.scrollBy({
                top: -scrollDelta.y,
                behavior: scrollBehavior
              });
            }
            break;
          }
        }
        this.handleMove(event, add(subtract(newCoordinates, this.referenceCoordinates), scrollDelta));
      }
    }
  }
  handleMove(event, coordinates) {
    const {
      onMove
    } = this.props;
    event.preventDefault();
    onMove(coordinates);
  }
  handleEnd(event) {
    const {
      onEnd
    } = this.props;
    event.preventDefault();
    this.detach();
    onEnd();
  }
  handleCancel(event) {
    const {
      onCancel
    } = this.props;
    event.preventDefault();
    this.detach();
    onCancel();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
  }
};
KeyboardSensor.activators = [{
  eventName: "onKeyDown",
  handler: (event, _ref, _ref2) => {
    let {
      keyboardCodes = defaultKeyboardCodes,
      onActivation
    } = _ref;
    let {
      active
    } = _ref2;
    const {
      code
    } = event.nativeEvent;
    if (keyboardCodes.start.includes(code)) {
      const activator = active.activatorNode.current;
      if (activator && event.target !== activator) {
        return false;
      }
      event.preventDefault();
      onActivation == null ? void 0 : onActivation({
        event: event.nativeEvent
      });
      return true;
    }
    return false;
  }
}];
function isDistanceConstraint(constraint) {
  return Boolean(constraint && "distance" in constraint);
}
function isDelayConstraint(constraint) {
  return Boolean(constraint && "delay" in constraint);
}
var AbstractPointerSensor = class {
  constructor(props2, events2, listenerTarget) {
    var _getEventCoordinates;
    if (listenerTarget === void 0) {
      listenerTarget = getEventListenerTarget(props2.event.target);
    }
    this.props = void 0;
    this.events = void 0;
    this.autoScrollEnabled = true;
    this.document = void 0;
    this.activated = false;
    this.initialCoordinates = void 0;
    this.timeoutId = null;
    this.listeners = void 0;
    this.documentListeners = void 0;
    this.windowListeners = void 0;
    this.props = props2;
    this.events = events2;
    const {
      event
    } = props2;
    const {
      target
    } = event;
    this.props = props2;
    this.events = events2;
    this.document = getOwnerDocument(target);
    this.documentListeners = new Listeners(this.document);
    this.listeners = new Listeners(listenerTarget);
    this.windowListeners = new Listeners(getWindow(target));
    this.initialCoordinates = (_getEventCoordinates = getEventCoordinates(event)) != null ? _getEventCoordinates : defaultCoordinates;
    this.handleStart = this.handleStart.bind(this);
    this.handleMove = this.handleMove.bind(this);
    this.handleEnd = this.handleEnd.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.handleKeydown = this.handleKeydown.bind(this);
    this.removeTextSelection = this.removeTextSelection.bind(this);
    this.attach();
  }
  attach() {
    const {
      events: events2,
      props: {
        options: {
          activationConstraint
        }
      }
    } = this;
    this.listeners.add(events2.move.name, this.handleMove, {
      passive: false
    });
    this.listeners.add(events2.end.name, this.handleEnd);
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.DragStart, preventDefault);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    this.windowListeners.add(EventName.ContextMenu, preventDefault);
    this.documentListeners.add(EventName.Keydown, this.handleKeydown);
    if (activationConstraint) {
      if (isDistanceConstraint(activationConstraint)) {
        return;
      }
      if (isDelayConstraint(activationConstraint)) {
        this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);
        return;
      }
    }
    this.handleStart();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
    setTimeout(this.documentListeners.removeAll, 50);
    if (this.timeoutId !== null) {
      clearTimeout(this.timeoutId);
      this.timeoutId = null;
    }
  }
  handleStart() {
    const {
      initialCoordinates
    } = this;
    const {
      onStart
    } = this.props;
    if (initialCoordinates) {
      this.activated = true;
      this.documentListeners.add(EventName.Click, stopPropagation, {
        capture: true
      });
      this.removeTextSelection();
      this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);
      onStart(initialCoordinates);
    }
  }
  handleMove(event) {
    var _getEventCoordinates2;
    const {
      activated,
      initialCoordinates,
      props: props2
    } = this;
    const {
      onMove,
      options: {
        activationConstraint
      }
    } = props2;
    if (!initialCoordinates) {
      return;
    }
    const coordinates = (_getEventCoordinates2 = getEventCoordinates(event)) != null ? _getEventCoordinates2 : defaultCoordinates;
    const delta = subtract(initialCoordinates, coordinates);
    if (!activated && activationConstraint) {
      if (isDelayConstraint(activationConstraint)) {
        if (hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
        return;
      }
      if (isDistanceConstraint(activationConstraint)) {
        if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
        if (hasExceededDistance(delta, activationConstraint.distance)) {
          return this.handleStart();
        }
        return;
      }
    }
    if (event.cancelable) {
      event.preventDefault();
    }
    onMove(coordinates);
  }
  handleEnd() {
    const {
      onEnd
    } = this.props;
    this.detach();
    onEnd();
  }
  handleCancel() {
    const {
      onCancel
    } = this.props;
    this.detach();
    onCancel();
  }
  handleKeydown(event) {
    if (event.code === KeyboardCode.Esc) {
      this.handleCancel();
    }
  }
  removeTextSelection() {
    var _this$document$getSel;
    (_this$document$getSel = this.document.getSelection()) == null ? void 0 : _this$document$getSel.removeAllRanges();
  }
};
var events = {
  move: {
    name: "pointermove"
  },
  end: {
    name: "pointerup"
  }
};
var PointerSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    const {
      event
    } = props2;
    const listenerTarget = getOwnerDocument(event.target);
    super(props2, events, listenerTarget);
  }
};
PointerSensor.activators = [{
  eventName: "onPointerDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (!event.isPrimary || event.button !== 0) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$1 = {
  move: {
    name: "mousemove"
  },
  end: {
    name: "mouseup"
  }
};
var MouseButton;
(function(MouseButton2) {
  MouseButton2[MouseButton2["RightClick"] = 2] = "RightClick";
})(MouseButton || (MouseButton = {}));
var MouseSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    super(props2, events$1, getOwnerDocument(props2.event.target));
  }
};
MouseSensor.activators = [{
  eventName: "onMouseDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (event.button === MouseButton.RightClick) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$2 = {
  move: {
    name: "touchmove"
  },
  end: {
    name: "touchend"
  }
};
var TouchSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    super(props2, events$2);
  }
  static setup() {
    window.addEventListener(events$2.move.name, noop3, {
      capture: false,
      passive: false
    });
    return function teardown() {
      window.removeEventListener(events$2.move.name, noop3);
    };
    function noop3() {
    }
  }
};
TouchSensor.activators = [{
  eventName: "onTouchStart",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    const {
      touches
    } = event;
    if (touches.length > 1) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var AutoScrollActivator;
(function(AutoScrollActivator2) {
  AutoScrollActivator2[AutoScrollActivator2["Pointer"] = 0] = "Pointer";
  AutoScrollActivator2[AutoScrollActivator2["DraggableRect"] = 1] = "DraggableRect";
})(AutoScrollActivator || (AutoScrollActivator = {}));
var TraversalOrder;
(function(TraversalOrder2) {
  TraversalOrder2[TraversalOrder2["TreeOrder"] = 0] = "TreeOrder";
  TraversalOrder2[TraversalOrder2["ReversedTreeOrder"] = 1] = "ReversedTreeOrder";
})(TraversalOrder || (TraversalOrder = {}));
function useAutoScroller(_ref) {
  let {
    acceleration,
    activator = AutoScrollActivator.Pointer,
    canScroll,
    draggingRect,
    enabled,
    interval = 5,
    order = TraversalOrder.TreeOrder,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects,
    delta,
    threshold
  } = _ref;
  const scrollIntent = useScrollIntent({
    delta,
    disabled: !enabled
  });
  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();
  const scrollSpeed = _2({
    x: 0,
    y: 0
  });
  const scrollDirection = _2({
    x: 0,
    y: 0
  });
  const rect = F2(() => {
    switch (activator) {
      case AutoScrollActivator.Pointer:
        return pointerCoordinates ? {
          top: pointerCoordinates.y,
          bottom: pointerCoordinates.y,
          left: pointerCoordinates.x,
          right: pointerCoordinates.x
        } : null;
      case AutoScrollActivator.DraggableRect:
        return draggingRect;
    }
  }, [activator, draggingRect, pointerCoordinates]);
  const scrollContainerRef = _2(null);
  const autoScroll = T2(() => {
    const scrollContainer = scrollContainerRef.current;
    if (!scrollContainer) {
      return;
    }
    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;
    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;
    scrollContainer.scrollBy(scrollLeft, scrollTop);
  }, []);
  const sortedScrollableAncestors = F2(() => order === TraversalOrder.TreeOrder ? [...scrollableAncestors].reverse() : scrollableAncestors, [order, scrollableAncestors]);
  p2(
    () => {
      if (!enabled || !scrollableAncestors.length || !rect) {
        clearAutoScrollInterval();
        return;
      }
      for (const scrollContainer of sortedScrollableAncestors) {
        if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) {
          continue;
        }
        const index = scrollableAncestors.indexOf(scrollContainer);
        const scrollContainerRect = scrollableAncestorRects[index];
        if (!scrollContainerRect) {
          continue;
        }
        const {
          direction,
          speed
        } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);
        for (const axis of ["x", "y"]) {
          if (!scrollIntent[axis][direction[axis]]) {
            speed[axis] = 0;
            direction[axis] = 0;
          }
        }
        if (speed.x > 0 || speed.y > 0) {
          clearAutoScrollInterval();
          scrollContainerRef.current = scrollContainer;
          setAutoScrollInterval(autoScroll, interval);
          scrollSpeed.current = speed;
          scrollDirection.current = direction;
          return;
        }
      }
      scrollSpeed.current = {
        x: 0,
        y: 0
      };
      scrollDirection.current = {
        x: 0,
        y: 0
      };
      clearAutoScrollInterval();
    },
    [
      acceleration,
      autoScroll,
      canScroll,
      clearAutoScrollInterval,
      enabled,
      interval,
      JSON.stringify(rect),
      JSON.stringify(scrollIntent),
      setAutoScrollInterval,
      scrollableAncestors,
      sortedScrollableAncestors,
      scrollableAncestorRects,
      JSON.stringify(threshold)
    ]
  );
}
var defaultScrollIntent = {
  x: {
    [Direction2.Backward]: false,
    [Direction2.Forward]: false
  },
  y: {
    [Direction2.Backward]: false,
    [Direction2.Forward]: false
  }
};
function useScrollIntent(_ref2) {
  let {
    delta,
    disabled
  } = _ref2;
  const previousDelta = usePrevious(delta);
  return useLazyMemo((previousIntent) => {
    if (disabled || !previousDelta || !previousIntent) {
      return defaultScrollIntent;
    }
    const direction = {
      x: Math.sign(delta.x - previousDelta.x),
      y: Math.sign(delta.y - previousDelta.y)
    };
    return {
      x: {
        [Direction2.Backward]: previousIntent.x[Direction2.Backward] || direction.x === -1,
        [Direction2.Forward]: previousIntent.x[Direction2.Forward] || direction.x === 1
      },
      y: {
        [Direction2.Backward]: previousIntent.y[Direction2.Backward] || direction.y === -1,
        [Direction2.Forward]: previousIntent.y[Direction2.Forward] || direction.y === 1
      }
    };
  }, [disabled, delta, previousDelta]);
}
function useCachedNode(draggableNodes, id2) {
  const draggableNode = id2 !== null ? draggableNodes.get(id2) : void 0;
  const node = draggableNode ? draggableNode.node.current : null;
  return useLazyMemo((cachedNode) => {
    var _ref;
    if (id2 === null) {
      return null;
    }
    return (_ref = node != null ? node : cachedNode) != null ? _ref : null;
  }, [node, id2]);
}
function useCombineActivators(sensors, getSyntheticHandler) {
  return F2(() => sensors.reduce((accumulator, sensor) => {
    const {
      sensor: Sensor
    } = sensor;
    const sensorActivators = Sensor.activators.map((activator) => ({
      eventName: activator.eventName,
      handler: getSyntheticHandler(activator.handler, sensor)
    }));
    return [...accumulator, ...sensorActivators];
  }, []), [sensors, getSyntheticHandler]);
}
var MeasuringStrategy;
(function(MeasuringStrategy2) {
  MeasuringStrategy2[MeasuringStrategy2["Always"] = 0] = "Always";
  MeasuringStrategy2[MeasuringStrategy2["BeforeDragging"] = 1] = "BeforeDragging";
  MeasuringStrategy2[MeasuringStrategy2["WhileDragging"] = 2] = "WhileDragging";
})(MeasuringStrategy || (MeasuringStrategy = {}));
var MeasuringFrequency;
(function(MeasuringFrequency2) {
  MeasuringFrequency2["Optimized"] = "optimized";
})(MeasuringFrequency || (MeasuringFrequency = {}));
var defaultValue = /* @__PURE__ */ new Map();
function useDroppableMeasuring(containers, _ref) {
  let {
    dragging,
    dependencies,
    config
  } = _ref;
  const [queue, setQueue] = h2(null);
  const {
    frequency,
    measure,
    strategy
  } = config;
  const containersRef = _2(containers);
  const disabled = isDisabled();
  const disabledRef = useLatestValue(disabled);
  const measureDroppableContainers = T2(function(ids2) {
    if (ids2 === void 0) {
      ids2 = [];
    }
    if (disabledRef.current) {
      return;
    }
    setQueue((value) => {
      if (value === null) {
        return ids2;
      }
      return value.concat(ids2.filter((id2) => !value.includes(id2)));
    });
  }, [disabledRef]);
  const timeoutId = _2(null);
  const droppableRects = useLazyMemo((previousValue) => {
    if (disabled && !dragging) {
      return defaultValue;
    }
    if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || queue != null) {
      const map = /* @__PURE__ */ new Map();
      for (let container of containers) {
        if (!container) {
          continue;
        }
        if (queue && queue.length > 0 && !queue.includes(container.id) && container.rect.current) {
          map.set(container.id, container.rect.current);
          continue;
        }
        const node = container.node.current;
        const rect = node ? new Rect(measure(node), node) : null;
        container.rect.current = rect;
        if (rect) {
          map.set(container.id, rect);
        }
      }
      return map;
    }
    return previousValue;
  }, [containers, queue, dragging, disabled, measure]);
  p2(() => {
    containersRef.current = containers;
  }, [containers]);
  p2(
    () => {
      if (disabled) {
        return;
      }
      measureDroppableContainers();
    },
    [dragging, disabled]
  );
  p2(
    () => {
      if (queue && queue.length > 0) {
        setQueue(null);
      }
    },
    [JSON.stringify(queue)]
  );
  p2(
    () => {
      if (disabled || typeof frequency !== "number" || timeoutId.current !== null) {
        return;
      }
      timeoutId.current = setTimeout(() => {
        measureDroppableContainers();
        timeoutId.current = null;
      }, frequency);
    },
    [frequency, disabled, measureDroppableContainers, ...dependencies]
  );
  return {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled: queue != null
  };
  function isDisabled() {
    switch (strategy) {
      case MeasuringStrategy.Always:
        return false;
      case MeasuringStrategy.BeforeDragging:
        return dragging;
      default:
        return !dragging;
    }
  }
}
function useInitialValue(value, computeFn) {
  return useLazyMemo((previousValue) => {
    if (!value) {
      return null;
    }
    if (previousValue) {
      return previousValue;
    }
    return typeof computeFn === "function" ? computeFn(value) : value;
  }, [computeFn, value]);
}
function useInitialRect(node, measure) {
  return useInitialValue(node, measure);
}
function useMutationObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleMutations = useEvent(callback);
  const mutationObserver = F2(() => {
    if (disabled || typeof window === "undefined" || typeof window.MutationObserver === "undefined") {
      return void 0;
    }
    const {
      MutationObserver
    } = window;
    return new MutationObserver(handleMutations);
  }, [handleMutations, disabled]);
  p2(() => {
    return () => mutationObserver == null ? void 0 : mutationObserver.disconnect();
  }, [mutationObserver]);
  return mutationObserver;
}
function useResizeObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleResize = useEvent(callback);
  const resizeObserver = F2(
    () => {
      if (disabled || typeof window === "undefined" || typeof window.ResizeObserver === "undefined") {
        return void 0;
      }
      const {
        ResizeObserver
      } = window;
      return new ResizeObserver(handleResize);
    },
    [disabled]
  );
  p2(() => {
    return () => resizeObserver == null ? void 0 : resizeObserver.disconnect();
  }, [resizeObserver]);
  return resizeObserver;
}
function defaultMeasure(element) {
  return new Rect(getClientRect(element), element);
}
function useRect(element, measure, fallbackRect) {
  if (measure === void 0) {
    measure = defaultMeasure;
  }
  const [rect, measureRect] = s2(reducer3, null);
  const mutationObserver = useMutationObserver({
    callback(records) {
      if (!element) {
        return;
      }
      for (const record of records) {
        const {
          type,
          target
        } = record;
        if (type === "childList" && target instanceof HTMLElement && target.contains(element)) {
          measureRect();
          break;
        }
      }
    }
  });
  const resizeObserver = useResizeObserver({
    callback: measureRect
  });
  useIsomorphicLayoutEffect(() => {
    measureRect();
    if (element) {
      resizeObserver == null ? void 0 : resizeObserver.observe(element);
      mutationObserver == null ? void 0 : mutationObserver.observe(document.body, {
        childList: true,
        subtree: true
      });
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      mutationObserver == null ? void 0 : mutationObserver.disconnect();
    }
  }, [element]);
  return rect;
  function reducer3(currentRect) {
    if (!element) {
      return null;
    }
    if (element.isConnected === false) {
      var _ref;
      return (_ref = currentRect != null ? currentRect : fallbackRect) != null ? _ref : null;
    }
    const newRect = measure(element);
    if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {
      return currentRect;
    }
    return newRect;
  }
}
function useRectDelta(rect) {
  const initialRect = useInitialValue(rect);
  return getRectDelta(rect, initialRect);
}
var defaultValue$1 = [];
function useScrollableAncestors(node) {
  const previousNode = _2(node);
  const ancestors = useLazyMemo((previousValue) => {
    if (!node) {
      return defaultValue$1;
    }
    if (previousValue && previousValue !== defaultValue$1 && node && previousNode.current && node.parentNode === previousNode.current.parentNode) {
      return previousValue;
    }
    return getScrollableAncestors(node);
  }, [node]);
  p2(() => {
    previousNode.current = node;
  }, [node]);
  return ancestors;
}
function useScrollOffsets(elements) {
  const [scrollCoordinates, setScrollCoordinates] = h2(null);
  const prevElements = _2(elements);
  const handleScroll = T2((event) => {
    const scrollingElement = getScrollableElement(event.target);
    if (!scrollingElement) {
      return;
    }
    setScrollCoordinates((scrollCoordinates2) => {
      if (!scrollCoordinates2) {
        return null;
      }
      scrollCoordinates2.set(scrollingElement, getScrollCoordinates(scrollingElement));
      return new Map(scrollCoordinates2);
    });
  }, []);
  p2(() => {
    const previousElements = prevElements.current;
    if (elements !== previousElements) {
      cleanup(previousElements);
      const entries = elements.map((element) => {
        const scrollableElement = getScrollableElement(element);
        if (scrollableElement) {
          scrollableElement.addEventListener("scroll", handleScroll, {
            passive: true
          });
          return [scrollableElement, getScrollCoordinates(scrollableElement)];
        }
        return null;
      }).filter((entry) => entry != null);
      setScrollCoordinates(entries.length ? new Map(entries) : null);
      prevElements.current = elements;
    }
    return () => {
      cleanup(elements);
      cleanup(previousElements);
    };
    function cleanup(elements2) {
      elements2.forEach((element) => {
        const scrollableElement = getScrollableElement(element);
        scrollableElement == null ? void 0 : scrollableElement.removeEventListener("scroll", handleScroll);
      });
    }
  }, [handleScroll, elements]);
  return F2(() => {
    if (elements.length) {
      return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates) => add(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);
    }
    return defaultCoordinates;
  }, [elements, scrollCoordinates]);
}
function useScrollOffsetsDelta(scrollOffsets, dependencies) {
  if (dependencies === void 0) {
    dependencies = [];
  }
  const initialScrollOffsets = _2(null);
  p2(
    () => {
      initialScrollOffsets.current = null;
    },
    dependencies
  );
  p2(() => {
    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;
    if (hasScrollOffsets && !initialScrollOffsets.current) {
      initialScrollOffsets.current = scrollOffsets;
    }
    if (!hasScrollOffsets && initialScrollOffsets.current) {
      initialScrollOffsets.current = null;
    }
  }, [scrollOffsets]);
  return initialScrollOffsets.current ? subtract(scrollOffsets, initialScrollOffsets.current) : defaultCoordinates;
}
function useSensorSetup(sensors) {
  p2(
    () => {
      if (!canUseDOM) {
        return;
      }
      const teardownFns = sensors.map((_ref) => {
        let {
          sensor
        } = _ref;
        return sensor.setup == null ? void 0 : sensor.setup();
      });
      return () => {
        for (const teardown of teardownFns) {
          teardown == null ? void 0 : teardown();
        }
      };
    },
    sensors.map((_ref2) => {
      let {
        sensor
      } = _ref2;
      return sensor;
    })
  );
}
function useSyntheticListeners(listeners, id2) {
  return F2(() => {
    return listeners.reduce((acc, _ref) => {
      let {
        eventName,
        handler
      } = _ref;
      acc[eventName] = (event) => {
        handler(event, id2);
      };
      return acc;
    }, {});
  }, [listeners, id2]);
}
function useWindowRect(element) {
  return F2(() => element ? getWindowClientRect(element) : null, [element]);
}
var defaultValue$2 = [];
function useRects(elements, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  const [firstElement] = elements;
  const windowRect = useWindowRect(firstElement ? getWindow(firstElement) : null);
  const [rects, measureRects] = s2(reducer3, defaultValue$2);
  const resizeObserver = useResizeObserver({
    callback: measureRects
  });
  if (elements.length > 0 && rects === defaultValue$2) {
    measureRects();
  }
  useIsomorphicLayoutEffect(() => {
    if (elements.length) {
      elements.forEach((element) => resizeObserver == null ? void 0 : resizeObserver.observe(element));
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      measureRects();
    }
  }, [elements]);
  return rects;
  function reducer3() {
    if (!elements.length) {
      return defaultValue$2;
    }
    return elements.map((element) => isDocumentScrollingElement(element) ? windowRect : new Rect(measure(element), element));
  }
}
function getMeasurableNode(node) {
  if (!node) {
    return null;
  }
  if (node.children.length > 1) {
    return node;
  }
  const firstChild = node.children[0];
  return isHTMLElement(firstChild) ? firstChild : node;
}
function useDragOverlayMeasuring(_ref) {
  let {
    measure
  } = _ref;
  const [rect, setRect] = h2(null);
  const handleResize = T2((entries) => {
    for (const {
      target
    } of entries) {
      if (isHTMLElement(target)) {
        setRect((rect2) => {
          const newRect = measure(target);
          return rect2 ? {
            ...rect2,
            width: newRect.width,
            height: newRect.height
          } : newRect;
        });
        break;
      }
    }
  }, [measure]);
  const resizeObserver = useResizeObserver({
    callback: handleResize
  });
  const handleNodeChange = T2((element) => {
    const node = getMeasurableNode(element);
    resizeObserver == null ? void 0 : resizeObserver.disconnect();
    if (node) {
      resizeObserver == null ? void 0 : resizeObserver.observe(node);
    }
    setRect(node ? measure(node) : null);
  }, [measure, resizeObserver]);
  const [nodeRef, setRef] = useNodeRef(handleNodeChange);
  return F2(() => ({
    nodeRef,
    rect,
    setRef
  }), [rect, nodeRef, setRef]);
}
var defaultSensors = [{
  sensor: PointerSensor,
  options: {}
}, {
  sensor: KeyboardSensor,
  options: {}
}];
var defaultData = {
  current: {}
};
var defaultMeasuringConfiguration = {
  draggable: {
    measure: getTransformAgnosticClientRect
  },
  droppable: {
    measure: getTransformAgnosticClientRect,
    strategy: MeasuringStrategy.WhileDragging,
    frequency: MeasuringFrequency.Optimized
  },
  dragOverlay: {
    measure: getClientRect
  }
};
var DroppableContainersMap = class extends Map {
  get(id2) {
    var _super$get;
    return id2 != null ? (_super$get = super.get(id2)) != null ? _super$get : void 0 : void 0;
  }
  toArray() {
    return Array.from(this.values());
  }
  getEnabled() {
    return this.toArray().filter((_ref) => {
      let {
        disabled
      } = _ref;
      return !disabled;
    });
  }
  getNodeFor(id2) {
    var _this$get$node$curren, _this$get;
    return (_this$get$node$curren = (_this$get = this.get(id2)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : void 0;
  }
};
var defaultPublicContext = {
  activatorEvent: null,
  active: null,
  activeNode: null,
  activeNodeRect: null,
  collisions: null,
  containerNodeRect: null,
  draggableNodes: /* @__PURE__ */ new Map(),
  droppableRects: /* @__PURE__ */ new Map(),
  droppableContainers: /* @__PURE__ */ new DroppableContainersMap(),
  over: null,
  dragOverlay: {
    nodeRef: {
      current: null
    },
    rect: null,
    setRef: noop
  },
  scrollableAncestors: [],
  scrollableAncestorRects: [],
  measuringConfiguration: defaultMeasuringConfiguration,
  measureDroppableContainers: noop,
  windowRect: null,
  measuringScheduled: false
};
var defaultInternalContext = {
  activatorEvent: null,
  activators: [],
  active: null,
  activeNodeRect: null,
  ariaDescribedById: {
    draggable: ""
  },
  dispatch: noop,
  draggableNodes: /* @__PURE__ */ new Map(),
  over: null,
  measureDroppableContainers: noop
};
var InternalContext = /* @__PURE__ */ F(defaultInternalContext);
var PublicContext = /* @__PURE__ */ F(defaultPublicContext);
function getInitialState() {
  return {
    draggable: {
      active: null,
      initialCoordinates: {
        x: 0,
        y: 0
      },
      nodes: /* @__PURE__ */ new Map(),
      translate: {
        x: 0,
        y: 0
      }
    },
    droppable: {
      containers: new DroppableContainersMap()
    }
  };
}
function reducer(state, action) {
  switch (action.type) {
    case Action.DragStart:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          initialCoordinates: action.initialCoordinates,
          active: action.active
        }
      };
    case Action.DragMove:
      if (!state.draggable.active) {
        return state;
      }
      return {
        ...state,
        draggable: {
          ...state.draggable,
          translate: {
            x: action.coordinates.x - state.draggable.initialCoordinates.x,
            y: action.coordinates.y - state.draggable.initialCoordinates.y
          }
        }
      };
    case Action.DragEnd:
    case Action.DragCancel:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          active: null,
          initialCoordinates: {
            x: 0,
            y: 0
          },
          translate: {
            x: 0,
            y: 0
          }
        }
      };
    case Action.RegisterDroppable: {
      const {
        element
      } = action;
      const {
        id: id2
      } = element;
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id2, element);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.SetDroppableDisabled: {
      const {
        id: id2,
        key: key2,
        disabled
      } = action;
      const element = state.droppable.containers.get(id2);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id2, {
        ...element,
        disabled
      });
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.UnregisterDroppable: {
      const {
        id: id2,
        key: key2
      } = action;
      const element = state.droppable.containers.get(id2);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.delete(id2);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    default: {
      return state;
    }
  }
}
function RestoreFocus(_ref) {
  let {
    disabled
  } = _ref;
  const {
    active,
    activatorEvent,
    draggableNodes
  } = q2(InternalContext);
  const previousActivatorEvent = usePrevious(activatorEvent);
  const previousActiveId = usePrevious(active == null ? void 0 : active.id);
  p2(() => {
    if (disabled) {
      return;
    }
    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {
      if (!isKeyboardEvent(previousActivatorEvent)) {
        return;
      }
      if (document.activeElement === previousActivatorEvent.target) {
        return;
      }
      const draggableNode = draggableNodes.get(previousActiveId);
      if (!draggableNode) {
        return;
      }
      const {
        activatorNode,
        node
      } = draggableNode;
      if (!activatorNode.current && !node.current) {
        return;
      }
      requestAnimationFrame(() => {
        for (const element of [activatorNode.current, node.current]) {
          if (!element) {
            continue;
          }
          const focusableNode = findFirstFocusableNode(element);
          if (focusableNode) {
            focusableNode.focus();
            break;
          }
        }
      });
    }
  }, [activatorEvent, disabled, draggableNodes, previousActiveId, previousActivatorEvent]);
  return null;
}
function applyModifiers(modifiers, _ref) {
  let {
    transform,
    ...args
  } = _ref;
  return modifiers != null && modifiers.length ? modifiers.reduce((accumulator, modifier) => {
    return modifier({
      transform: accumulator,
      ...args
    });
  }, transform) : transform;
}
function useMeasuringConfiguration(config) {
  return F2(
    () => ({
      draggable: {
        ...defaultMeasuringConfiguration.draggable,
        ...config == null ? void 0 : config.draggable
      },
      droppable: {
        ...defaultMeasuringConfiguration.droppable,
        ...config == null ? void 0 : config.droppable
      },
      dragOverlay: {
        ...defaultMeasuringConfiguration.dragOverlay,
        ...config == null ? void 0 : config.dragOverlay
      }
    }),
    [config == null ? void 0 : config.draggable, config == null ? void 0 : config.droppable, config == null ? void 0 : config.dragOverlay]
  );
}
function useLayoutShiftScrollCompensation(_ref) {
  let {
    activeNode,
    measure,
    initialRect,
    config = true
  } = _ref;
  const initialized = _2(false);
  const {
    x: x5,
    y: y5
  } = typeof config === "boolean" ? {
    x: config,
    y: config
  } : config;
  useIsomorphicLayoutEffect(() => {
    const disabled = !x5 && !y5;
    if (disabled || !activeNode) {
      initialized.current = false;
      return;
    }
    if (initialized.current || !initialRect) {
      return;
    }
    const node = activeNode == null ? void 0 : activeNode.node.current;
    if (!node || node.isConnected === false) {
      return;
    }
    const rect = measure(node);
    const rectDelta = getRectDelta(rect, initialRect);
    if (!x5) {
      rectDelta.x = 0;
    }
    if (!y5) {
      rectDelta.y = 0;
    }
    initialized.current = true;
    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {
      const firstScrollableAncestor = getFirstScrollableAncestor(node);
      if (firstScrollableAncestor) {
        firstScrollableAncestor.scrollBy({
          top: rectDelta.y,
          left: rectDelta.x
        });
      }
    }
  }, [activeNode, x5, y5, initialRect, measure]);
}
var ActiveDraggableContext = /* @__PURE__ */ F({
  ...defaultCoordinates,
  scaleX: 1,
  scaleY: 1
});
var Status;
(function(Status2) {
  Status2[Status2["Uninitialized"] = 0] = "Uninitialized";
  Status2[Status2["Initializing"] = 1] = "Initializing";
  Status2[Status2["Initialized"] = 2] = "Initialized";
})(Status || (Status = {}));
var DndContext = /* @__PURE__ */ x3(function DndContext2(_ref) {
  var _sensorContext$curren, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;
  let {
    id: id2,
    accessibility,
    autoScroll = true,
    children,
    sensors = defaultSensors,
    collisionDetection = rectIntersection,
    measuring,
    modifiers,
    ...props2
  } = _ref;
  const store = s2(reducer, void 0, getInitialState);
  const [state, dispatch] = store;
  const [dispatchMonitorEvent, registerMonitorListener] = useDndMonitorProvider();
  const [status, setStatus] = h2(Status.Uninitialized);
  const isInitialized = status === Status.Initialized;
  const {
    draggable: {
      active: activeId,
      nodes: draggableNodes,
      translate
    },
    droppable: {
      containers: droppableContainers
    }
  } = state;
  const node = activeId ? draggableNodes.get(activeId) : null;
  const activeRects = _2({
    initial: null,
    translated: null
  });
  const active = F2(() => {
    var _node$data;
    return activeId != null ? {
      id: activeId,
      data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,
      rect: activeRects
    } : null;
  }, [activeId, node]);
  const activeRef = _2(null);
  const [activeSensor, setActiveSensor] = h2(null);
  const [activatorEvent, setActivatorEvent] = h2(null);
  const latestProps = useLatestValue(props2, Object.values(props2));
  const draggableDescribedById = useUniqueId("DndDescribedBy", id2);
  const enabledDroppableContainers = F2(() => droppableContainers.getEnabled(), [droppableContainers]);
  const measuringConfiguration = useMeasuringConfiguration(measuring);
  const {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled
  } = useDroppableMeasuring(enabledDroppableContainers, {
    dragging: isInitialized,
    dependencies: [translate.x, translate.y],
    config: measuringConfiguration.droppable
  });
  const activeNode = useCachedNode(draggableNodes, activeId);
  const activationCoordinates = F2(() => activatorEvent ? getEventCoordinates(activatorEvent) : null, [activatorEvent]);
  const autoScrollOptions = getAutoScrollerOptions();
  const initialActiveNodeRect = useInitialRect(activeNode, measuringConfiguration.draggable.measure);
  useLayoutShiftScrollCompensation({
    activeNode: activeId ? draggableNodes.get(activeId) : null,
    config: autoScrollOptions.layoutShiftCompensation,
    initialRect: initialActiveNodeRect,
    measure: measuringConfiguration.draggable.measure
  });
  const activeNodeRect = useRect(activeNode, measuringConfiguration.draggable.measure, initialActiveNodeRect);
  const containerNodeRect = useRect(activeNode ? activeNode.parentElement : null);
  const sensorContext = _2({
    activatorEvent: null,
    active: null,
    activeNode,
    collisionRect: null,
    collisions: null,
    droppableRects,
    draggableNodes,
    draggingNode: null,
    draggingNodeRect: null,
    droppableContainers,
    over: null,
    scrollableAncestors: [],
    scrollAdjustedTranslate: null
  });
  const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);
  const dragOverlay = useDragOverlayMeasuring({
    measure: measuringConfiguration.dragOverlay.measure
  });
  const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;
  const draggingNodeRect = isInitialized ? (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect : null;
  const usesDragOverlay = Boolean(dragOverlay.nodeRef.current && dragOverlay.rect);
  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);
  const windowRect = useWindowRect(draggingNode ? getWindow(draggingNode) : null);
  const scrollableAncestors = useScrollableAncestors(isInitialized ? overNode != null ? overNode : activeNode : null);
  const scrollableAncestorRects = useRects(scrollableAncestors);
  const modifiedTranslate = applyModifiers(modifiers, {
    transform: {
      x: translate.x - nodeRectDelta.x,
      y: translate.y - nodeRectDelta.y,
      scaleX: 1,
      scaleY: 1
    },
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect,
    over: sensorContext.current.over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  });
  const pointerCoordinates = activationCoordinates ? add(activationCoordinates, translate) : null;
  const scrollOffsets = useScrollOffsets(scrollableAncestors);
  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);
  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [activeNodeRect]);
  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);
  const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;
  const collisions = active && collisionRect ? collisionDetection({
    active,
    collisionRect,
    droppableRects,
    droppableContainers: enabledDroppableContainers,
    pointerCoordinates
  }) : null;
  const overId = getFirstCollision(collisions, "id");
  const [over, setOver] = h2(null);
  const appliedTranslate = usesDragOverlay ? modifiedTranslate : add(modifiedTranslate, activeNodeScrollDelta);
  const transform = adjustScale(appliedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);
  const instantiateSensor = T2(
    (event, _ref2) => {
      let {
        sensor: Sensor,
        options
      } = _ref2;
      if (activeRef.current == null) {
        return;
      }
      const activeNode2 = draggableNodes.get(activeRef.current);
      if (!activeNode2) {
        return;
      }
      const activatorEvent2 = event.nativeEvent;
      const sensorInstance = new Sensor({
        active: activeRef.current,
        activeNode: activeNode2,
        event: activatorEvent2,
        options,
        context: sensorContext,
        onStart(initialCoordinates) {
          const id3 = activeRef.current;
          if (id3 == null) {
            return;
          }
          const draggableNode = draggableNodes.get(id3);
          if (!draggableNode) {
            return;
          }
          const {
            onDragStart
          } = latestProps.current;
          const event2 = {
            active: {
              id: id3,
              data: draggableNode.data,
              rect: activeRects
            }
          };
          dn(() => {
            onDragStart == null ? void 0 : onDragStart(event2);
            setStatus(Status.Initializing);
            dispatch({
              type: Action.DragStart,
              initialCoordinates,
              active: id3
            });
            dispatchMonitorEvent({
              type: "onDragStart",
              event: event2
            });
          });
        },
        onMove(coordinates) {
          dispatch({
            type: Action.DragMove,
            coordinates
          });
        },
        onEnd: createHandler(Action.DragEnd),
        onCancel: createHandler(Action.DragCancel)
      });
      dn(() => {
        setActiveSensor(sensorInstance);
        setActivatorEvent(event.nativeEvent);
      });
      function createHandler(type) {
        return async function handler() {
          const {
            active: active2,
            collisions: collisions2,
            over: over2,
            scrollAdjustedTranslate: scrollAdjustedTranslate2
          } = sensorContext.current;
          let event2 = null;
          if (active2 && scrollAdjustedTranslate2) {
            const {
              cancelDrop
            } = latestProps.current;
            event2 = {
              activatorEvent: activatorEvent2,
              active: active2,
              collisions: collisions2,
              delta: scrollAdjustedTranslate2,
              over: over2
            };
            if (type === Action.DragEnd && typeof cancelDrop === "function") {
              const shouldCancel = await Promise.resolve(cancelDrop(event2));
              if (shouldCancel) {
                type = Action.DragCancel;
              }
            }
          }
          activeRef.current = null;
          dn(() => {
            dispatch({
              type
            });
            setStatus(Status.Uninitialized);
            setOver(null);
            setActiveSensor(null);
            setActivatorEvent(null);
            const eventName = type === Action.DragEnd ? "onDragEnd" : "onDragCancel";
            if (event2) {
              const handler2 = latestProps.current[eventName];
              handler2 == null ? void 0 : handler2(event2);
              dispatchMonitorEvent({
                type: eventName,
                event: event2
              });
            }
          });
        };
      }
    },
    [draggableNodes]
  );
  const bindActivatorToSensorInstantiator = T2((handler, sensor) => {
    return (event, active2) => {
      const nativeEvent = event.nativeEvent;
      const activeDraggableNode = draggableNodes.get(active2);
      if (activeRef.current !== null || !activeDraggableNode || nativeEvent.dndKit || nativeEvent.defaultPrevented) {
        return;
      }
      const activationContext = {
        active: activeDraggableNode
      };
      const shouldActivate = handler(event, sensor.options, activationContext);
      if (shouldActivate === true) {
        nativeEvent.dndKit = {
          capturedBy: sensor.sensor
        };
        activeRef.current = active2;
        instantiateSensor(event, sensor);
      }
    };
  }, [draggableNodes, instantiateSensor]);
  const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);
  useSensorSetup(sensors);
  useIsomorphicLayoutEffect(() => {
    if (activeNodeRect && status === Status.Initializing) {
      setStatus(Status.Initialized);
    }
  }, [activeNodeRect, status]);
  p2(
    () => {
      const {
        onDragMove
      } = latestProps.current;
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        over: over2
      } = sensorContext.current;
      if (!active2 || !activatorEvent2) {
        return;
      }
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate.x,
          y: scrollAdjustedTranslate.y
        },
        over: over2
      };
      dn(() => {
        onDragMove == null ? void 0 : onDragMove(event);
        dispatchMonitorEvent({
          type: "onDragMove",
          event
        });
      });
    },
    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]
  );
  p2(
    () => {
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        droppableContainers: droppableContainers2,
        scrollAdjustedTranslate: scrollAdjustedTranslate2
      } = sensorContext.current;
      if (!active2 || activeRef.current == null || !activatorEvent2 || !scrollAdjustedTranslate2) {
        return;
      }
      const {
        onDragOver
      } = latestProps.current;
      const overContainer = droppableContainers2.get(overId);
      const over2 = overContainer && overContainer.rect.current ? {
        id: overContainer.id,
        rect: overContainer.rect.current,
        data: overContainer.data,
        disabled: overContainer.disabled
      } : null;
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate2.x,
          y: scrollAdjustedTranslate2.y
        },
        over: over2
      };
      dn(() => {
        setOver(over2);
        onDragOver == null ? void 0 : onDragOver(event);
        dispatchMonitorEvent({
          type: "onDragOver",
          event
        });
      });
    },
    [overId]
  );
  useIsomorphicLayoutEffect(() => {
    sensorContext.current = {
      activatorEvent,
      active,
      activeNode,
      collisionRect,
      collisions,
      droppableRects,
      draggableNodes,
      draggingNode,
      draggingNodeRect,
      droppableContainers,
      over,
      scrollableAncestors,
      scrollAdjustedTranslate
    };
    activeRects.current = {
      initial: draggingNodeRect,
      translated: collisionRect
    };
  }, [active, activeNode, collisions, collisionRect, draggableNodes, draggingNode, draggingNodeRect, droppableRects, droppableContainers, over, scrollableAncestors, scrollAdjustedTranslate]);
  useAutoScroller({
    ...autoScrollOptions,
    delta: translate,
    draggingRect: collisionRect,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects
  });
  const publicContext = F2(() => {
    const context = {
      active,
      activeNode,
      activeNodeRect,
      activatorEvent,
      collisions,
      containerNodeRect,
      dragOverlay,
      draggableNodes,
      droppableContainers,
      droppableRects,
      over,
      measureDroppableContainers,
      scrollableAncestors,
      scrollableAncestorRects,
      measuringConfiguration,
      measuringScheduled,
      windowRect
    };
    return context;
  }, [active, activeNode, activeNodeRect, activatorEvent, collisions, containerNodeRect, dragOverlay, draggableNodes, droppableContainers, droppableRects, over, measureDroppableContainers, scrollableAncestors, scrollableAncestorRects, measuringConfiguration, measuringScheduled, windowRect]);
  const internalContext = F2(() => {
    const context = {
      activatorEvent,
      activators,
      active,
      activeNodeRect,
      ariaDescribedById: {
        draggable: draggableDescribedById
      },
      dispatch,
      draggableNodes,
      over,
      measureDroppableContainers
    };
    return context;
  }, [activatorEvent, activators, active, activeNodeRect, dispatch, draggableDescribedById, draggableNodes, over, measureDroppableContainers]);
  return Cn.createElement(DndMonitorContext.Provider, {
    value: registerMonitorListener
  }, Cn.createElement(InternalContext.Provider, {
    value: internalContext
  }, Cn.createElement(PublicContext.Provider, {
    value: publicContext
  }, Cn.createElement(ActiveDraggableContext.Provider, {
    value: transform
  }, children)), Cn.createElement(RestoreFocus, {
    disabled: (accessibility == null ? void 0 : accessibility.restoreFocus) === false
  })), Cn.createElement(Accessibility, {
    ...accessibility,
    hiddenTextDescribedById: draggableDescribedById
  }));
  function getAutoScrollerOptions() {
    const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;
    const autoScrollGloballyDisabled = typeof autoScroll === "object" ? autoScroll.enabled === false : autoScroll === false;
    const enabled = isInitialized && !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;
    if (typeof autoScroll === "object") {
      return {
        ...autoScroll,
        enabled
      };
    }
    return {
      enabled
    };
  }
});
var NullContext = /* @__PURE__ */ F(null);
var defaultRole = "button";
var ID_PREFIX = "Droppable";
function useDraggable(_ref) {
  let {
    id: id2,
    data: data2,
    disabled = false,
    attributes
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX);
  const {
    activators,
    activatorEvent,
    active,
    activeNodeRect,
    ariaDescribedById,
    draggableNodes,
    over
  } = q2(InternalContext);
  const {
    role = defaultRole,
    roleDescription = "draggable",
    tabIndex = 0
  } = attributes != null ? attributes : {};
  const isDragging = (active == null ? void 0 : active.id) === id2;
  const transform = q2(isDragging ? ActiveDraggableContext : NullContext);
  const [node, setNodeRef] = useNodeRef();
  const [activatorNode, setActivatorNodeRef] = useNodeRef();
  const listeners = useSyntheticListeners(activators, id2);
  const dataRef = useLatestValue(data2);
  useIsomorphicLayoutEffect(
    () => {
      draggableNodes.set(id2, {
        id: id2,
        key: key2,
        node,
        activatorNode,
        data: dataRef
      });
      return () => {
        const node2 = draggableNodes.get(id2);
        if (node2 && node2.key === key2) {
          draggableNodes.delete(id2);
        }
      };
    },
    [draggableNodes, id2]
  );
  const memoizedAttributes = F2(() => ({
    role,
    tabIndex,
    "aria-disabled": disabled,
    "aria-pressed": isDragging && role === defaultRole ? true : void 0,
    "aria-roledescription": roleDescription,
    "aria-describedby": ariaDescribedById.draggable
  }), [disabled, role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]);
  return {
    active,
    activatorEvent,
    activeNodeRect,
    attributes: memoizedAttributes,
    isDragging,
    listeners: disabled ? void 0 : listeners,
    node,
    over,
    setNodeRef,
    setActivatorNodeRef,
    transform
  };
}
function useDndContext() {
  return q2(PublicContext);
}
var ID_PREFIX$1 = "Droppable";
var defaultResizeObserverConfig = {
  timeout: 25
};
function useDroppable(_ref) {
  let {
    data: data2,
    disabled = false,
    id: id2,
    resizeObserverConfig
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX$1);
  const {
    active,
    dispatch,
    over,
    measureDroppableContainers
  } = q2(InternalContext);
  const previous = _2({
    disabled
  });
  const resizeObserverConnected = _2(false);
  const rect = _2(null);
  const callbackId = _2(null);
  const {
    disabled: resizeObserverDisabled,
    updateMeasurementsFor,
    timeout: resizeObserverTimeout
  } = {
    ...defaultResizeObserverConfig,
    ...resizeObserverConfig
  };
  const ids2 = useLatestValue(updateMeasurementsFor != null ? updateMeasurementsFor : id2);
  const handleResize = T2(
    () => {
      if (!resizeObserverConnected.current) {
        resizeObserverConnected.current = true;
        return;
      }
      if (callbackId.current != null) {
        clearTimeout(callbackId.current);
      }
      callbackId.current = setTimeout(() => {
        measureDroppableContainers(Array.isArray(ids2.current) ? ids2.current : [ids2.current]);
        callbackId.current = null;
      }, resizeObserverTimeout);
    },
    [resizeObserverTimeout]
  );
  const resizeObserver = useResizeObserver({
    callback: handleResize,
    disabled: resizeObserverDisabled || !active
  });
  const handleNodeChange = T2((newElement, previousElement) => {
    if (!resizeObserver) {
      return;
    }
    if (previousElement) {
      resizeObserver.unobserve(previousElement);
      resizeObserverConnected.current = false;
    }
    if (newElement) {
      resizeObserver.observe(newElement);
    }
  }, [resizeObserver]);
  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);
  const dataRef = useLatestValue(data2);
  p2(() => {
    if (!resizeObserver || !nodeRef.current) {
      return;
    }
    resizeObserver.disconnect();
    resizeObserverConnected.current = false;
    resizeObserver.observe(nodeRef.current);
  }, [nodeRef, resizeObserver]);
  useIsomorphicLayoutEffect(
    () => {
      dispatch({
        type: Action.RegisterDroppable,
        element: {
          id: id2,
          key: key2,
          disabled,
          node: nodeRef,
          rect,
          data: dataRef
        }
      });
      return () => dispatch({
        type: Action.UnregisterDroppable,
        key: key2,
        id: id2
      });
    },
    [id2]
  );
  p2(() => {
    if (disabled !== previous.current.disabled) {
      dispatch({
        type: Action.SetDroppableDisabled,
        id: id2,
        key: key2,
        disabled
      });
      previous.current.disabled = disabled;
    }
  }, [id2, key2, disabled, dispatch]);
  return {
    active,
    rect,
    isOver: (over == null ? void 0 : over.id) === id2,
    node: nodeRef,
    over,
    setNodeRef
  };
}
function AnimationManager(_ref) {
  let {
    animation,
    children
  } = _ref;
  const [clonedChildren, setClonedChildren] = h2(null);
  const [element, setElement] = h2(null);
  const previousChildren = usePrevious(children);
  if (!children && !clonedChildren && previousChildren) {
    setClonedChildren(previousChildren);
  }
  useIsomorphicLayoutEffect(() => {
    if (!element) {
      return;
    }
    const key2 = clonedChildren == null ? void 0 : clonedChildren.key;
    const id2 = clonedChildren == null ? void 0 : clonedChildren.props.id;
    if (key2 == null || id2 == null) {
      setClonedChildren(null);
      return;
    }
    Promise.resolve(animation(id2, element)).then(() => {
      setClonedChildren(null);
    });
  }, [animation, clonedChildren, element]);
  return Cn.createElement(Cn.Fragment, null, children, clonedChildren ? sn(clonedChildren, {
    ref: setElement
  }) : null);
}
var defaultTransform = {
  x: 0,
  y: 0,
  scaleX: 1,
  scaleY: 1
};
function NullifiedContextProvider(_ref) {
  let {
    children
  } = _ref;
  return Cn.createElement(InternalContext.Provider, {
    value: defaultInternalContext
  }, Cn.createElement(ActiveDraggableContext.Provider, {
    value: defaultTransform
  }, children));
}
var baseStyles = {
  position: "fixed",
  touchAction: "none"
};
var defaultTransition = (activatorEvent) => {
  const isKeyboardActivator = isKeyboardEvent(activatorEvent);
  return isKeyboardActivator ? "transform 250ms ease" : void 0;
};
var PositionedOverlay = /* @__PURE__ */ k3((_ref, ref2) => {
  let {
    as,
    activatorEvent,
    adjustScale: adjustScale2,
    children,
    className,
    rect,
    style,
    transform,
    transition = defaultTransition
  } = _ref;
  if (!rect) {
    return null;
  }
  const scaleAdjustedTransform = adjustScale2 ? transform : {
    ...transform,
    scaleX: 1,
    scaleY: 1
  };
  const styles2 = {
    ...baseStyles,
    width: rect.width,
    height: rect.height,
    top: rect.top,
    left: rect.left,
    transform: CSS.Transform.toString(scaleAdjustedTransform),
    transformOrigin: adjustScale2 && activatorEvent ? getRelativeTransformOrigin(activatorEvent, rect) : void 0,
    transition: typeof transition === "function" ? transition(activatorEvent) : transition,
    ...style
  };
  return Cn.createElement(as, {
    className,
    style: styles2,
    ref: ref2
  }, children);
});
var defaultDropAnimationSideEffects = (options) => (_ref) => {
  let {
    active,
    dragOverlay
  } = _ref;
  const originalStyles = {};
  const {
    styles: styles2,
    className
  } = options;
  if (styles2 != null && styles2.active) {
    for (const [key2, value] of Object.entries(styles2.active)) {
      if (value === void 0) {
        continue;
      }
      originalStyles[key2] = active.node.style.getPropertyValue(key2);
      active.node.style.setProperty(key2, value);
    }
  }
  if (styles2 != null && styles2.dragOverlay) {
    for (const [key2, value] of Object.entries(styles2.dragOverlay)) {
      if (value === void 0) {
        continue;
      }
      dragOverlay.node.style.setProperty(key2, value);
    }
  }
  if (className != null && className.active) {
    active.node.classList.add(className.active);
  }
  if (className != null && className.dragOverlay) {
    dragOverlay.node.classList.add(className.dragOverlay);
  }
  return function cleanup() {
    for (const [key2, value] of Object.entries(originalStyles)) {
      active.node.style.setProperty(key2, value);
    }
    if (className != null && className.active) {
      active.node.classList.remove(className.active);
    }
  };
};
var defaultKeyframeResolver = (_ref2) => {
  let {
    transform: {
      initial,
      final
    }
  } = _ref2;
  return [{
    transform: CSS.Transform.toString(initial)
  }, {
    transform: CSS.Transform.toString(final)
  }];
};
var defaultDropAnimationConfiguration = {
  duration: 250,
  easing: "ease",
  keyframes: defaultKeyframeResolver,
  sideEffects: /* @__PURE__ */ defaultDropAnimationSideEffects({
    styles: {
      active: {
        opacity: "0"
      }
    }
  })
};
function useDropAnimation(_ref3) {
  let {
    config,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  } = _ref3;
  return useEvent((id2, node) => {
    if (config === null) {
      return;
    }
    const activeDraggable = draggableNodes.get(id2);
    if (!activeDraggable) {
      return;
    }
    const activeNode = activeDraggable.node.current;
    if (!activeNode) {
      return;
    }
    const measurableNode = getMeasurableNode(node);
    if (!measurableNode) {
      return;
    }
    const {
      transform
    } = getWindow(node).getComputedStyle(node);
    const parsedTransform = parseTransform(transform);
    if (!parsedTransform) {
      return;
    }
    const animation = typeof config === "function" ? config : createDefaultDropAnimation(config);
    scrollIntoViewIfNeeded(activeNode, measuringConfiguration.draggable.measure);
    return animation({
      active: {
        id: id2,
        data: activeDraggable.data,
        node: activeNode,
        rect: measuringConfiguration.draggable.measure(activeNode)
      },
      draggableNodes,
      dragOverlay: {
        node,
        rect: measuringConfiguration.dragOverlay.measure(measurableNode)
      },
      droppableContainers,
      measuringConfiguration,
      transform: parsedTransform
    });
  });
}
function createDefaultDropAnimation(options) {
  const {
    duration,
    easing,
    sideEffects,
    keyframes
  } = {
    ...defaultDropAnimationConfiguration,
    ...options
  };
  return (_ref4) => {
    let {
      active,
      dragOverlay,
      transform,
      ...rest
    } = _ref4;
    if (!duration) {
      return;
    }
    const delta = {
      x: dragOverlay.rect.left - active.rect.left,
      y: dragOverlay.rect.top - active.rect.top
    };
    const scale = {
      scaleX: transform.scaleX !== 1 ? active.rect.width * transform.scaleX / dragOverlay.rect.width : 1,
      scaleY: transform.scaleY !== 1 ? active.rect.height * transform.scaleY / dragOverlay.rect.height : 1
    };
    const finalTransform = {
      x: transform.x - delta.x,
      y: transform.y - delta.y,
      ...scale
    };
    const animationKeyframes = keyframes({
      ...rest,
      active,
      dragOverlay,
      transform: {
        initial: transform,
        final: finalTransform
      }
    });
    const [firstKeyframe] = animationKeyframes;
    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];
    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {
      return;
    }
    const cleanup = sideEffects == null ? void 0 : sideEffects({
      active,
      dragOverlay,
      ...rest
    });
    const animation = dragOverlay.node.animate(animationKeyframes, {
      duration,
      easing,
      fill: "forwards"
    });
    return new Promise((resolve) => {
      animation.onfinish = () => {
        cleanup == null ? void 0 : cleanup();
        resolve();
      };
    });
  };
}
var key = 0;
function useKey(id2) {
  return F2(() => {
    if (id2 == null) {
      return;
    }
    key++;
    return key;
  }, [id2]);
}
var DragOverlay = /* @__PURE__ */ Cn.memo((_ref) => {
  let {
    adjustScale: adjustScale2 = false,
    children,
    dropAnimation: dropAnimationConfig,
    style,
    transition,
    modifiers,
    wrapperElement = "div",
    className,
    zIndex = 999
  } = _ref;
  const {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggableNodes,
    droppableContainers,
    dragOverlay,
    over,
    measuringConfiguration,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  } = useDndContext();
  const transform = q2(ActiveDraggableContext);
  const key2 = useKey(active == null ? void 0 : active.id);
  const modifiedTransform = applyModifiers(modifiers, {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect: dragOverlay.rect,
    over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    transform,
    windowRect
  });
  const initialRect = useInitialValue(activeNodeRect);
  const dropAnimation = useDropAnimation({
    config: dropAnimationConfig,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  });
  const ref2 = initialRect ? dragOverlay.setRef : void 0;
  return Cn.createElement(NullifiedContextProvider, null, Cn.createElement(AnimationManager, {
    animation: dropAnimation
  }, active && key2 ? Cn.createElement(PositionedOverlay, {
    key: key2,
    id: active.id,
    ref: ref2,
    as: wrapperElement,
    activatorEvent,
    adjustScale: adjustScale2,
    className,
    transition,
    rect: initialRect,
    style: {
      zIndex,
      ...style
    },
    transform: modifiedTransform
  }, children) : null));
});

// node_modules/@dnd-kit/sortable/dist/sortable.esm.js
function arrayMove(array, from, to) {
  const newArray = array.slice();
  newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);
  return newArray;
}
function getSortedRects(items, rects) {
  return items.reduce((accumulator, id2, index) => {
    const rect = rects.get(id2);
    if (rect) {
      accumulator[index] = rect;
    }
    return accumulator;
  }, Array(items.length));
}
function isValidIndex(index) {
  return index !== null && index >= 0;
}
function itemsEqual(a5, b4) {
  if (a5 === b4) {
    return true;
  }
  if (a5.length !== b4.length) {
    return false;
  }
  for (let i4 = 0; i4 < a5.length; i4++) {
    if (a5[i4] !== b4[i4]) {
      return false;
    }
  }
  return true;
}
function normalizeDisabled(disabled) {
  if (typeof disabled === "boolean") {
    return {
      draggable: disabled,
      droppable: disabled
    };
  }
  return disabled;
}
var defaultScale = {
  scaleX: 1,
  scaleY: 1
};
var horizontalListSortingStrategy = (_ref) => {
  var _rects$activeIndex;
  let {
    rects,
    activeNodeRect: fallbackActiveRect,
    activeIndex,
    overIndex,
    index
  } = _ref;
  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
  if (!activeNodeRect) {
    return null;
  }
  const itemGap = getItemGap(rects, index, activeIndex);
  if (index === activeIndex) {
    const newIndexRect = rects[overIndex];
    if (!newIndexRect) {
      return null;
    }
    return {
      x: activeIndex < overIndex ? newIndexRect.left + newIndexRect.width - (activeNodeRect.left + activeNodeRect.width) : newIndexRect.left - activeNodeRect.left,
      y: 0,
      ...defaultScale
    };
  }
  if (index > activeIndex && index <= overIndex) {
    return {
      x: -activeNodeRect.width - itemGap,
      y: 0,
      ...defaultScale
    };
  }
  if (index < activeIndex && index >= overIndex) {
    return {
      x: activeNodeRect.width + itemGap,
      y: 0,
      ...defaultScale
    };
  }
  return {
    x: 0,
    y: 0,
    ...defaultScale
  };
};
function getItemGap(rects, index, activeIndex) {
  const currentRect = rects[index];
  const previousRect = rects[index - 1];
  const nextRect = rects[index + 1];
  if (!currentRect || !previousRect && !nextRect) {
    return 0;
  }
  if (activeIndex < index) {
    return previousRect ? currentRect.left - (previousRect.left + previousRect.width) : nextRect.left - (currentRect.left + currentRect.width);
  }
  return nextRect ? nextRect.left - (currentRect.left + currentRect.width) : currentRect.left - (previousRect.left + previousRect.width);
}
var rectSortingStrategy = (_ref) => {
  let {
    rects,
    activeIndex,
    overIndex,
    index
  } = _ref;
  const newRects = arrayMove(rects, overIndex, activeIndex);
  const oldRect = rects[index];
  const newRect = newRects[index];
  if (!newRect || !oldRect) {
    return null;
  }
  return {
    x: newRect.left - oldRect.left,
    y: newRect.top - oldRect.top,
    scaleX: newRect.width / oldRect.width,
    scaleY: newRect.height / oldRect.height
  };
};
var defaultScale$1 = {
  scaleX: 1,
  scaleY: 1
};
var verticalListSortingStrategy = (_ref) => {
  var _rects$activeIndex;
  let {
    activeIndex,
    activeNodeRect: fallbackActiveRect,
    index,
    rects,
    overIndex
  } = _ref;
  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
  if (!activeNodeRect) {
    return null;
  }
  if (index === activeIndex) {
    const overIndexRect = rects[overIndex];
    if (!overIndexRect) {
      return null;
    }
    return {
      x: 0,
      y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,
      ...defaultScale$1
    };
  }
  const itemGap = getItemGap$1(rects, index, activeIndex);
  if (index > activeIndex && index <= overIndex) {
    return {
      x: 0,
      y: -activeNodeRect.height - itemGap,
      ...defaultScale$1
    };
  }
  if (index < activeIndex && index >= overIndex) {
    return {
      x: 0,
      y: activeNodeRect.height + itemGap,
      ...defaultScale$1
    };
  }
  return {
    x: 0,
    y: 0,
    ...defaultScale$1
  };
};
function getItemGap$1(clientRects, index, activeIndex) {
  const currentRect = clientRects[index];
  const previousRect = clientRects[index - 1];
  const nextRect = clientRects[index + 1];
  if (!currentRect) {
    return 0;
  }
  if (activeIndex < index) {
    return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;
  }
  return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;
}
var ID_PREFIX2 = "Sortable";
var Context = /* @__PURE__ */ Cn.createContext({
  activeIndex: -1,
  containerId: ID_PREFIX2,
  disableTransforms: false,
  items: [],
  overIndex: -1,
  useDragOverlay: false,
  sortedRects: [],
  strategy: rectSortingStrategy,
  disabled: {
    draggable: false,
    droppable: false
  }
});
function SortableContext(_ref) {
  let {
    children,
    id: id2,
    items: userDefinedItems,
    strategy = rectSortingStrategy,
    disabled: disabledProp = false
  } = _ref;
  const {
    active,
    dragOverlay,
    droppableRects,
    over,
    measureDroppableContainers
  } = useDndContext();
  const containerId = useUniqueId(ID_PREFIX2, id2);
  const useDragOverlay = Boolean(dragOverlay.rect !== null);
  const items = F2(() => userDefinedItems.map((item) => typeof item === "object" && "id" in item ? item.id : item), [userDefinedItems]);
  const isDragging = active != null;
  const activeIndex = active ? items.indexOf(active.id) : -1;
  const overIndex = over ? items.indexOf(over.id) : -1;
  const previousItemsRef = _2(items);
  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);
  const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;
  const disabled = normalizeDisabled(disabledProp);
  useIsomorphicLayoutEffect(() => {
    if (itemsHaveChanged && isDragging) {
      measureDroppableContainers(items);
    }
  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);
  p2(() => {
    previousItemsRef.current = items;
  }, [items]);
  const contextValue = F2(
    () => ({
      activeIndex,
      containerId,
      disabled,
      disableTransforms,
      items,
      overIndex,
      useDragOverlay,
      sortedRects: getSortedRects(items, droppableRects),
      strategy
    }),
    [activeIndex, containerId, disabled.draggable, disabled.droppable, disableTransforms, items, overIndex, droppableRects, useDragOverlay, strategy]
  );
  return Cn.createElement(Context.Provider, {
    value: contextValue
  }, children);
}
var defaultNewIndexGetter = (_ref) => {
  let {
    id: id2,
    items,
    activeIndex,
    overIndex
  } = _ref;
  return arrayMove(items, activeIndex, overIndex).indexOf(id2);
};
var defaultAnimateLayoutChanges = (_ref2) => {
  let {
    containerId,
    isSorting,
    wasDragging,
    index,
    items,
    newIndex,
    previousItems,
    previousContainerId,
    transition
  } = _ref2;
  if (!transition || !wasDragging) {
    return false;
  }
  if (previousItems !== items && index === newIndex) {
    return false;
  }
  if (isSorting) {
    return true;
  }
  return newIndex !== index && containerId === previousContainerId;
};
var defaultTransition2 = {
  duration: 200,
  easing: "ease"
};
var transitionProperty = "transform";
var disabledTransition = /* @__PURE__ */ CSS.Transition.toString({
  property: transitionProperty,
  duration: 0,
  easing: "linear"
});
var defaultAttributes = {
  roleDescription: "sortable"
};
function useDerivedTransform(_ref) {
  let {
    disabled,
    index,
    node,
    rect
  } = _ref;
  const [derivedTransform, setDerivedtransform] = h2(null);
  const previousIndex = _2(index);
  useIsomorphicLayoutEffect(() => {
    if (!disabled && index !== previousIndex.current && node.current) {
      const initial = rect.current;
      if (initial) {
        const current2 = getClientRect(node.current, {
          ignoreTransform: true
        });
        const delta = {
          x: initial.left - current2.left,
          y: initial.top - current2.top,
          scaleX: initial.width / current2.width,
          scaleY: initial.height / current2.height
        };
        if (delta.x || delta.y) {
          setDerivedtransform(delta);
        }
      }
    }
    if (index !== previousIndex.current) {
      previousIndex.current = index;
    }
  }, [disabled, index, node, rect]);
  p2(() => {
    if (derivedTransform) {
      setDerivedtransform(null);
    }
  }, [derivedTransform]);
  return derivedTransform;
}
function useSortable(_ref) {
  let {
    animateLayoutChanges: animateLayoutChanges2 = defaultAnimateLayoutChanges,
    attributes: userDefinedAttributes,
    disabled: localDisabled,
    data: customData,
    getNewIndex = defaultNewIndexGetter,
    id: id2,
    strategy: localStrategy,
    resizeObserverConfig,
    transition = defaultTransition2
  } = _ref;
  const {
    items,
    containerId,
    activeIndex,
    disabled: globalDisabled,
    disableTransforms,
    sortedRects,
    overIndex,
    useDragOverlay,
    strategy: globalStrategy
  } = q2(Context);
  const disabled = normalizeLocalDisabled(localDisabled, globalDisabled);
  const index = items.indexOf(id2);
  const data2 = F2(() => ({
    sortable: {
      containerId,
      index,
      items
    },
    ...customData
  }), [containerId, customData, index, items]);
  const itemsAfterCurrentSortable = F2(() => items.slice(items.indexOf(id2)), [items, id2]);
  const {
    rect,
    node,
    isOver,
    setNodeRef: setDroppableNodeRef
  } = useDroppable({
    id: id2,
    data: data2,
    disabled: disabled.droppable,
    resizeObserverConfig: {
      updateMeasurementsFor: itemsAfterCurrentSortable,
      ...resizeObserverConfig
    }
  });
  const {
    active,
    activatorEvent,
    activeNodeRect,
    attributes,
    setNodeRef: setDraggableNodeRef,
    listeners,
    isDragging,
    over,
    setActivatorNodeRef,
    transform
  } = useDraggable({
    id: id2,
    data: data2,
    attributes: {
      ...defaultAttributes,
      ...userDefinedAttributes
    },
    disabled: disabled.draggable
  });
  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);
  const isSorting = Boolean(active);
  const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);
  const shouldDisplaceDragSource = !useDragOverlay && isDragging;
  const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;
  const strategy = localStrategy != null ? localStrategy : globalStrategy;
  const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({
    rects: sortedRects,
    activeNodeRect,
    activeIndex,
    overIndex,
    index
  }) : null;
  const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({
    id: id2,
    items,
    activeIndex,
    overIndex
  }) : index;
  const activeId = active == null ? void 0 : active.id;
  const previous = _2({
    activeId,
    items,
    newIndex,
    containerId
  });
  const itemsHaveChanged = items !== previous.current.items;
  const shouldAnimateLayoutChanges = animateLayoutChanges2({
    active,
    containerId,
    isDragging,
    isSorting,
    id: id2,
    index,
    items,
    newIndex: previous.current.newIndex,
    previousItems: previous.current.items,
    previousContainerId: previous.current.containerId,
    transition,
    wasDragging: previous.current.activeId != null
  });
  const derivedTransform = useDerivedTransform({
    disabled: !shouldAnimateLayoutChanges,
    index,
    node,
    rect
  });
  p2(() => {
    if (isSorting && previous.current.newIndex !== newIndex) {
      previous.current.newIndex = newIndex;
    }
    if (containerId !== previous.current.containerId) {
      previous.current.containerId = containerId;
    }
    if (items !== previous.current.items) {
      previous.current.items = items;
    }
  }, [isSorting, newIndex, containerId, items]);
  p2(() => {
    if (activeId === previous.current.activeId) {
      return;
    }
    if (activeId && !previous.current.activeId) {
      previous.current.activeId = activeId;
      return;
    }
    const timeoutId = setTimeout(() => {
      previous.current.activeId = activeId;
    }, 50);
    return () => clearTimeout(timeoutId);
  }, [activeId]);
  return {
    active,
    activeIndex,
    attributes,
    data: data2,
    rect,
    index,
    newIndex,
    items,
    isOver,
    isSorting,
    isDragging,
    listeners,
    node,
    overIndex,
    over,
    setNodeRef,
    setActivatorNodeRef,
    setDroppableNodeRef,
    setDraggableNodeRef,
    transform: derivedTransform != null ? derivedTransform : finalTransform,
    transition: getTransition()
  };
  function getTransition() {
    if (derivedTransform || itemsHaveChanged && previous.current.newIndex === index) {
      return disabledTransition;
    }
    if (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent) || !transition) {
      return void 0;
    }
    if (isSorting || shouldAnimateLayoutChanges) {
      return CSS.Transition.toString({
        ...transition,
        property: transitionProperty
      });
    }
    return void 0;
  }
}
function normalizeLocalDisabled(localDisabled, globalDisabled) {
  var _localDisabled$dragga, _localDisabled$droppa;
  if (typeof localDisabled === "boolean") {
    return {
      draggable: localDisabled,
      droppable: false
    };
  }
  return {
    draggable: (_localDisabled$dragga = localDisabled == null ? void 0 : localDisabled.draggable) != null ? _localDisabled$dragga : globalDisabled.draggable,
    droppable: (_localDisabled$droppa = localDisabled == null ? void 0 : localDisabled.droppable) != null ? _localDisabled$droppa : globalDisabled.droppable
  };
}
function hasSortableData(entry) {
  if (!entry) {
    return false;
  }
  const data2 = entry.data.current;
  if (data2 && "sortable" in data2 && typeof data2.sortable === "object" && "containerId" in data2.sortable && "items" in data2.sortable && "index" in data2.sortable) {
    return true;
  }
  return false;
}
var directions = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];
var sortableKeyboardCoordinates = (event, _ref) => {
  let {
    context: {
      active,
      collisionRect,
      droppableRects,
      droppableContainers,
      over,
      scrollableAncestors
    }
  } = _ref;
  if (directions.includes(event.code)) {
    event.preventDefault();
    if (!active || !collisionRect) {
      return;
    }
    const filteredContainers = [];
    droppableContainers.getEnabled().forEach((entry) => {
      if (!entry || entry != null && entry.disabled) {
        return;
      }
      const rect = droppableRects.get(entry.id);
      if (!rect) {
        return;
      }
      switch (event.code) {
        case KeyboardCode.Down:
          if (collisionRect.top < rect.top) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Up:
          if (collisionRect.top > rect.top) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Left:
          if (collisionRect.left > rect.left) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Right:
          if (collisionRect.left < rect.left) {
            filteredContainers.push(entry);
          }
          break;
      }
    });
    const collisions = closestCorners({
      active,
      collisionRect,
      droppableRects,
      droppableContainers: filteredContainers,
      pointerCoordinates: null
    });
    let closestId = getFirstCollision(collisions, "id");
    if (closestId === (over == null ? void 0 : over.id) && collisions.length > 1) {
      closestId = collisions[1].id;
    }
    if (closestId != null) {
      const activeDroppable = droppableContainers.get(active.id);
      const newDroppable = droppableContainers.get(closestId);
      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;
      const newNode = newDroppable == null ? void 0 : newDroppable.node.current;
      if (newNode && newRect && activeDroppable && newDroppable) {
        const newScrollAncestors = getScrollableAncestors(newNode);
        const hasDifferentScrollAncestors = newScrollAncestors.some((element, index) => scrollableAncestors[index] !== element);
        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);
        const isAfterActive = isAfter2(activeDroppable, newDroppable);
        const offset2 = hasDifferentScrollAncestors || !hasSameContainer ? {
          x: 0,
          y: 0
        } : {
          x: isAfterActive ? collisionRect.width - newRect.width : 0,
          y: isAfterActive ? collisionRect.height - newRect.height : 0
        };
        const rectCoordinates = {
          x: newRect.left,
          y: newRect.top
        };
        const newCoordinates = offset2.x && offset2.y ? rectCoordinates : subtract(rectCoordinates, offset2);
        return newCoordinates;
      }
    }
  }
  return void 0;
};
function isSameContainer(a5, b4) {
  if (!hasSortableData(a5) || !hasSortableData(b4)) {
    return false;
  }
  return a5.data.current.sortable.containerId === b4.data.current.sortable.containerId;
}
function isAfter2(a5, b4) {
  if (!hasSortableData(a5) || !hasSortableData(b4)) {
    return false;
  }
  if (!isSameContainer(a5, b4)) {
    return false;
  }
  return a5.data.current.sortable.index < b4.data.current.sortable.index;
}

// src/core/utils/parser.tsx
var parseSortStrat = (str) => {
  const [a5, b4] = str.split("_");
  return { field: a5, asc: b4 == "asc", group: true };
};
var parseLinkDisplayString = (string) => {
  return pathToString(parseLinkString(string));
};

// src/core/utils/tree.ts
var nodeIsAncestorOfTarget = (path, target) => {
  return target.startsWith(path);
  return false;
};
var compareByFieldDeep = (field, dir) => (_a2, _b2) => {
  const a5 = dir ? _a2 : _b2;
  const b4 = dir ? _b2 : _a2;
  if (field(a5) < field(b4)) {
    return -1;
  }
  if (field(a5) > field(b4)) {
    return 1;
  }
  return 0;
};
var compareByField = (field, dir) => (_a2, _b2) => {
  const a5 = dir ? _a2 : _b2;
  const b4 = dir ? _b2 : _a2;
  if (a5[field] < b4[field]) {
    return -1;
  }
  if (a5[field] > b4[field]) {
    return 1;
  }
  return 0;
};
var compareByFieldCaseInsensitive = (field, dir) => (_a2, _b2) => {
  var _a3, _b3, _c2, _d2;
  const a5 = dir ? _a2 : _b2;
  const b4 = dir ? _b2 : _a2;
  if (((_a3 = a5[field]) == null ? void 0 : _a3.toLowerCase()) < ((_b3 = b4[field]) == null ? void 0 : _b3.toLowerCase())) {
    return -1;
  }
  if (((_c2 = a5[field]) == null ? void 0 : _c2.toLowerCase()) > ((_d2 = b4[field]) == null ? void 0 : _d2.toLowerCase())) {
    return 1;
  }
  return 0;
};

// src/core/utils/uri.ts
var movePath = (path, newParent) => {
  const parts = path.split("/");
  const newPath = newParent + "/" + parts[parts.length - 1];
  return newPath;
};
var renamePathWithExtension = (path, newName) => {
  const dir = path.substring(0, path.lastIndexOf("/"));
  const ext = path.substring(path.lastIndexOf("."));
  return dir.length > 0 ? `${dir}/${newName}${ext}` : `${newName}${ext}`;
};

// src/core/superstate/utils/path.ts
var renamePathByName = async (superstate, oldPath, newName) => {
  if (superstate.spacesIndex.has(oldPath)) {
    const spaceState = superstate.spacesIndex.get(oldPath);
    if (spaceState.type == "tag") {
      return renameTag(superstate, spaceState.name, newName);
    }
    return superstate.spaceManager.renameSpace(oldPath, renamePathWithExtension(oldPath, newName));
  } else {
    return superstate.spaceManager.renamePath(oldPath, renamePathWithExtension(oldPath, newName));
  }
};
var hidePath = async (superstate, path) => {
  superstate.settings.hiddenFiles = uniq([
    ...superstate.settings.hiddenFiles,
    path
  ]);
  superstate.saveSettings();
  superstate.reloadPath(path, true).then((f4) => superstate.dispatchEvent("superstateUpdated", null));
};
var hidePaths = async (superstate, paths) => {
  superstate.settings.hiddenFiles = uniq([
    ...superstate.settings.hiddenFiles,
    ...paths
  ]);
  superstate.saveSettings();
  Promise.all(paths.map((path) => {
    superstate.reloadPath(path, true);
  })).then((f4) => superstate.dispatchEvent("superstateUpdated", null));
};
var deletePath = async (superstate, path) => {
  superstate.spaceManager.deletePath(path);
  superstate.onPathDeleted(path);
};
var movePathToSpace = async (superstate, oldPath, newParent) => {
  return superstate.spaceManager.renamePath(oldPath, movePath(oldPath, newParent));
};
var convertPathToSpace = async (superstate, path, open) => {
  var _a2, _b2;
  const pathState = superstate.pathsIndex.get(path);
  if (!pathState) {
    return;
  }
  const newPath = pathState.parent + "/" + pathState.name;
  await superstate.spaceManager.createSpace(pathState.name, pathState.parent, null);
  await superstate.spaceManager.renamePath(path, newPath + "/" + ((_b2 = (_a2 = pathState.metadata) == null ? void 0 : _a2.file) == null ? void 0 : _b2.name));
  if (open) {
    superstate.ui.openPath(newPath, false);
  }
};

// src/core/superstate/utils/tags.ts
var deleteTagFromPath = (superstate, path, tag) => {
  if (superstate.spacesIndex.has(path)) {
    return superstate.spaceManager.deleteTag(superstate.spacesIndex.get(path).defPath, tag);
  }
  return superstate.spaceManager.deleteTag(path, tag);
};
var addTagToPath = (superstate, path, tag) => {
  if (superstate.spacesIndex.has(path)) {
    return superstate.spaceManager.addTag(superstate.spacesIndex.get(path).defPath, tag);
  }
  return superstate.spaceManager.addTag(path, tag);
};
var addTag = (superstate, tag) => {
  return superstate.spaceManager.createSpace(ensureTag(tag), superstate.settings.spacesFolder, null);
};

// src/core/superstate/utils/spaces.ts
var spaceContextsKey = (settings) => settings.fmKeyContexts;
var spaceFilterKey = (settings) => settings.fmKeyFilter;
var spaceLinksKey = (settings) => settings.fmKeyLinks;
var spaceSortKey = (settings) => settings.fmKeySort;
var FMSpaceKeys = (settings) => [spaceContextsKey(settings), spaceFilterKey(settings), spaceLinksKey(settings), spaceSortKey(settings)];
var parseSpaceSort = (value) => {
  var _a2;
  return {
    field: ensureString((_a2 = value == null ? void 0 : value["field"]) != null ? _a2 : "rank"),
    asc: ensureBoolean(value == null ? void 0 : value["asc"]),
    group: ensureBoolean(value == null ? void 0 : value["group"])
  };
};
var parseSpaceFilterGroupFilter = (value) => {
  return {
    type: ensureStringValueFromSet(value["type"], ["frontmatter", "fileprop", "filemeta"], "frontmatter"),
    fType: ensureString(value["fType"]),
    field: ensureString(value["field"]),
    fn: ensureString(value["fn"]),
    value: ensureString(value["value"])
  };
};
var parseSpaceFilterGroup = (value) => {
  return {
    type: ensureStringValueFromSet(value["type"], ["any", "all"], "any"),
    trueFalse: value["truefalse"] ? true : false,
    filters: ensureArray(value["filters"]).map((f4) => parseSpaceFilterGroupFilter(f4))
  };
};
var parseSpaceMetadata = (metadata, settings) => {
  return { sort: parseSpaceSort(metadata[spaceSortKey(settings)]), contexts: ensureArray(metadata[spaceContextsKey(settings)]), links: ensureArray(metadata[spaceLinksKey(settings)]), filters: ensureArray(metadata[spaceFilterKey(settings)]).map((f4) => parseSpaceFilterGroup(f4)) };
};
var spaceToTreeNode = (path, collapsed, sortable, depth, parentId, parentPath, childrenCount) => {
  return {
    id: parentId ? parentId + "/" + path.path : path.path,
    parentId,
    depth,
    index: 0,
    space: parentPath,
    path: path.path,
    item: path,
    rank: path == null ? void 0 : path.rank,
    collapsed,
    sortable,
    childrenCount,
    type: "space"
  };
};
var pathStateToTreeNode = (superstate, item, space, path, depth, i4, collapsed, sortable, childrenCount, parentId) => ({
  item,
  space,
  id: parentId + "/" + item.path,
  parentId,
  depth,
  path,
  index: i4,
  collapsed,
  sortable,
  childrenCount,
  rank: item.rank,
  type: "file"
});
var spaceRowHeight = (superstate) => {
  return superstate.ui.getScreenType() == "mobile" ? 40 : superstate.settings.spaceRowHeight;
};
var spaceSortFn = (sortStrategy) => (a5, b4) => {
  if (sortStrategy.field == "rank") {
    return a5.rank - b4.rank;
  }
  const sortFns = [];
  if (sortStrategy.group) {
    sortFns.push(compareByField("type", false));
  }
  if (sortStrategy.field == "name") {
    sortFns.push(compareByFieldCaseInsensitive(sortStrategy.field, sortStrategy.asc));
  } else {
    const fieldFunc = (obj) => {
      var _a2, _b2, _c2;
      return (_c2 = (_b2 = (_a2 = obj == null ? void 0 : obj.metadata) == null ? void 0 : _a2.file) == null ? void 0 : _b2.stat) == null ? void 0 : _c2[sortStrategy.field];
    };
    sortFns.push(compareByFieldDeep(fieldFunc, sortStrategy.asc));
  }
  return sortFns.reduce((p3, c4) => {
    return p3 == 0 ? c4(a5, b4) : p3;
  }, 0);
};
var updatePathRankInSpace = async (superstate, path, rank, space) => {
  const spaceState = superstate.spacesIndex.get(space);
  if (!spaceState)
    return;
  if (spaceState.type == "default")
    return;
  const fixedRank = rank;
  superstate.addToContextStateQueue(() => reorderPathsInContext(superstate.spaceManager, [path], fixedRank, spaceState.space).then((f4) => {
    return superstate.reloadContext(spaceState.space);
  }).then((f4) => {
    const promises = [...superstate.spacesMap.getInverse(spaceState.path)].map((f5) => superstate.reloadPath(f5));
    return Promise.all(promises);
  }).then((f4) => superstate.dispatchEvent("spaceStateUpdated", { path: spaceState.path })));
};
var movePathToNewSpaceAtIndex = async (superstate, item, newParent, index, copy) => {
  if (!item)
    return;
  const currentPathState = superstate.pathsIndex.get(item.path);
  if (!currentPathState)
    return;
  const newPath = newParent == "/" ? currentPathState.name : newParent + "/" + currentPathState.name;
  if (await superstate.spaceManager.pathExists(newPath)) {
    superstate.ui.notify(i18n_default.notice.fileExists);
    return;
  }
  if (copy) {
    await superstate.spaceManager.copyPath(item.path, newParent);
  } else {
    await superstate.spaceManager.renamePath(item.path, movePath(item.path, newParent));
  }
  updatePathRankInSpace(superstate, newPath, index, newParent);
};
var createSpace = async (superstate, path, newSpace) => {
  const spaces = superstate.allSpaces();
  const spaceInfo = fileSystemSpaceInfoFromFolder(superstate.spaceManager, path);
  let newSpaceCache;
  if (spaces.find((f4) => f4.path == spaceInfo.path)) {
    if (newSpace) {
      newSpaceCache = await saveSpaceCache(superstate, spaceInfo, newSpace);
    } else {
      return;
    }
  } else {
    await superstate.spaceManager.createSpace(null, spaceInfo.path, newSpace);
    if (newSpace) {
      await saveSpaceCache(superstate, spaceInfo, newSpace);
      newSpaceCache = await superstate.reloadSpace(spaceInfo, newSpace);
    } else {
      newSpaceCache = await superstate.reloadSpace(spaceInfo);
    }
  }
  superstate.initializePaths();
  return newSpaceCache;
};
var saveSpaceMetadataValue = async (superstate, space, key2, value) => {
  superstate.spaceManager.saveSpace(space, (metadata) => ({ ...metadata, [key2]: value }));
  const spaceCache = superstate.spacesIndex.get(space);
  await superstate.updateSpaceMetadata(space, { ...spaceCache.metadata, [key2]: value });
};
var saveSpaceProperties = async (superstate, space, properties2) => {
  superstate.spaceManager.saveSpace(space, (metadata) => metadata, properties2);
};
var saveSpaceCache = async (superstate, spaceInfo, metadata) => {
  await superstate.spaceManager.saveSpace(spaceInfo.path, (oldMetadata) => ({ ...oldMetadata, ...metadata }));
  return superstate.updateSpaceMetadata(spaceInfo.path, metadata);
};
var addPathToSpaceAtIndex = async (superstate, space, path, rank) => {
  if (space.type == "tag") {
    return addTagToPath(superstate, path, space.name);
  } else {
    return pinPathToSpaceAtIndex(superstate, space, path, rank);
  }
};
var pinPathToSpaceAtIndex = async (superstate, space, path, rank) => {
  var _a2;
  if (path == space.path) {
    superstate.ui.notify("Pinning space to itself not currently allowed");
    return;
  }
  const spaceExists = (_a2 = ensureArray(space.metadata.links)) != null ? _a2 : [];
  const pathExists = spaceExists.find((f4) => f4 == path);
  if (!pathExists) {
    spaceExists.push(path);
  }
  await saveSpaceCache(superstate, space.space, { ...space.metadata, links: spaceExists });
  await superstate.reloadPath(path, true).then((f4) => superstate.dispatchEvent("pathStateUpdated", { path }));
  updatePathRankInSpace(superstate, path, rank, space.path);
};
var removeSpace = async (superstate, space) => {
  const spaceCache = superstate.spacesIndex.get(space);
  if (!spaceCache)
    return;
  if (spaceCache.type == "tag") {
    superstate.onTagDeleted(spaceCache.name);
  } else if (spaceCache.type == "folder") {
    await deletePath(superstate, spaceCache.path);
  }
};
var updateSpaceSort = (superstate, path, sort) => {
  const space = superstate.spacesIndex.get(path);
  if (space)
    saveSpaceCache(superstate, space.space, {
      ...space.metadata,
      sort
    });
};
var toggleWaypoint = (superstate, spacePath, remove, rank) => {
  const settings = superstate.settings;
  if (remove) {
    settings.waypoints = settings.waypoints.filter((f4) => f4 != spacePath);
  } else if (settings.waypoints.some((f4) => f4 == spacePath)) {
    const currIndex = settings.waypoints.findIndex((f4) => f4 == spacePath);
    settings.waypoints = arrayMove(settings.waypoints, currIndex, rank);
  } else {
    settings.waypoints = insert(settings.waypoints, rank, spacePath);
  }
  superstate.saveSettings();
};
var removePathsFromSpace = async (superstate, spacePath, paths) => {
  const space = superstate.spacesIndex.get(spacePath);
  if (!space)
    return;
  if (space.type == "default") {
    if (space.path == "spaces://$waypoints") {
      toggleWaypoint(superstate, paths[0], true);
      return;
    }
  }
  if (space.type == "tag") {
    paths.forEach((path) => deleteTagFromPath(superstate, path, space.name));
  } else if (space.type == "folder" || space.type == "vault") {
    await saveSpaceMetadataValue(superstate, space.path, "links", space.metadata.links.filter((f4) => !paths.some((g4) => g4 == f4)));
    paths.map((f4) => {
      superstate.reloadPath(f4, true).then((g4) => superstate.dispatchEvent("pathStateUpdated", { path: f4 }));
    });
  }
};
var newPathInSpace = async (superstate, space, type, name, dontOpen) => {
  let newPath;
  if (space.type == "tag") {
    newPath = await superstate.spaceManager.createItemAtPath(
      "/",
      type,
      name
    );
    await superstate.spaceManager.addTag(newPath, space.name);
  } else {
    newPath = await superstate.spaceManager.createItemAtPath(
      space.path,
      type,
      name
    );
  }
  if (!dontOpen) {
    superstate.ui.openPath(newPath, false);
  }
};
var saveLabel = (superstate, path, label, value) => {
  superstate.spaceManager.saveLabel(path, label, value);
};
var saveProperties = (superstate, path, properties2) => {
  if (superstate.spacesIndex.has(path)) {
    saveSpaceProperties(superstate, path, properties2);
  }
  superstate.spaceManager.saveProperties(path, properties2);
};

// src/core/types/indexMap.ts
var _IndexMap = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map();
    this.invMap = /* @__PURE__ */ new Map();
  }
  get(key2) {
    const result = this.map.get(key2);
    if (result) {
      return new Set(result);
    } else {
      return /* @__PURE__ */ new Set();
    }
  }
  getInverse(value) {
    return this.invMap.get(value) || _IndexMap.EMPTY_SET;
  }
  set(key2, values) {
    var _a2, _b2;
    if (!values.size) {
      this.delete(key2);
      return this;
    }
    const oldValues = this.map.get(key2);
    if (oldValues) {
      for (const value of oldValues) {
        if (!values.has(key2))
          (_a2 = this.invMap.get(value)) == null ? void 0 : _a2.delete(key2);
      }
    }
    this.map.set(key2, values);
    for (const value of values) {
      if (!this.invMap.has(value))
        this.invMap.set(value, /* @__PURE__ */ new Set([key2]));
      else
        (_b2 = this.invMap.get(value)) == null ? void 0 : _b2.add(key2);
    }
    return this;
  }
  setInverse(key2, values) {
    var _a2, _b2;
    if (!values.size) {
      this.deleteInverse(key2);
      return this;
    }
    const oldValues = this.invMap.get(key2);
    if (oldValues) {
      for (const value of oldValues) {
        if (!values.has(key2))
          (_a2 = this.map.get(value)) == null ? void 0 : _a2.delete(key2);
      }
    }
    this.invMap.set(key2, values);
    for (const value of values) {
      if (!this.map.has(value))
        this.map.set(value, /* @__PURE__ */ new Set([key2]));
      else
        (_b2 = this.map.get(value)) == null ? void 0 : _b2.add(key2);
    }
    return this;
  }
  delete(key2) {
    var _a2;
    const oldValues = this.map.get(key2);
    if (!oldValues)
      return false;
    this.map.delete(key2);
    for (const value of oldValues) {
      (_a2 = this.invMap.get(value)) == null ? void 0 : _a2.delete(key2);
    }
    return true;
  }
  deleteInverse(key2) {
    var _a2;
    const oldValues = this.invMap.get(key2);
    if (!oldValues)
      return false;
    this.invMap.delete(key2);
    for (const value of oldValues) {
      (_a2 = this.map.get(value)) == null ? void 0 : _a2.delete(key2);
    }
    return true;
  }
  rename(oldKey, newKey) {
    const oldValues = this.map.get(oldKey);
    if (!oldValues)
      return false;
    this.delete(oldKey);
    this.set(newKey, oldValues);
    return true;
  }
  renameInverse(oldKey, newKey) {
    const oldValues = this.invMap.get(oldKey);
    if (!oldValues)
      return false;
    this.deleteInverse(oldKey);
    this.setInverse(newKey, oldValues);
    return true;
  }
  clear() {
    this.map.clear();
    this.invMap.clear();
  }
};
var IndexMap = _IndexMap;
IndexMap.EMPTY_SET = Object.freeze(/* @__PURE__ */ new Set());

// src/core/types/space.ts
var FMMetadataKeys = (settings) => [settings.fmKeyBanner, settings.fmKeySticker, settings.fmKeyColor];
var waypointsSpace = {
  name: i18n_default.menu.waypoints,
  path: "spaces://$waypoints",
  space: null,
  type: "default"
};
var tagsSpace = {
  name: i18n_default.menu.tags,
  path: "spaces://$tags",
  space: null,
  type: "default"
};
var waypointsPath = {
  name: i18n_default.menu.waypoints,
  displayName: i18n_default.menu.waypoints,
  path: "spaces://$waypoints",
  label: {
    name: i18n_default.menu.waypoints,
    sticker: "lucide//tags",
    color: ""
  },
  type: "default"
};
var tagsPath = {
  name: i18n_default.menu.tags,
  displayName: i18n_default.menu.tags,
  path: "spaces://$tags",
  label: {
    name: i18n_default.menu.tags,
    sticker: "lucide//tags",
    color: ""
  },
  type: "default"
};
var homePath = {
  name: i18n_default.menu.home,
  displayName: i18n_default.menu.home,
  path: "Spaces/Home",
  label: {
    name: i18n_default.menu.home,
    sticker: "ui//mk-ui-home",
    color: ""
  },
  type: "default"
};
var vaultPath = {
  name: i18n_default.menu.vault,
  displayName: i18n_default.menu.vault,
  path: "/",
  label: {
    name: i18n_default.menu.vault,
    sticker: "lucide//vault",
    color: ""
  },
  type: "default"
};

// src/core/utils/superstate/parser.ts
var parsePathState = (cache) => {
  return safelyParseJSON(cache);
};

// src/core/utils/superstate/serializer.ts
var serializePathState = (pathState) => {
  return JSON.stringify(pathState);
};
var stringifyJob = (job) => `${job.type}:${job.path}`;

// src/core/superstate/superstate.ts
var import_lodash2 = __toESM(require_lodash());

// inline-worker:__inline-worker
function inlineWorker(scriptText) {
  let blob = new Blob([scriptText], { type: "text/javascript" });
  let url = URL.createObjectURL(blob);
  let worker = new Worker(url, { "name": "Superstate Worker" });
  URL.revokeObjectURL(url);
  return worker;
}

// src/core/superstate/workers/entry.worker.ts
function Worker2() {
  return inlineWorker(`var ux=Object.create;var ea=Object.defineProperty,lx=Object.defineProperties,cx=Object.getOwnPropertyDescriptor,fx=Object.getOwnPropertyDescriptors,px=Object.getOwnPropertyNames,rl=Object.getOwnPropertySymbols,hx=Object.getPrototypeOf,sl=Object.prototype.hasOwnProperty,dx=Object.prototype.propertyIsEnumerable;var nl=(e,i,s)=>i in e?ea(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s,ee=(e,i)=>{for(var s in i||(i={}))sl.call(i,s)&&nl(e,s,i[s]);if(rl)for(var s of rl(i))dx.call(i,s)&&nl(e,s,i[s]);return e},ae=(e,i)=>lx(e,fx(i));var mx=(e,i)=>()=>(i||e((i={exports:{}}).exports,i),i.exports);var gx=(e,i,s,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let u of px(i))!sl.call(e,u)&&u!==s&&ea(e,u,{get:()=>i[u],enumerable:!(a=cx(i,u))||a.enumerable});return e};var xx=(e,i,s)=>(s=e!=null?ux(hx(e)):{},gx(i||!e||!e.__esModule?ea(s,"default",{value:e,enumerable:!0}):s,e));var al=mx((Ri,lr)=>{(function(){var e,i="4.17.21",s=200,a="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",u="Expected a function",h="Invalid \`variable\` option passed into \`_.template\`",g="__lodash_hash_undefined__",b=500,w="__lodash_placeholder__",T=1,P=2,W=4,X=1,oe=2,M=1,$=2,ke=4,ce=8,He=16,_e=32,Ge=64,Te=128,Oe=256,De=512,he=30,kt="...",Tt=800,It=16,qi=1,xr=2,yr=3,bt=1/0,ft=9007199254740991,vr=17976931348623157e292,ni=0/0,ze=4294967295,br=ze-1,wr=ze>>>1,Sr=[["ary",Te],["bind",M],["bindKey",$],["curry",ce],["curryRight",He],["flip",De],["partial",_e],["partialRight",Ge],["rearg",Oe]],At="[object Arguments]",ne="[object Array]",Ke="[object AsyncFunction]",Me="[object Boolean]",pt="[object Date]",_r="[object DOMException]",si="[object Error]",vi="[object Function]",Cr="[object GeneratorFunction]",Ie="[object Map]",Hi="[object Number]",Cc="[object Null]",Et="[object Object]",Ta="[object Promise]",kc="[object Proxy]",Gi="[object RegExp]",ht="[object Set]",zi="[object String]",kr="[object Symbol]",Tc="[object Undefined]",Ki="[object WeakMap]",Ic="[object WeakSet]",Yi="[object ArrayBuffer]",bi="[object DataView]",Ln="[object Float32Array]",Rn="[object Float64Array]",On="[object Int8Array]",Dn="[object Int16Array]",Mn="[object Int32Array]",Bn="[object Uint8Array]",Vn="[object Uint8ClampedArray]",Wn="[object Uint16Array]",Un="[object Uint32Array]",Ac=/\\b__p \\+= '';/g,Ec=/\\b(__p \\+=) '' \\+/g,Pc=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,Ia=/&(?:amp|lt|gt|quot|#39);/g,Aa=/[&<>"']/g,Fc=RegExp(Ia.source),Nc=RegExp(Aa.source),Lc=/<%-([\\s\\S]+?)%>/g,Rc=/<%([\\s\\S]+?)%>/g,Ea=/<%=([\\s\\S]+?)%>/g,Oc=/\\.|\\[(?:[^[\\]]*|(["'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,Dc=/^\\w*$/,Mc=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,qn=/[\\\\^$.*+?()[\\]{}|]/g,Bc=RegExp(qn.source),Hn=/^\\s+/,Vc=/\\s/,Wc=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Uc=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,qc=/,? & /,Hc=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Gc=/[()=,{}\\[\\]\\/\\s]/,zc=/\\\\(\\\\)?/g,Kc=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Pa=/\\w*$/,Yc=/^[-+]0x[0-9a-f]+$/i,Qc=/^0b[01]+$/i,Zc=/^\\[object .+?Constructor\\]$/,Jc=/^0o[0-7]+$/i,Xc=/^(?:0|[1-9]\\d*)$/,$c=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Tr=/($^)/,jc=/['\\n\\r\\u2028\\u2029\\\\]/g,Ir="\\\\ud800-\\\\udfff",ef="\\\\u0300-\\\\u036f",tf="\\\\ufe20-\\\\ufe2f",rf="\\\\u20d0-\\\\u20ff",Fa=ef+tf+rf,Na="\\\\u2700-\\\\u27bf",La="a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff",nf="\\\\xac\\\\xb1\\\\xd7\\\\xf7",sf="\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf",af="\\\\u2000-\\\\u206f",of=" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000",Ra="A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde",Oa="\\\\ufe0e\\\\ufe0f",Da=nf+sf+af+of,Gn="['\\u2019]",uf="["+Ir+"]",Ma="["+Da+"]",Ar="["+Fa+"]",Ba="\\\\d+",lf="["+Na+"]",Va="["+La+"]",Wa="[^"+Ir+Da+Ba+Na+La+Ra+"]",zn="\\\\ud83c[\\\\udffb-\\\\udfff]",cf="(?:"+Ar+"|"+zn+")",Ua="[^"+Ir+"]",Kn="(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}",Yn="[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]",wi="["+Ra+"]",qa="\\\\u200d",Ha="(?:"+Va+"|"+Wa+")",ff="(?:"+wi+"|"+Wa+")",Ga="(?:"+Gn+"(?:d|ll|m|re|s|t|ve))?",za="(?:"+Gn+"(?:D|LL|M|RE|S|T|VE))?",Ka=cf+"?",Ya="["+Oa+"]?",pf="(?:"+qa+"(?:"+[Ua,Kn,Yn].join("|")+")"+Ya+Ka+")*",hf="\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])",df="\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])",Qa=Ya+Ka+pf,mf="(?:"+[lf,Kn,Yn].join("|")+")"+Qa,gf="(?:"+[Ua+Ar+"?",Ar,Kn,Yn,uf].join("|")+")",xf=RegExp(Gn,"g"),yf=RegExp(Ar,"g"),Qn=RegExp(zn+"(?="+zn+")|"+gf+Qa,"g"),vf=RegExp([wi+"?"+Va+"+"+Ga+"(?="+[Ma,wi,"$"].join("|")+")",ff+"+"+za+"(?="+[Ma,wi+Ha,"$"].join("|")+")",wi+"?"+Ha+"+"+Ga,wi+"+"+za,df,hf,Ba,mf].join("|"),"g"),bf=RegExp("["+qa+Ir+Fa+Oa+"]"),wf=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Sf=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],_f=-1,le={};le[Ln]=le[Rn]=le[On]=le[Dn]=le[Mn]=le[Bn]=le[Vn]=le[Wn]=le[Un]=!0,le[At]=le[ne]=le[Yi]=le[Me]=le[bi]=le[pt]=le[si]=le[vi]=le[Ie]=le[Hi]=le[Et]=le[Gi]=le[ht]=le[zi]=le[Ki]=!1;var ue={};ue[At]=ue[ne]=ue[Yi]=ue[bi]=ue[Me]=ue[pt]=ue[Ln]=ue[Rn]=ue[On]=ue[Dn]=ue[Mn]=ue[Ie]=ue[Hi]=ue[Et]=ue[Gi]=ue[ht]=ue[zi]=ue[kr]=ue[Bn]=ue[Vn]=ue[Wn]=ue[Un]=!0,ue[si]=ue[vi]=ue[Ki]=!1;var Cf={\\u00C0:"A",\\u00C1:"A",\\u00C2:"A",\\u00C3:"A",\\u00C4:"A",\\u00C5:"A",\\u00E0:"a",\\u00E1:"a",\\u00E2:"a",\\u00E3:"a",\\u00E4:"a",\\u00E5:"a",\\u00C7:"C",\\u00E7:"c",\\u00D0:"D",\\u00F0:"d",\\u00C8:"E",\\u00C9:"E",\\u00CA:"E",\\u00CB:"E",\\u00E8:"e",\\u00E9:"e",\\u00EA:"e",\\u00EB:"e",\\u00CC:"I",\\u00CD:"I",\\u00CE:"I",\\u00CF:"I",\\u00EC:"i",\\u00ED:"i",\\u00EE:"i",\\u00EF:"i",\\u00D1:"N",\\u00F1:"n",\\u00D2:"O",\\u00D3:"O",\\u00D4:"O",\\u00D5:"O",\\u00D6:"O",\\u00D8:"O",\\u00F2:"o",\\u00F3:"o",\\u00F4:"o",\\u00F5:"o",\\u00F6:"o",\\u00F8:"o",\\u00D9:"U",\\u00DA:"U",\\u00DB:"U",\\u00DC:"U",\\u00F9:"u",\\u00FA:"u",\\u00FB:"u",\\u00FC:"u",\\u00DD:"Y",\\u00FD:"y",\\u00FF:"y",\\u00C6:"Ae",\\u00E6:"ae",\\u00DE:"Th",\\u00FE:"th",\\u00DF:"ss",\\u0100:"A",\\u0102:"A",\\u0104:"A",\\u0101:"a",\\u0103:"a",\\u0105:"a",\\u0106:"C",\\u0108:"C",\\u010A:"C",\\u010C:"C",\\u0107:"c",\\u0109:"c",\\u010B:"c",\\u010D:"c",\\u010E:"D",\\u0110:"D",\\u010F:"d",\\u0111:"d",\\u0112:"E",\\u0114:"E",\\u0116:"E",\\u0118:"E",\\u011A:"E",\\u0113:"e",\\u0115:"e",\\u0117:"e",\\u0119:"e",\\u011B:"e",\\u011C:"G",\\u011E:"G",\\u0120:"G",\\u0122:"G",\\u011D:"g",\\u011F:"g",\\u0121:"g",\\u0123:"g",\\u0124:"H",\\u0126:"H",\\u0125:"h",\\u0127:"h",\\u0128:"I",\\u012A:"I",\\u012C:"I",\\u012E:"I",\\u0130:"I",\\u0129:"i",\\u012B:"i",\\u012D:"i",\\u012F:"i",\\u0131:"i",\\u0134:"J",\\u0135:"j",\\u0136:"K",\\u0137:"k",\\u0138:"k",\\u0139:"L",\\u013B:"L",\\u013D:"L",\\u013F:"L",\\u0141:"L",\\u013A:"l",\\u013C:"l",\\u013E:"l",\\u0140:"l",\\u0142:"l",\\u0143:"N",\\u0145:"N",\\u0147:"N",\\u014A:"N",\\u0144:"n",\\u0146:"n",\\u0148:"n",\\u014B:"n",\\u014C:"O",\\u014E:"O",\\u0150:"O",\\u014D:"o",\\u014F:"o",\\u0151:"o",\\u0154:"R",\\u0156:"R",\\u0158:"R",\\u0155:"r",\\u0157:"r",\\u0159:"r",\\u015A:"S",\\u015C:"S",\\u015E:"S",\\u0160:"S",\\u015B:"s",\\u015D:"s",\\u015F:"s",\\u0161:"s",\\u0162:"T",\\u0164:"T",\\u0166:"T",\\u0163:"t",\\u0165:"t",\\u0167:"t",\\u0168:"U",\\u016A:"U",\\u016C:"U",\\u016E:"U",\\u0170:"U",\\u0172:"U",\\u0169:"u",\\u016B:"u",\\u016D:"u",\\u016F:"u",\\u0171:"u",\\u0173:"u",\\u0174:"W",\\u0175:"w",\\u0176:"Y",\\u0177:"y",\\u0178:"Y",\\u0179:"Z",\\u017B:"Z",\\u017D:"Z",\\u017A:"z",\\u017C:"z",\\u017E:"z",\\u0132:"IJ",\\u0133:"ij",\\u0152:"Oe",\\u0153:"oe",\\u0149:"'n",\\u017F:"s"},kf={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Tf={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},If={"\\\\":"\\\\","'":"'","\\n":"n","\\r":"r","\\u2028":"u2028","\\u2029":"u2029"},Af=parseFloat,Ef=parseInt,Za=typeof global=="object"&&global&&global.Object===Object&&global,Pf=typeof self=="object"&&self&&self.Object===Object&&self,be=Za||Pf||Function("return this")(),Zn=typeof Ri=="object"&&Ri&&!Ri.nodeType&&Ri,ai=Zn&&typeof lr=="object"&&lr&&!lr.nodeType&&lr,Ja=ai&&ai.exports===Zn,Jn=Ja&&Za.process,je=function(){try{var x=ai&&ai.require&&ai.require("util").types;return x||Jn&&Jn.binding&&Jn.binding("util")}catch(S){}}(),Xa=je&&je.isArrayBuffer,$a=je&&je.isDate,ja=je&&je.isMap,eo=je&&je.isRegExp,to=je&&je.isSet,io=je&&je.isTypedArray;function Ye(x,S,v){switch(v.length){case 0:return x.call(S);case 1:return x.call(S,v[0]);case 2:return x.call(S,v[0],v[1]);case 3:return x.call(S,v[0],v[1],v[2])}return x.apply(S,v)}function Ff(x,S,v,E){for(var B=-1,te=x==null?0:x.length;++B<te;){var ye=x[B];S(E,ye,v(ye),x)}return E}function et(x,S){for(var v=-1,E=x==null?0:x.length;++v<E&&S(x[v],v,x)!==!1;);return x}function Nf(x,S){for(var v=x==null?0:x.length;v--&&S(x[v],v,x)!==!1;);return x}function ro(x,S){for(var v=-1,E=x==null?0:x.length;++v<E;)if(!S(x[v],v,x))return!1;return!0}function qt(x,S){for(var v=-1,E=x==null?0:x.length,B=0,te=[];++v<E;){var ye=x[v];S(ye,v,x)&&(te[B++]=ye)}return te}function Er(x,S){var v=x==null?0:x.length;return!!v&&Si(x,S,0)>-1}function Xn(x,S,v){for(var E=-1,B=x==null?0:x.length;++E<B;)if(v(S,x[E]))return!0;return!1}function fe(x,S){for(var v=-1,E=x==null?0:x.length,B=Array(E);++v<E;)B[v]=S(x[v],v,x);return B}function Ht(x,S){for(var v=-1,E=S.length,B=x.length;++v<E;)x[B+v]=S[v];return x}function $n(x,S,v,E){var B=-1,te=x==null?0:x.length;for(E&&te&&(v=x[++B]);++B<te;)v=S(v,x[B],B,x);return v}function Lf(x,S,v,E){var B=x==null?0:x.length;for(E&&B&&(v=x[--B]);B--;)v=S(v,x[B],B,x);return v}function jn(x,S){for(var v=-1,E=x==null?0:x.length;++v<E;)if(S(x[v],v,x))return!0;return!1}var Rf=es("length");function Of(x){return x.split("")}function Df(x){return x.match(Hc)||[]}function no(x,S,v){var E;return v(x,function(B,te,ye){if(S(B,te,ye))return E=te,!1}),E}function Pr(x,S,v,E){for(var B=x.length,te=v+(E?1:-1);E?te--:++te<B;)if(S(x[te],te,x))return te;return-1}function Si(x,S,v){return S===S?Qf(x,S,v):Pr(x,so,v)}function Mf(x,S,v,E){for(var B=v-1,te=x.length;++B<te;)if(E(x[B],S))return B;return-1}function so(x){return x!==x}function ao(x,S){var v=x==null?0:x.length;return v?is(x,S)/v:ni}function es(x){return function(S){return S==null?e:S[x]}}function ts(x){return function(S){return x==null?e:x[S]}}function oo(x,S,v,E,B){return B(x,function(te,ye,se){v=E?(E=!1,te):S(v,te,ye,se)}),v}function Bf(x,S){var v=x.length;for(x.sort(S);v--;)x[v]=x[v].value;return x}function is(x,S){for(var v,E=-1,B=x.length;++E<B;){var te=S(x[E]);te!==e&&(v=v===e?te:v+te)}return v}function rs(x,S){for(var v=-1,E=Array(x);++v<x;)E[v]=S(v);return E}function Vf(x,S){return fe(S,function(v){return[v,x[v]]})}function uo(x){return x&&x.slice(0,po(x)+1).replace(Hn,"")}function Qe(x){return function(S){return x(S)}}function ns(x,S){return fe(S,function(v){return x[v]})}function Qi(x,S){return x.has(S)}function lo(x,S){for(var v=-1,E=x.length;++v<E&&Si(S,x[v],0)>-1;);return v}function co(x,S){for(var v=x.length;v--&&Si(S,x[v],0)>-1;);return v}function Wf(x,S){for(var v=x.length,E=0;v--;)x[v]===S&&++E;return E}var Uf=ts(Cf),qf=ts(kf);function Hf(x){return"\\\\"+If[x]}function Gf(x,S){return x==null?e:x[S]}function _i(x){return bf.test(x)}function zf(x){return wf.test(x)}function Kf(x){for(var S,v=[];!(S=x.next()).done;)v.push(S.value);return v}function ss(x){var S=-1,v=Array(x.size);return x.forEach(function(E,B){v[++S]=[B,E]}),v}function fo(x,S){return function(v){return x(S(v))}}function Gt(x,S){for(var v=-1,E=x.length,B=0,te=[];++v<E;){var ye=x[v];(ye===S||ye===w)&&(x[v]=w,te[B++]=v)}return te}function Fr(x){var S=-1,v=Array(x.size);return x.forEach(function(E){v[++S]=E}),v}function Yf(x){var S=-1,v=Array(x.size);return x.forEach(function(E){v[++S]=[E,E]}),v}function Qf(x,S,v){for(var E=v-1,B=x.length;++E<B;)if(x[E]===S)return E;return-1}function Zf(x,S,v){for(var E=v+1;E--;)if(x[E]===S)return E;return E}function Ci(x){return _i(x)?Xf(x):Rf(x)}function dt(x){return _i(x)?$f(x):Of(x)}function po(x){for(var S=x.length;S--&&Vc.test(x.charAt(S)););return S}var Jf=ts(Tf);function Xf(x){for(var S=Qn.lastIndex=0;Qn.test(x);)++S;return S}function $f(x){return x.match(Qn)||[]}function jf(x){return x.match(vf)||[]}var ep=function x(S){S=S==null?be:zt.defaults(be.Object(),S,zt.pick(be,Sf));var v=S.Array,E=S.Date,B=S.Error,te=S.Function,ye=S.Math,se=S.Object,as=S.RegExp,tp=S.String,tt=S.TypeError,Nr=v.prototype,ip=te.prototype,ki=se.prototype,Lr=S["__core-js_shared__"],Rr=ip.toString,re=ki.hasOwnProperty,rp=0,ho=function(){var t=/[^.]+$/.exec(Lr&&Lr.keys&&Lr.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),Or=ki.toString,np=Rr.call(se),sp=be._,ap=as("^"+Rr.call(re).replace(qn,"\\\\$&").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,"$1.*?")+"$"),Dr=Ja?S.Buffer:e,Kt=S.Symbol,Mr=S.Uint8Array,mo=Dr?Dr.allocUnsafe:e,Br=fo(se.getPrototypeOf,se),go=se.create,xo=ki.propertyIsEnumerable,Vr=Nr.splice,yo=Kt?Kt.isConcatSpreadable:e,Zi=Kt?Kt.iterator:e,oi=Kt?Kt.toStringTag:e,Wr=function(){try{var t=pi(se,"defineProperty");return t({},"",{}),t}catch(r){}}(),op=S.clearTimeout!==be.clearTimeout&&S.clearTimeout,up=E&&E.now!==be.Date.now&&E.now,lp=S.setTimeout!==be.setTimeout&&S.setTimeout,Ur=ye.ceil,qr=ye.floor,os=se.getOwnPropertySymbols,cp=Dr?Dr.isBuffer:e,vo=S.isFinite,fp=Nr.join,pp=fo(se.keys,se),ve=ye.max,Ae=ye.min,hp=E.now,dp=S.parseInt,bo=ye.random,mp=Nr.reverse,us=pi(S,"DataView"),Ji=pi(S,"Map"),ls=pi(S,"Promise"),Ti=pi(S,"Set"),Xi=pi(S,"WeakMap"),$i=pi(se,"create"),Hr=Xi&&new Xi,Ii={},gp=hi(us),xp=hi(Ji),yp=hi(ls),vp=hi(Ti),bp=hi(Xi),Gr=Kt?Kt.prototype:e,ji=Gr?Gr.valueOf:e,wo=Gr?Gr.toString:e;function c(t){if(me(t)&&!V(t)&&!(t instanceof K)){if(t instanceof it)return t;if(re.call(t,"__wrapped__"))return Su(t)}return new it(t)}var Ai=function(){function t(){}return function(r){if(!de(r))return{};if(go)return go(r);t.prototype=r;var n=new t;return t.prototype=e,n}}();function zr(){}function it(t,r){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!r,this.__index__=0,this.__values__=e}c.templateSettings={escape:Lc,evaluate:Rc,interpolate:Ea,variable:"",imports:{_:c}},c.prototype=zr.prototype,c.prototype.constructor=c,it.prototype=Ai(zr.prototype),it.prototype.constructor=it;function K(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=ze,this.__views__=[]}function wp(){var t=new K(this.__wrapped__);return t.__actions__=Be(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Be(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Be(this.__views__),t}function Sp(){if(this.__filtered__){var t=new K(this);t.__dir__=-1,t.__filtered__=!0}else t=this.clone(),t.__dir__*=-1;return t}function _p(){var t=this.__wrapped__.value(),r=this.__dir__,n=V(t),o=r<0,l=n?t.length:0,p=Oh(0,l,this.__views__),d=p.start,m=p.end,y=m-d,_=o?m:d-1,C=this.__iteratees__,k=C.length,A=0,F=Ae(y,this.__takeCount__);if(!n||!o&&l==y&&F==y)return zo(t,this.__actions__);var R=[];e:for(;y--&&A<F;){_+=r;for(var q=-1,O=t[_];++q<k;){var z=C[q],Z=z.iteratee,Xe=z.type,Ne=Z(O);if(Xe==xr)O=Ne;else if(!Ne){if(Xe==qi)continue e;break e}}R[A++]=O}return R}K.prototype=Ai(zr.prototype),K.prototype.constructor=K;function ui(t){var r=-1,n=t==null?0:t.length;for(this.clear();++r<n;){var o=t[r];this.set(o[0],o[1])}}function Cp(){this.__data__=$i?$i(null):{},this.size=0}function kp(t){var r=this.has(t)&&delete this.__data__[t];return this.size-=r?1:0,r}function Tp(t){var r=this.__data__;if($i){var n=r[t];return n===g?e:n}return re.call(r,t)?r[t]:e}function Ip(t){var r=this.__data__;return $i?r[t]!==e:re.call(r,t)}function Ap(t,r){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=$i&&r===e?g:r,this}ui.prototype.clear=Cp,ui.prototype.delete=kp,ui.prototype.get=Tp,ui.prototype.has=Ip,ui.prototype.set=Ap;function Pt(t){var r=-1,n=t==null?0:t.length;for(this.clear();++r<n;){var o=t[r];this.set(o[0],o[1])}}function Ep(){this.__data__=[],this.size=0}function Pp(t){var r=this.__data__,n=Kr(r,t);if(n<0)return!1;var o=r.length-1;return n==o?r.pop():Vr.call(r,n,1),--this.size,!0}function Fp(t){var r=this.__data__,n=Kr(r,t);return n<0?e:r[n][1]}function Np(t){return Kr(this.__data__,t)>-1}function Lp(t,r){var n=this.__data__,o=Kr(n,t);return o<0?(++this.size,n.push([t,r])):n[o][1]=r,this}Pt.prototype.clear=Ep,Pt.prototype.delete=Pp,Pt.prototype.get=Fp,Pt.prototype.has=Np,Pt.prototype.set=Lp;function Ft(t){var r=-1,n=t==null?0:t.length;for(this.clear();++r<n;){var o=t[r];this.set(o[0],o[1])}}function Rp(){this.size=0,this.__data__={hash:new ui,map:new(Ji||Pt),string:new ui}}function Op(t){var r=sn(this,t).delete(t);return this.size-=r?1:0,r}function Dp(t){return sn(this,t).get(t)}function Mp(t){return sn(this,t).has(t)}function Bp(t,r){var n=sn(this,t),o=n.size;return n.set(t,r),this.size+=n.size==o?0:1,this}Ft.prototype.clear=Rp,Ft.prototype.delete=Op,Ft.prototype.get=Dp,Ft.prototype.has=Mp,Ft.prototype.set=Bp;function li(t){var r=-1,n=t==null?0:t.length;for(this.__data__=new Ft;++r<n;)this.add(t[r])}function Vp(t){return this.__data__.set(t,g),this}function Wp(t){return this.__data__.has(t)}li.prototype.add=li.prototype.push=Vp,li.prototype.has=Wp;function mt(t){var r=this.__data__=new Pt(t);this.size=r.size}function Up(){this.__data__=new Pt,this.size=0}function qp(t){var r=this.__data__,n=r.delete(t);return this.size=r.size,n}function Hp(t){return this.__data__.get(t)}function Gp(t){return this.__data__.has(t)}function zp(t,r){var n=this.__data__;if(n instanceof Pt){var o=n.__data__;if(!Ji||o.length<s-1)return o.push([t,r]),this.size=++n.size,this;n=this.__data__=new Ft(o)}return n.set(t,r),this.size=n.size,this}mt.prototype.clear=Up,mt.prototype.delete=qp,mt.prototype.get=Hp,mt.prototype.has=Gp,mt.prototype.set=zp;function So(t,r){var n=V(t),o=!n&&di(t),l=!n&&!o&&Xt(t),p=!n&&!o&&!l&&Ni(t),d=n||o||l||p,m=d?rs(t.length,tp):[],y=m.length;for(var _ in t)(r||re.call(t,_))&&!(d&&(_=="length"||l&&(_=="offset"||_=="parent")||p&&(_=="buffer"||_=="byteLength"||_=="byteOffset")||Ot(_,y)))&&m.push(_);return m}function _o(t){var r=t.length;return r?t[bs(0,r-1)]:e}function Kp(t,r){return an(Be(t),ci(r,0,t.length))}function Yp(t){return an(Be(t))}function cs(t,r,n){(n!==e&&!gt(t[r],n)||n===e&&!(r in t))&&Nt(t,r,n)}function er(t,r,n){var o=t[r];(!(re.call(t,r)&&gt(o,n))||n===e&&!(r in t))&&Nt(t,r,n)}function Kr(t,r){for(var n=t.length;n--;)if(gt(t[n][0],r))return n;return-1}function Qp(t,r,n,o){return Yt(t,function(l,p,d){r(o,l,n(l),d)}),o}function Co(t,r){return t&&St(r,we(r),t)}function Zp(t,r){return t&&St(r,We(r),t)}function Nt(t,r,n){r=="__proto__"&&Wr?Wr(t,r,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[r]=n}function fs(t,r){for(var n=-1,o=r.length,l=v(o),p=t==null;++n<o;)l[n]=p?e:zs(t,r[n]);return l}function ci(t,r,n){return t===t&&(n!==e&&(t=t<=n?t:n),r!==e&&(t=t>=r?t:r)),t}function rt(t,r,n,o,l,p){var d,m=r&T,y=r&P,_=r&W;if(n&&(d=l?n(t,o,l,p):n(t)),d!==e)return d;if(!de(t))return t;var C=V(t);if(C){if(d=Mh(t),!m)return Be(t,d)}else{var k=Ee(t),A=k==vi||k==Cr;if(Xt(t))return Qo(t,m);if(k==Et||k==At||A&&!l){if(d=y||A?{}:hu(t),!m)return y?Th(t,Zp(d,t)):kh(t,Co(d,t))}else{if(!ue[k])return l?t:{};d=Bh(t,k,m)}}p||(p=new mt);var F=p.get(t);if(F)return F;p.set(t,d),qu(t)?t.forEach(function(O){d.add(rt(O,r,n,O,t,p))}):Wu(t)&&t.forEach(function(O,z){d.set(z,rt(O,r,n,z,t,p))});var R=_?y?Fs:Ps:y?We:we,q=C?e:R(t);return et(q||t,function(O,z){q&&(z=O,O=t[z]),er(d,z,rt(O,r,n,z,t,p))}),d}function Jp(t){var r=we(t);return function(n){return ko(n,t,r)}}function ko(t,r,n){var o=n.length;if(t==null)return!o;for(t=se(t);o--;){var l=n[o],p=r[l],d=t[l];if(d===e&&!(l in t)||!p(d))return!1}return!0}function To(t,r,n){if(typeof t!="function")throw new tt(u);return or(function(){t.apply(e,n)},r)}function tr(t,r,n,o){var l=-1,p=Er,d=!0,m=t.length,y=[],_=r.length;if(!m)return y;n&&(r=fe(r,Qe(n))),o?(p=Xn,d=!1):r.length>=s&&(p=Qi,d=!1,r=new li(r));e:for(;++l<m;){var C=t[l],k=n==null?C:n(C);if(C=o||C!==0?C:0,d&&k===k){for(var A=_;A--;)if(r[A]===k)continue e;y.push(C)}else p(r,k,o)||y.push(C)}return y}var Yt=jo(wt),Io=jo(hs,!0);function Xp(t,r){var n=!0;return Yt(t,function(o,l,p){return n=!!r(o,l,p),n}),n}function Yr(t,r,n){for(var o=-1,l=t.length;++o<l;){var p=t[o],d=r(p);if(d!=null&&(m===e?d===d&&!Je(d):n(d,m)))var m=d,y=p}return y}function $p(t,r,n,o){var l=t.length;for(n=U(n),n<0&&(n=-n>l?0:l+n),o=o===e||o>l?l:U(o),o<0&&(o+=l),o=n>o?0:Gu(o);n<o;)t[n++]=r;return t}function Ao(t,r){var n=[];return Yt(t,function(o,l,p){r(o,l,p)&&n.push(o)}),n}function Ce(t,r,n,o,l){var p=-1,d=t.length;for(n||(n=Wh),l||(l=[]);++p<d;){var m=t[p];r>0&&n(m)?r>1?Ce(m,r-1,n,o,l):Ht(l,m):o||(l[l.length]=m)}return l}var ps=eu(),Eo=eu(!0);function wt(t,r){return t&&ps(t,r,we)}function hs(t,r){return t&&Eo(t,r,we)}function Qr(t,r){return qt(r,function(n){return Dt(t[n])})}function fi(t,r){r=Zt(r,t);for(var n=0,o=r.length;t!=null&&n<o;)t=t[_t(r[n++])];return n&&n==o?t:e}function Po(t,r,n){var o=r(t);return V(t)?o:Ht(o,n(t))}function Pe(t){return t==null?t===e?Tc:Cc:oi&&oi in se(t)?Rh(t):Yh(t)}function ds(t,r){return t>r}function jp(t,r){return t!=null&&re.call(t,r)}function eh(t,r){return t!=null&&r in se(t)}function th(t,r,n){return t>=Ae(r,n)&&t<ve(r,n)}function ms(t,r,n){for(var o=n?Xn:Er,l=t[0].length,p=t.length,d=p,m=v(p),y=1/0,_=[];d--;){var C=t[d];d&&r&&(C=fe(C,Qe(r))),y=Ae(C.length,y),m[d]=!n&&(r||l>=120&&C.length>=120)?new li(d&&C):e}C=t[0];var k=-1,A=m[0];e:for(;++k<l&&_.length<y;){var F=C[k],R=r?r(F):F;if(F=n||F!==0?F:0,!(A?Qi(A,R):o(_,R,n))){for(d=p;--d;){var q=m[d];if(!(q?Qi(q,R):o(t[d],R,n)))continue e}A&&A.push(R),_.push(F)}}return _}function ih(t,r,n,o){return wt(t,function(l,p,d){r(o,n(l),p,d)}),o}function ir(t,r,n){r=Zt(r,t),t=xu(t,r);var o=t==null?t:t[_t(st(r))];return o==null?e:Ye(o,t,n)}function Fo(t){return me(t)&&Pe(t)==At}function rh(t){return me(t)&&Pe(t)==Yi}function nh(t){return me(t)&&Pe(t)==pt}function rr(t,r,n,o,l){return t===r?!0:t==null||r==null||!me(t)&&!me(r)?t!==t&&r!==r:sh(t,r,n,o,rr,l)}function sh(t,r,n,o,l,p){var d=V(t),m=V(r),y=d?ne:Ee(t),_=m?ne:Ee(r);y=y==At?Et:y,_=_==At?Et:_;var C=y==Et,k=_==Et,A=y==_;if(A&&Xt(t)){if(!Xt(r))return!1;d=!0,C=!1}if(A&&!C)return p||(p=new mt),d||Ni(t)?cu(t,r,n,o,l,p):Nh(t,r,y,n,o,l,p);if(!(n&X)){var F=C&&re.call(t,"__wrapped__"),R=k&&re.call(r,"__wrapped__");if(F||R){var q=F?t.value():t,O=R?r.value():r;return p||(p=new mt),l(q,O,n,o,p)}}return A?(p||(p=new mt),Lh(t,r,n,o,l,p)):!1}function ah(t){return me(t)&&Ee(t)==Ie}function gs(t,r,n,o){var l=n.length,p=l,d=!o;if(t==null)return!p;for(t=se(t);l--;){var m=n[l];if(d&&m[2]?m[1]!==t[m[0]]:!(m[0]in t))return!1}for(;++l<p;){m=n[l];var y=m[0],_=t[y],C=m[1];if(d&&m[2]){if(_===e&&!(y in t))return!1}else{var k=new mt;if(o)var A=o(_,C,y,t,r,k);if(!(A===e?rr(C,_,X|oe,o,k):A))return!1}}return!0}function No(t){if(!de(t)||qh(t))return!1;var r=Dt(t)?ap:Zc;return r.test(hi(t))}function oh(t){return me(t)&&Pe(t)==Gi}function uh(t){return me(t)&&Ee(t)==ht}function lh(t){return me(t)&&pn(t.length)&&!!le[Pe(t)]}function Lo(t){return typeof t=="function"?t:t==null?Ue:typeof t=="object"?V(t)?Do(t[0],t[1]):Oo(t):tl(t)}function xs(t){if(!ar(t))return pp(t);var r=[];for(var n in se(t))re.call(t,n)&&n!="constructor"&&r.push(n);return r}function ch(t){if(!de(t))return Kh(t);var r=ar(t),n=[];for(var o in t)o=="constructor"&&(r||!re.call(t,o))||n.push(o);return n}function ys(t,r){return t<r}function Ro(t,r){var n=-1,o=Ve(t)?v(t.length):[];return Yt(t,function(l,p,d){o[++n]=r(l,p,d)}),o}function Oo(t){var r=Ls(t);return r.length==1&&r[0][2]?mu(r[0][0],r[0][1]):function(n){return n===t||gs(n,t,r)}}function Do(t,r){return Os(t)&&du(r)?mu(_t(t),r):function(n){var o=zs(n,t);return o===e&&o===r?Ks(n,t):rr(r,o,X|oe)}}function Zr(t,r,n,o,l){t!==r&&ps(r,function(p,d){if(l||(l=new mt),de(p))fh(t,r,d,n,Zr,o,l);else{var m=o?o(Ms(t,d),p,d+"",t,r,l):e;m===e&&(m=p),cs(t,d,m)}},We)}function fh(t,r,n,o,l,p,d){var m=Ms(t,n),y=Ms(r,n),_=d.get(y);if(_){cs(t,n,_);return}var C=p?p(m,y,n+"",t,r,d):e,k=C===e;if(k){var A=V(y),F=!A&&Xt(y),R=!A&&!F&&Ni(y);C=y,A||F||R?V(m)?C=m:ge(m)?C=Be(m):F?(k=!1,C=Qo(y,!0)):R?(k=!1,C=Zo(y,!0)):C=[]:ur(y)||di(y)?(C=m,di(m)?C=zu(m):(!de(m)||Dt(m))&&(C=hu(y))):k=!1}k&&(d.set(y,C),l(C,y,o,p,d),d.delete(y)),cs(t,n,C)}function Mo(t,r){var n=t.length;if(!!n)return r+=r<0?n:0,Ot(r,n)?t[r]:e}function Bo(t,r,n){r.length?r=fe(r,function(p){return V(p)?function(d){return fi(d,p.length===1?p[0]:p)}:p}):r=[Ue];var o=-1;r=fe(r,Qe(L()));var l=Ro(t,function(p,d,m){var y=fe(r,function(_){return _(p)});return{criteria:y,index:++o,value:p}});return Bf(l,function(p,d){return Ch(p,d,n)})}function ph(t,r){return Vo(t,r,function(n,o){return Ks(t,o)})}function Vo(t,r,n){for(var o=-1,l=r.length,p={};++o<l;){var d=r[o],m=fi(t,d);n(m,d)&&nr(p,Zt(d,t),m)}return p}function hh(t){return function(r){return fi(r,t)}}function vs(t,r,n,o){var l=o?Mf:Si,p=-1,d=r.length,m=t;for(t===r&&(r=Be(r)),n&&(m=fe(t,Qe(n)));++p<d;)for(var y=0,_=r[p],C=n?n(_):_;(y=l(m,C,y,o))>-1;)m!==t&&Vr.call(m,y,1),Vr.call(t,y,1);return t}function Wo(t,r){for(var n=t?r.length:0,o=n-1;n--;){var l=r[n];if(n==o||l!==p){var p=l;Ot(l)?Vr.call(t,l,1):_s(t,l)}}return t}function bs(t,r){return t+qr(bo()*(r-t+1))}function dh(t,r,n,o){for(var l=-1,p=ve(Ur((r-t)/(n||1)),0),d=v(p);p--;)d[o?p:++l]=t,t+=n;return d}function ws(t,r){var n="";if(!t||r<1||r>ft)return n;do r%2&&(n+=t),r=qr(r/2),r&&(t+=t);while(r);return n}function G(t,r){return Bs(gu(t,r,Ue),t+"")}function mh(t){return _o(Li(t))}function gh(t,r){var n=Li(t);return an(n,ci(r,0,n.length))}function nr(t,r,n,o){if(!de(t))return t;r=Zt(r,t);for(var l=-1,p=r.length,d=p-1,m=t;m!=null&&++l<p;){var y=_t(r[l]),_=n;if(y==="__proto__"||y==="constructor"||y==="prototype")return t;if(l!=d){var C=m[y];_=o?o(C,y,m):e,_===e&&(_=de(C)?C:Ot(r[l+1])?[]:{})}er(m,y,_),m=m[y]}return t}var Uo=Hr?function(t,r){return Hr.set(t,r),t}:Ue,xh=Wr?function(t,r){return Wr(t,"toString",{configurable:!0,enumerable:!1,value:Qs(r),writable:!0})}:Ue;function yh(t){return an(Li(t))}function nt(t,r,n){var o=-1,l=t.length;r<0&&(r=-r>l?0:l+r),n=n>l?l:n,n<0&&(n+=l),l=r>n?0:n-r>>>0,r>>>=0;for(var p=v(l);++o<l;)p[o]=t[o+r];return p}function vh(t,r){var n;return Yt(t,function(o,l,p){return n=r(o,l,p),!n}),!!n}function Jr(t,r,n){var o=0,l=t==null?o:t.length;if(typeof r=="number"&&r===r&&l<=wr){for(;o<l;){var p=o+l>>>1,d=t[p];d!==null&&!Je(d)&&(n?d<=r:d<r)?o=p+1:l=p}return l}return Ss(t,r,Ue,n)}function Ss(t,r,n,o){var l=0,p=t==null?0:t.length;if(p===0)return 0;r=n(r);for(var d=r!==r,m=r===null,y=Je(r),_=r===e;l<p;){var C=qr((l+p)/2),k=n(t[C]),A=k!==e,F=k===null,R=k===k,q=Je(k);if(d)var O=o||R;else _?O=R&&(o||A):m?O=R&&A&&(o||!F):y?O=R&&A&&!F&&(o||!q):F||q?O=!1:O=o?k<=r:k<r;O?l=C+1:p=C}return Ae(p,br)}function qo(t,r){for(var n=-1,o=t.length,l=0,p=[];++n<o;){var d=t[n],m=r?r(d):d;if(!n||!gt(m,y)){var y=m;p[l++]=d===0?0:d}}return p}function Ho(t){return typeof t=="number"?t:Je(t)?ni:+t}function Ze(t){if(typeof t=="string")return t;if(V(t))return fe(t,Ze)+"";if(Je(t))return wo?wo.call(t):"";var r=t+"";return r=="0"&&1/t==-bt?"-0":r}function Qt(t,r,n){var o=-1,l=Er,p=t.length,d=!0,m=[],y=m;if(n)d=!1,l=Xn;else if(p>=s){var _=r?null:Ph(t);if(_)return Fr(_);d=!1,l=Qi,y=new li}else y=r?[]:m;e:for(;++o<p;){var C=t[o],k=r?r(C):C;if(C=n||C!==0?C:0,d&&k===k){for(var A=y.length;A--;)if(y[A]===k)continue e;r&&y.push(k),m.push(C)}else l(y,k,n)||(y!==m&&y.push(k),m.push(C))}return m}function _s(t,r){return r=Zt(r,t),t=xu(t,r),t==null||delete t[_t(st(r))]}function Go(t,r,n,o){return nr(t,r,n(fi(t,r)),o)}function Xr(t,r,n,o){for(var l=t.length,p=o?l:-1;(o?p--:++p<l)&&r(t[p],p,t););return n?nt(t,o?0:p,o?p+1:l):nt(t,o?p+1:0,o?l:p)}function zo(t,r){var n=t;return n instanceof K&&(n=n.value()),$n(r,function(o,l){return l.func.apply(l.thisArg,Ht([o],l.args))},n)}function Cs(t,r,n){var o=t.length;if(o<2)return o?Qt(t[0]):[];for(var l=-1,p=v(o);++l<o;)for(var d=t[l],m=-1;++m<o;)m!=l&&(p[l]=tr(p[l]||d,t[m],r,n));return Qt(Ce(p,1),r,n)}function Ko(t,r,n){for(var o=-1,l=t.length,p=r.length,d={};++o<l;){var m=o<p?r[o]:e;n(d,t[o],m)}return d}function ks(t){return ge(t)?t:[]}function Ts(t){return typeof t=="function"?t:Ue}function Zt(t,r){return V(t)?t:Os(t,r)?[t]:wu(ie(t))}var bh=G;function Jt(t,r,n){var o=t.length;return n=n===e?o:n,!r&&n>=o?t:nt(t,r,n)}var Yo=op||function(t){return be.clearTimeout(t)};function Qo(t,r){if(r)return t.slice();var n=t.length,o=mo?mo(n):new t.constructor(n);return t.copy(o),o}function Is(t){var r=new t.constructor(t.byteLength);return new Mr(r).set(new Mr(t)),r}function wh(t,r){var n=r?Is(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}function Sh(t){var r=new t.constructor(t.source,Pa.exec(t));return r.lastIndex=t.lastIndex,r}function _h(t){return ji?se(ji.call(t)):{}}function Zo(t,r){var n=r?Is(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}function Jo(t,r){if(t!==r){var n=t!==e,o=t===null,l=t===t,p=Je(t),d=r!==e,m=r===null,y=r===r,_=Je(r);if(!m&&!_&&!p&&t>r||p&&d&&y&&!m&&!_||o&&d&&y||!n&&y||!l)return 1;if(!o&&!p&&!_&&t<r||_&&n&&l&&!o&&!p||m&&n&&l||!d&&l||!y)return-1}return 0}function Ch(t,r,n){for(var o=-1,l=t.criteria,p=r.criteria,d=l.length,m=n.length;++o<d;){var y=Jo(l[o],p[o]);if(y){if(o>=m)return y;var _=n[o];return y*(_=="desc"?-1:1)}}return t.index-r.index}function Xo(t,r,n,o){for(var l=-1,p=t.length,d=n.length,m=-1,y=r.length,_=ve(p-d,0),C=v(y+_),k=!o;++m<y;)C[m]=r[m];for(;++l<d;)(k||l<p)&&(C[n[l]]=t[l]);for(;_--;)C[m++]=t[l++];return C}function $o(t,r,n,o){for(var l=-1,p=t.length,d=-1,m=n.length,y=-1,_=r.length,C=ve(p-m,0),k=v(C+_),A=!o;++l<C;)k[l]=t[l];for(var F=l;++y<_;)k[F+y]=r[y];for(;++d<m;)(A||l<p)&&(k[F+n[d]]=t[l++]);return k}function Be(t,r){var n=-1,o=t.length;for(r||(r=v(o));++n<o;)r[n]=t[n];return r}function St(t,r,n,o){var l=!n;n||(n={});for(var p=-1,d=r.length;++p<d;){var m=r[p],y=o?o(n[m],t[m],m,n,t):e;y===e&&(y=t[m]),l?Nt(n,m,y):er(n,m,y)}return n}function kh(t,r){return St(t,Rs(t),r)}function Th(t,r){return St(t,fu(t),r)}function $r(t,r){return function(n,o){var l=V(n)?Ff:Qp,p=r?r():{};return l(n,t,L(o,2),p)}}function Ei(t){return G(function(r,n){var o=-1,l=n.length,p=l>1?n[l-1]:e,d=l>2?n[2]:e;for(p=t.length>3&&typeof p=="function"?(l--,p):e,d&&Fe(n[0],n[1],d)&&(p=l<3?e:p,l=1),r=se(r);++o<l;){var m=n[o];m&&t(r,m,o,p)}return r})}function jo(t,r){return function(n,o){if(n==null)return n;if(!Ve(n))return t(n,o);for(var l=n.length,p=r?l:-1,d=se(n);(r?p--:++p<l)&&o(d[p],p,d)!==!1;);return n}}function eu(t){return function(r,n,o){for(var l=-1,p=se(r),d=o(r),m=d.length;m--;){var y=d[t?m:++l];if(n(p[y],y,p)===!1)break}return r}}function Ih(t,r,n){var o=r&M,l=sr(t);function p(){var d=this&&this!==be&&this instanceof p?l:t;return d.apply(o?n:this,arguments)}return p}function tu(t){return function(r){r=ie(r);var n=_i(r)?dt(r):e,o=n?n[0]:r.charAt(0),l=n?Jt(n,1).join(""):r.slice(1);return o[t]()+l}}function Pi(t){return function(r){return $n(ju($u(r).replace(xf,"")),t,"")}}function sr(t){return function(){var r=arguments;switch(r.length){case 0:return new t;case 1:return new t(r[0]);case 2:return new t(r[0],r[1]);case 3:return new t(r[0],r[1],r[2]);case 4:return new t(r[0],r[1],r[2],r[3]);case 5:return new t(r[0],r[1],r[2],r[3],r[4]);case 6:return new t(r[0],r[1],r[2],r[3],r[4],r[5]);case 7:return new t(r[0],r[1],r[2],r[3],r[4],r[5],r[6])}var n=Ai(t.prototype),o=t.apply(n,r);return de(o)?o:n}}function Ah(t,r,n){var o=sr(t);function l(){for(var p=arguments.length,d=v(p),m=p,y=Fi(l);m--;)d[m]=arguments[m];var _=p<3&&d[0]!==y&&d[p-1]!==y?[]:Gt(d,y);if(p-=_.length,p<n)return au(t,r,jr,l.placeholder,e,d,_,e,e,n-p);var C=this&&this!==be&&this instanceof l?o:t;return Ye(C,this,d)}return l}function iu(t){return function(r,n,o){var l=se(r);if(!Ve(r)){var p=L(n,3);r=we(r),n=function(m){return p(l[m],m,l)}}var d=t(r,n,o);return d>-1?l[p?r[d]:d]:e}}function ru(t){return Rt(function(r){var n=r.length,o=n,l=it.prototype.thru;for(t&&r.reverse();o--;){var p=r[o];if(typeof p!="function")throw new tt(u);if(l&&!d&&nn(p)=="wrapper")var d=new it([],!0)}for(o=d?o:n;++o<n;){p=r[o];var m=nn(p),y=m=="wrapper"?Ns(p):e;y&&Ds(y[0])&&y[1]==(Te|ce|_e|Oe)&&!y[4].length&&y[9]==1?d=d[nn(y[0])].apply(d,y[3]):d=p.length==1&&Ds(p)?d[m]():d.thru(p)}return function(){var _=arguments,C=_[0];if(d&&_.length==1&&V(C))return d.plant(C).value();for(var k=0,A=n?r[k].apply(this,_):C;++k<n;)A=r[k].call(this,A);return A}})}function jr(t,r,n,o,l,p,d,m,y,_){var C=r&Te,k=r&M,A=r&$,F=r&(ce|He),R=r&De,q=A?e:sr(t);function O(){for(var z=arguments.length,Z=v(z),Xe=z;Xe--;)Z[Xe]=arguments[Xe];if(F)var Ne=Fi(O),$e=Wf(Z,Ne);if(o&&(Z=Xo(Z,o,l,F)),p&&(Z=$o(Z,p,d,F)),z-=$e,F&&z<_){var xe=Gt(Z,Ne);return au(t,r,jr,O.placeholder,n,Z,xe,m,y,_-z)}var xt=k?n:this,Bt=A?xt[t]:t;return z=Z.length,m?Z=Qh(Z,m):R&&z>1&&Z.reverse(),C&&y<z&&(Z.length=y),this&&this!==be&&this instanceof O&&(Bt=q||sr(Bt)),Bt.apply(xt,Z)}return O}function nu(t,r){return function(n,o){return ih(n,t,r(o),{})}}function en(t,r){return function(n,o){var l;if(n===e&&o===e)return r;if(n!==e&&(l=n),o!==e){if(l===e)return o;typeof n=="string"||typeof o=="string"?(n=Ze(n),o=Ze(o)):(n=Ho(n),o=Ho(o)),l=t(n,o)}return l}}function As(t){return Rt(function(r){return r=fe(r,Qe(L())),G(function(n){var o=this;return t(r,function(l){return Ye(l,o,n)})})})}function tn(t,r){r=r===e?" ":Ze(r);var n=r.length;if(n<2)return n?ws(r,t):r;var o=ws(r,Ur(t/Ci(r)));return _i(r)?Jt(dt(o),0,t).join(""):o.slice(0,t)}function Eh(t,r,n,o){var l=r&M,p=sr(t);function d(){for(var m=-1,y=arguments.length,_=-1,C=o.length,k=v(C+y),A=this&&this!==be&&this instanceof d?p:t;++_<C;)k[_]=o[_];for(;y--;)k[_++]=arguments[++m];return Ye(A,l?n:this,k)}return d}function su(t){return function(r,n,o){return o&&typeof o!="number"&&Fe(r,n,o)&&(n=o=e),r=Mt(r),n===e?(n=r,r=0):n=Mt(n),o=o===e?r<n?1:-1:Mt(o),dh(r,n,o,t)}}function rn(t){return function(r,n){return typeof r=="string"&&typeof n=="string"||(r=at(r),n=at(n)),t(r,n)}}function au(t,r,n,o,l,p,d,m,y,_){var C=r&ce,k=C?d:e,A=C?e:d,F=C?p:e,R=C?e:p;r|=C?_e:Ge,r&=~(C?Ge:_e),r&ke||(r&=~(M|$));var q=[t,r,l,F,k,R,A,m,y,_],O=n.apply(e,q);return Ds(t)&&yu(O,q),O.placeholder=o,vu(O,t,r)}function Es(t){var r=ye[t];return function(n,o){if(n=at(n),o=o==null?0:Ae(U(o),292),o&&vo(n)){var l=(ie(n)+"e").split("e"),p=r(l[0]+"e"+(+l[1]+o));return l=(ie(p)+"e").split("e"),+(l[0]+"e"+(+l[1]-o))}return r(n)}}var Ph=Ti&&1/Fr(new Ti([,-0]))[1]==bt?function(t){return new Ti(t)}:Xs;function ou(t){return function(r){var n=Ee(r);return n==Ie?ss(r):n==ht?Yf(r):Vf(r,t(r))}}function Lt(t,r,n,o,l,p,d,m){var y=r&$;if(!y&&typeof t!="function")throw new tt(u);var _=o?o.length:0;if(_||(r&=~(_e|Ge),o=l=e),d=d===e?d:ve(U(d),0),m=m===e?m:U(m),_-=l?l.length:0,r&Ge){var C=o,k=l;o=l=e}var A=y?e:Ns(t),F=[t,r,n,o,l,C,k,p,d,m];if(A&&zh(F,A),t=F[0],r=F[1],n=F[2],o=F[3],l=F[4],m=F[9]=F[9]===e?y?0:t.length:ve(F[9]-_,0),!m&&r&(ce|He)&&(r&=~(ce|He)),!r||r==M)var R=Ih(t,r,n);else r==ce||r==He?R=Ah(t,r,m):(r==_e||r==(M|_e))&&!l.length?R=Eh(t,r,n,o):R=jr.apply(e,F);var q=A?Uo:yu;return vu(q(R,F),t,r)}function uu(t,r,n,o){return t===e||gt(t,ki[n])&&!re.call(o,n)?r:t}function lu(t,r,n,o,l,p){return de(t)&&de(r)&&(p.set(r,t),Zr(t,r,e,lu,p),p.delete(r)),t}function Fh(t){return ur(t)?e:t}function cu(t,r,n,o,l,p){var d=n&X,m=t.length,y=r.length;if(m!=y&&!(d&&y>m))return!1;var _=p.get(t),C=p.get(r);if(_&&C)return _==r&&C==t;var k=-1,A=!0,F=n&oe?new li:e;for(p.set(t,r),p.set(r,t);++k<m;){var R=t[k],q=r[k];if(o)var O=d?o(q,R,k,r,t,p):o(R,q,k,t,r,p);if(O!==e){if(O)continue;A=!1;break}if(F){if(!jn(r,function(z,Z){if(!Qi(F,Z)&&(R===z||l(R,z,n,o,p)))return F.push(Z)})){A=!1;break}}else if(!(R===q||l(R,q,n,o,p))){A=!1;break}}return p.delete(t),p.delete(r),A}function Nh(t,r,n,o,l,p,d){switch(n){case bi:if(t.byteLength!=r.byteLength||t.byteOffset!=r.byteOffset)return!1;t=t.buffer,r=r.buffer;case Yi:return!(t.byteLength!=r.byteLength||!p(new Mr(t),new Mr(r)));case Me:case pt:case Hi:return gt(+t,+r);case si:return t.name==r.name&&t.message==r.message;case Gi:case zi:return t==r+"";case Ie:var m=ss;case ht:var y=o&X;if(m||(m=Fr),t.size!=r.size&&!y)return!1;var _=d.get(t);if(_)return _==r;o|=oe,d.set(t,r);var C=cu(m(t),m(r),o,l,p,d);return d.delete(t),C;case kr:if(ji)return ji.call(t)==ji.call(r)}return!1}function Lh(t,r,n,o,l,p){var d=n&X,m=Ps(t),y=m.length,_=Ps(r),C=_.length;if(y!=C&&!d)return!1;for(var k=y;k--;){var A=m[k];if(!(d?A in r:re.call(r,A)))return!1}var F=p.get(t),R=p.get(r);if(F&&R)return F==r&&R==t;var q=!0;p.set(t,r),p.set(r,t);for(var O=d;++k<y;){A=m[k];var z=t[A],Z=r[A];if(o)var Xe=d?o(Z,z,A,r,t,p):o(z,Z,A,t,r,p);if(!(Xe===e?z===Z||l(z,Z,n,o,p):Xe)){q=!1;break}O||(O=A=="constructor")}if(q&&!O){var Ne=t.constructor,$e=r.constructor;Ne!=$e&&"constructor"in t&&"constructor"in r&&!(typeof Ne=="function"&&Ne instanceof Ne&&typeof $e=="function"&&$e instanceof $e)&&(q=!1)}return p.delete(t),p.delete(r),q}function Rt(t){return Bs(gu(t,e,ku),t+"")}function Ps(t){return Po(t,we,Rs)}function Fs(t){return Po(t,We,fu)}var Ns=Hr?function(t){return Hr.get(t)}:Xs;function nn(t){for(var r=t.name+"",n=Ii[r],o=re.call(Ii,r)?n.length:0;o--;){var l=n[o],p=l.func;if(p==null||p==t)return l.name}return r}function Fi(t){var r=re.call(c,"placeholder")?c:t;return r.placeholder}function L(){var t=c.iteratee||Zs;return t=t===Zs?Lo:t,arguments.length?t(arguments[0],arguments[1]):t}function sn(t,r){var n=t.__data__;return Uh(r)?n[typeof r=="string"?"string":"hash"]:n.map}function Ls(t){for(var r=we(t),n=r.length;n--;){var o=r[n],l=t[o];r[n]=[o,l,du(l)]}return r}function pi(t,r){var n=Gf(t,r);return No(n)?n:e}function Rh(t){var r=re.call(t,oi),n=t[oi];try{t[oi]=e;var o=!0}catch(p){}var l=Or.call(t);return o&&(r?t[oi]=n:delete t[oi]),l}var Rs=os?function(t){return t==null?[]:(t=se(t),qt(os(t),function(r){return xo.call(t,r)}))}:$s,fu=os?function(t){for(var r=[];t;)Ht(r,Rs(t)),t=Br(t);return r}:$s,Ee=Pe;(us&&Ee(new us(new ArrayBuffer(1)))!=bi||Ji&&Ee(new Ji)!=Ie||ls&&Ee(ls.resolve())!=Ta||Ti&&Ee(new Ti)!=ht||Xi&&Ee(new Xi)!=Ki)&&(Ee=function(t){var r=Pe(t),n=r==Et?t.constructor:e,o=n?hi(n):"";if(o)switch(o){case gp:return bi;case xp:return Ie;case yp:return Ta;case vp:return ht;case bp:return Ki}return r});function Oh(t,r,n){for(var o=-1,l=n.length;++o<l;){var p=n[o],d=p.size;switch(p.type){case"drop":t+=d;break;case"dropRight":r-=d;break;case"take":r=Ae(r,t+d);break;case"takeRight":t=ve(t,r-d);break}}return{start:t,end:r}}function Dh(t){var r=t.match(Uc);return r?r[1].split(qc):[]}function pu(t,r,n){r=Zt(r,t);for(var o=-1,l=r.length,p=!1;++o<l;){var d=_t(r[o]);if(!(p=t!=null&&n(t,d)))break;t=t[d]}return p||++o!=l?p:(l=t==null?0:t.length,!!l&&pn(l)&&Ot(d,l)&&(V(t)||di(t)))}function Mh(t){var r=t.length,n=new t.constructor(r);return r&&typeof t[0]=="string"&&re.call(t,"index")&&(n.index=t.index,n.input=t.input),n}function hu(t){return typeof t.constructor=="function"&&!ar(t)?Ai(Br(t)):{}}function Bh(t,r,n){var o=t.constructor;switch(r){case Yi:return Is(t);case Me:case pt:return new o(+t);case bi:return wh(t,n);case Ln:case Rn:case On:case Dn:case Mn:case Bn:case Vn:case Wn:case Un:return Zo(t,n);case Ie:return new o;case Hi:case zi:return new o(t);case Gi:return Sh(t);case ht:return new o;case kr:return _h(t)}}function Vh(t,r){var n=r.length;if(!n)return t;var o=n-1;return r[o]=(n>1?"& ":"")+r[o],r=r.join(n>2?", ":" "),t.replace(Wc,\`{
/* [wrapped with \`+r+\`] */
\`)}function Wh(t){return V(t)||di(t)||!!(yo&&t&&t[yo])}function Ot(t,r){var n=typeof t;return r=r==null?ft:r,!!r&&(n=="number"||n!="symbol"&&Xc.test(t))&&t>-1&&t%1==0&&t<r}function Fe(t,r,n){if(!de(n))return!1;var o=typeof r;return(o=="number"?Ve(n)&&Ot(r,n.length):o=="string"&&r in n)?gt(n[r],t):!1}function Os(t,r){if(V(t))return!1;var n=typeof t;return n=="number"||n=="symbol"||n=="boolean"||t==null||Je(t)?!0:Dc.test(t)||!Oc.test(t)||r!=null&&t in se(r)}function Uh(t){var r=typeof t;return r=="string"||r=="number"||r=="symbol"||r=="boolean"?t!=="__proto__":t===null}function Ds(t){var r=nn(t),n=c[r];if(typeof n!="function"||!(r in K.prototype))return!1;if(t===n)return!0;var o=Ns(n);return!!o&&t===o[0]}function qh(t){return!!ho&&ho in t}var Hh=Lr?Dt:js;function ar(t){var r=t&&t.constructor,n=typeof r=="function"&&r.prototype||ki;return t===n}function du(t){return t===t&&!de(t)}function mu(t,r){return function(n){return n==null?!1:n[t]===r&&(r!==e||t in se(n))}}function Gh(t){var r=cn(t,function(o){return n.size===b&&n.clear(),o}),n=r.cache;return r}function zh(t,r){var n=t[1],o=r[1],l=n|o,p=l<(M|$|Te),d=o==Te&&n==ce||o==Te&&n==Oe&&t[7].length<=r[8]||o==(Te|Oe)&&r[7].length<=r[8]&&n==ce;if(!(p||d))return t;o&M&&(t[2]=r[2],l|=n&M?0:ke);var m=r[3];if(m){var y=t[3];t[3]=y?Xo(y,m,r[4]):m,t[4]=y?Gt(t[3],w):r[4]}return m=r[5],m&&(y=t[5],t[5]=y?$o(y,m,r[6]):m,t[6]=y?Gt(t[5],w):r[6]),m=r[7],m&&(t[7]=m),o&Te&&(t[8]=t[8]==null?r[8]:Ae(t[8],r[8])),t[9]==null&&(t[9]=r[9]),t[0]=r[0],t[1]=l,t}function Kh(t){var r=[];if(t!=null)for(var n in se(t))r.push(n);return r}function Yh(t){return Or.call(t)}function gu(t,r,n){return r=ve(r===e?t.length-1:r,0),function(){for(var o=arguments,l=-1,p=ve(o.length-r,0),d=v(p);++l<p;)d[l]=o[r+l];l=-1;for(var m=v(r+1);++l<r;)m[l]=o[l];return m[r]=n(d),Ye(t,this,m)}}function xu(t,r){return r.length<2?t:fi(t,nt(r,0,-1))}function Qh(t,r){for(var n=t.length,o=Ae(r.length,n),l=Be(t);o--;){var p=r[o];t[o]=Ot(p,n)?l[p]:e}return t}function Ms(t,r){if(!(r==="constructor"&&typeof t[r]=="function")&&r!="__proto__")return t[r]}var yu=bu(Uo),or=lp||function(t,r){return be.setTimeout(t,r)},Bs=bu(xh);function vu(t,r,n){var o=r+"";return Bs(t,Vh(o,Zh(Dh(o),n)))}function bu(t){var r=0,n=0;return function(){var o=hp(),l=It-(o-n);if(n=o,l>0){if(++r>=Tt)return arguments[0]}else r=0;return t.apply(e,arguments)}}function an(t,r){var n=-1,o=t.length,l=o-1;for(r=r===e?o:r;++n<r;){var p=bs(n,l),d=t[p];t[p]=t[n],t[n]=d}return t.length=r,t}var wu=Gh(function(t){var r=[];return t.charCodeAt(0)===46&&r.push(""),t.replace(Mc,function(n,o,l,p){r.push(l?p.replace(zc,"$1"):o||n)}),r});function _t(t){if(typeof t=="string"||Je(t))return t;var r=t+"";return r=="0"&&1/t==-bt?"-0":r}function hi(t){if(t!=null){try{return Rr.call(t)}catch(r){}try{return t+""}catch(r){}}return""}function Zh(t,r){return et(Sr,function(n){var o="_."+n[0];r&n[1]&&!Er(t,o)&&t.push(o)}),t.sort()}function Su(t){if(t instanceof K)return t.clone();var r=new it(t.__wrapped__,t.__chain__);return r.__actions__=Be(t.__actions__),r.__index__=t.__index__,r.__values__=t.__values__,r}function Jh(t,r,n){(n?Fe(t,r,n):r===e)?r=1:r=ve(U(r),0);var o=t==null?0:t.length;if(!o||r<1)return[];for(var l=0,p=0,d=v(Ur(o/r));l<o;)d[p++]=nt(t,l,l+=r);return d}function Xh(t){for(var r=-1,n=t==null?0:t.length,o=0,l=[];++r<n;){var p=t[r];p&&(l[o++]=p)}return l}function $h(){var t=arguments.length;if(!t)return[];for(var r=v(t-1),n=arguments[0],o=t;o--;)r[o-1]=arguments[o];return Ht(V(n)?Be(n):[n],Ce(r,1))}var jh=G(function(t,r){return ge(t)?tr(t,Ce(r,1,ge,!0)):[]}),ed=G(function(t,r){var n=st(r);return ge(n)&&(n=e),ge(t)?tr(t,Ce(r,1,ge,!0),L(n,2)):[]}),td=G(function(t,r){var n=st(r);return ge(n)&&(n=e),ge(t)?tr(t,Ce(r,1,ge,!0),e,n):[]});function id(t,r,n){var o=t==null?0:t.length;return o?(r=n||r===e?1:U(r),nt(t,r<0?0:r,o)):[]}function rd(t,r,n){var o=t==null?0:t.length;return o?(r=n||r===e?1:U(r),r=o-r,nt(t,0,r<0?0:r)):[]}function nd(t,r){return t&&t.length?Xr(t,L(r,3),!0,!0):[]}function sd(t,r){return t&&t.length?Xr(t,L(r,3),!0):[]}function ad(t,r,n,o){var l=t==null?0:t.length;return l?(n&&typeof n!="number"&&Fe(t,r,n)&&(n=0,o=l),$p(t,r,n,o)):[]}function _u(t,r,n){var o=t==null?0:t.length;if(!o)return-1;var l=n==null?0:U(n);return l<0&&(l=ve(o+l,0)),Pr(t,L(r,3),l)}function Cu(t,r,n){var o=t==null?0:t.length;if(!o)return-1;var l=o-1;return n!==e&&(l=U(n),l=n<0?ve(o+l,0):Ae(l,o-1)),Pr(t,L(r,3),l,!0)}function ku(t){var r=t==null?0:t.length;return r?Ce(t,1):[]}function od(t){var r=t==null?0:t.length;return r?Ce(t,bt):[]}function ud(t,r){var n=t==null?0:t.length;return n?(r=r===e?1:U(r),Ce(t,r)):[]}function ld(t){for(var r=-1,n=t==null?0:t.length,o={};++r<n;){var l=t[r];o[l[0]]=l[1]}return o}function Tu(t){return t&&t.length?t[0]:e}function cd(t,r,n){var o=t==null?0:t.length;if(!o)return-1;var l=n==null?0:U(n);return l<0&&(l=ve(o+l,0)),Si(t,r,l)}function fd(t){var r=t==null?0:t.length;return r?nt(t,0,-1):[]}var pd=G(function(t){var r=fe(t,ks);return r.length&&r[0]===t[0]?ms(r):[]}),hd=G(function(t){var r=st(t),n=fe(t,ks);return r===st(n)?r=e:n.pop(),n.length&&n[0]===t[0]?ms(n,L(r,2)):[]}),dd=G(function(t){var r=st(t),n=fe(t,ks);return r=typeof r=="function"?r:e,r&&n.pop(),n.length&&n[0]===t[0]?ms(n,e,r):[]});function md(t,r){return t==null?"":fp.call(t,r)}function st(t){var r=t==null?0:t.length;return r?t[r-1]:e}function gd(t,r,n){var o=t==null?0:t.length;if(!o)return-1;var l=o;return n!==e&&(l=U(n),l=l<0?ve(o+l,0):Ae(l,o-1)),r===r?Zf(t,r,l):Pr(t,so,l,!0)}function xd(t,r){return t&&t.length?Mo(t,U(r)):e}var yd=G(Iu);function Iu(t,r){return t&&t.length&&r&&r.length?vs(t,r):t}function vd(t,r,n){return t&&t.length&&r&&r.length?vs(t,r,L(n,2)):t}function bd(t,r,n){return t&&t.length&&r&&r.length?vs(t,r,e,n):t}var wd=Rt(function(t,r){var n=t==null?0:t.length,o=fs(t,r);return Wo(t,fe(r,function(l){return Ot(l,n)?+l:l}).sort(Jo)),o});function Sd(t,r){var n=[];if(!(t&&t.length))return n;var o=-1,l=[],p=t.length;for(r=L(r,3);++o<p;){var d=t[o];r(d,o,t)&&(n.push(d),l.push(o))}return Wo(t,l),n}function Vs(t){return t==null?t:mp.call(t)}function _d(t,r,n){var o=t==null?0:t.length;return o?(n&&typeof n!="number"&&Fe(t,r,n)?(r=0,n=o):(r=r==null?0:U(r),n=n===e?o:U(n)),nt(t,r,n)):[]}function Cd(t,r){return Jr(t,r)}function kd(t,r,n){return Ss(t,r,L(n,2))}function Td(t,r){var n=t==null?0:t.length;if(n){var o=Jr(t,r);if(o<n&&gt(t[o],r))return o}return-1}function Id(t,r){return Jr(t,r,!0)}function Ad(t,r,n){return Ss(t,r,L(n,2),!0)}function Ed(t,r){var n=t==null?0:t.length;if(n){var o=Jr(t,r,!0)-1;if(gt(t[o],r))return o}return-1}function Pd(t){return t&&t.length?qo(t):[]}function Fd(t,r){return t&&t.length?qo(t,L(r,2)):[]}function Nd(t){var r=t==null?0:t.length;return r?nt(t,1,r):[]}function Ld(t,r,n){return t&&t.length?(r=n||r===e?1:U(r),nt(t,0,r<0?0:r)):[]}function Rd(t,r,n){var o=t==null?0:t.length;return o?(r=n||r===e?1:U(r),r=o-r,nt(t,r<0?0:r,o)):[]}function Od(t,r){return t&&t.length?Xr(t,L(r,3),!1,!0):[]}function Dd(t,r){return t&&t.length?Xr(t,L(r,3)):[]}var Md=G(function(t){return Qt(Ce(t,1,ge,!0))}),Bd=G(function(t){var r=st(t);return ge(r)&&(r=e),Qt(Ce(t,1,ge,!0),L(r,2))}),Vd=G(function(t){var r=st(t);return r=typeof r=="function"?r:e,Qt(Ce(t,1,ge,!0),e,r)});function Wd(t){return t&&t.length?Qt(t):[]}function Ud(t,r){return t&&t.length?Qt(t,L(r,2)):[]}function qd(t,r){return r=typeof r=="function"?r:e,t&&t.length?Qt(t,e,r):[]}function Ws(t){if(!(t&&t.length))return[];var r=0;return t=qt(t,function(n){if(ge(n))return r=ve(n.length,r),!0}),rs(r,function(n){return fe(t,es(n))})}function Au(t,r){if(!(t&&t.length))return[];var n=Ws(t);return r==null?n:fe(n,function(o){return Ye(r,e,o)})}var Hd=G(function(t,r){return ge(t)?tr(t,r):[]}),Gd=G(function(t){return Cs(qt(t,ge))}),zd=G(function(t){var r=st(t);return ge(r)&&(r=e),Cs(qt(t,ge),L(r,2))}),Kd=G(function(t){var r=st(t);return r=typeof r=="function"?r:e,Cs(qt(t,ge),e,r)}),Yd=G(Ws);function Qd(t,r){return Ko(t||[],r||[],er)}function Zd(t,r){return Ko(t||[],r||[],nr)}var Jd=G(function(t){var r=t.length,n=r>1?t[r-1]:e;return n=typeof n=="function"?(t.pop(),n):e,Au(t,n)});function Eu(t){var r=c(t);return r.__chain__=!0,r}function Xd(t,r){return r(t),t}function on(t,r){return r(t)}var $d=Rt(function(t){var r=t.length,n=r?t[0]:0,o=this.__wrapped__,l=function(p){return fs(p,t)};return r>1||this.__actions__.length||!(o instanceof K)||!Ot(n)?this.thru(l):(o=o.slice(n,+n+(r?1:0)),o.__actions__.push({func:on,args:[l],thisArg:e}),new it(o,this.__chain__).thru(function(p){return r&&!p.length&&p.push(e),p}))});function jd(){return Eu(this)}function em(){return new it(this.value(),this.__chain__)}function tm(){this.__values__===e&&(this.__values__=Hu(this.value()));var t=this.__index__>=this.__values__.length,r=t?e:this.__values__[this.__index__++];return{done:t,value:r}}function im(){return this}function rm(t){for(var r,n=this;n instanceof zr;){var o=Su(n);o.__index__=0,o.__values__=e,r?l.__wrapped__=o:r=o;var l=o;n=n.__wrapped__}return l.__wrapped__=t,r}function nm(){var t=this.__wrapped__;if(t instanceof K){var r=t;return this.__actions__.length&&(r=new K(this)),r=r.reverse(),r.__actions__.push({func:on,args:[Vs],thisArg:e}),new it(r,this.__chain__)}return this.thru(Vs)}function sm(){return zo(this.__wrapped__,this.__actions__)}var am=$r(function(t,r,n){re.call(t,n)?++t[n]:Nt(t,n,1)});function om(t,r,n){var o=V(t)?ro:Xp;return n&&Fe(t,r,n)&&(r=e),o(t,L(r,3))}function um(t,r){var n=V(t)?qt:Ao;return n(t,L(r,3))}var lm=iu(_u),cm=iu(Cu);function fm(t,r){return Ce(un(t,r),1)}function pm(t,r){return Ce(un(t,r),bt)}function hm(t,r,n){return n=n===e?1:U(n),Ce(un(t,r),n)}function Pu(t,r){var n=V(t)?et:Yt;return n(t,L(r,3))}function Fu(t,r){var n=V(t)?Nf:Io;return n(t,L(r,3))}var dm=$r(function(t,r,n){re.call(t,n)?t[n].push(r):Nt(t,n,[r])});function mm(t,r,n,o){t=Ve(t)?t:Li(t),n=n&&!o?U(n):0;var l=t.length;return n<0&&(n=ve(l+n,0)),hn(t)?n<=l&&t.indexOf(r,n)>-1:!!l&&Si(t,r,n)>-1}var gm=G(function(t,r,n){var o=-1,l=typeof r=="function",p=Ve(t)?v(t.length):[];return Yt(t,function(d){p[++o]=l?Ye(r,d,n):ir(d,r,n)}),p}),xm=$r(function(t,r,n){Nt(t,n,r)});function un(t,r){var n=V(t)?fe:Ro;return n(t,L(r,3))}function ym(t,r,n,o){return t==null?[]:(V(r)||(r=r==null?[]:[r]),n=o?e:n,V(n)||(n=n==null?[]:[n]),Bo(t,r,n))}var vm=$r(function(t,r,n){t[n?0:1].push(r)},function(){return[[],[]]});function bm(t,r,n){var o=V(t)?$n:oo,l=arguments.length<3;return o(t,L(r,4),n,l,Yt)}function wm(t,r,n){var o=V(t)?Lf:oo,l=arguments.length<3;return o(t,L(r,4),n,l,Io)}function Sm(t,r){var n=V(t)?qt:Ao;return n(t,fn(L(r,3)))}function _m(t){var r=V(t)?_o:mh;return r(t)}function Cm(t,r,n){(n?Fe(t,r,n):r===e)?r=1:r=U(r);var o=V(t)?Kp:gh;return o(t,r)}function km(t){var r=V(t)?Yp:yh;return r(t)}function Tm(t){if(t==null)return 0;if(Ve(t))return hn(t)?Ci(t):t.length;var r=Ee(t);return r==Ie||r==ht?t.size:xs(t).length}function Im(t,r,n){var o=V(t)?jn:vh;return n&&Fe(t,r,n)&&(r=e),o(t,L(r,3))}var Am=G(function(t,r){if(t==null)return[];var n=r.length;return n>1&&Fe(t,r[0],r[1])?r=[]:n>2&&Fe(r[0],r[1],r[2])&&(r=[r[0]]),Bo(t,Ce(r,1),[])}),ln=up||function(){return be.Date.now()};function Em(t,r){if(typeof r!="function")throw new tt(u);return t=U(t),function(){if(--t<1)return r.apply(this,arguments)}}function Nu(t,r,n){return r=n?e:r,r=t&&r==null?t.length:r,Lt(t,Te,e,e,e,e,r)}function Lu(t,r){var n;if(typeof r!="function")throw new tt(u);return t=U(t),function(){return--t>0&&(n=r.apply(this,arguments)),t<=1&&(r=e),n}}var Us=G(function(t,r,n){var o=M;if(n.length){var l=Gt(n,Fi(Us));o|=_e}return Lt(t,o,r,n,l)}),Ru=G(function(t,r,n){var o=M|$;if(n.length){var l=Gt(n,Fi(Ru));o|=_e}return Lt(r,o,t,n,l)});function Ou(t,r,n){r=n?e:r;var o=Lt(t,ce,e,e,e,e,e,r);return o.placeholder=Ou.placeholder,o}function Du(t,r,n){r=n?e:r;var o=Lt(t,He,e,e,e,e,e,r);return o.placeholder=Du.placeholder,o}function Mu(t,r,n){var o,l,p,d,m,y,_=0,C=!1,k=!1,A=!0;if(typeof t!="function")throw new tt(u);r=at(r)||0,de(n)&&(C=!!n.leading,k="maxWait"in n,p=k?ve(at(n.maxWait)||0,r):p,A="trailing"in n?!!n.trailing:A);function F(xe){var xt=o,Bt=l;return o=l=e,_=xe,d=t.apply(Bt,xt),d}function R(xe){return _=xe,m=or(z,r),C?F(xe):d}function q(xe){var xt=xe-y,Bt=xe-_,il=r-xt;return k?Ae(il,p-Bt):il}function O(xe){var xt=xe-y,Bt=xe-_;return y===e||xt>=r||xt<0||k&&Bt>=p}function z(){var xe=ln();if(O(xe))return Z(xe);m=or(z,q(xe))}function Z(xe){return m=e,A&&o?F(xe):(o=l=e,d)}function Xe(){m!==e&&Yo(m),_=0,o=y=l=m=e}function Ne(){return m===e?d:Z(ln())}function $e(){var xe=ln(),xt=O(xe);if(o=arguments,l=this,y=xe,xt){if(m===e)return R(y);if(k)return Yo(m),m=or(z,r),F(y)}return m===e&&(m=or(z,r)),d}return $e.cancel=Xe,$e.flush=Ne,$e}var Pm=G(function(t,r){return To(t,1,r)}),Fm=G(function(t,r,n){return To(t,at(r)||0,n)});function Nm(t){return Lt(t,De)}function cn(t,r){if(typeof t!="function"||r!=null&&typeof r!="function")throw new tt(u);var n=function(){var o=arguments,l=r?r.apply(this,o):o[0],p=n.cache;if(p.has(l))return p.get(l);var d=t.apply(this,o);return n.cache=p.set(l,d)||p,d};return n.cache=new(cn.Cache||Ft),n}cn.Cache=Ft;function fn(t){if(typeof t!="function")throw new tt(u);return function(){var r=arguments;switch(r.length){case 0:return!t.call(this);case 1:return!t.call(this,r[0]);case 2:return!t.call(this,r[0],r[1]);case 3:return!t.call(this,r[0],r[1],r[2])}return!t.apply(this,r)}}function Lm(t){return Lu(2,t)}var Rm=bh(function(t,r){r=r.length==1&&V(r[0])?fe(r[0],Qe(L())):fe(Ce(r,1),Qe(L()));var n=r.length;return G(function(o){for(var l=-1,p=Ae(o.length,n);++l<p;)o[l]=r[l].call(this,o[l]);return Ye(t,this,o)})}),qs=G(function(t,r){var n=Gt(r,Fi(qs));return Lt(t,_e,e,r,n)}),Bu=G(function(t,r){var n=Gt(r,Fi(Bu));return Lt(t,Ge,e,r,n)}),Om=Rt(function(t,r){return Lt(t,Oe,e,e,e,r)});function Dm(t,r){if(typeof t!="function")throw new tt(u);return r=r===e?r:U(r),G(t,r)}function Mm(t,r){if(typeof t!="function")throw new tt(u);return r=r==null?0:ve(U(r),0),G(function(n){var o=n[r],l=Jt(n,0,r);return o&&Ht(l,o),Ye(t,this,l)})}function Bm(t,r,n){var o=!0,l=!0;if(typeof t!="function")throw new tt(u);return de(n)&&(o="leading"in n?!!n.leading:o,l="trailing"in n?!!n.trailing:l),Mu(t,r,{leading:o,maxWait:r,trailing:l})}function Vm(t){return Nu(t,1)}function Wm(t,r){return qs(Ts(r),t)}function Um(){if(!arguments.length)return[];var t=arguments[0];return V(t)?t:[t]}function qm(t){return rt(t,W)}function Hm(t,r){return r=typeof r=="function"?r:e,rt(t,W,r)}function Gm(t){return rt(t,T|W)}function zm(t,r){return r=typeof r=="function"?r:e,rt(t,T|W,r)}function Km(t,r){return r==null||ko(t,r,we(r))}function gt(t,r){return t===r||t!==t&&r!==r}var Ym=rn(ds),Qm=rn(function(t,r){return t>=r}),di=Fo(function(){return arguments}())?Fo:function(t){return me(t)&&re.call(t,"callee")&&!xo.call(t,"callee")},V=v.isArray,Zm=Xa?Qe(Xa):rh;function Ve(t){return t!=null&&pn(t.length)&&!Dt(t)}function ge(t){return me(t)&&Ve(t)}function Jm(t){return t===!0||t===!1||me(t)&&Pe(t)==Me}var Xt=cp||js,Xm=$a?Qe($a):nh;function $m(t){return me(t)&&t.nodeType===1&&!ur(t)}function jm(t){if(t==null)return!0;if(Ve(t)&&(V(t)||typeof t=="string"||typeof t.splice=="function"||Xt(t)||Ni(t)||di(t)))return!t.length;var r=Ee(t);if(r==Ie||r==ht)return!t.size;if(ar(t))return!xs(t).length;for(var n in t)if(re.call(t,n))return!1;return!0}function eg(t,r){return rr(t,r)}function tg(t,r,n){n=typeof n=="function"?n:e;var o=n?n(t,r):e;return o===e?rr(t,r,e,n):!!o}function Hs(t){if(!me(t))return!1;var r=Pe(t);return r==si||r==_r||typeof t.message=="string"&&typeof t.name=="string"&&!ur(t)}function ig(t){return typeof t=="number"&&vo(t)}function Dt(t){if(!de(t))return!1;var r=Pe(t);return r==vi||r==Cr||r==Ke||r==kc}function Vu(t){return typeof t=="number"&&t==U(t)}function pn(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=ft}function de(t){var r=typeof t;return t!=null&&(r=="object"||r=="function")}function me(t){return t!=null&&typeof t=="object"}var Wu=ja?Qe(ja):ah;function rg(t,r){return t===r||gs(t,r,Ls(r))}function ng(t,r,n){return n=typeof n=="function"?n:e,gs(t,r,Ls(r),n)}function sg(t){return Uu(t)&&t!=+t}function ag(t){if(Hh(t))throw new B(a);return No(t)}function og(t){return t===null}function ug(t){return t==null}function Uu(t){return typeof t=="number"||me(t)&&Pe(t)==Hi}function ur(t){if(!me(t)||Pe(t)!=Et)return!1;var r=Br(t);if(r===null)return!0;var n=re.call(r,"constructor")&&r.constructor;return typeof n=="function"&&n instanceof n&&Rr.call(n)==np}var Gs=eo?Qe(eo):oh;function lg(t){return Vu(t)&&t>=-ft&&t<=ft}var qu=to?Qe(to):uh;function hn(t){return typeof t=="string"||!V(t)&&me(t)&&Pe(t)==zi}function Je(t){return typeof t=="symbol"||me(t)&&Pe(t)==kr}var Ni=io?Qe(io):lh;function cg(t){return t===e}function fg(t){return me(t)&&Ee(t)==Ki}function pg(t){return me(t)&&Pe(t)==Ic}var hg=rn(ys),dg=rn(function(t,r){return t<=r});function Hu(t){if(!t)return[];if(Ve(t))return hn(t)?dt(t):Be(t);if(Zi&&t[Zi])return Kf(t[Zi]());var r=Ee(t),n=r==Ie?ss:r==ht?Fr:Li;return n(t)}function Mt(t){if(!t)return t===0?t:0;if(t=at(t),t===bt||t===-bt){var r=t<0?-1:1;return r*vr}return t===t?t:0}function U(t){var r=Mt(t),n=r%1;return r===r?n?r-n:r:0}function Gu(t){return t?ci(U(t),0,ze):0}function at(t){if(typeof t=="number")return t;if(Je(t))return ni;if(de(t)){var r=typeof t.valueOf=="function"?t.valueOf():t;t=de(r)?r+"":r}if(typeof t!="string")return t===0?t:+t;t=uo(t);var n=Qc.test(t);return n||Jc.test(t)?Ef(t.slice(2),n?2:8):Yc.test(t)?ni:+t}function zu(t){return St(t,We(t))}function mg(t){return t?ci(U(t),-ft,ft):t===0?t:0}function ie(t){return t==null?"":Ze(t)}var gg=Ei(function(t,r){if(ar(r)||Ve(r)){St(r,we(r),t);return}for(var n in r)re.call(r,n)&&er(t,n,r[n])}),Ku=Ei(function(t,r){St(r,We(r),t)}),dn=Ei(function(t,r,n,o){St(r,We(r),t,o)}),xg=Ei(function(t,r,n,o){St(r,we(r),t,o)}),yg=Rt(fs);function vg(t,r){var n=Ai(t);return r==null?n:Co(n,r)}var bg=G(function(t,r){t=se(t);var n=-1,o=r.length,l=o>2?r[2]:e;for(l&&Fe(r[0],r[1],l)&&(o=1);++n<o;)for(var p=r[n],d=We(p),m=-1,y=d.length;++m<y;){var _=d[m],C=t[_];(C===e||gt(C,ki[_])&&!re.call(t,_))&&(t[_]=p[_])}return t}),wg=G(function(t){return t.push(e,lu),Ye(Yu,e,t)});function Sg(t,r){return no(t,L(r,3),wt)}function _g(t,r){return no(t,L(r,3),hs)}function Cg(t,r){return t==null?t:ps(t,L(r,3),We)}function kg(t,r){return t==null?t:Eo(t,L(r,3),We)}function Tg(t,r){return t&&wt(t,L(r,3))}function Ig(t,r){return t&&hs(t,L(r,3))}function Ag(t){return t==null?[]:Qr(t,we(t))}function Eg(t){return t==null?[]:Qr(t,We(t))}function zs(t,r,n){var o=t==null?e:fi(t,r);return o===e?n:o}function Pg(t,r){return t!=null&&pu(t,r,jp)}function Ks(t,r){return t!=null&&pu(t,r,eh)}var Fg=nu(function(t,r,n){r!=null&&typeof r.toString!="function"&&(r=Or.call(r)),t[r]=n},Qs(Ue)),Ng=nu(function(t,r,n){r!=null&&typeof r.toString!="function"&&(r=Or.call(r)),re.call(t,r)?t[r].push(n):t[r]=[n]},L),Lg=G(ir);function we(t){return Ve(t)?So(t):xs(t)}function We(t){return Ve(t)?So(t,!0):ch(t)}function Rg(t,r){var n={};return r=L(r,3),wt(t,function(o,l,p){Nt(n,r(o,l,p),o)}),n}function Og(t,r){var n={};return r=L(r,3),wt(t,function(o,l,p){Nt(n,l,r(o,l,p))}),n}var Dg=Ei(function(t,r,n){Zr(t,r,n)}),Yu=Ei(function(t,r,n,o){Zr(t,r,n,o)}),Mg=Rt(function(t,r){var n={};if(t==null)return n;var o=!1;r=fe(r,function(p){return p=Zt(p,t),o||(o=p.length>1),p}),St(t,Fs(t),n),o&&(n=rt(n,T|P|W,Fh));for(var l=r.length;l--;)_s(n,r[l]);return n});function Bg(t,r){return Qu(t,fn(L(r)))}var Vg=Rt(function(t,r){return t==null?{}:ph(t,r)});function Qu(t,r){if(t==null)return{};var n=fe(Fs(t),function(o){return[o]});return r=L(r),Vo(t,n,function(o,l){return r(o,l[0])})}function Wg(t,r,n){r=Zt(r,t);var o=-1,l=r.length;for(l||(l=1,t=e);++o<l;){var p=t==null?e:t[_t(r[o])];p===e&&(o=l,p=n),t=Dt(p)?p.call(t):p}return t}function Ug(t,r,n){return t==null?t:nr(t,r,n)}function qg(t,r,n,o){return o=typeof o=="function"?o:e,t==null?t:nr(t,r,n,o)}var Zu=ou(we),Ju=ou(We);function Hg(t,r,n){var o=V(t),l=o||Xt(t)||Ni(t);if(r=L(r,4),n==null){var p=t&&t.constructor;l?n=o?new p:[]:de(t)?n=Dt(p)?Ai(Br(t)):{}:n={}}return(l?et:wt)(t,function(d,m,y){return r(n,d,m,y)}),n}function Gg(t,r){return t==null?!0:_s(t,r)}function zg(t,r,n){return t==null?t:Go(t,r,Ts(n))}function Kg(t,r,n,o){return o=typeof o=="function"?o:e,t==null?t:Go(t,r,Ts(n),o)}function Li(t){return t==null?[]:ns(t,we(t))}function Yg(t){return t==null?[]:ns(t,We(t))}function Qg(t,r,n){return n===e&&(n=r,r=e),n!==e&&(n=at(n),n=n===n?n:0),r!==e&&(r=at(r),r=r===r?r:0),ci(at(t),r,n)}function Zg(t,r,n){return r=Mt(r),n===e?(n=r,r=0):n=Mt(n),t=at(t),th(t,r,n)}function Jg(t,r,n){if(n&&typeof n!="boolean"&&Fe(t,r,n)&&(r=n=e),n===e&&(typeof r=="boolean"?(n=r,r=e):typeof t=="boolean"&&(n=t,t=e)),t===e&&r===e?(t=0,r=1):(t=Mt(t),r===e?(r=t,t=0):r=Mt(r)),t>r){var o=t;t=r,r=o}if(n||t%1||r%1){var l=bo();return Ae(t+l*(r-t+Af("1e-"+((l+"").length-1))),r)}return bs(t,r)}var Xg=Pi(function(t,r,n){return r=r.toLowerCase(),t+(n?Xu(r):r)});function Xu(t){return Ys(ie(t).toLowerCase())}function $u(t){return t=ie(t),t&&t.replace($c,Uf).replace(yf,"")}function $g(t,r,n){t=ie(t),r=Ze(r);var o=t.length;n=n===e?o:ci(U(n),0,o);var l=n;return n-=r.length,n>=0&&t.slice(n,l)==r}function jg(t){return t=ie(t),t&&Nc.test(t)?t.replace(Aa,qf):t}function e0(t){return t=ie(t),t&&Bc.test(t)?t.replace(qn,"\\\\$&"):t}var t0=Pi(function(t,r,n){return t+(n?"-":"")+r.toLowerCase()}),i0=Pi(function(t,r,n){return t+(n?" ":"")+r.toLowerCase()}),r0=tu("toLowerCase");function n0(t,r,n){t=ie(t),r=U(r);var o=r?Ci(t):0;if(!r||o>=r)return t;var l=(r-o)/2;return tn(qr(l),n)+t+tn(Ur(l),n)}function s0(t,r,n){t=ie(t),r=U(r);var o=r?Ci(t):0;return r&&o<r?t+tn(r-o,n):t}function a0(t,r,n){t=ie(t),r=U(r);var o=r?Ci(t):0;return r&&o<r?tn(r-o,n)+t:t}function o0(t,r,n){return n||r==null?r=0:r&&(r=+r),dp(ie(t).replace(Hn,""),r||0)}function u0(t,r,n){return(n?Fe(t,r,n):r===e)?r=1:r=U(r),ws(ie(t),r)}function l0(){var t=arguments,r=ie(t[0]);return t.length<3?r:r.replace(t[1],t[2])}var c0=Pi(function(t,r,n){return t+(n?"_":"")+r.toLowerCase()});function f0(t,r,n){return n&&typeof n!="number"&&Fe(t,r,n)&&(r=n=e),n=n===e?ze:n>>>0,n?(t=ie(t),t&&(typeof r=="string"||r!=null&&!Gs(r))&&(r=Ze(r),!r&&_i(t))?Jt(dt(t),0,n):t.split(r,n)):[]}var p0=Pi(function(t,r,n){return t+(n?" ":"")+Ys(r)});function h0(t,r,n){return t=ie(t),n=n==null?0:ci(U(n),0,t.length),r=Ze(r),t.slice(n,n+r.length)==r}function d0(t,r,n){var o=c.templateSettings;n&&Fe(t,r,n)&&(r=e),t=ie(t),r=dn({},r,o,uu);var l=dn({},r.imports,o.imports,uu),p=we(l),d=ns(l,p),m,y,_=0,C=r.interpolate||Tr,k="__p += '",A=as((r.escape||Tr).source+"|"+C.source+"|"+(C===Ea?Kc:Tr).source+"|"+(r.evaluate||Tr).source+"|$","g"),F="//# sourceURL="+(re.call(r,"sourceURL")?(r.sourceURL+"").replace(/\\s/g," "):"lodash.templateSources["+ ++_f+"]")+\`
\`;t.replace(A,function(O,z,Z,Xe,Ne,$e){return Z||(Z=Xe),k+=t.slice(_,$e).replace(jc,Hf),z&&(m=!0,k+=\`' +
__e(\`+z+\`) +
'\`),Ne&&(y=!0,k+=\`';
\`+Ne+\`;
__p += '\`),Z&&(k+=\`' +
((__t = (\`+Z+\`)) == null ? '' : __t) +
'\`),_=$e+O.length,O}),k+=\`';
\`;var R=re.call(r,"variable")&&r.variable;if(!R)k=\`with (obj) {
\`+k+\`
}
\`;else if(Gc.test(R))throw new B(h);k=(y?k.replace(Ac,""):k).replace(Ec,"$1").replace(Pc,"$1;"),k="function("+(R||"obj")+\`) {
\`+(R?"":\`obj || (obj = {});
\`)+"var __t, __p = ''"+(m?", __e = _.escape":"")+(y?\`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
\`:\`;
\`)+k+\`return __p
}\`;var q=el(function(){return te(p,F+"return "+k).apply(e,d)});if(q.source=k,Hs(q))throw q;return q}function m0(t){return ie(t).toLowerCase()}function g0(t){return ie(t).toUpperCase()}function x0(t,r,n){if(t=ie(t),t&&(n||r===e))return uo(t);if(!t||!(r=Ze(r)))return t;var o=dt(t),l=dt(r),p=lo(o,l),d=co(o,l)+1;return Jt(o,p,d).join("")}function y0(t,r,n){if(t=ie(t),t&&(n||r===e))return t.slice(0,po(t)+1);if(!t||!(r=Ze(r)))return t;var o=dt(t),l=co(o,dt(r))+1;return Jt(o,0,l).join("")}function v0(t,r,n){if(t=ie(t),t&&(n||r===e))return t.replace(Hn,"");if(!t||!(r=Ze(r)))return t;var o=dt(t),l=lo(o,dt(r));return Jt(o,l).join("")}function b0(t,r){var n=he,o=kt;if(de(r)){var l="separator"in r?r.separator:l;n="length"in r?U(r.length):n,o="omission"in r?Ze(r.omission):o}t=ie(t);var p=t.length;if(_i(t)){var d=dt(t);p=d.length}if(n>=p)return t;var m=n-Ci(o);if(m<1)return o;var y=d?Jt(d,0,m).join(""):t.slice(0,m);if(l===e)return y+o;if(d&&(m+=y.length-m),Gs(l)){if(t.slice(m).search(l)){var _,C=y;for(l.global||(l=as(l.source,ie(Pa.exec(l))+"g")),l.lastIndex=0;_=l.exec(C);)var k=_.index;y=y.slice(0,k===e?m:k)}}else if(t.indexOf(Ze(l),m)!=m){var A=y.lastIndexOf(l);A>-1&&(y=y.slice(0,A))}return y+o}function w0(t){return t=ie(t),t&&Fc.test(t)?t.replace(Ia,Jf):t}var S0=Pi(function(t,r,n){return t+(n?" ":"")+r.toUpperCase()}),Ys=tu("toUpperCase");function ju(t,r,n){return t=ie(t),r=n?e:r,r===e?zf(t)?jf(t):Df(t):t.match(r)||[]}var el=G(function(t,r){try{return Ye(t,e,r)}catch(n){return Hs(n)?n:new B(n)}}),_0=Rt(function(t,r){return et(r,function(n){n=_t(n),Nt(t,n,Us(t[n],t))}),t});function C0(t){var r=t==null?0:t.length,n=L();return t=r?fe(t,function(o){if(typeof o[1]!="function")throw new tt(u);return[n(o[0]),o[1]]}):[],G(function(o){for(var l=-1;++l<r;){var p=t[l];if(Ye(p[0],this,o))return Ye(p[1],this,o)}})}function k0(t){return Jp(rt(t,T))}function Qs(t){return function(){return t}}function T0(t,r){return t==null||t!==t?r:t}var I0=ru(),A0=ru(!0);function Ue(t){return t}function Zs(t){return Lo(typeof t=="function"?t:rt(t,T))}function E0(t){return Oo(rt(t,T))}function P0(t,r){return Do(t,rt(r,T))}var F0=G(function(t,r){return function(n){return ir(n,t,r)}}),N0=G(function(t,r){return function(n){return ir(t,n,r)}});function Js(t,r,n){var o=we(r),l=Qr(r,o);n==null&&!(de(r)&&(l.length||!o.length))&&(n=r,r=t,t=this,l=Qr(r,we(r)));var p=!(de(n)&&"chain"in n)||!!n.chain,d=Dt(t);return et(l,function(m){var y=r[m];t[m]=y,d&&(t.prototype[m]=function(){var _=this.__chain__;if(p||_){var C=t(this.__wrapped__),k=C.__actions__=Be(this.__actions__);return k.push({func:y,args:arguments,thisArg:t}),C.__chain__=_,C}return y.apply(t,Ht([this.value()],arguments))})}),t}function L0(){return be._===this&&(be._=sp),this}function Xs(){}function R0(t){return t=U(t),G(function(r){return Mo(r,t)})}var O0=As(fe),D0=As(ro),M0=As(jn);function tl(t){return Os(t)?es(_t(t)):hh(t)}function B0(t){return function(r){return t==null?e:fi(t,r)}}var V0=su(),W0=su(!0);function $s(){return[]}function js(){return!1}function U0(){return{}}function q0(){return""}function H0(){return!0}function G0(t,r){if(t=U(t),t<1||t>ft)return[];var n=ze,o=Ae(t,ze);r=L(r),t-=ze;for(var l=rs(o,r);++n<t;)r(n);return l}function z0(t){return V(t)?fe(t,_t):Je(t)?[t]:Be(wu(ie(t)))}function K0(t){var r=++rp;return ie(t)+r}var Y0=en(function(t,r){return t+r},0),Q0=Es("ceil"),Z0=en(function(t,r){return t/r},1),J0=Es("floor");function X0(t){return t&&t.length?Yr(t,Ue,ds):e}function $0(t,r){return t&&t.length?Yr(t,L(r,2),ds):e}function j0(t){return ao(t,Ue)}function ex(t,r){return ao(t,L(r,2))}function tx(t){return t&&t.length?Yr(t,Ue,ys):e}function ix(t,r){return t&&t.length?Yr(t,L(r,2),ys):e}var rx=en(function(t,r){return t*r},1),nx=Es("round"),sx=en(function(t,r){return t-r},0);function ax(t){return t&&t.length?is(t,Ue):0}function ox(t,r){return t&&t.length?is(t,L(r,2)):0}return c.after=Em,c.ary=Nu,c.assign=gg,c.assignIn=Ku,c.assignInWith=dn,c.assignWith=xg,c.at=yg,c.before=Lu,c.bind=Us,c.bindAll=_0,c.bindKey=Ru,c.castArray=Um,c.chain=Eu,c.chunk=Jh,c.compact=Xh,c.concat=$h,c.cond=C0,c.conforms=k0,c.constant=Qs,c.countBy=am,c.create=vg,c.curry=Ou,c.curryRight=Du,c.debounce=Mu,c.defaults=bg,c.defaultsDeep=wg,c.defer=Pm,c.delay=Fm,c.difference=jh,c.differenceBy=ed,c.differenceWith=td,c.drop=id,c.dropRight=rd,c.dropRightWhile=nd,c.dropWhile=sd,c.fill=ad,c.filter=um,c.flatMap=fm,c.flatMapDeep=pm,c.flatMapDepth=hm,c.flatten=ku,c.flattenDeep=od,c.flattenDepth=ud,c.flip=Nm,c.flow=I0,c.flowRight=A0,c.fromPairs=ld,c.functions=Ag,c.functionsIn=Eg,c.groupBy=dm,c.initial=fd,c.intersection=pd,c.intersectionBy=hd,c.intersectionWith=dd,c.invert=Fg,c.invertBy=Ng,c.invokeMap=gm,c.iteratee=Zs,c.keyBy=xm,c.keys=we,c.keysIn=We,c.map=un,c.mapKeys=Rg,c.mapValues=Og,c.matches=E0,c.matchesProperty=P0,c.memoize=cn,c.merge=Dg,c.mergeWith=Yu,c.method=F0,c.methodOf=N0,c.mixin=Js,c.negate=fn,c.nthArg=R0,c.omit=Mg,c.omitBy=Bg,c.once=Lm,c.orderBy=ym,c.over=O0,c.overArgs=Rm,c.overEvery=D0,c.overSome=M0,c.partial=qs,c.partialRight=Bu,c.partition=vm,c.pick=Vg,c.pickBy=Qu,c.property=tl,c.propertyOf=B0,c.pull=yd,c.pullAll=Iu,c.pullAllBy=vd,c.pullAllWith=bd,c.pullAt=wd,c.range=V0,c.rangeRight=W0,c.rearg=Om,c.reject=Sm,c.remove=Sd,c.rest=Dm,c.reverse=Vs,c.sampleSize=Cm,c.set=Ug,c.setWith=qg,c.shuffle=km,c.slice=_d,c.sortBy=Am,c.sortedUniq=Pd,c.sortedUniqBy=Fd,c.split=f0,c.spread=Mm,c.tail=Nd,c.take=Ld,c.takeRight=Rd,c.takeRightWhile=Od,c.takeWhile=Dd,c.tap=Xd,c.throttle=Bm,c.thru=on,c.toArray=Hu,c.toPairs=Zu,c.toPairsIn=Ju,c.toPath=z0,c.toPlainObject=zu,c.transform=Hg,c.unary=Vm,c.union=Md,c.unionBy=Bd,c.unionWith=Vd,c.uniq=Wd,c.uniqBy=Ud,c.uniqWith=qd,c.unset=Gg,c.unzip=Ws,c.unzipWith=Au,c.update=zg,c.updateWith=Kg,c.values=Li,c.valuesIn=Yg,c.without=Hd,c.words=ju,c.wrap=Wm,c.xor=Gd,c.xorBy=zd,c.xorWith=Kd,c.zip=Yd,c.zipObject=Qd,c.zipObjectDeep=Zd,c.zipWith=Jd,c.entries=Zu,c.entriesIn=Ju,c.extend=Ku,c.extendWith=dn,Js(c,c),c.add=Y0,c.attempt=el,c.camelCase=Xg,c.capitalize=Xu,c.ceil=Q0,c.clamp=Qg,c.clone=qm,c.cloneDeep=Gm,c.cloneDeepWith=zm,c.cloneWith=Hm,c.conformsTo=Km,c.deburr=$u,c.defaultTo=T0,c.divide=Z0,c.endsWith=$g,c.eq=gt,c.escape=jg,c.escapeRegExp=e0,c.every=om,c.find=lm,c.findIndex=_u,c.findKey=Sg,c.findLast=cm,c.findLastIndex=Cu,c.findLastKey=_g,c.floor=J0,c.forEach=Pu,c.forEachRight=Fu,c.forIn=Cg,c.forInRight=kg,c.forOwn=Tg,c.forOwnRight=Ig,c.get=zs,c.gt=Ym,c.gte=Qm,c.has=Pg,c.hasIn=Ks,c.head=Tu,c.identity=Ue,c.includes=mm,c.indexOf=cd,c.inRange=Zg,c.invoke=Lg,c.isArguments=di,c.isArray=V,c.isArrayBuffer=Zm,c.isArrayLike=Ve,c.isArrayLikeObject=ge,c.isBoolean=Jm,c.isBuffer=Xt,c.isDate=Xm,c.isElement=$m,c.isEmpty=jm,c.isEqual=eg,c.isEqualWith=tg,c.isError=Hs,c.isFinite=ig,c.isFunction=Dt,c.isInteger=Vu,c.isLength=pn,c.isMap=Wu,c.isMatch=rg,c.isMatchWith=ng,c.isNaN=sg,c.isNative=ag,c.isNil=ug,c.isNull=og,c.isNumber=Uu,c.isObject=de,c.isObjectLike=me,c.isPlainObject=ur,c.isRegExp=Gs,c.isSafeInteger=lg,c.isSet=qu,c.isString=hn,c.isSymbol=Je,c.isTypedArray=Ni,c.isUndefined=cg,c.isWeakMap=fg,c.isWeakSet=pg,c.join=md,c.kebabCase=t0,c.last=st,c.lastIndexOf=gd,c.lowerCase=i0,c.lowerFirst=r0,c.lt=hg,c.lte=dg,c.max=X0,c.maxBy=$0,c.mean=j0,c.meanBy=ex,c.min=tx,c.minBy=ix,c.stubArray=$s,c.stubFalse=js,c.stubObject=U0,c.stubString=q0,c.stubTrue=H0,c.multiply=rx,c.nth=xd,c.noConflict=L0,c.noop=Xs,c.now=ln,c.pad=n0,c.padEnd=s0,c.padStart=a0,c.parseInt=o0,c.random=Jg,c.reduce=bm,c.reduceRight=wm,c.repeat=u0,c.replace=l0,c.result=Wg,c.round=nx,c.runInContext=x,c.sample=_m,c.size=Tm,c.snakeCase=c0,c.some=Im,c.sortedIndex=Cd,c.sortedIndexBy=kd,c.sortedIndexOf=Td,c.sortedLastIndex=Id,c.sortedLastIndexBy=Ad,c.sortedLastIndexOf=Ed,c.startCase=p0,c.startsWith=h0,c.subtract=sx,c.sum=ax,c.sumBy=ox,c.template=d0,c.times=G0,c.toFinite=Mt,c.toInteger=U,c.toLength=Gu,c.toLower=m0,c.toNumber=at,c.toSafeInteger=mg,c.toString=ie,c.toUpper=g0,c.trim=x0,c.trimEnd=y0,c.trimStart=v0,c.truncate=b0,c.unescape=w0,c.uniqueId=K0,c.upperCase=S0,c.upperFirst=Ys,c.each=Pu,c.eachRight=Fu,c.first=Tu,Js(c,function(){var t={};return wt(c,function(r,n){re.call(c.prototype,n)||(t[n]=r)}),t}(),{chain:!1}),c.VERSION=i,et(["bind","bindKey","curry","curryRight","partial","partialRight"],function(t){c[t].placeholder=c}),et(["drop","take"],function(t,r){K.prototype[t]=function(n){n=n===e?1:ve(U(n),0);var o=this.__filtered__&&!r?new K(this):this.clone();return o.__filtered__?o.__takeCount__=Ae(n,o.__takeCount__):o.__views__.push({size:Ae(n,ze),type:t+(o.__dir__<0?"Right":"")}),o},K.prototype[t+"Right"]=function(n){return this.reverse()[t](n).reverse()}}),et(["filter","map","takeWhile"],function(t,r){var n=r+1,o=n==qi||n==yr;K.prototype[t]=function(l){var p=this.clone();return p.__iteratees__.push({iteratee:L(l,3),type:n}),p.__filtered__=p.__filtered__||o,p}}),et(["head","last"],function(t,r){var n="take"+(r?"Right":"");K.prototype[t]=function(){return this[n](1).value()[0]}}),et(["initial","tail"],function(t,r){var n="drop"+(r?"":"Right");K.prototype[t]=function(){return this.__filtered__?new K(this):this[n](1)}}),K.prototype.compact=function(){return this.filter(Ue)},K.prototype.find=function(t){return this.filter(t).head()},K.prototype.findLast=function(t){return this.reverse().find(t)},K.prototype.invokeMap=G(function(t,r){return typeof t=="function"?new K(this):this.map(function(n){return ir(n,t,r)})}),K.prototype.reject=function(t){return this.filter(fn(L(t)))},K.prototype.slice=function(t,r){t=U(t);var n=this;return n.__filtered__&&(t>0||r<0)?new K(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),r!==e&&(r=U(r),n=r<0?n.dropRight(-r):n.take(r-t)),n)},K.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},K.prototype.toArray=function(){return this.take(ze)},wt(K.prototype,function(t,r){var n=/^(?:filter|find|map|reject)|While$/.test(r),o=/^(?:head|last)$/.test(r),l=c[o?"take"+(r=="last"?"Right":""):r],p=o||/^find/.test(r);!l||(c.prototype[r]=function(){var d=this.__wrapped__,m=o?[1]:arguments,y=d instanceof K,_=m[0],C=y||V(d),k=function(z){var Z=l.apply(c,Ht([z],m));return o&&A?Z[0]:Z};C&&n&&typeof _=="function"&&_.length!=1&&(y=C=!1);var A=this.__chain__,F=!!this.__actions__.length,R=p&&!A,q=y&&!F;if(!p&&C){d=q?d:new K(this);var O=t.apply(d,m);return O.__actions__.push({func:on,args:[k],thisArg:e}),new it(O,A)}return R&&q?t.apply(this,m):(O=this.thru(k),R?o?O.value()[0]:O.value():O)})}),et(["pop","push","shift","sort","splice","unshift"],function(t){var r=Nr[t],n=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",o=/^(?:pop|shift)$/.test(t);c.prototype[t]=function(){var l=arguments;if(o&&!this.__chain__){var p=this.value();return r.apply(V(p)?p:[],l)}return this[n](function(d){return r.apply(V(d)?d:[],l)})}}),wt(K.prototype,function(t,r){var n=c[r];if(n){var o=n.name+"";re.call(Ii,o)||(Ii[o]=[]),Ii[o].push({name:r,func:n})}}),Ii[jr(e,$).name]=[{name:"wrapper",func:e}],K.prototype.clone=wp,K.prototype.reverse=Sp,K.prototype.value=_p,c.prototype.at=$d,c.prototype.chain=jd,c.prototype.commit=em,c.prototype.next=tm,c.prototype.plant=rm,c.prototype.reverse=nm,c.prototype.toJSON=c.prototype.valueOf=c.prototype.value=sm,c.prototype.first=c.prototype.head,Zi&&(c.prototype[Zi]=im),c},zt=ep();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(be._=zt,define(function(){return zt})):ai?((ai.exports=zt)._=zt,Zn._=zt):be._=zt}).call(Ri)});var Nn=xx(al());var $t=e=>[...new Set(e)];var ol=(e,i)=>e.sort(function(s,a){let u=i.indexOf(s),h=i.indexOf(a);return u>h?u!=-1&&h==-1?-1:1:h!=-1&&u==-1?1:-1});var jt="File";var mn=e=>e.lastIndexOf("/")!=-1?e.lastIndexOf(".")!=-1?ul(e.substring(e.lastIndexOf("/")+1,e.lastIndexOf("."))):e.substring(e.lastIndexOf("/")+1):e.lastIndexOf(".")!=-1?e.substring(0,e.lastIndexOf(".")):e;function ll(e){return Array.isArray(e)?e:typeof e=="string"?[e]:[]}var cl=(e,i)=>i.indexOf(e)>0?i.indexOf(e):i.length;var gn=e=>"spaces://"+e;var ul=e=>e.charAt(0)=="/"?e.substring(1):e;var ta=(e,i)=>{if(typeof e=="string"){if(/\\/\\/(\\S+?(?:jpe?g|png|gif|svg))/gi.test(e)||e.includes("unsplash"))return"image";if(/^\\d{4}-\\d{2}-\\d{2}$/.test(e))return"date";if(i=="tag"||i=="tags")return"tag";if(/\\[\\[.*?\\]\\]/.test(e))return"link"}else{if(typeof e=="number")return"number";if(typeof e=="boolean")return"boolean";if(e)if(Array.isArray(e)||typeof e=="string"&&e.indexOf(",")>-1){let s=Array.isArray(e)?e:[];if(typeof e=="string"&&e.indexOf(",")>-1&&(s=ei(e)),i=="tag"||i=="tags")return"tag-multi";if(s.length==1&&Array.isArray(s[0])&&s[0].length==1&&typeof s[0][0]=="string")return"link";let a=$t(s.map(u=>ta(u,i)));return a.length==1&&a[0]=="link"?"link-multi":a.some(u=>u=="object")?"object-multi":"option-multi"}else{if(e.isLuxonDateTime)return"date";if(e.isLuxonDuration)return"duration";if(e.type=="file")return"link";if(typeof e=="object"&&!Array.isArray(e)&&e!==null)return"object"}else return"unknown"}return"text"};var fl=e=>e.join(", "),Oi=e=>e.join(",");var ei=e=>{var i;return(i=e==null?void 0:e.match(/(\\\\.|[^,])+/g))!=null?i:[]},pl=(e,i)=>{switch(ta(i,e)){case"object":return JSON.stringify(i);case"number":return i.toString();case"boolean":return i?"true":"false";case"date":return i;case"duration":return fl(Object.keys(i.values).reduce((a,u)=>[...a,...i.values[u]>0?[i.values[u]+" "+u]:[]],[]));case"option-multi":case"link-multi":return typeof i=="string"?cr(i):Oi(i.map(a=>a?typeof a=="string"?cr(a):a.path?a.path:Array.isArray(i)&&a.length==1&&Array.isArray(a[0])&&a[0].length==1&&typeof a[0][0]=="string"?a[0][0]:JSON.stringify(a):""));case"link":return Array.isArray(i)&&i.length==1&&Array.isArray(i[0])&&i[0].length==1&&typeof i[0][0]=="string"?i[0][0]:typeof i=="string"?cr(i):i.path;case"text":case"tag":case"image":return i}return""};var cr=e=>{if(!e)return"";let i=/\\[\\[(.*?)\\]\\]/g.exec(e),s=(i==null?void 0:i.length)>1?i[1].substring(0,cl("|",i[1])):e;return s||e};var xn=(e,i)=>e==i,ia=(e,i)=>(e!=null?e:"").length==0,ra=(e,i)=>(e!=null?e:"").toLowerCase().includes((i!=null?i:"").toLowerCase()),na=(e,i)=>parseFloat(e)>parseFloat(i),sa=(e,i)=>parseInt(e)>parseInt(i),hl=(e,i)=>{let s=isNaN(Date.parse(e))?new Date(parseInt(e)):new Date(e),a=isNaN(Date.parse(i))?new Date(parseInt(i)):new Date(i);return s.valueOf()>a.valueOf()},dl=(e,i)=>{let s=isNaN(Date.parse(e))?new Date(parseInt(e)):new Date(e),a=isNaN(Date.parse(i))?new Date(parseInt(i)):new Date(i);return s.valueOf()<a.valueOf()},aa=(e,i)=>{let s=e?ei(e):[];return(i?ei(i):[]).some(u=>s.some(h=>h==u))},ml=e=>{let i=new Date(\`\${e}T00:00\`),s=new Date;return i.getMonth()===s.getMonth()&&i.getDate()===s.getDate()};var ti={isNotEmpty:{type:["text","file","link","link-multi","fileprop","image"],fn:(e,i)=>!ia(e,""),valueType:"none"},isEmpty:{type:["text","file","link","link-multi","fileprop","image"],fn:(e,i)=>ia(e,""),valueType:"none"},include:{fn:(e,i)=>ra(e,i),type:["text","file","link","link-multi","fileprop","image"],valueType:"text"},notInclude:{type:["text","file","link","link-multi","fileprop","image"],fn:(e,i)=>!ra(e,i),valueType:"text"},is:{type:["text","file","link","context","fileprop"],fn:(e,i)=>xn(e,i),valueType:"text"},isNot:{type:["text","file","link","context","fileprop"],fn:(e,i)=>!xn(e,i),valueType:"text"},equal:{type:["number"],fn:(e,i)=>xn(e,i),valueType:"number"},isGreatThan:{type:["number"],fn:(e,i)=>na(e,i),valueType:"number"},isLessThan:{type:["number"],fn:(e,i)=>sa(e,i),valueType:"number"},isLessThanOrEqual:{type:["number"],fn:(e,i)=>!na(e,i),valueType:"number"},isGreatThanOrEqual:{type:["number"],fn:(e,i)=>!sa(e,i),valueType:"number"},dateBefore:{type:["date","fileprop"],fn:(e,i)=>dl(e,i),valueType:"date"},dateAfter:{type:["date","fileprop"],fn:(e,i)=>hl(e,i),valueType:"date"},isSameDateAsToday:{type:["date"],fn:(e,i)=>ml(e,i),valueType:"none"},isAnyInList:{type:["option","context","option-multi","context-multi","tags-multi","tags"],fn:(e,i)=>aa(e,i),valueType:"list"},isNoneInList:{type:["option","context","option-multi","context-multi","tags-multi","tags"],fn:(e,i)=>!aa(e,i),valueType:"list"},isTrue:{type:["boolean"],fn:(e,i)=>e=="true",valueType:"none"},isFalse:{type:["boolean"],fn:(e,i)=>e!="true",valueType:"none"}};var yx=(e,i)=>i.reduce((a,u)=>{let[h,g]=a,b=u.type=="fileprop"?yl(g,u):u.type=="filemeta"?xl(g,u):u.type=="frontmatter"?gl(g,u):[],w=g.filter(T=>!b.includes(T));return[[...h,...b],w]},[[],e])[0],vx=(e,i)=>i.reduce((s,a)=>a.type=="fileprop"?yl(s,a):a.type=="filemeta"?xl(s,a):a.type=="frontmatter"?gl(s,a):[],e),gl=(e,i)=>e.filter(s=>{var g;let a=(g=s.metadata)==null?void 0:g.property;if(!a||!a[i.field])return!1;let u=ti[i.fn],h=!0;return u&&(h=u.fn(pl(i.field,a[i.field]),i.value)),h}),xl=(e,i)=>e.filter(s=>{let a="";i.field=="outlinks"?a=Oi(s.outlinks):i.field=="inlinks"?a=Oi(s.inlinks):i.field=="tags"&&(a=Oi(s.tags));let u=ti[i.fn],h=!0;return u&&(h=u.fn(a,i.value)),h}),yl=(e,i)=>e.filter(s=>{var b,w,T,P,W,X,oe;let a=["name","path","parent"],u=["isFolder","extension"],h=["color","sticker"],g=["ctime","mtime","size"];if(a.includes(i.field)){let M=ti[i.fn],$=!0;return M&&($=M.fn(s[i.field],i.value)),$}else if(u.includes(i.field)){let M=ti[i.fn],$=!0;return M&&($=M.fn((w=(b=s.metadata)==null?void 0:b.file)==null?void 0:w[i.field],i.value)),$}else if(h.includes(i.field)){let M=ti[i.fn],$=!0;return M&&($=M.fn((P=(T=s.metadata)==null?void 0:T.label)==null?void 0:P[i.field],i.value)),$}else if(g.includes(i.field)){let M=ti[i.fn],$=!0;return M&&($=M.fn((oe=(X=(W=s.metadata)==null?void 0:W.file)==null?void 0:X.stats)==null?void 0:oe[i.field],i.value)),$}return!0}),vl=(e,i)=>e.reduce((a,u)=>!a||u.filters.length==0?a:u.type=="any"?yx([i],u.filters).length>0:vx([i],u.filters).length>0,!0);var oa=class{constructor(){this.all={en:{hintText:{dragDropModifierKeys:"Hold \${1} to Pin and \${2} to Copy"},defaults:{spaceNote:"Space Note",spaceContext:"Space Files"},commands:{h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",h5:"Heading 5",h6:"Heading 6",columns:"Columns",button:"Button",label:"Label",column:"Column",group:"Group",paragraph:"Text",card:"Card",progress:"Progress",list:"Bullet List","ordered-list":"Numbered List",todo:"To-do List",quote:"Quote",divider:"Divider",note:"Link to Note",link:"Link",callout:"Callout",table:"Table",codeblock:"Code Block",emoji:"Emoji",image:"Image",flow:"Existing Note",newNote:"New Note",tag:"Tag",makeMenu:"Flow Menu",selectStyle:"Style",toggleKeyboard:"Toggle Keyboard",rows:"Rows",masonry:"Gallery"},styles:{bold:"Bold",italics:"Italics",strikethrough:"Strikethrough",code:"Code",link:"Web Link",blocklink:"Link to Note",textColor:"Text Color",highlight:"Highlight"},commandsSuggest:{noResult:"No result"},commandPalette:{enable:"Enable",disabled:"Disable",openFlow:"Open Flow Blocks in Selection",closeFlow:"Close Flow Blocks in Selection",toggleBold:"Toggle Bold",toggleItalics:"Toggle Italics",openSpaces:"Open Spaces",migrateData:"Migrate Spaces From 0.7",blink:"Blink",openFileContext:"Open Explorer",convertPathToSpace:"Convert to Space",revealFile:"Reveal File in Spaces",releaseNotes:"Release Notes",toggleBacklinks:"Toggle Backlinks",collapseAllFolders:"Collapse All Folders",addFileSpace:"Add File to Space",removeFileSpace:"Remove File from Space"},menu:{openSpace:"Open Space",revealInDefault:"Reveal in Finder",setNone:"None",fileMetadataDescription:"This note only",openFilePane:"Open in a new pane",rename:"Rename",changeToFolderNote:"New Space from Note",moveFile:"Move file to...",duplicate:"Make a copy",edit:"Edit",delete:"Delete",getHelp:"Make.md Community",vault:"Vault",openVault:"Open Another Vault",openVaultInFolder:"Open Vault Folder",obSettings:"Obsidian Settings",commandPalette:"Command Palette",backToSpace:"Back to Spaces",collapseAllSections:"Collapse All Spaces",expandAllSections:"Expand All Spaces",collapseAllFolders:"Collapse All Folders",expandAllFolders:"Expand All Folders",spaceTitle:"Add/Remove in Space",home:"Home",waypoints:"Waypoints",none:"None",tableView:"Table View",cardView:"Card View",listView:"List View",flowView:"Flow View",groupBy:"Group By",sortBy:"Sort By",newFilter:"New Filter",clearFilters:"Clear Filters",hide:"Hide",unhideFields:"Unhide All Properties",importDataview:"Import All Dataview Properties",saveAllProperties:"Save All Properties to Files",mergeProperties:"Merge Properties",removeFromSpace:"Unpin from Space",removeFromWaypoints:"Unpin from Waypoints",editCode:"Edit Code",deleteProperty:"Delete Property",hideProperty:"Hide Property",unhideProperty:"Unhide Property",saveProperty:"Save Property",sortAscending:"Sort Ascending",sortDescending:"Sort Descending",deleteRow:"Delete Item",collapseAll:"Collapse All",customSort:"Custom Sort",groupSpaces:"Group Spaces",fileNameSortAlphaAsc:"File Name (A to Z)",fileNameSortAlphaDesc:"File Name (Z to A)",createdTimeSortAsc:"Created Time (new to old)",createdTimeSortDesc:"Created Time (old to new)",modifiedTimeSortAsc:"Modified Time (new to old)",modifiedTimeSortDesc:"Modified Time (old to new)",spaces:"Spaces",tags:"Tags",manageHiddenFiles:"Manage Hidden Files",deleteSpace:"Delete",changeColor:"Change Color",changePropertyType:"Change Type",deleteFiles:"Delete Files",createFolderSpace:"Create Space from Folder",folder:"Folder",syncToContext:"Add Property to Context",setIcon:"Set Icon",copyEmbedLink:"Copy Embed Link",moveUp:"Move Up",moveDown:"Move Down",moveTo:"Move To",groupNodes:"Group Nodes",moveFrame:"Move Frame",renameFrame:"Rename Frame",deleteFrame:"Delete Frame"},buttons:{moreOptions:"More Options",saveProperty:"Save Property",newNote:"New Note",changeIcon:"Change Sticker",removeIcon:"Remove Sticker",changeBanner:"Change Cover",changeBannerShort:"Cover",saveChanges:"Save Changes",removeBanner:"Remove Cover",rename:"Change Name",editFrame:"Edit Frame",saveSpace:"Save Space",createSpace:"New Space",createFolder:"New Folder/Space",createNote:"New Note",createCanvas:"New Canvas",addIntoSpace:"New Pin",addSmartSearch:"Add Smart Search",addItem:"Add Item",addProperty:"Add Property",addContext:"Add Context",cancel:"Cancel",search:"Search",delete:"Delete",toggleFlow:"Toggle Flow",openFlow:"Open Flow",hideFlow:"Hide Flow",openLink:"Open Link",addToSpace:"Pin to Space",addToSpaceShort:"Pin",addTag:"Add Tag",tag:"Tag",syncFields:"Sync Properties",convertTable:"Convert to Markdown",cutTable:"Cut Table",deleteTable:"Delete Table",blink:"Blink",addFile:"Add Item",merge:"Merge",saveView:"Save View",saveTable:"Save Table",renameView:"Rename View",deleteView:"Delete View",renameTable:"Rename Table",renameTag:"Rename Tag",createTag:"Create Tag",currentFolder:"Current Folder",sync:"Sync",pasteCSS:"Paste CSS"},metadataTypes:{fileName:"File Name",path:"Path",folder:"Folder",sticker:"Sticker",color:"Color",created:"Created",lastModified:"Last Modified",extension:"Extension",size:"Size",tags:"Tags",inlinks:"Linked Mentions",outlinks:"Links"},filterTypes:{contains:"contains",notContains:"does not contain",is:"is",isNot:"is not",before:"before",after:"after",anyOf:"is any of",noneOf:"is none of",checked:"is checked",unchecked:"is unchecked",isEmpty:"is empty",isNotEmpty:"is not empty"},sortTypes:{alphaAsc:"A to Z",alphaDesc:"Z to A",earliest:"Earliest",latest:"Latest",checkAsc:"Checked \\u2192 Unchecked",checkDesc:"Unchecked \\u2192 Checked",itemsAsc:"Least Items",itemsDesc:"Most Items"},properties:{defaultField:"Name",text:{label:"Text"},number:{label:"Number"},preview:{label:"Preview"},boolean:{label:"Yes/No"},date:{label:"Date"},option:{label:"Option"},file:{label:"File"},link:{label:"Link"},tags:{label:"Tags"},object:{label:"Object"},context:{label:"Relation"},image:{label:"Image"},color:{label:"Color"},space:{label:"Space"},icon:{label:"Icon"},super:{label:"Super Property",links:"Links",obsidianCommands:"Obsidian Commands",runCommand:"Run Command",performAction:"Perform Action",whenClicked:"When Clicked"},fileProperty:{name:"Name",label:"Look Up",createdTime:"Created",modifiedTime:"Last Edited",sticker:"Sticker",extension:"Extension",size:"Size",preview:"Note Preview",parentFolder:"Folder"}},labels:{createFolder:"New Folder Name",rename:"Rename",createNew:"New",default:"Default",done:"Done",tables:"Tables",selectDateFormat:"Select/Type Date Format",renameSectionSmart:"Edit Smart Space",renameSection:"Edit Space",createSectionSmart:"New Smart Space",createSection:"New Space",createNote:"New Note Name",contextMaker:"Context Maker",select:"Select",pinnedItems:"Pinned Items",collapse:"Collapse",expand:"Expand",all:"All",none:"None",view:"View",findStickers:"Find Sticker",mergeProperties:"Merge Properties",placeholder:"Type '\${1}' for commands",itemsSelected:"\${1} Selected",selectNote:"Select Note",selectIcon:"Select Icon",selectImage:"Select Image",selectSpace:"Select Space",styleSmall:"Small",styleMedium:"Medium",styleLarge:"Large",hiddenFilePattern:"Name, Suffixes and Extension",hiddenFileSpecific:"Exclude specific files and folders",textPlaceholder:"Enter Text",noFile:"is not created yet. Click to create.",navigatorSearchPlaceholder:"Search by Text or Filters",blinkPlaceholder:"Quickly Search a File, Folder, Tag... Press Tab to Edit",searchPlaceholder:"Type to search...",contextItemSelectPlaceholder:"Find Item",linkItemSelectPlaceholder:"Find or Create Note",pinNotePlaceholder:"Select a Note or Space to Pin",optionItemSelectPlaceholder:"Select Option",viewItemSelectPlaceholder:"Select View",tagItemSelectPlaceholder:"Find Tag",spaceSelectPlaceholder:"Select Space",propertyItemSelectPlaceholder:"Select Property",sortItemSelectPlaceholder:"Select Sort",filterItemSelectPlaceholder:"Select Filter",imageSelectPlaceholder:"Select an image or paste a URL",imageNotFoundPlaceholder:"No Images Found",syncFrontmatterProperty:"Sync Frontmatter Property",newProperty:"New Property",newPropertyShort:"New Property",propertyType:"Type",propertyValueSpace:"Space",propertyValueProperty:"Property",propertyLookup:"Look Up",dateFormat:"Date Format",propertyFileProp:"Property",multiple:"Multiple",filesCount:"{$1} Files",hiddenFiles:"Hidden Files",addExtension:"Add Rule",saveView:"Save View",saveTable:"Save Table",renameView:"Rename View",renameTable:"Rename Table",syncMetadata:"Sync Metadata",syncProperties:"Sync Properties",selectContext:"Select Context",metadata:"Metadata",backlinks:"Backlinks",spaces:"Spaces",context:"Context",properties:"Properties",content:"Content",deleteSpace:"Delete Space",deleteFiles:"Delete Files",outgoingLinks:"Outgoing Links",moveTo:"Move to",addTo:"Pin to",copyTo:"Copy to",reorderIn:"Reorder in",border:"Border",corners:"Corners",color:"Color",backgroundColor:"Background",cornerRadius:"Radius",onClick:"On Click",layout:"Layout",element:"Element",name:"Name",display:"Display",alignment:"Alignment",margin:"Margin",padding:"Padding",gap:"Gap",width:"Width",height:"Height",opacity:"Opacity",shadow:"Shadow",shadowBlur:"Blur",shadowSpread:"Spread",typography:"Typography",layers:"Layers",fontSize:"Size",props:"Props",styles:"Styles",events:"Events",code:"Code",selectedLayers:"\${1} Layers"},descriptions:{hiddenFileOptions:"Exclude any files and folders by name, suffix or extension.",deleteSpace:"Deleting the space will also delete the folder and its contents.",deleteFiles:"Delete \${1} files/folders and their contents?",addContext:"Contexts lets you connect properties from your tags",spaceProperties:"Define Properties for your Space Items",syncMetadata:"Select which fields from your notes to start syncing with the context.",syncProperties:"Contexts defines and syncs the same fields across your notes depending on their folder or tag.",selectContext:"Select which folder or tag context you want to sync the fields."},flowView:{emptyDoc:"Empty Document",itemsCount:" Items",emptyFolder:"This Folder is Empty"},notice:{duplicateFile:"Folder already contains note with same name",addedToSection:"Added to Space",fileExists:"File Already Exists",folderExists:"Folder Already Exists",noPropertyName:"Property Name is Required",duplicatePropertyName:"Duplicate Property Name",newSpaceName:"Enter a name for your space",duplicateSpaceName:"Space name already exists",cantConvertNoteToSpace:"The view is not a note"},settings:{layoutVertical:"Vertical",layoutHorizontal:"Horizontal",sectionSidebar:"Spaces",sectionEditor:"Maker Mode",sectionFlow:"Flow",sectionAdvanced:"Advanced",sectionDataview:"Dataview",sectionContext:"Context",sectionNavigator:"Navigator",sectionDefault:"Default Spaces",sectionBlink:"Blink",sectionInlineContext:"Inline Context",sectionFlowBlock:"Flow Block",sectionFlowMenu:"Flow Menu",sectionFlowStyler:"Flow Styler",minimalThemeFix:{name:"Minimal Theme Fix",description:"Apply fixes for the popular theme Minimal"},inlineStickerMenu:{name:"Inline Stickers",desc:"Add inline stickers by typing :"},openSpacesOnLaunch:{name:"Open Spaces as Default Tab",desc:"Open the Spaces tab when Obsidian launches"},defaultDateFormat:{name:"Default Date Format",desc:"Set the default date format, example: yyyy-MM-dd (see https://date-fns.org/v2.30.0/docs/format)"},newNotePlaceholder:{name:"New Note Placeholder",desc:"Default name for new notes"},folderIndentationLines:{name:"Show Folder Indentation Lines",desc:"Turn on to show a line on the left of folders to indicate indentation"},folderNoteLocation:{name:"Folder Note Location Inside Folder",desc:"Turn on to have folder notes inside the folder, turn off to have it outside"},folderViewDefault:{name:"Show Folder Note by Default",desc:"Show the folder note by default when opening a folder"},internalLinkFlowEditor:{name:"Open Flow Blocks on Internal Link Click",desc:"Turn on to toggle Flow Blocks directly by clicking on internal links, otherwise a tooltip will be shown"},syncContextToFrontmatter:{name:"Sync Context Fields to Frontmatter",desc:"Turn on to automatically save all context fields to frontmatter fields, not just existing frontmatter fields."},inlineBacklinks:{name:"Show Inline Backlinks (Inline Context required)",desc:"Show editable backlinks at the bottom of your notes"},dataviewInlineContext:{name:"Show Dataview in Inline Context",desc:"Show dataview when inline context is enabled"},inlineContextExplorer:{name:"Inline Context",desc:"Display the context and a banner at the top of your notes"},inlineContextExpanded:{name:"Auto Expand Inline Context",desc:"Expand the inline context sections when opening a note"},inlineContextHorizontal:{name:"Inline Title and Sticker Layout",desc:"Layout for inline title and sticker in Inline Context"},hideFrontmatter:{name:"Hide Frontmatter Properties",desc:"Hide the frontmatter properties in inline context"},openFileContext:{name:"Auto Open Explorer",desc:"Automatically open explorer panel in the right panel"},folderNote:{name:"Enable Folder Note",desc:"Access the folder note in the folder page and hide the folder note from spaces"},expandFolder:{name:"Auto Expand Folder",desc:"Auto expand folders on click"},hoverPreview:{name:"Preview on Hover",desc:"Preview on Hover while holding Control/Command key"},activeFile:{name:"Reveal Active File",desc:"Automatically reveal the active file in Spaces"},contexts:{name:"Contexts",desc:"Contexts allows you to have full control over the metadata of your files"},spaces:{name:"Navigator",desc:"The navigator lets you create and organize your spaces"},spacesStickers:{name:"Stickers",desc:"Use Emojis to make it easier to find your notes"},spacesAlias:{name:"Alias",desc:"Use the alias metadata to show in Spaces"},spacesFileExplorerDual:{name:"Compatibility Mode",desc:"This will improve the compatibility of plugins while using Spaces"},spacesDeleteOption:{name:"Delete File Option",desc:"Select how you want files to be deleted"},spacesDeleteOptions:{permanant:"Delete Permanently",trash:"Move to Obsidian Trash","system-trash":"Move to System Trash"},hideRibbon:{name:"App Ribbon",desc:"Show/hide the left menu aka. ribbon"},spaceView:{name:"Space View",desc:"Open the space view when you click on a space"},defaultSpaces:{name:"Default Spaces",desc:"Recommended spaces for quickly organizing your vault"},homeSpace:{name:"Home Space",desc:"An easy-to-access space where you can add/organize your other spaces"},tagSpaces:{name:"Tag Spaces",desc:"Automatically create spaces for each of your tags"},readableLineWidth:{name:"Readable Line Width",desc:"Use Readable Line Width"},sidebarTabs:{name:"Sidebar Tabs",desc:"Show/hide other sidebar tabs"},spacesPerformance:{name:"Performance Mode",desc:"Turn on performance mode for Spaces, may affect scrolling appearance. Requires Restart"},indexSVG:{name:"Use SVGs as Stickers",desc:"Use any svg file in your vault as a sticker"},inlineStyler:{name:"Flow Styler",desc:"Select text to add styling"},inlineStylerColor:{name:"Text and Highlight Colors \\u{1F9EA}",desc:"Select text color and highlight color, (this may change in the future because of the limitations with HTML and Obsidian)"},spaceRowHeight:{name:"Row Height",desc:"The height for each row in spaces (in pixels), default is 28"},makeChar:{name:"Flow Menu Trigger",desc:"Character to open the Flow Menu"},mobileMakeBar:{name:"Flow Styler (Mobile)",desc:"Replaces the mobile toolbar"},editorMarkSans:{name:"Mark Sans \\u{1F9EA}",desc:"Use the editor without Markdown."},editorMakerMode:{name:"Flow (Beta)",desc:"An integrated and intuitive editor experience"},editorMakePlacholder:{name:"Flow Menu Hint Text",desc:"Show a hint text on how to open the Flow Menu Shortcut"},blink:{name:"Blink",desc:"A faster way to search and edit your notes"},editorMakeMenu:{name:"Flow Menu",desc:"Open the Flow menu to quickly add content"},editorMakeMenuTrigger:{name:"Flow Menu Shortcut",desc:"Trigger key to use flow menu"},editorFlowReplace:{name:"Flow Block",desc:"Open your internal links or toggle your embeds in the flow block."},editorFlowStyle:{name:"Flow Block Style",desc:"Select a theme for your flow block",seamless:"Seamless",classic:"Classic",minimal:"Minimal"}}}};this.lang="en"}get texts(){return this.all.en}},Y=new oa().texts;var bx=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239],Cl=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191],wx="\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F",kl="\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC",ua={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},la="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",Sx={5:la,"5module":la+" export import",6:la+" const class extends export import super"},_x=/^in(stanceof)?$/,Cx=new RegExp("["+kl+"]"),kx=new RegExp("["+kl+wx+"]");function fa(e,i){for(var s=65536,a=0;a<i.length;a+=2){if(s+=i[a],s>e)return!1;if(s+=i[a+1],s>=e)return!0}return!1}function Wt(e,i){return e<65?e===36:e<91?!0:e<97?e===95:e<123?!0:e<=65535?e>=170&&Cx.test(String.fromCharCode(e)):i===!1?!1:fa(e,Cl)}function Di(e,i){return e<48?e===36:e<58?!0:e<65?!1:e<91?!0:e<97?e===95:e<123?!0:e<=65535?e>=170&&kx.test(String.fromCharCode(e)):i===!1?!1:fa(e,Cl)||fa(e,bx)}var j=function(i,s){s===void 0&&(s={}),this.label=i,this.keyword=s.keyword,this.beforeExpr=!!s.beforeExpr,this.startsExpr=!!s.startsExpr,this.isLoop=!!s.isLoop,this.isAssign=!!s.isAssign,this.prefix=!!s.prefix,this.postfix=!!s.postfix,this.binop=s.binop||null,this.updateContext=null};function ot(e,i){return new j(e,{beforeExpr:!0,binop:i})}var ut={beforeExpr:!0},qe={startsExpr:!0},da={};function J(e,i){return i===void 0&&(i={}),i.keyword=e,da[e]=new j(e,i)}var f={num:new j("num",qe),regexp:new j("regexp",qe),string:new j("string",qe),name:new j("name",qe),privateId:new j("privateId",qe),eof:new j("eof"),bracketL:new j("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new j("]"),braceL:new j("{",{beforeExpr:!0,startsExpr:!0}),braceR:new j("}"),parenL:new j("(",{beforeExpr:!0,startsExpr:!0}),parenR:new j(")"),comma:new j(",",ut),semi:new j(";",ut),colon:new j(":",ut),dot:new j("."),question:new j("?",ut),questionDot:new j("?."),arrow:new j("=>",ut),template:new j("template"),invalidTemplate:new j("invalidTemplate"),ellipsis:new j("...",ut),backQuote:new j("\`",qe),dollarBraceL:new j("\${",{beforeExpr:!0,startsExpr:!0}),eq:new j("=",{beforeExpr:!0,isAssign:!0}),assign:new j("_=",{beforeExpr:!0,isAssign:!0}),incDec:new j("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new j("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:ot("||",1),logicalAND:ot("&&",2),bitwiseOR:ot("|",3),bitwiseXOR:ot("^",4),bitwiseAND:ot("&",5),equality:ot("==/!=/===/!==",6),relational:ot("</>/<=/>=",7),bitShift:ot("<</>>/>>>",8),plusMin:new j("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:ot("%",10),star:ot("*",10),slash:ot("/",10),starstar:new j("**",{beforeExpr:!0}),coalesce:ot("??",1),_break:J("break"),_case:J("case",ut),_catch:J("catch"),_continue:J("continue"),_debugger:J("debugger"),_default:J("default",ut),_do:J("do",{isLoop:!0,beforeExpr:!0}),_else:J("else",ut),_finally:J("finally"),_for:J("for",{isLoop:!0}),_function:J("function",qe),_if:J("if"),_return:J("return",ut),_switch:J("switch"),_throw:J("throw",ut),_try:J("try"),_var:J("var"),_const:J("const"),_while:J("while",{isLoop:!0}),_with:J("with"),_new:J("new",{beforeExpr:!0,startsExpr:!0}),_this:J("this",qe),_super:J("super",qe),_class:J("class",qe),_extends:J("extends",ut),_export:J("export"),_import:J("import",qe),_null:J("null",qe),_true:J("true",qe),_false:J("false",qe),_in:J("in",{beforeExpr:!0,binop:7}),_instanceof:J("instanceof",{beforeExpr:!0,binop:7}),_typeof:J("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:J("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:J("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},ct=/\\r\\n?|\\n|\\u2028|\\u2029/,Tx=new RegExp(ct.source,"g");function Mi(e){return e===10||e===13||e===8232||e===8233}function Tl(e,i,s){s===void 0&&(s=e.length);for(var a=i;a<s;a++){var u=e.charCodeAt(a);if(Mi(u))return a<s-1&&u===13&&e.charCodeAt(a+1)===10?a+2:a+1}return-1}var Il=/[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,lt=/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g,Al=Object.prototype,Ix=Al.hasOwnProperty,Ax=Al.toString,dr=Object.hasOwn||function(e,i){return Ix.call(e,i)},bl=Array.isArray||function(e){return Ax.call(e)==="[object Array]"};function mi(e){return new RegExp("^(?:"+e.replace(/ /g,"|")+")$")}function ii(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode((e>>10)+55296,(e&1023)+56320))}var Ex=/(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/,pr=function(i,s){this.line=i,this.column=s};pr.prototype.offset=function(i){return new pr(this.line,this.column+i)};var Sn=function(i,s,a){this.start=s,this.end=a,i.sourceFile!==null&&(this.source=i.sourceFile)};function El(e,i){for(var s=1,a=0;;){var u=Tl(e,a,i);if(u<0)return new pr(s,i-a);++s,a=u}}var pa={ecmaVersion:null,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:null,allowSuperOutsideMethod:null,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1},wl=!1;function Px(e){var i={};for(var s in pa)i[s]=e&&dr(e,s)?e[s]:pa[s];if(i.ecmaVersion==="latest"?i.ecmaVersion=1e8:i.ecmaVersion==null?(!wl&&typeof console=="object"&&console.warn&&(wl=!0,console.warn(\`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.\`)),i.ecmaVersion=11):i.ecmaVersion>=2015&&(i.ecmaVersion-=2009),i.allowReserved==null&&(i.allowReserved=i.ecmaVersion<5),(!e||e.allowHashBang==null)&&(i.allowHashBang=i.ecmaVersion>=14),bl(i.onToken)){var a=i.onToken;i.onToken=function(u){return a.push(u)}}return bl(i.onComment)&&(i.onComment=Fx(i,i.onComment)),i}function Fx(e,i){return function(s,a,u,h,g,b){var w={type:s?"Block":"Line",value:a,start:u,end:h};e.locations&&(w.loc=new Sn(this,g,b)),e.ranges&&(w.range=[u,h]),i.push(w)}}var hr=1,Bi=2,ma=4,Pl=8,Fl=16,Nl=32,ga=64,Ll=128,mr=256,xa=hr|Bi|mr;function ya(e,i){return Bi|(e?ma:0)|(i?Pl:0)}var vn=0,va=1,Vt=2,Rl=3,Ol=4,Dl=5,Se=function(i,s,a){this.options=i=Px(i),this.sourceFile=i.sourceFile,this.keywords=mi(Sx[i.ecmaVersion>=6?6:i.sourceType==="module"?"5module":5]);var u="";i.allowReserved!==!0&&(u=ua[i.ecmaVersion>=6?6:i.ecmaVersion===5?5:3],i.sourceType==="module"&&(u+=" await")),this.reservedWords=mi(u);var h=(u?u+" ":"")+ua.strict;this.reservedWordsStrict=mi(h),this.reservedWordsStrictBind=mi(h+" "+ua.strictBind),this.input=String(s),this.containsEsc=!1,a?(this.pos=a,this.lineStart=this.input.lastIndexOf(\`
\`,a-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(ct).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=f.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule=i.sourceType==="module",this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.potentialArrowInForAwait=!1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports=Object.create(null),this.pos===0&&i.allowHashBang&&this.input.slice(0,2)==="#!"&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(hr),this.regexpState=null,this.privateNameStack=[]},Ct={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},canAwait:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0},allowNewDotTarget:{configurable:!0},inClassStaticBlock:{configurable:!0}};Se.prototype.parse=function(){var i=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(i)};Ct.inFunction.get=function(){return(this.currentVarScope().flags&Bi)>0};Ct.inGenerator.get=function(){return(this.currentVarScope().flags&Pl)>0&&!this.currentVarScope().inClassFieldInit};Ct.inAsync.get=function(){return(this.currentVarScope().flags&ma)>0&&!this.currentVarScope().inClassFieldInit};Ct.canAwait.get=function(){for(var e=this.scopeStack.length-1;e>=0;e--){var i=this.scopeStack[e];if(i.inClassFieldInit||i.flags&mr)return!1;if(i.flags&Bi)return(i.flags&ma)>0}return this.inModule&&this.options.ecmaVersion>=13||this.options.allowAwaitOutsideFunction};Ct.allowSuper.get=function(){var e=this.currentThisScope(),i=e.flags,s=e.inClassFieldInit;return(i&ga)>0||s||this.options.allowSuperOutsideMethod};Ct.allowDirectSuper.get=function(){return(this.currentThisScope().flags&Ll)>0};Ct.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())};Ct.allowNewDotTarget.get=function(){var e=this.currentThisScope(),i=e.flags,s=e.inClassFieldInit;return(i&(Bi|mr))>0||s};Ct.inClassStaticBlock.get=function(){return(this.currentVarScope().flags&mr)>0};Se.extend=function(){for(var i=[],s=arguments.length;s--;)i[s]=arguments[s];for(var a=this,u=0;u<i.length;u++)a=i[u](a);return a};Se.parse=function(i,s){return new this(s,i).parse()};Se.parseExpressionAt=function(i,s,a){var u=new this(a,i,s);return u.nextToken(),u.parseExpression()};Se.tokenizer=function(i,s){return new this(s,i)};Object.defineProperties(Se.prototype,Ct);var Le=Se.prototype,Nx=/^(?:'((?:\\\\.|[^'\\\\])*?)'|"((?:\\\\.|[^"\\\\])*?)")/;Le.strictDirective=function(e){if(this.options.ecmaVersion<5)return!1;for(;;){lt.lastIndex=e,e+=lt.exec(this.input)[0].length;var i=Nx.exec(this.input.slice(e));if(!i)return!1;if((i[1]||i[2])==="use strict"){lt.lastIndex=e+i[0].length;var s=lt.exec(this.input),a=s.index+s[0].length,u=this.input.charAt(a);return u===";"||u==="}"||ct.test(s[0])&&!(/[(\`.[+\\-/*%<>=,?^&]/.test(u)||u==="!"&&this.input.charAt(a+1)==="=")}e+=i[0].length,lt.lastIndex=e,e+=lt.exec(this.input)[0].length,this.input[e]===";"&&e++}};Le.eat=function(e){return this.type===e?(this.next(),!0):!1};Le.isContextual=function(e){return this.type===f.name&&this.value===e&&!this.containsEsc};Le.eatContextual=function(e){return this.isContextual(e)?(this.next(),!0):!1};Le.expectContextual=function(e){this.eatContextual(e)||this.unexpected()};Le.canInsertSemicolon=function(){return this.type===f.eof||this.type===f.braceR||ct.test(this.input.slice(this.lastTokEnd,this.start))};Le.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0};Le.semicolon=function(){!this.eat(f.semi)&&!this.insertSemicolon()&&this.unexpected()};Le.afterTrailingComma=function(e,i){if(this.type===e)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),i||this.next(),!0};Le.expect=function(e){this.eat(e)||this.unexpected()};Le.unexpected=function(e){this.raise(e!=null?e:this.start,"Unexpected token")};var _n=function(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1};Le.checkPatternErrors=function(e,i){if(!!e){e.trailingComma>-1&&this.raiseRecoverable(e.trailingComma,"Comma is not permitted after the rest element");var s=i?e.parenthesizedAssign:e.parenthesizedBind;s>-1&&this.raiseRecoverable(s,i?"Assigning to rvalue":"Parenthesized pattern")}};Le.checkExpressionErrors=function(e,i){if(!e)return!1;var s=e.shorthandAssign,a=e.doubleProto;if(!i)return s>=0||a>=0;s>=0&&this.raise(s,"Shorthand property assignments are valid only in destructuring patterns"),a>=0&&this.raiseRecoverable(a,"Redefinition of __proto__ property")};Le.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value")};Le.isSimpleAssignTarget=function(e){return e.type==="ParenthesizedExpression"?this.isSimpleAssignTarget(e.expression):e.type==="Identifier"||e.type==="MemberExpression"};var D=Se.prototype;D.parseTopLevel=function(e){var i=Object.create(null);for(e.body||(e.body=[]);this.type!==f.eof;){var s=this.parseStatement(null,!0,i);e.body.push(s)}if(this.inModule)for(var a=0,u=Object.keys(this.undefinedExports);a<u.length;a+=1){var h=u[a];this.raiseRecoverable(this.undefinedExports[h].start,"Export '"+h+"' is not defined")}return this.adaptDirectivePrologue(e.body),this.next(),e.sourceType=this.options.sourceType,this.finishNode(e,"Program")};var ba={kind:"loop"},Lx={kind:"switch"};D.isLet=function(e){if(this.options.ecmaVersion<6||!this.isContextual("let"))return!1;lt.lastIndex=this.pos;var i=lt.exec(this.input),s=this.pos+i[0].length,a=this.input.charCodeAt(s);if(a===91||a===92)return!0;if(e)return!1;if(a===123||a>55295&&a<56320)return!0;if(Wt(a,!0)){for(var u=s+1;Di(a=this.input.charCodeAt(u),!0);)++u;if(a===92||a>55295&&a<56320)return!0;var h=this.input.slice(s,u);if(!_x.test(h))return!0}return!1};D.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return!1;lt.lastIndex=this.pos;var e=lt.exec(this.input),i=this.pos+e[0].length,s;return!ct.test(this.input.slice(this.pos,i))&&this.input.slice(i,i+8)==="function"&&(i+8===this.input.length||!(Di(s=this.input.charCodeAt(i+8))||s>55295&&s<56320))};D.parseStatement=function(e,i,s){var a=this.type,u=this.startNode(),h;switch(this.isLet(e)&&(a=f._var,h="let"),a){case f._break:case f._continue:return this.parseBreakContinueStatement(u,a.keyword);case f._debugger:return this.parseDebuggerStatement(u);case f._do:return this.parseDoStatement(u);case f._for:return this.parseForStatement(u);case f._function:return e&&(this.strict||e!=="if"&&e!=="label")&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(u,!1,!e);case f._class:return e&&this.unexpected(),this.parseClass(u,!0);case f._if:return this.parseIfStatement(u);case f._return:return this.parseReturnStatement(u);case f._switch:return this.parseSwitchStatement(u);case f._throw:return this.parseThrowStatement(u);case f._try:return this.parseTryStatement(u);case f._const:case f._var:return h=h||this.value,e&&h!=="var"&&this.unexpected(),this.parseVarStatement(u,h);case f._while:return this.parseWhileStatement(u);case f._with:return this.parseWithStatement(u);case f.braceL:return this.parseBlock(!0,u);case f.semi:return this.parseEmptyStatement(u);case f._export:case f._import:if(this.options.ecmaVersion>10&&a===f._import){lt.lastIndex=this.pos;var g=lt.exec(this.input),b=this.pos+g[0].length,w=this.input.charCodeAt(b);if(w===40||w===46)return this.parseExpressionStatement(u,this.parseExpression())}return this.options.allowImportExportEverywhere||(i||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),a===f._import?this.parseImport(u):this.parseExport(u,s);default:if(this.isAsyncFunction())return e&&this.unexpected(),this.next(),this.parseFunctionStatement(u,!0,!e);var T=this.value,P=this.parseExpression();return a===f.name&&P.type==="Identifier"&&this.eat(f.colon)?this.parseLabeledStatement(u,T,P,e):this.parseExpressionStatement(u,P)}};D.parseBreakContinueStatement=function(e,i){var s=i==="break";this.next(),this.eat(f.semi)||this.insertSemicolon()?e.label=null:this.type!==f.name?this.unexpected():(e.label=this.parseIdent(),this.semicolon());for(var a=0;a<this.labels.length;++a){var u=this.labels[a];if((e.label==null||u.name===e.label.name)&&(u.kind!=null&&(s||u.kind==="loop")||e.label&&s))break}return a===this.labels.length&&this.raise(e.start,"Unsyntactic "+i),this.finishNode(e,s?"BreakStatement":"ContinueStatement")};D.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,"DebuggerStatement")};D.parseDoStatement=function(e){return this.next(),this.labels.push(ba),e.body=this.parseStatement("do"),this.labels.pop(),this.expect(f._while),e.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(f.semi):this.semicolon(),this.finishNode(e,"DoWhileStatement")};D.parseForStatement=function(e){this.next();var i=this.options.ecmaVersion>=9&&this.canAwait&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(ba),this.enterScope(0),this.expect(f.parenL),this.type===f.semi)return i>-1&&this.unexpected(i),this.parseFor(e,null);var s=this.isLet();if(this.type===f._var||this.type===f._const||s){var a=this.startNode(),u=s?"let":this.value;return this.next(),this.parseVar(a,!0,u),this.finishNode(a,"VariableDeclaration"),(this.type===f._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&a.declarations.length===1?(this.options.ecmaVersion>=9&&(this.type===f._in?i>-1&&this.unexpected(i):e.await=i>-1),this.parseForIn(e,a)):(i>-1&&this.unexpected(i),this.parseFor(e,a))}var h=this.isContextual("let"),g=!1,b=new _n,w=this.parseExpression(i>-1?"await":!0,b);return this.type===f._in||(g=this.options.ecmaVersion>=6&&this.isContextual("of"))?(this.options.ecmaVersion>=9&&(this.type===f._in?i>-1&&this.unexpected(i):e.await=i>-1),h&&g&&this.raise(w.start,"The left-hand side of a for-of loop may not start with 'let'."),this.toAssignable(w,!1,b),this.checkLValPattern(w),this.parseForIn(e,w)):(this.checkExpressionErrors(b,!0),i>-1&&this.unexpected(i),this.parseFor(e,w))};D.parseFunctionStatement=function(e,i,s){return this.next(),this.parseFunction(e,fr|(s?0:ha),!1,i)};D.parseIfStatement=function(e){return this.next(),e.test=this.parseParenExpression(),e.consequent=this.parseStatement("if"),e.alternate=this.eat(f._else)?this.parseStatement("if"):null,this.finishNode(e,"IfStatement")};D.parseReturnStatement=function(e){return!this.inFunction&&!this.options.allowReturnOutsideFunction&&this.raise(this.start,"'return' outside of function"),this.next(),this.eat(f.semi)||this.insertSemicolon()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,"ReturnStatement")};D.parseSwitchStatement=function(e){this.next(),e.discriminant=this.parseParenExpression(),e.cases=[],this.expect(f.braceL),this.labels.push(Lx),this.enterScope(0);for(var i,s=!1;this.type!==f.braceR;)if(this.type===f._case||this.type===f._default){var a=this.type===f._case;i&&this.finishNode(i,"SwitchCase"),e.cases.push(i=this.startNode()),i.consequent=[],this.next(),a?i.test=this.parseExpression():(s&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),s=!0,i.test=null),this.expect(f.colon)}else i||this.unexpected(),i.consequent.push(this.parseStatement(null));return this.exitScope(),i&&this.finishNode(i,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(e,"SwitchStatement")};D.parseThrowStatement=function(e){return this.next(),ct.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,"ThrowStatement")};var Rx=[];D.parseTryStatement=function(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.type===f._catch){var i=this.startNode();if(this.next(),this.eat(f.parenL)){i.param=this.parseBindingAtom();var s=i.param.type==="Identifier";this.enterScope(s?Nl:0),this.checkLValPattern(i.param,s?Ol:Vt),this.expect(f.parenR)}else this.options.ecmaVersion<10&&this.unexpected(),i.param=null,this.enterScope(0);i.body=this.parseBlock(!1),this.exitScope(),e.handler=this.finishNode(i,"CatchClause")}return e.finalizer=this.eat(f._finally)?this.parseBlock():null,!e.handler&&!e.finalizer&&this.raise(e.start,"Missing catch or finally clause"),this.finishNode(e,"TryStatement")};D.parseVarStatement=function(e,i){return this.next(),this.parseVar(e,!1,i),this.semicolon(),this.finishNode(e,"VariableDeclaration")};D.parseWhileStatement=function(e){return this.next(),e.test=this.parseParenExpression(),this.labels.push(ba),e.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(e,"WhileStatement")};D.parseWithStatement=function(e){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),e.object=this.parseParenExpression(),e.body=this.parseStatement("with"),this.finishNode(e,"WithStatement")};D.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,"EmptyStatement")};D.parseLabeledStatement=function(e,i,s,a){for(var u=0,h=this.labels;u<h.length;u+=1){var g=h[u];g.name===i&&this.raise(s.start,"Label '"+i+"' is already declared")}for(var b=this.type.isLoop?"loop":this.type===f._switch?"switch":null,w=this.labels.length-1;w>=0;w--){var T=this.labels[w];if(T.statementStart===e.start)T.statementStart=this.start,T.kind=b;else break}return this.labels.push({name:i,kind:b,statementStart:this.start}),e.body=this.parseStatement(a?a.indexOf("label")===-1?a+"label":a:"label"),this.labels.pop(),e.label=s,this.finishNode(e,"LabeledStatement")};D.parseExpressionStatement=function(e,i){return e.expression=i,this.semicolon(),this.finishNode(e,"ExpressionStatement")};D.parseBlock=function(e,i,s){for(e===void 0&&(e=!0),i===void 0&&(i=this.startNode()),i.body=[],this.expect(f.braceL),e&&this.enterScope(0);this.type!==f.braceR;){var a=this.parseStatement(null);i.body.push(a)}return s&&(this.strict=!1),this.next(),e&&this.exitScope(),this.finishNode(i,"BlockStatement")};D.parseFor=function(e,i){return e.init=i,this.expect(f.semi),e.test=this.type===f.semi?null:this.parseExpression(),this.expect(f.semi),e.update=this.type===f.parenR?null:this.parseExpression(),this.expect(f.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,"ForStatement")};D.parseForIn=function(e,i){var s=this.type===f._in;return this.next(),i.type==="VariableDeclaration"&&i.declarations[0].init!=null&&(!s||this.options.ecmaVersion<8||this.strict||i.kind!=="var"||i.declarations[0].id.type!=="Identifier")&&this.raise(i.start,(s?"for-in":"for-of")+" loop variable declaration may not have an initializer"),e.left=i,e.right=s?this.parseExpression():this.parseMaybeAssign(),this.expect(f.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,s?"ForInStatement":"ForOfStatement")};D.parseVar=function(e,i,s){for(e.declarations=[],e.kind=s;;){var a=this.startNode();if(this.parseVarId(a,s),this.eat(f.eq)?a.init=this.parseMaybeAssign(i):s==="const"&&!(this.type===f._in||this.options.ecmaVersion>=6&&this.isContextual("of"))?this.unexpected():a.id.type!=="Identifier"&&!(i&&(this.type===f._in||this.isContextual("of")))?this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):a.init=null,e.declarations.push(this.finishNode(a,"VariableDeclarator")),!this.eat(f.comma))break}return e};D.parseVarId=function(e,i){e.id=this.parseBindingAtom(),this.checkLValPattern(e.id,i==="var"?va:Vt,!1)};var fr=1,ha=2,Ml=4;D.parseFunction=function(e,i,s,a,u){this.initFunction(e),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!a)&&(this.type===f.star&&i&ha&&this.unexpected(),e.generator=this.eat(f.star)),this.options.ecmaVersion>=8&&(e.async=!!a),i&fr&&(e.id=i&Ml&&this.type!==f.name?null:this.parseIdent(),e.id&&!(i&ha)&&this.checkLValSimple(e.id,this.strict||e.generator||e.async?this.treatFunctionsAsVar?va:Vt:Rl));var h=this.yieldPos,g=this.awaitPos,b=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(ya(e.async,e.generator)),i&fr||(e.id=this.type===f.name?this.parseIdent():null),this.parseFunctionParams(e),this.parseFunctionBody(e,s,!1,u),this.yieldPos=h,this.awaitPos=g,this.awaitIdentPos=b,this.finishNode(e,i&fr?"FunctionDeclaration":"FunctionExpression")};D.parseFunctionParams=function(e){this.expect(f.parenL),e.params=this.parseBindingList(f.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams()};D.parseClass=function(e,i){this.next();var s=this.strict;this.strict=!0,this.parseClassId(e,i),this.parseClassSuper(e);var a=this.enterClassBody(),u=this.startNode(),h=!1;for(u.body=[],this.expect(f.braceL);this.type!==f.braceR;){var g=this.parseClassElement(e.superClass!==null);g&&(u.body.push(g),g.type==="MethodDefinition"&&g.kind==="constructor"?(h&&this.raise(g.start,"Duplicate constructor in the same class"),h=!0):g.key&&g.key.type==="PrivateIdentifier"&&Ox(a,g)&&this.raiseRecoverable(g.key.start,"Identifier '#"+g.key.name+"' has already been declared"))}return this.strict=s,this.next(),e.body=this.finishNode(u,"ClassBody"),this.exitClassBody(),this.finishNode(e,i?"ClassDeclaration":"ClassExpression")};D.parseClassElement=function(e){if(this.eat(f.semi))return null;var i=this.options.ecmaVersion,s=this.startNode(),a="",u=!1,h=!1,g="method",b=!1;if(this.eatContextual("static")){if(i>=13&&this.eat(f.braceL))return this.parseClassStaticBlock(s),s;this.isClassElementNameStart()||this.type===f.star?b=!0:a="static"}if(s.static=b,!a&&i>=8&&this.eatContextual("async")&&((this.isClassElementNameStart()||this.type===f.star)&&!this.canInsertSemicolon()?h=!0:a="async"),!a&&(i>=9||!h)&&this.eat(f.star)&&(u=!0),!a&&!h&&!u){var w=this.value;(this.eatContextual("get")||this.eatContextual("set"))&&(this.isClassElementNameStart()?g=w:a=w)}if(a?(s.computed=!1,s.key=this.startNodeAt(this.lastTokStart,this.lastTokStartLoc),s.key.name=a,this.finishNode(s.key,"Identifier")):this.parseClassElementName(s),i<13||this.type===f.parenL||g!=="method"||u||h){var T=!s.static&&bn(s,"constructor"),P=T&&e;T&&g!=="method"&&this.raise(s.key.start,"Constructor can't have get/set modifier"),s.kind=T?"constructor":g,this.parseClassMethod(s,u,h,P)}else this.parseClassField(s);return s};D.isClassElementNameStart=function(){return this.type===f.name||this.type===f.privateId||this.type===f.num||this.type===f.string||this.type===f.bracketL||this.type.keyword};D.parseClassElementName=function(e){this.type===f.privateId?(this.value==="constructor"&&this.raise(this.start,"Classes can't have an element named '#constructor'"),e.computed=!1,e.key=this.parsePrivateIdent()):this.parsePropertyName(e)};D.parseClassMethod=function(e,i,s,a){var u=e.key;e.kind==="constructor"?(i&&this.raise(u.start,"Constructor can't be a generator"),s&&this.raise(u.start,"Constructor can't be an async method")):e.static&&bn(e,"prototype")&&this.raise(u.start,"Classes may not have a static property named prototype");var h=e.value=this.parseMethod(i,s,a);return e.kind==="get"&&h.params.length!==0&&this.raiseRecoverable(h.start,"getter should have no params"),e.kind==="set"&&h.params.length!==1&&this.raiseRecoverable(h.start,"setter should have exactly one param"),e.kind==="set"&&h.params[0].type==="RestElement"&&this.raiseRecoverable(h.params[0].start,"Setter cannot use rest params"),this.finishNode(e,"MethodDefinition")};D.parseClassField=function(e){if(bn(e,"constructor")?this.raise(e.key.start,"Classes can't have a field named 'constructor'"):e.static&&bn(e,"prototype")&&this.raise(e.key.start,"Classes can't have a static field named 'prototype'"),this.eat(f.eq)){var i=this.currentThisScope(),s=i.inClassFieldInit;i.inClassFieldInit=!0,e.value=this.parseMaybeAssign(),i.inClassFieldInit=s}else e.value=null;return this.semicolon(),this.finishNode(e,"PropertyDefinition")};D.parseClassStaticBlock=function(e){e.body=[];var i=this.labels;for(this.labels=[],this.enterScope(mr|ga);this.type!==f.braceR;){var s=this.parseStatement(null);e.body.push(s)}return this.next(),this.exitScope(),this.labels=i,this.finishNode(e,"StaticBlock")};D.parseClassId=function(e,i){this.type===f.name?(e.id=this.parseIdent(),i&&this.checkLValSimple(e.id,Vt,!1)):(i===!0&&this.unexpected(),e.id=null)};D.parseClassSuper=function(e){e.superClass=this.eat(f._extends)?this.parseExprSubscripts(null,!1):null};D.enterClassBody=function(){var e={declared:Object.create(null),used:[]};return this.privateNameStack.push(e),e.declared};D.exitClassBody=function(){for(var e=this.privateNameStack.pop(),i=e.declared,s=e.used,a=this.privateNameStack.length,u=a===0?null:this.privateNameStack[a-1],h=0;h<s.length;++h){var g=s[h];dr(i,g.name)||(u?u.used.push(g):this.raiseRecoverable(g.start,"Private field '#"+g.name+"' must be declared in an enclosing class"))}};function Ox(e,i){var s=i.key.name,a=e[s],u="true";return i.type==="MethodDefinition"&&(i.kind==="get"||i.kind==="set")&&(u=(i.static?"s":"i")+i.kind),a==="iget"&&u==="iset"||a==="iset"&&u==="iget"||a==="sget"&&u==="sset"||a==="sset"&&u==="sget"?(e[s]="true",!1):a?!0:(e[s]=u,!1)}function bn(e,i){var s=e.computed,a=e.key;return!s&&(a.type==="Identifier"&&a.name===i||a.type==="Literal"&&a.value===i)}D.parseExport=function(e,i){if(this.next(),this.eat(f.star))return this.options.ecmaVersion>=11&&(this.eatContextual("as")?(e.exported=this.parseModuleExportName(),this.checkExport(i,e.exported,this.lastTokStart)):e.exported=null),this.expectContextual("from"),this.type!==f.string&&this.unexpected(),e.source=this.parseExprAtom(),this.semicolon(),this.finishNode(e,"ExportAllDeclaration");if(this.eat(f._default)){this.checkExport(i,"default",this.lastTokStart);var s;if(this.type===f._function||(s=this.isAsyncFunction())){var a=this.startNode();this.next(),s&&this.next(),e.declaration=this.parseFunction(a,fr|Ml,!1,s)}else if(this.type===f._class){var u=this.startNode();e.declaration=this.parseClass(u,"nullableID")}else e.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(e,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())e.declaration=this.parseStatement(null),e.declaration.type==="VariableDeclaration"?this.checkVariableExport(i,e.declaration.declarations):this.checkExport(i,e.declaration.id,e.declaration.id.start),e.specifiers=[],e.source=null;else{if(e.declaration=null,e.specifiers=this.parseExportSpecifiers(i),this.eatContextual("from"))this.type!==f.string&&this.unexpected(),e.source=this.parseExprAtom();else{for(var h=0,g=e.specifiers;h<g.length;h+=1){var b=g[h];this.checkUnreserved(b.local),this.checkLocalExport(b.local),b.local.type==="Literal"&&this.raise(b.local.start,"A string literal cannot be used as an exported binding without \`from\`.")}e.source=null}this.semicolon()}return this.finishNode(e,"ExportNamedDeclaration")};D.checkExport=function(e,i,s){!e||(typeof i!="string"&&(i=i.type==="Identifier"?i.name:i.value),dr(e,i)&&this.raiseRecoverable(s,"Duplicate export '"+i+"'"),e[i]=!0)};D.checkPatternExport=function(e,i){var s=i.type;if(s==="Identifier")this.checkExport(e,i,i.start);else if(s==="ObjectPattern")for(var a=0,u=i.properties;a<u.length;a+=1){var h=u[a];this.checkPatternExport(e,h)}else if(s==="ArrayPattern")for(var g=0,b=i.elements;g<b.length;g+=1){var w=b[g];w&&this.checkPatternExport(e,w)}else s==="Property"?this.checkPatternExport(e,i.value):s==="AssignmentPattern"?this.checkPatternExport(e,i.left):s==="RestElement"?this.checkPatternExport(e,i.argument):s==="ParenthesizedExpression"&&this.checkPatternExport(e,i.expression)};D.checkVariableExport=function(e,i){if(!!e)for(var s=0,a=i;s<a.length;s+=1){var u=a[s];this.checkPatternExport(e,u.id)}};D.shouldParseExportStatement=function(){return this.type.keyword==="var"||this.type.keyword==="const"||this.type.keyword==="class"||this.type.keyword==="function"||this.isLet()||this.isAsyncFunction()};D.parseExportSpecifiers=function(e){var i=[],s=!0;for(this.expect(f.braceL);!this.eat(f.braceR);){if(s)s=!1;else if(this.expect(f.comma),this.afterTrailingComma(f.braceR))break;var a=this.startNode();a.local=this.parseModuleExportName(),a.exported=this.eatContextual("as")?this.parseModuleExportName():a.local,this.checkExport(e,a.exported,a.exported.start),i.push(this.finishNode(a,"ExportSpecifier"))}return i};D.parseImport=function(e){return this.next(),this.type===f.string?(e.specifiers=Rx,e.source=this.parseExprAtom()):(e.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),e.source=this.type===f.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(e,"ImportDeclaration")};D.parseImportSpecifiers=function(){var e=[],i=!0;if(this.type===f.name){var s=this.startNode();if(s.local=this.parseIdent(),this.checkLValSimple(s.local,Vt),e.push(this.finishNode(s,"ImportDefaultSpecifier")),!this.eat(f.comma))return e}if(this.type===f.star){var a=this.startNode();return this.next(),this.expectContextual("as"),a.local=this.parseIdent(),this.checkLValSimple(a.local,Vt),e.push(this.finishNode(a,"ImportNamespaceSpecifier")),e}for(this.expect(f.braceL);!this.eat(f.braceR);){if(i)i=!1;else if(this.expect(f.comma),this.afterTrailingComma(f.braceR))break;var u=this.startNode();u.imported=this.parseModuleExportName(),this.eatContextual("as")?u.local=this.parseIdent():(this.checkUnreserved(u.imported),u.local=u.imported),this.checkLValSimple(u.local,Vt),e.push(this.finishNode(u,"ImportSpecifier"))}return e};D.parseModuleExportName=function(){if(this.options.ecmaVersion>=13&&this.type===f.string){var e=this.parseLiteral(this.value);return Ex.test(e.value)&&this.raise(e.start,"An export name cannot include a lone surrogate."),e}return this.parseIdent(!0)};D.adaptDirectivePrologue=function(e){for(var i=0;i<e.length&&this.isDirectiveCandidate(e[i]);++i)e[i].directive=e[i].expression.raw.slice(1,-1)};D.isDirectiveCandidate=function(e){return this.options.ecmaVersion>=5&&e.type==="ExpressionStatement"&&e.expression.type==="Literal"&&typeof e.expression.value=="string"&&(this.input[e.start]==='"'||this.input[e.start]==="'")};var vt=Se.prototype;vt.toAssignable=function(e,i,s){if(this.options.ecmaVersion>=6&&e)switch(e.type){case"Identifier":this.inAsync&&e.name==="await"&&this.raise(e.start,"Cannot use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":break;case"ObjectExpression":e.type="ObjectPattern",s&&this.checkPatternErrors(s,!0);for(var a=0,u=e.properties;a<u.length;a+=1){var h=u[a];this.toAssignable(h,i),h.type==="RestElement"&&(h.argument.type==="ArrayPattern"||h.argument.type==="ObjectPattern")&&this.raise(h.argument.start,"Unexpected token")}break;case"Property":e.kind!=="init"&&this.raise(e.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(e.value,i);break;case"ArrayExpression":e.type="ArrayPattern",s&&this.checkPatternErrors(s,!0),this.toAssignableList(e.elements,i);break;case"SpreadElement":e.type="RestElement",this.toAssignable(e.argument,i),e.argument.type==="AssignmentPattern"&&this.raise(e.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":e.operator!=="="&&this.raise(e.left.end,"Only '=' operator can be used for specifying default value."),e.type="AssignmentPattern",delete e.operator,this.toAssignable(e.left,i);break;case"ParenthesizedExpression":this.toAssignable(e.expression,i,s);break;case"ChainExpression":this.raiseRecoverable(e.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":if(!i)break;default:this.raise(e.start,"Assigning to rvalue")}else s&&this.checkPatternErrors(s,!0);return e};vt.toAssignableList=function(e,i){for(var s=e.length,a=0;a<s;a++){var u=e[a];u&&this.toAssignable(u,i)}if(s){var h=e[s-1];this.options.ecmaVersion===6&&i&&h&&h.type==="RestElement"&&h.argument.type!=="Identifier"&&this.unexpected(h.argument.start)}return e};vt.parseSpread=function(e){var i=this.startNode();return this.next(),i.argument=this.parseMaybeAssign(!1,e),this.finishNode(i,"SpreadElement")};vt.parseRestBinding=function(){var e=this.startNode();return this.next(),this.options.ecmaVersion===6&&this.type!==f.name&&this.unexpected(),e.argument=this.parseBindingAtom(),this.finishNode(e,"RestElement")};vt.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case f.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(f.bracketR,!0,!0),this.finishNode(e,"ArrayPattern");case f.braceL:return this.parseObj(!0)}return this.parseIdent()};vt.parseBindingList=function(e,i,s){for(var a=[],u=!0;!this.eat(e);)if(u?u=!1:this.expect(f.comma),i&&this.type===f.comma)a.push(null);else{if(s&&this.afterTrailingComma(e))break;if(this.type===f.ellipsis){var h=this.parseRestBinding();this.parseBindingListItem(h),a.push(h),this.type===f.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(e);break}else{var g=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(g),a.push(g)}}return a};vt.parseBindingListItem=function(e){return e};vt.parseMaybeDefault=function(e,i,s){if(s=s||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(f.eq))return s;var a=this.startNodeAt(e,i);return a.left=s,a.right=this.parseMaybeAssign(),this.finishNode(a,"AssignmentPattern")};vt.checkLValSimple=function(e,i,s){i===void 0&&(i=vn);var a=i!==vn;switch(e.type){case"Identifier":this.strict&&this.reservedWordsStrictBind.test(e.name)&&this.raiseRecoverable(e.start,(a?"Binding ":"Assigning to ")+e.name+" in strict mode"),a&&(i===Vt&&e.name==="let"&&this.raiseRecoverable(e.start,"let is disallowed as a lexically bound name"),s&&(dr(s,e.name)&&this.raiseRecoverable(e.start,"Argument name clash"),s[e.name]=!0),i!==Dl&&this.declareName(e.name,i,e.start));break;case"ChainExpression":this.raiseRecoverable(e.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":a&&this.raiseRecoverable(e.start,"Binding member expression");break;case"ParenthesizedExpression":return a&&this.raiseRecoverable(e.start,"Binding parenthesized expression"),this.checkLValSimple(e.expression,i,s);default:this.raise(e.start,(a?"Binding":"Assigning to")+" rvalue")}};vt.checkLValPattern=function(e,i,s){switch(i===void 0&&(i=vn),e.type){case"ObjectPattern":for(var a=0,u=e.properties;a<u.length;a+=1){var h=u[a];this.checkLValInnerPattern(h,i,s)}break;case"ArrayPattern":for(var g=0,b=e.elements;g<b.length;g+=1){var w=b[g];w&&this.checkLValInnerPattern(w,i,s)}break;default:this.checkLValSimple(e,i,s)}};vt.checkLValInnerPattern=function(e,i,s){switch(i===void 0&&(i=vn),e.type){case"Property":this.checkLValInnerPattern(e.value,i,s);break;case"AssignmentPattern":this.checkLValPattern(e.left,i,s);break;case"RestElement":this.checkLValPattern(e.argument,i,s);break;default:this.checkLValPattern(e,i,s)}};var yt=function(i,s,a,u,h){this.token=i,this.isExpr=!!s,this.preserveSpace=!!a,this.override=u,this.generator=!!h},pe={b_stat:new yt("{",!1),b_expr:new yt("{",!0),b_tmpl:new yt("\${",!1),p_stat:new yt("(",!1),p_expr:new yt("(",!0),q_tmpl:new yt("\`",!0,!0,function(e){return e.tryReadTemplateToken()}),f_stat:new yt("function",!1),f_expr:new yt("function",!0),f_expr_gen:new yt("function",!0,!1,null,!0),f_gen:new yt("function",!1,!1,null,!0)},Vi=Se.prototype;Vi.initialContext=function(){return[pe.b_stat]};Vi.curContext=function(){return this.context[this.context.length-1]};Vi.braceIsBlock=function(e){var i=this.curContext();return i===pe.f_expr||i===pe.f_stat?!0:e===f.colon&&(i===pe.b_stat||i===pe.b_expr)?!i.isExpr:e===f._return||e===f.name&&this.exprAllowed?ct.test(this.input.slice(this.lastTokEnd,this.start)):e===f._else||e===f.semi||e===f.eof||e===f.parenR||e===f.arrow?!0:e===f.braceL?i===pe.b_stat:e===f._var||e===f._const||e===f.name?!1:!this.exprAllowed};Vi.inGeneratorContext=function(){for(var e=this.context.length-1;e>=1;e--){var i=this.context[e];if(i.token==="function")return i.generator}return!1};Vi.updateContext=function(e){var i,s=this.type;s.keyword&&e===f.dot?this.exprAllowed=!1:(i=s.updateContext)?i.call(this,e):this.exprAllowed=s.beforeExpr};Vi.overrideContext=function(e){this.curContext()!==e&&(this.context[this.context.length-1]=e)};f.parenR.updateContext=f.braceR.updateContext=function(){if(this.context.length===1){this.exprAllowed=!0;return}var e=this.context.pop();e===pe.b_stat&&this.curContext().token==="function"&&(e=this.context.pop()),this.exprAllowed=!e.isExpr};f.braceL.updateContext=function(e){this.context.push(this.braceIsBlock(e)?pe.b_stat:pe.b_expr),this.exprAllowed=!0};f.dollarBraceL.updateContext=function(){this.context.push(pe.b_tmpl),this.exprAllowed=!0};f.parenL.updateContext=function(e){var i=e===f._if||e===f._for||e===f._with||e===f._while;this.context.push(i?pe.p_stat:pe.p_expr),this.exprAllowed=!0};f.incDec.updateContext=function(){};f._function.updateContext=f._class.updateContext=function(e){e.beforeExpr&&e!==f._else&&!(e===f.semi&&this.curContext()!==pe.p_stat)&&!(e===f._return&&ct.test(this.input.slice(this.lastTokEnd,this.start)))&&!((e===f.colon||e===f.braceL)&&this.curContext()===pe.b_stat)?this.context.push(pe.f_expr):this.context.push(pe.f_stat),this.exprAllowed=!1};f.backQuote.updateContext=function(){this.curContext()===pe.q_tmpl?this.context.pop():this.context.push(pe.q_tmpl),this.exprAllowed=!1};f.star.updateContext=function(e){if(e===f._function){var i=this.context.length-1;this.context[i]===pe.f_expr?this.context[i]=pe.f_expr_gen:this.context[i]=pe.f_gen}this.exprAllowed=!0};f.name.updateContext=function(e){var i=!1;this.options.ecmaVersion>=6&&e!==f.dot&&(this.value==="of"&&!this.exprAllowed||this.value==="yield"&&this.inGeneratorContext())&&(i=!0),this.exprAllowed=i};var H=Se.prototype;H.checkPropClash=function(e,i,s){if(!(this.options.ecmaVersion>=9&&e.type==="SpreadElement")&&!(this.options.ecmaVersion>=6&&(e.computed||e.method||e.shorthand))){var a=e.key,u;switch(a.type){case"Identifier":u=a.name;break;case"Literal":u=String(a.value);break;default:return}var h=e.kind;if(this.options.ecmaVersion>=6){u==="__proto__"&&h==="init"&&(i.proto&&(s?s.doubleProto<0&&(s.doubleProto=a.start):this.raiseRecoverable(a.start,"Redefinition of __proto__ property")),i.proto=!0);return}u="$"+u;var g=i[u];if(g){var b;h==="init"?b=this.strict&&g.init||g.get||g.set:b=g.init||g[h],b&&this.raiseRecoverable(a.start,"Redefinition of property")}else g=i[u]={init:!1,get:!1,set:!1};g[h]=!0}};H.parseExpression=function(e,i){var s=this.start,a=this.startLoc,u=this.parseMaybeAssign(e,i);if(this.type===f.comma){var h=this.startNodeAt(s,a);for(h.expressions=[u];this.eat(f.comma);)h.expressions.push(this.parseMaybeAssign(e,i));return this.finishNode(h,"SequenceExpression")}return u};H.parseMaybeAssign=function(e,i,s){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(e);this.exprAllowed=!1}var a=!1,u=-1,h=-1,g=-1;i?(u=i.parenthesizedAssign,h=i.trailingComma,g=i.doubleProto,i.parenthesizedAssign=i.trailingComma=-1):(i=new _n,a=!0);var b=this.start,w=this.startLoc;(this.type===f.parenL||this.type===f.name)&&(this.potentialArrowAt=this.start,this.potentialArrowInForAwait=e==="await");var T=this.parseMaybeConditional(e,i);if(s&&(T=s.call(this,T,b,w)),this.type.isAssign){var P=this.startNodeAt(b,w);return P.operator=this.value,this.type===f.eq&&(T=this.toAssignable(T,!1,i)),a||(i.parenthesizedAssign=i.trailingComma=i.doubleProto=-1),i.shorthandAssign>=T.start&&(i.shorthandAssign=-1),this.type===f.eq?this.checkLValPattern(T):this.checkLValSimple(T),P.left=T,this.next(),P.right=this.parseMaybeAssign(e),g>-1&&(i.doubleProto=g),this.finishNode(P,"AssignmentExpression")}else a&&this.checkExpressionErrors(i,!0);return u>-1&&(i.parenthesizedAssign=u),h>-1&&(i.trailingComma=h),T};H.parseMaybeConditional=function(e,i){var s=this.start,a=this.startLoc,u=this.parseExprOps(e,i);if(this.checkExpressionErrors(i))return u;if(this.eat(f.question)){var h=this.startNodeAt(s,a);return h.test=u,h.consequent=this.parseMaybeAssign(),this.expect(f.colon),h.alternate=this.parseMaybeAssign(e),this.finishNode(h,"ConditionalExpression")}return u};H.parseExprOps=function(e,i){var s=this.start,a=this.startLoc,u=this.parseMaybeUnary(i,!1,!1,e);return this.checkExpressionErrors(i)||u.start===s&&u.type==="ArrowFunctionExpression"?u:this.parseExprOp(u,s,a,-1,e)};H.parseExprOp=function(e,i,s,a,u){var h=this.type.binop;if(h!=null&&(!u||this.type!==f._in)&&h>a){var g=this.type===f.logicalOR||this.type===f.logicalAND,b=this.type===f.coalesce;b&&(h=f.logicalAND.binop);var w=this.value;this.next();var T=this.start,P=this.startLoc,W=this.parseExprOp(this.parseMaybeUnary(null,!1,!1,u),T,P,h,u),X=this.buildBinary(i,s,e,W,w,g||b);return(g&&this.type===f.coalesce||b&&(this.type===f.logicalOR||this.type===f.logicalAND))&&this.raiseRecoverable(this.start,"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"),this.parseExprOp(X,i,s,a,u)}return e};H.buildBinary=function(e,i,s,a,u,h){a.type==="PrivateIdentifier"&&this.raise(a.start,"Private identifier can only be left side of binary expression");var g=this.startNodeAt(e,i);return g.left=s,g.operator=u,g.right=a,this.finishNode(g,h?"LogicalExpression":"BinaryExpression")};H.parseMaybeUnary=function(e,i,s,a){var u=this.start,h=this.startLoc,g;if(this.isContextual("await")&&this.canAwait)g=this.parseAwait(a),i=!0;else if(this.type.prefix){var b=this.startNode(),w=this.type===f.incDec;b.operator=this.value,b.prefix=!0,this.next(),b.argument=this.parseMaybeUnary(null,!0,w,a),this.checkExpressionErrors(e,!0),w?this.checkLValSimple(b.argument):this.strict&&b.operator==="delete"&&b.argument.type==="Identifier"?this.raiseRecoverable(b.start,"Deleting local variable in strict mode"):b.operator==="delete"&&Bl(b.argument)?this.raiseRecoverable(b.start,"Private fields can not be deleted"):i=!0,g=this.finishNode(b,w?"UpdateExpression":"UnaryExpression")}else if(!i&&this.type===f.privateId)(a||this.privateNameStack.length===0)&&this.unexpected(),g=this.parsePrivateIdent(),this.type!==f._in&&this.unexpected();else{if(g=this.parseExprSubscripts(e,a),this.checkExpressionErrors(e))return g;for(;this.type.postfix&&!this.canInsertSemicolon();){var T=this.startNodeAt(u,h);T.operator=this.value,T.prefix=!1,T.argument=g,this.checkLValSimple(g),this.next(),g=this.finishNode(T,"UpdateExpression")}}if(!s&&this.eat(f.starstar))if(i)this.unexpected(this.lastTokStart);else return this.buildBinary(u,h,g,this.parseMaybeUnary(null,!1,!1,a),"**",!1);else return g};function Bl(e){return e.type==="MemberExpression"&&e.property.type==="PrivateIdentifier"||e.type==="ChainExpression"&&Bl(e.expression)}H.parseExprSubscripts=function(e,i){var s=this.start,a=this.startLoc,u=this.parseExprAtom(e,i);if(u.type==="ArrowFunctionExpression"&&this.input.slice(this.lastTokStart,this.lastTokEnd)!==")")return u;var h=this.parseSubscripts(u,s,a,!1,i);return e&&h.type==="MemberExpression"&&(e.parenthesizedAssign>=h.start&&(e.parenthesizedAssign=-1),e.parenthesizedBind>=h.start&&(e.parenthesizedBind=-1),e.trailingComma>=h.start&&(e.trailingComma=-1)),h};H.parseSubscripts=function(e,i,s,a,u){for(var h=this.options.ecmaVersion>=8&&e.type==="Identifier"&&e.name==="async"&&this.lastTokEnd===e.end&&!this.canInsertSemicolon()&&e.end-e.start===5&&this.potentialArrowAt===e.start,g=!1;;){var b=this.parseSubscript(e,i,s,a,h,g,u);if(b.optional&&(g=!0),b===e||b.type==="ArrowFunctionExpression"){if(g){var w=this.startNodeAt(i,s);w.expression=b,b=this.finishNode(w,"ChainExpression")}return b}e=b}};H.parseSubscript=function(e,i,s,a,u,h,g){var b=this.options.ecmaVersion>=11,w=b&&this.eat(f.questionDot);a&&w&&this.raise(this.lastTokStart,"Optional chaining cannot appear in the callee of new expressions");var T=this.eat(f.bracketL);if(T||w&&this.type!==f.parenL&&this.type!==f.backQuote||this.eat(f.dot)){var P=this.startNodeAt(i,s);P.object=e,T?(P.property=this.parseExpression(),this.expect(f.bracketR)):this.type===f.privateId&&e.type!=="Super"?P.property=this.parsePrivateIdent():P.property=this.parseIdent(this.options.allowReserved!=="never"),P.computed=!!T,b&&(P.optional=w),e=this.finishNode(P,"MemberExpression")}else if(!a&&this.eat(f.parenL)){var W=new _n,X=this.yieldPos,oe=this.awaitPos,M=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var $=this.parseExprList(f.parenR,this.options.ecmaVersion>=8,!1,W);if(u&&!w&&!this.canInsertSemicolon()&&this.eat(f.arrow))return this.checkPatternErrors(W,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=X,this.awaitPos=oe,this.awaitIdentPos=M,this.parseArrowExpression(this.startNodeAt(i,s),$,!0,g);this.checkExpressionErrors(W,!0),this.yieldPos=X||this.yieldPos,this.awaitPos=oe||this.awaitPos,this.awaitIdentPos=M||this.awaitIdentPos;var ke=this.startNodeAt(i,s);ke.callee=e,ke.arguments=$,b&&(ke.optional=w),e=this.finishNode(ke,"CallExpression")}else if(this.type===f.backQuote){(w||h)&&this.raise(this.start,"Optional chaining cannot appear in the tag of tagged template expressions");var ce=this.startNodeAt(i,s);ce.tag=e,ce.quasi=this.parseTemplate({isTagged:!0}),e=this.finishNode(ce,"TaggedTemplateExpression")}return e};H.parseExprAtom=function(e,i){this.type===f.slash&&this.readRegexp();var s,a=this.potentialArrowAt===this.start;switch(this.type){case f._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),s=this.startNode(),this.next(),this.type===f.parenL&&!this.allowDirectSuper&&this.raise(s.start,"super() call outside constructor of a subclass"),this.type!==f.dot&&this.type!==f.bracketL&&this.type!==f.parenL&&this.unexpected(),this.finishNode(s,"Super");case f._this:return s=this.startNode(),this.next(),this.finishNode(s,"ThisExpression");case f.name:var u=this.start,h=this.startLoc,g=this.containsEsc,b=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!g&&b.name==="async"&&!this.canInsertSemicolon()&&this.eat(f._function))return this.overrideContext(pe.f_expr),this.parseFunction(this.startNodeAt(u,h),0,!1,!0,i);if(a&&!this.canInsertSemicolon()){if(this.eat(f.arrow))return this.parseArrowExpression(this.startNodeAt(u,h),[b],!1,i);if(this.options.ecmaVersion>=8&&b.name==="async"&&this.type===f.name&&!g&&(!this.potentialArrowInForAwait||this.value!=="of"||this.containsEsc))return b=this.parseIdent(!1),(this.canInsertSemicolon()||!this.eat(f.arrow))&&this.unexpected(),this.parseArrowExpression(this.startNodeAt(u,h),[b],!0,i)}return b;case f.regexp:var w=this.value;return s=this.parseLiteral(w.value),s.regex={pattern:w.pattern,flags:w.flags},s;case f.num:case f.string:return this.parseLiteral(this.value);case f._null:case f._true:case f._false:return s=this.startNode(),s.value=this.type===f._null?null:this.type===f._true,s.raw=this.type.keyword,this.next(),this.finishNode(s,"Literal");case f.parenL:var T=this.start,P=this.parseParenAndDistinguishExpression(a,i);return e&&(e.parenthesizedAssign<0&&!this.isSimpleAssignTarget(P)&&(e.parenthesizedAssign=T),e.parenthesizedBind<0&&(e.parenthesizedBind=T)),P;case f.bracketL:return s=this.startNode(),this.next(),s.elements=this.parseExprList(f.bracketR,!0,!0,e),this.finishNode(s,"ArrayExpression");case f.braceL:return this.overrideContext(pe.b_expr),this.parseObj(!1,e);case f._function:return s=this.startNode(),this.next(),this.parseFunction(s,0);case f._class:return this.parseClass(this.startNode(),!1);case f._new:return this.parseNew();case f.backQuote:return this.parseTemplate();case f._import:return this.options.ecmaVersion>=11?this.parseExprImport():this.unexpected();default:this.unexpected()}};H.parseExprImport=function(){var e=this.startNode();this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword import");var i=this.parseIdent(!0);switch(this.type){case f.parenL:return this.parseDynamicImport(e);case f.dot:return e.meta=i,this.parseImportMeta(e);default:this.unexpected()}};H.parseDynamicImport=function(e){if(this.next(),e.source=this.parseMaybeAssign(),!this.eat(f.parenR)){var i=this.start;this.eat(f.comma)&&this.eat(f.parenR)?this.raiseRecoverable(i,"Trailing comma is not allowed in import()"):this.unexpected(i)}return this.finishNode(e,"ImportExpression")};H.parseImportMeta=function(e){this.next();var i=this.containsEsc;return e.property=this.parseIdent(!0),e.property.name!=="meta"&&this.raiseRecoverable(e.property.start,"The only valid meta property for import is 'import.meta'"),i&&this.raiseRecoverable(e.start,"'import.meta' must not contain escaped characters"),this.options.sourceType!=="module"&&!this.options.allowImportExportEverywhere&&this.raiseRecoverable(e.start,"Cannot use 'import.meta' outside a module"),this.finishNode(e,"MetaProperty")};H.parseLiteral=function(e){var i=this.startNode();return i.value=e,i.raw=this.input.slice(this.start,this.end),i.raw.charCodeAt(i.raw.length-1)===110&&(i.bigint=i.raw.slice(0,-1).replace(/_/g,"")),this.next(),this.finishNode(i,"Literal")};H.parseParenExpression=function(){this.expect(f.parenL);var e=this.parseExpression();return this.expect(f.parenR),e};H.parseParenAndDistinguishExpression=function(e,i){var s=this.start,a=this.startLoc,u,h=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var g=this.start,b=this.startLoc,w=[],T=!0,P=!1,W=new _n,X=this.yieldPos,oe=this.awaitPos,M;for(this.yieldPos=0,this.awaitPos=0;this.type!==f.parenR;)if(T?T=!1:this.expect(f.comma),h&&this.afterTrailingComma(f.parenR,!0)){P=!0;break}else if(this.type===f.ellipsis){M=this.start,w.push(this.parseParenItem(this.parseRestBinding())),this.type===f.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}else w.push(this.parseMaybeAssign(!1,W,this.parseParenItem));var $=this.lastTokEnd,ke=this.lastTokEndLoc;if(this.expect(f.parenR),e&&!this.canInsertSemicolon()&&this.eat(f.arrow))return this.checkPatternErrors(W,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=X,this.awaitPos=oe,this.parseParenArrowList(s,a,w,i);(!w.length||P)&&this.unexpected(this.lastTokStart),M&&this.unexpected(M),this.checkExpressionErrors(W,!0),this.yieldPos=X||this.yieldPos,this.awaitPos=oe||this.awaitPos,w.length>1?(u=this.startNodeAt(g,b),u.expressions=w,this.finishNodeAt(u,"SequenceExpression",$,ke)):u=w[0]}else u=this.parseParenExpression();if(this.options.preserveParens){var ce=this.startNodeAt(s,a);return ce.expression=u,this.finishNode(ce,"ParenthesizedExpression")}else return u};H.parseParenItem=function(e){return e};H.parseParenArrowList=function(e,i,s,a){return this.parseArrowExpression(this.startNodeAt(e,i),s,!1,a)};var Dx=[];H.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword new");var e=this.startNode(),i=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(f.dot)){e.meta=i;var s=this.containsEsc;return e.property=this.parseIdent(!0),e.property.name!=="target"&&this.raiseRecoverable(e.property.start,"The only valid meta property for new is 'new.target'"),s&&this.raiseRecoverable(e.start,"'new.target' must not contain escaped characters"),this.allowNewDotTarget||this.raiseRecoverable(e.start,"'new.target' can only be used in functions and class static block"),this.finishNode(e,"MetaProperty")}var a=this.start,u=this.startLoc,h=this.type===f._import;return e.callee=this.parseSubscripts(this.parseExprAtom(),a,u,!0,!1),h&&e.callee.type==="ImportExpression"&&this.raise(a,"Cannot use new with import()"),this.eat(f.parenL)?e.arguments=this.parseExprList(f.parenR,this.options.ecmaVersion>=8,!1):e.arguments=Dx,this.finishNode(e,"NewExpression")};H.parseTemplateElement=function(e){var i=e.isTagged,s=this.startNode();return this.type===f.invalidTemplate?(i||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),s.value={raw:this.value,cooked:null}):s.value={raw:this.input.slice(this.start,this.end).replace(/\\r\\n?/g,\`
\`),cooked:this.value},this.next(),s.tail=this.type===f.backQuote,this.finishNode(s,"TemplateElement")};H.parseTemplate=function(e){e===void 0&&(e={});var i=e.isTagged;i===void 0&&(i=!1);var s=this.startNode();this.next(),s.expressions=[];var a=this.parseTemplateElement({isTagged:i});for(s.quasis=[a];!a.tail;)this.type===f.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(f.dollarBraceL),s.expressions.push(this.parseExpression()),this.expect(f.braceR),s.quasis.push(a=this.parseTemplateElement({isTagged:i}));return this.next(),this.finishNode(s,"TemplateLiteral")};H.isAsyncProp=function(e){return!e.computed&&e.key.type==="Identifier"&&e.key.name==="async"&&(this.type===f.name||this.type===f.num||this.type===f.string||this.type===f.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===f.star)&&!ct.test(this.input.slice(this.lastTokEnd,this.start))};H.parseObj=function(e,i){var s=this.startNode(),a=!0,u={};for(s.properties=[],this.next();!this.eat(f.braceR);){if(a)a=!1;else if(this.expect(f.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(f.braceR))break;var h=this.parseProperty(e,i);e||this.checkPropClash(h,u,i),s.properties.push(h)}return this.finishNode(s,e?"ObjectPattern":"ObjectExpression")};H.parseProperty=function(e,i){var s=this.startNode(),a,u,h,g;if(this.options.ecmaVersion>=9&&this.eat(f.ellipsis))return e?(s.argument=this.parseIdent(!1),this.type===f.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(s,"RestElement")):(s.argument=this.parseMaybeAssign(!1,i),this.type===f.comma&&i&&i.trailingComma<0&&(i.trailingComma=this.start),this.finishNode(s,"SpreadElement"));this.options.ecmaVersion>=6&&(s.method=!1,s.shorthand=!1,(e||i)&&(h=this.start,g=this.startLoc),e||(a=this.eat(f.star)));var b=this.containsEsc;return this.parsePropertyName(s),!e&&!b&&this.options.ecmaVersion>=8&&!a&&this.isAsyncProp(s)?(u=!0,a=this.options.ecmaVersion>=9&&this.eat(f.star),this.parsePropertyName(s)):u=!1,this.parsePropertyValue(s,e,a,u,h,g,i,b),this.finishNode(s,"Property")};H.parsePropertyValue=function(e,i,s,a,u,h,g,b){if((s||a)&&this.type===f.colon&&this.unexpected(),this.eat(f.colon))e.value=i?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,g),e.kind="init";else if(this.options.ecmaVersion>=6&&this.type===f.parenL)i&&this.unexpected(),e.kind="init",e.method=!0,e.value=this.parseMethod(s,a);else if(!i&&!b&&this.options.ecmaVersion>=5&&!e.computed&&e.key.type==="Identifier"&&(e.key.name==="get"||e.key.name==="set")&&this.type!==f.comma&&this.type!==f.braceR&&this.type!==f.eq){(s||a)&&this.unexpected(),e.kind=e.key.name,this.parsePropertyName(e),e.value=this.parseMethod(!1);var w=e.kind==="get"?0:1;if(e.value.params.length!==w){var T=e.value.start;e.kind==="get"?this.raiseRecoverable(T,"getter should have no params"):this.raiseRecoverable(T,"setter should have exactly one param")}else e.kind==="set"&&e.value.params[0].type==="RestElement"&&this.raiseRecoverable(e.value.params[0].start,"Setter cannot use rest params")}else this.options.ecmaVersion>=6&&!e.computed&&e.key.type==="Identifier"?((s||a)&&this.unexpected(),this.checkUnreserved(e.key),e.key.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=u),e.kind="init",i?e.value=this.parseMaybeDefault(u,h,this.copyNode(e.key)):this.type===f.eq&&g?(g.shorthandAssign<0&&(g.shorthandAssign=this.start),e.value=this.parseMaybeDefault(u,h,this.copyNode(e.key))):e.value=this.copyNode(e.key),e.shorthand=!0):this.unexpected()};H.parsePropertyName=function(e){if(this.options.ecmaVersion>=6){if(this.eat(f.bracketL))return e.computed=!0,e.key=this.parseMaybeAssign(),this.expect(f.bracketR),e.key;e.computed=!1}return e.key=this.type===f.num||this.type===f.string?this.parseExprAtom():this.parseIdent(this.options.allowReserved!=="never")};H.initFunction=function(e){e.id=null,this.options.ecmaVersion>=6&&(e.generator=e.expression=!1),this.options.ecmaVersion>=8&&(e.async=!1)};H.parseMethod=function(e,i,s){var a=this.startNode(),u=this.yieldPos,h=this.awaitPos,g=this.awaitIdentPos;return this.initFunction(a),this.options.ecmaVersion>=6&&(a.generator=e),this.options.ecmaVersion>=8&&(a.async=!!i),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(ya(i,a.generator)|ga|(s?Ll:0)),this.expect(f.parenL),a.params=this.parseBindingList(f.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(a,!1,!0,!1),this.yieldPos=u,this.awaitPos=h,this.awaitIdentPos=g,this.finishNode(a,"FunctionExpression")};H.parseArrowExpression=function(e,i,s,a){var u=this.yieldPos,h=this.awaitPos,g=this.awaitIdentPos;return this.enterScope(ya(s,!1)|Fl),this.initFunction(e),this.options.ecmaVersion>=8&&(e.async=!!s),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,e.params=this.toAssignableList(i,!0),this.parseFunctionBody(e,!0,!1,a),this.yieldPos=u,this.awaitPos=h,this.awaitIdentPos=g,this.finishNode(e,"ArrowFunctionExpression")};H.parseFunctionBody=function(e,i,s,a){var u=i&&this.type!==f.braceL,h=this.strict,g=!1;if(u)e.body=this.parseMaybeAssign(a),e.expression=!0,this.checkParams(e,!1);else{var b=this.options.ecmaVersion>=7&&!this.isSimpleParamList(e.params);(!h||b)&&(g=this.strictDirective(this.end),g&&b&&this.raiseRecoverable(e.start,"Illegal 'use strict' directive in function with non-simple parameter list"));var w=this.labels;this.labels=[],g&&(this.strict=!0),this.checkParams(e,!h&&!g&&!i&&!s&&this.isSimpleParamList(e.params)),this.strict&&e.id&&this.checkLValSimple(e.id,Dl),e.body=this.parseBlock(!1,void 0,g&&!h),e.expression=!1,this.adaptDirectivePrologue(e.body.body),this.labels=w}this.exitScope()};H.isSimpleParamList=function(e){for(var i=0,s=e;i<s.length;i+=1){var a=s[i];if(a.type!=="Identifier")return!1}return!0};H.checkParams=function(e,i){for(var s=Object.create(null),a=0,u=e.params;a<u.length;a+=1){var h=u[a];this.checkLValInnerPattern(h,va,i?null:s)}};H.parseExprList=function(e,i,s,a){for(var u=[],h=!0;!this.eat(e);){if(h)h=!1;else if(this.expect(f.comma),i&&this.afterTrailingComma(e))break;var g=void 0;s&&this.type===f.comma?g=null:this.type===f.ellipsis?(g=this.parseSpread(a),a&&this.type===f.comma&&a.trailingComma<0&&(a.trailingComma=this.start)):g=this.parseMaybeAssign(!1,a),u.push(g)}return u};H.checkUnreserved=function(e){var i=e.start,s=e.end,a=e.name;if(this.inGenerator&&a==="yield"&&this.raiseRecoverable(i,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&a==="await"&&this.raiseRecoverable(i,"Cannot use 'await' as identifier inside an async function"),this.currentThisScope().inClassFieldInit&&a==="arguments"&&this.raiseRecoverable(i,"Cannot use 'arguments' in class field initializer"),this.inClassStaticBlock&&(a==="arguments"||a==="await")&&this.raise(i,"Cannot use "+a+" in class static initialization block"),this.keywords.test(a)&&this.raise(i,"Unexpected keyword '"+a+"'"),!(this.options.ecmaVersion<6&&this.input.slice(i,s).indexOf("\\\\")!==-1)){var u=this.strict?this.reservedWordsStrict:this.reservedWords;u.test(a)&&(!this.inAsync&&a==="await"&&this.raiseRecoverable(i,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(i,"The keyword '"+a+"' is reserved"))}};H.parseIdent=function(e){var i=this.startNode();return this.type===f.name?i.name=this.value:this.type.keyword?(i.name=this.type.keyword,(i.name==="class"||i.name==="function")&&(this.lastTokEnd!==this.lastTokStart+1||this.input.charCodeAt(this.lastTokStart)!==46)&&this.context.pop()):this.unexpected(),this.next(!!e),this.finishNode(i,"Identifier"),e||(this.checkUnreserved(i),i.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=i.start)),i};H.parsePrivateIdent=function(){var e=this.startNode();return this.type===f.privateId?e.name=this.value:this.unexpected(),this.next(),this.finishNode(e,"PrivateIdentifier"),this.privateNameStack.length===0?this.raise(e.start,"Private field '#"+e.name+"' must be declared in an enclosing class"):this.privateNameStack[this.privateNameStack.length-1].used.push(e),e};H.parseYield=function(e){this.yieldPos||(this.yieldPos=this.start);var i=this.startNode();return this.next(),this.type===f.semi||this.canInsertSemicolon()||this.type!==f.star&&!this.type.startsExpr?(i.delegate=!1,i.argument=null):(i.delegate=this.eat(f.star),i.argument=this.parseMaybeAssign(e)),this.finishNode(i,"YieldExpression")};H.parseAwait=function(e){this.awaitPos||(this.awaitPos=this.start);var i=this.startNode();return this.next(),i.argument=this.parseMaybeUnary(null,!0,!1,e),this.finishNode(i,"AwaitExpression")};var wn=Se.prototype;wn.raise=function(e,i){var s=El(this.input,e);i+=" ("+s.line+":"+s.column+")";var a=new SyntaxError(i);throw a.pos=e,a.loc=s,a.raisedAt=this.pos,a};wn.raiseRecoverable=wn.raise;wn.curPosition=function(){if(this.options.locations)return new pr(this.curLine,this.pos-this.lineStart)};var ri=Se.prototype,Mx=function(i){this.flags=i,this.var=[],this.lexical=[],this.functions=[],this.inClassFieldInit=!1};ri.enterScope=function(e){this.scopeStack.push(new Mx(e))};ri.exitScope=function(){this.scopeStack.pop()};ri.treatFunctionsAsVarInScope=function(e){return e.flags&Bi||!this.inModule&&e.flags&hr};ri.declareName=function(e,i,s){var a=!1;if(i===Vt){var u=this.currentScope();a=u.lexical.indexOf(e)>-1||u.functions.indexOf(e)>-1||u.var.indexOf(e)>-1,u.lexical.push(e),this.inModule&&u.flags&hr&&delete this.undefinedExports[e]}else if(i===Ol){var h=this.currentScope();h.lexical.push(e)}else if(i===Rl){var g=this.currentScope();this.treatFunctionsAsVar?a=g.lexical.indexOf(e)>-1:a=g.lexical.indexOf(e)>-1||g.var.indexOf(e)>-1,g.functions.push(e)}else for(var b=this.scopeStack.length-1;b>=0;--b){var w=this.scopeStack[b];if(w.lexical.indexOf(e)>-1&&!(w.flags&Nl&&w.lexical[0]===e)||!this.treatFunctionsAsVarInScope(w)&&w.functions.indexOf(e)>-1){a=!0;break}if(w.var.push(e),this.inModule&&w.flags&hr&&delete this.undefinedExports[e],w.flags&xa)break}a&&this.raiseRecoverable(s,"Identifier '"+e+"' has already been declared")};ri.checkLocalExport=function(e){this.scopeStack[0].lexical.indexOf(e.name)===-1&&this.scopeStack[0].var.indexOf(e.name)===-1&&(this.undefinedExports[e.name]=e)};ri.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]};ri.currentVarScope=function(){for(var e=this.scopeStack.length-1;;e--){var i=this.scopeStack[e];if(i.flags&xa)return i}};ri.currentThisScope=function(){for(var e=this.scopeStack.length-1;;e--){var i=this.scopeStack[e];if(i.flags&xa&&!(i.flags&Fl))return i}};var Cn=function(i,s,a){this.type="",this.start=s,this.end=0,i.options.locations&&(this.loc=new Sn(i,a)),i.options.directSourceFile&&(this.sourceFile=i.options.directSourceFile),i.options.ranges&&(this.range=[s,0])},gr=Se.prototype;gr.startNode=function(){return new Cn(this,this.start,this.startLoc)};gr.startNodeAt=function(e,i){return new Cn(this,e,i)};function Vl(e,i,s,a){return e.type=i,e.end=s,this.options.locations&&(e.loc.end=a),this.options.ranges&&(e.range[1]=s),e}gr.finishNode=function(e,i){return Vl.call(this,e,i,this.lastTokEnd,this.lastTokEndLoc)};gr.finishNodeAt=function(e,i,s,a){return Vl.call(this,e,i,s,a)};gr.copyNode=function(e){var i=new Cn(this,e.start,this.startLoc);for(var s in e)i[s]=e[s];return i};var Wl="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",Ul=Wl+" Extended_Pictographic",ql=Ul,Hl=ql+" EBase EComp EMod EPres ExtPict",Gl=Hl,Bx=Gl,Vx={9:Wl,10:Ul,11:ql,12:Hl,13:Gl,14:Bx},Sl="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",zl="Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",Kl=zl+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",Yl=Kl+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",Ql=Yl+" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi",Zl=Ql+" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith",Wx=Zl+" Kawi Nag_Mundari Nagm",Ux={9:zl,10:Kl,11:Yl,12:Ql,13:Zl,14:Wx},Jl={};function qx(e){var i=Jl[e]={binary:mi(Vx[e]+" "+Sl),nonBinary:{General_Category:mi(Sl),Script:mi(Ux[e])}};i.nonBinary.Script_Extensions=i.nonBinary.Script,i.nonBinary.gc=i.nonBinary.General_Category,i.nonBinary.sc=i.nonBinary.Script,i.nonBinary.scx=i.nonBinary.Script_Extensions}for(yn=0,ca=[9,10,11,12,13,14];yn<ca.length;yn+=1)_l=ca[yn],qx(_l);var _l,yn,ca,N=Se.prototype,Ut=function(i){this.parser=i,this.validFlags="gim"+(i.options.ecmaVersion>=6?"uy":"")+(i.options.ecmaVersion>=9?"s":"")+(i.options.ecmaVersion>=13?"d":""),this.unicodeProperties=Jl[i.options.ecmaVersion>=14?14:i.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[]};Ut.prototype.reset=function(i,s,a){var u=a.indexOf("u")!==-1;this.start=i|0,this.source=s+"",this.flags=a,this.switchU=u&&this.parser.options.ecmaVersion>=6,this.switchN=u&&this.parser.options.ecmaVersion>=9};Ut.prototype.raise=function(i){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+i)};Ut.prototype.at=function(i,s){s===void 0&&(s=!1);var a=this.source,u=a.length;if(i>=u)return-1;var h=a.charCodeAt(i);if(!(s||this.switchU)||h<=55295||h>=57344||i+1>=u)return h;var g=a.charCodeAt(i+1);return g>=56320&&g<=57343?(h<<10)+g-56613888:h};Ut.prototype.nextIndex=function(i,s){s===void 0&&(s=!1);var a=this.source,u=a.length;if(i>=u)return u;var h=a.charCodeAt(i),g;return!(s||this.switchU)||h<=55295||h>=57344||i+1>=u||(g=a.charCodeAt(i+1))<56320||g>57343?i+1:i+2};Ut.prototype.current=function(i){return i===void 0&&(i=!1),this.at(this.pos,i)};Ut.prototype.lookahead=function(i){return i===void 0&&(i=!1),this.at(this.nextIndex(this.pos,i),i)};Ut.prototype.advance=function(i){i===void 0&&(i=!1),this.pos=this.nextIndex(this.pos,i)};Ut.prototype.eat=function(i,s){return s===void 0&&(s=!1),this.current(s)===i?(this.advance(s),!0):!1};N.validateRegExpFlags=function(e){for(var i=e.validFlags,s=e.flags,a=0;a<s.length;a++){var u=s.charAt(a);i.indexOf(u)===-1&&this.raise(e.start,"Invalid regular expression flag"),s.indexOf(u,a+1)>-1&&this.raise(e.start,"Duplicate regular expression flag")}};N.validateRegExpPattern=function(e){this.regexp_pattern(e),!e.switchN&&this.options.ecmaVersion>=9&&e.groupNames.length>0&&(e.switchN=!0,this.regexp_pattern(e))};N.regexp_pattern=function(e){e.pos=0,e.lastIntValue=0,e.lastStringValue="",e.lastAssertionIsQuantifiable=!1,e.numCapturingParens=0,e.maxBackReference=0,e.groupNames.length=0,e.backReferenceNames.length=0,this.regexp_disjunction(e),e.pos!==e.source.length&&(e.eat(41)&&e.raise("Unmatched ')'"),(e.eat(93)||e.eat(125))&&e.raise("Lone quantifier brackets")),e.maxBackReference>e.numCapturingParens&&e.raise("Invalid escape");for(var i=0,s=e.backReferenceNames;i<s.length;i+=1){var a=s[i];e.groupNames.indexOf(a)===-1&&e.raise("Invalid named capture referenced")}};N.regexp_disjunction=function(e){for(this.regexp_alternative(e);e.eat(124);)this.regexp_alternative(e);this.regexp_eatQuantifier(e,!0)&&e.raise("Nothing to repeat"),e.eat(123)&&e.raise("Lone quantifier brackets")};N.regexp_alternative=function(e){for(;e.pos<e.source.length&&this.regexp_eatTerm(e););};N.regexp_eatTerm=function(e){return this.regexp_eatAssertion(e)?(e.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(e)&&e.switchU&&e.raise("Invalid quantifier"),!0):(e.switchU?this.regexp_eatAtom(e):this.regexp_eatExtendedAtom(e))?(this.regexp_eatQuantifier(e),!0):!1};N.regexp_eatAssertion=function(e){var i=e.pos;if(e.lastAssertionIsQuantifiable=!1,e.eat(94)||e.eat(36))return!0;if(e.eat(92)){if(e.eat(66)||e.eat(98))return!0;e.pos=i}if(e.eat(40)&&e.eat(63)){var s=!1;if(this.options.ecmaVersion>=9&&(s=e.eat(60)),e.eat(61)||e.eat(33))return this.regexp_disjunction(e),e.eat(41)||e.raise("Unterminated group"),e.lastAssertionIsQuantifiable=!s,!0}return e.pos=i,!1};N.regexp_eatQuantifier=function(e,i){return i===void 0&&(i=!1),this.regexp_eatQuantifierPrefix(e,i)?(e.eat(63),!0):!1};N.regexp_eatQuantifierPrefix=function(e,i){return e.eat(42)||e.eat(43)||e.eat(63)||this.regexp_eatBracedQuantifier(e,i)};N.regexp_eatBracedQuantifier=function(e,i){var s=e.pos;if(e.eat(123)){var a=0,u=-1;if(this.regexp_eatDecimalDigits(e)&&(a=e.lastIntValue,e.eat(44)&&this.regexp_eatDecimalDigits(e)&&(u=e.lastIntValue),e.eat(125)))return u!==-1&&u<a&&!i&&e.raise("numbers out of order in {} quantifier"),!0;e.switchU&&!i&&e.raise("Incomplete quantifier"),e.pos=s}return!1};N.regexp_eatAtom=function(e){return this.regexp_eatPatternCharacters(e)||e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)};N.regexp_eatReverseSolidusAtomEscape=function(e){var i=e.pos;if(e.eat(92)){if(this.regexp_eatAtomEscape(e))return!0;e.pos=i}return!1};N.regexp_eatUncapturingGroup=function(e){var i=e.pos;if(e.eat(40)){if(e.eat(63)&&e.eat(58)){if(this.regexp_disjunction(e),e.eat(41))return!0;e.raise("Unterminated group")}e.pos=i}return!1};N.regexp_eatCapturingGroup=function(e){if(e.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(e):e.current()===63&&e.raise("Invalid group"),this.regexp_disjunction(e),e.eat(41))return e.numCapturingParens+=1,!0;e.raise("Unterminated group")}return!1};N.regexp_eatExtendedAtom=function(e){return e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)||this.regexp_eatInvalidBracedQuantifier(e)||this.regexp_eatExtendedPatternCharacter(e)};N.regexp_eatInvalidBracedQuantifier=function(e){return this.regexp_eatBracedQuantifier(e,!0)&&e.raise("Nothing to repeat"),!1};N.regexp_eatSyntaxCharacter=function(e){var i=e.current();return Xl(i)?(e.lastIntValue=i,e.advance(),!0):!1};function Xl(e){return e===36||e>=40&&e<=43||e===46||e===63||e>=91&&e<=94||e>=123&&e<=125}N.regexp_eatPatternCharacters=function(e){for(var i=e.pos,s=0;(s=e.current())!==-1&&!Xl(s);)e.advance();return e.pos!==i};N.regexp_eatExtendedPatternCharacter=function(e){var i=e.current();return i!==-1&&i!==36&&!(i>=40&&i<=43)&&i!==46&&i!==63&&i!==91&&i!==94&&i!==124?(e.advance(),!0):!1};N.regexp_groupSpecifier=function(e){if(e.eat(63)){if(this.regexp_eatGroupName(e)){e.groupNames.indexOf(e.lastStringValue)!==-1&&e.raise("Duplicate capture group name"),e.groupNames.push(e.lastStringValue);return}e.raise("Invalid group")}};N.regexp_eatGroupName=function(e){if(e.lastStringValue="",e.eat(60)){if(this.regexp_eatRegExpIdentifierName(e)&&e.eat(62))return!0;e.raise("Invalid capture group name")}return!1};N.regexp_eatRegExpIdentifierName=function(e){if(e.lastStringValue="",this.regexp_eatRegExpIdentifierStart(e)){for(e.lastStringValue+=ii(e.lastIntValue);this.regexp_eatRegExpIdentifierPart(e);)e.lastStringValue+=ii(e.lastIntValue);return!0}return!1};N.regexp_eatRegExpIdentifierStart=function(e){var i=e.pos,s=this.options.ecmaVersion>=11,a=e.current(s);return e.advance(s),a===92&&this.regexp_eatRegExpUnicodeEscapeSequence(e,s)&&(a=e.lastIntValue),Hx(a)?(e.lastIntValue=a,!0):(e.pos=i,!1)};function Hx(e){return Wt(e,!0)||e===36||e===95}N.regexp_eatRegExpIdentifierPart=function(e){var i=e.pos,s=this.options.ecmaVersion>=11,a=e.current(s);return e.advance(s),a===92&&this.regexp_eatRegExpUnicodeEscapeSequence(e,s)&&(a=e.lastIntValue),Gx(a)?(e.lastIntValue=a,!0):(e.pos=i,!1)};function Gx(e){return Di(e,!0)||e===36||e===95||e===8204||e===8205}N.regexp_eatAtomEscape=function(e){return this.regexp_eatBackReference(e)||this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)||e.switchN&&this.regexp_eatKGroupName(e)?!0:(e.switchU&&(e.current()===99&&e.raise("Invalid unicode escape"),e.raise("Invalid escape")),!1)};N.regexp_eatBackReference=function(e){var i=e.pos;if(this.regexp_eatDecimalEscape(e)){var s=e.lastIntValue;if(e.switchU)return s>e.maxBackReference&&(e.maxBackReference=s),!0;if(s<=e.numCapturingParens)return!0;e.pos=i}return!1};N.regexp_eatKGroupName=function(e){if(e.eat(107)){if(this.regexp_eatGroupName(e))return e.backReferenceNames.push(e.lastStringValue),!0;e.raise("Invalid named reference")}return!1};N.regexp_eatCharacterEscape=function(e){return this.regexp_eatControlEscape(e)||this.regexp_eatCControlLetter(e)||this.regexp_eatZero(e)||this.regexp_eatHexEscapeSequence(e)||this.regexp_eatRegExpUnicodeEscapeSequence(e,!1)||!e.switchU&&this.regexp_eatLegacyOctalEscapeSequence(e)||this.regexp_eatIdentityEscape(e)};N.regexp_eatCControlLetter=function(e){var i=e.pos;if(e.eat(99)){if(this.regexp_eatControlLetter(e))return!0;e.pos=i}return!1};N.regexp_eatZero=function(e){return e.current()===48&&!kn(e.lookahead())?(e.lastIntValue=0,e.advance(),!0):!1};N.regexp_eatControlEscape=function(e){var i=e.current();return i===116?(e.lastIntValue=9,e.advance(),!0):i===110?(e.lastIntValue=10,e.advance(),!0):i===118?(e.lastIntValue=11,e.advance(),!0):i===102?(e.lastIntValue=12,e.advance(),!0):i===114?(e.lastIntValue=13,e.advance(),!0):!1};N.regexp_eatControlLetter=function(e){var i=e.current();return $l(i)?(e.lastIntValue=i%32,e.advance(),!0):!1};function $l(e){return e>=65&&e<=90||e>=97&&e<=122}N.regexp_eatRegExpUnicodeEscapeSequence=function(e,i){i===void 0&&(i=!1);var s=e.pos,a=i||e.switchU;if(e.eat(117)){if(this.regexp_eatFixedHexDigits(e,4)){var u=e.lastIntValue;if(a&&u>=55296&&u<=56319){var h=e.pos;if(e.eat(92)&&e.eat(117)&&this.regexp_eatFixedHexDigits(e,4)){var g=e.lastIntValue;if(g>=56320&&g<=57343)return e.lastIntValue=(u-55296)*1024+(g-56320)+65536,!0}e.pos=h,e.lastIntValue=u}return!0}if(a&&e.eat(123)&&this.regexp_eatHexDigits(e)&&e.eat(125)&&zx(e.lastIntValue))return!0;a&&e.raise("Invalid unicode escape"),e.pos=s}return!1};function zx(e){return e>=0&&e<=1114111}N.regexp_eatIdentityEscape=function(e){if(e.switchU)return this.regexp_eatSyntaxCharacter(e)?!0:e.eat(47)?(e.lastIntValue=47,!0):!1;var i=e.current();return i!==99&&(!e.switchN||i!==107)?(e.lastIntValue=i,e.advance(),!0):!1};N.regexp_eatDecimalEscape=function(e){e.lastIntValue=0;var i=e.current();if(i>=49&&i<=57){do e.lastIntValue=10*e.lastIntValue+(i-48),e.advance();while((i=e.current())>=48&&i<=57);return!0}return!1};N.regexp_eatCharacterClassEscape=function(e){var i=e.current();if(Kx(i))return e.lastIntValue=-1,e.advance(),!0;if(e.switchU&&this.options.ecmaVersion>=9&&(i===80||i===112)){if(e.lastIntValue=-1,e.advance(),e.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(e)&&e.eat(125))return!0;e.raise("Invalid property name")}return!1};function Kx(e){return e===100||e===68||e===115||e===83||e===119||e===87}N.regexp_eatUnicodePropertyValueExpression=function(e){var i=e.pos;if(this.regexp_eatUnicodePropertyName(e)&&e.eat(61)){var s=e.lastStringValue;if(this.regexp_eatUnicodePropertyValue(e)){var a=e.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(e,s,a),!0}}if(e.pos=i,this.regexp_eatLoneUnicodePropertyNameOrValue(e)){var u=e.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(e,u),!0}return!1};N.regexp_validateUnicodePropertyNameAndValue=function(e,i,s){dr(e.unicodeProperties.nonBinary,i)||e.raise("Invalid property name"),e.unicodeProperties.nonBinary[i].test(s)||e.raise("Invalid property value")};N.regexp_validateUnicodePropertyNameOrValue=function(e,i){e.unicodeProperties.binary.test(i)||e.raise("Invalid property name")};N.regexp_eatUnicodePropertyName=function(e){var i=0;for(e.lastStringValue="";jl(i=e.current());)e.lastStringValue+=ii(i),e.advance();return e.lastStringValue!==""};function jl(e){return $l(e)||e===95}N.regexp_eatUnicodePropertyValue=function(e){var i=0;for(e.lastStringValue="";Yx(i=e.current());)e.lastStringValue+=ii(i),e.advance();return e.lastStringValue!==""};function Yx(e){return jl(e)||kn(e)}N.regexp_eatLoneUnicodePropertyNameOrValue=function(e){return this.regexp_eatUnicodePropertyValue(e)};N.regexp_eatCharacterClass=function(e){if(e.eat(91)){if(e.eat(94),this.regexp_classRanges(e),e.eat(93))return!0;e.raise("Unterminated character class")}return!1};N.regexp_classRanges=function(e){for(;this.regexp_eatClassAtom(e);){var i=e.lastIntValue;if(e.eat(45)&&this.regexp_eatClassAtom(e)){var s=e.lastIntValue;e.switchU&&(i===-1||s===-1)&&e.raise("Invalid character class"),i!==-1&&s!==-1&&i>s&&e.raise("Range out of order in character class")}}};N.regexp_eatClassAtom=function(e){var i=e.pos;if(e.eat(92)){if(this.regexp_eatClassEscape(e))return!0;if(e.switchU){var s=e.current();(s===99||ic(s))&&e.raise("Invalid class escape"),e.raise("Invalid escape")}e.pos=i}var a=e.current();return a!==93?(e.lastIntValue=a,e.advance(),!0):!1};N.regexp_eatClassEscape=function(e){var i=e.pos;if(e.eat(98))return e.lastIntValue=8,!0;if(e.switchU&&e.eat(45))return e.lastIntValue=45,!0;if(!e.switchU&&e.eat(99)){if(this.regexp_eatClassControlLetter(e))return!0;e.pos=i}return this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)};N.regexp_eatClassControlLetter=function(e){var i=e.current();return kn(i)||i===95?(e.lastIntValue=i%32,e.advance(),!0):!1};N.regexp_eatHexEscapeSequence=function(e){var i=e.pos;if(e.eat(120)){if(this.regexp_eatFixedHexDigits(e,2))return!0;e.switchU&&e.raise("Invalid escape"),e.pos=i}return!1};N.regexp_eatDecimalDigits=function(e){var i=e.pos,s=0;for(e.lastIntValue=0;kn(s=e.current());)e.lastIntValue=10*e.lastIntValue+(s-48),e.advance();return e.pos!==i};function kn(e){return e>=48&&e<=57}N.regexp_eatHexDigits=function(e){var i=e.pos,s=0;for(e.lastIntValue=0;ec(s=e.current());)e.lastIntValue=16*e.lastIntValue+tc(s),e.advance();return e.pos!==i};function ec(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function tc(e){return e>=65&&e<=70?10+(e-65):e>=97&&e<=102?10+(e-97):e-48}N.regexp_eatLegacyOctalEscapeSequence=function(e){if(this.regexp_eatOctalDigit(e)){var i=e.lastIntValue;if(this.regexp_eatOctalDigit(e)){var s=e.lastIntValue;i<=3&&this.regexp_eatOctalDigit(e)?e.lastIntValue=i*64+s*8+e.lastIntValue:e.lastIntValue=i*8+s}else e.lastIntValue=i;return!0}return!1};N.regexp_eatOctalDigit=function(e){var i=e.current();return ic(i)?(e.lastIntValue=i-48,e.advance(),!0):(e.lastIntValue=0,!1)};function ic(e){return e>=48&&e<=55}N.regexp_eatFixedHexDigits=function(e,i){var s=e.pos;e.lastIntValue=0;for(var a=0;a<i;++a){var u=e.current();if(!ec(u))return e.pos=s,!1;e.lastIntValue=16*e.lastIntValue+tc(u),e.advance()}return!0};var wa=function(i){this.type=i.type,this.value=i.value,this.start=i.start,this.end=i.end,i.options.locations&&(this.loc=new Sn(i,i.startLoc,i.endLoc)),i.options.ranges&&(this.range=[i.start,i.end])},Q=Se.prototype;Q.next=function(e){!e&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword),this.options.onToken&&this.options.onToken(new wa(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken()};Q.getToken=function(){return this.next(),new wa(this)};typeof Symbol!="undefined"&&(Q[Symbol.iterator]=function(){var e=this;return{next:function(){var i=e.getToken();return{done:i.type===f.eof,value:i}}}});Q.nextToken=function(){var e=this.curContext();if((!e||!e.preserveSpace)&&this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length)return this.finishToken(f.eof);if(e.override)return e.override(this);this.readToken(this.fullCharCodeAtPos())};Q.readToken=function(e){return Wt(e,this.options.ecmaVersion>=6)||e===92?this.readWord():this.getTokenFromCode(e)};Q.fullCharCodeAtPos=function(){var e=this.input.charCodeAt(this.pos);if(e<=55295||e>=56320)return e;var i=this.input.charCodeAt(this.pos+1);return i<=56319||i>=57344?e:(e<<10)+i-56613888};Q.skipBlockComment=function(){var e=this.options.onComment&&this.curPosition(),i=this.pos,s=this.input.indexOf("*/",this.pos+=2);if(s===-1&&this.raise(this.pos-2,"Unterminated comment"),this.pos=s+2,this.options.locations)for(var a=void 0,u=i;(a=Tl(this.input,u,this.pos))>-1;)++this.curLine,u=this.lineStart=a;this.options.onComment&&this.options.onComment(!0,this.input.slice(i+2,s),i,this.pos,e,this.curPosition())};Q.skipLineComment=function(e){for(var i=this.pos,s=this.options.onComment&&this.curPosition(),a=this.input.charCodeAt(this.pos+=e);this.pos<this.input.length&&!Mi(a);)a=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(i+e,this.pos),i,this.pos,s,this.curPosition())};Q.skipSpace=function(){e:for(;this.pos<this.input.length;){var e=this.input.charCodeAt(this.pos);switch(e){case 32:case 160:++this.pos;break;case 13:this.input.charCodeAt(this.pos+1)===10&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(e>8&&e<14||e>=5760&&Il.test(String.fromCharCode(e)))++this.pos;else break e}}};Q.finishToken=function(e,i){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var s=this.type;this.type=e,this.value=i,this.updateContext(s)};Q.readToken_dot=function(){var e=this.input.charCodeAt(this.pos+1);if(e>=48&&e<=57)return this.readNumber(!0);var i=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&e===46&&i===46?(this.pos+=3,this.finishToken(f.ellipsis)):(++this.pos,this.finishToken(f.dot))};Q.readToken_slash=function(){var e=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):e===61?this.finishOp(f.assign,2):this.finishOp(f.slash,1)};Q.readToken_mult_modulo_exp=function(e){var i=this.input.charCodeAt(this.pos+1),s=1,a=e===42?f.star:f.modulo;return this.options.ecmaVersion>=7&&e===42&&i===42&&(++s,a=f.starstar,i=this.input.charCodeAt(this.pos+2)),i===61?this.finishOp(f.assign,s+1):this.finishOp(a,s)};Q.readToken_pipe_amp=function(e){var i=this.input.charCodeAt(this.pos+1);if(i===e){if(this.options.ecmaVersion>=12){var s=this.input.charCodeAt(this.pos+2);if(s===61)return this.finishOp(f.assign,3)}return this.finishOp(e===124?f.logicalOR:f.logicalAND,2)}return i===61?this.finishOp(f.assign,2):this.finishOp(e===124?f.bitwiseOR:f.bitwiseAND,1)};Q.readToken_caret=function(){var e=this.input.charCodeAt(this.pos+1);return e===61?this.finishOp(f.assign,2):this.finishOp(f.bitwiseXOR,1)};Q.readToken_plus_min=function(e){var i=this.input.charCodeAt(this.pos+1);return i===e?i===45&&!this.inModule&&this.input.charCodeAt(this.pos+2)===62&&(this.lastTokEnd===0||ct.test(this.input.slice(this.lastTokEnd,this.pos)))?(this.skipLineComment(3),this.skipSpace(),this.nextToken()):this.finishOp(f.incDec,2):i===61?this.finishOp(f.assign,2):this.finishOp(f.plusMin,1)};Q.readToken_lt_gt=function(e){var i=this.input.charCodeAt(this.pos+1),s=1;return i===e?(s=e===62&&this.input.charCodeAt(this.pos+2)===62?3:2,this.input.charCodeAt(this.pos+s)===61?this.finishOp(f.assign,s+1):this.finishOp(f.bitShift,s)):i===33&&e===60&&!this.inModule&&this.input.charCodeAt(this.pos+2)===45&&this.input.charCodeAt(this.pos+3)===45?(this.skipLineComment(4),this.skipSpace(),this.nextToken()):(i===61&&(s=2),this.finishOp(f.relational,s))};Q.readToken_eq_excl=function(e){var i=this.input.charCodeAt(this.pos+1);return i===61?this.finishOp(f.equality,this.input.charCodeAt(this.pos+2)===61?3:2):e===61&&i===62&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(f.arrow)):this.finishOp(e===61?f.eq:f.prefix,1)};Q.readToken_question=function(){var e=this.options.ecmaVersion;if(e>=11){var i=this.input.charCodeAt(this.pos+1);if(i===46){var s=this.input.charCodeAt(this.pos+2);if(s<48||s>57)return this.finishOp(f.questionDot,2)}if(i===63){if(e>=12){var a=this.input.charCodeAt(this.pos+2);if(a===61)return this.finishOp(f.assign,3)}return this.finishOp(f.coalesce,2)}}return this.finishOp(f.question,1)};Q.readToken_numberSign=function(){var e=this.options.ecmaVersion,i=35;if(e>=13&&(++this.pos,i=this.fullCharCodeAtPos(),Wt(i,!0)||i===92))return this.finishToken(f.privateId,this.readWord1());this.raise(this.pos,"Unexpected character '"+ii(i)+"'")};Q.getTokenFromCode=function(e){switch(e){case 46:return this.readToken_dot();case 40:return++this.pos,this.finishToken(f.parenL);case 41:return++this.pos,this.finishToken(f.parenR);case 59:return++this.pos,this.finishToken(f.semi);case 44:return++this.pos,this.finishToken(f.comma);case 91:return++this.pos,this.finishToken(f.bracketL);case 93:return++this.pos,this.finishToken(f.bracketR);case 123:return++this.pos,this.finishToken(f.braceL);case 125:return++this.pos,this.finishToken(f.braceR);case 58:return++this.pos,this.finishToken(f.colon);case 96:if(this.options.ecmaVersion<6)break;return++this.pos,this.finishToken(f.backQuote);case 48:var i=this.input.charCodeAt(this.pos+1);if(i===120||i===88)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(i===111||i===79)return this.readRadixNumber(8);if(i===98||i===66)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(e);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(e);case 124:case 38:return this.readToken_pipe_amp(e);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(e);case 60:case 62:return this.readToken_lt_gt(e);case 61:case 33:return this.readToken_eq_excl(e);case 63:return this.readToken_question();case 126:return this.finishOp(f.prefix,1);case 35:return this.readToken_numberSign()}this.raise(this.pos,"Unexpected character '"+ii(e)+"'")};Q.finishOp=function(e,i){var s=this.input.slice(this.pos,this.pos+i);return this.pos+=i,this.finishToken(e,s)};Q.readRegexp=function(){for(var e,i,s=this.pos;;){this.pos>=this.input.length&&this.raise(s,"Unterminated regular expression");var a=this.input.charAt(this.pos);if(ct.test(a)&&this.raise(s,"Unterminated regular expression"),e)e=!1;else{if(a==="[")i=!0;else if(a==="]"&&i)i=!1;else if(a==="/"&&!i)break;e=a==="\\\\"}++this.pos}var u=this.input.slice(s,this.pos);++this.pos;var h=this.pos,g=this.readWord1();this.containsEsc&&this.unexpected(h);var b=this.regexpState||(this.regexpState=new Ut(this));b.reset(s,u,g),this.validateRegExpFlags(b),this.validateRegExpPattern(b);var w=null;try{w=new RegExp(u,g)}catch(T){}return this.finishToken(f.regexp,{pattern:u,flags:g,value:w})};Q.readInt=function(e,i,s){for(var a=this.options.ecmaVersion>=12&&i===void 0,u=s&&this.input.charCodeAt(this.pos)===48,h=this.pos,g=0,b=0,w=0,T=i==null?1/0:i;w<T;++w,++this.pos){var P=this.input.charCodeAt(this.pos),W=void 0;if(a&&P===95){u&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed in legacy octal numeric literals"),b===95&&this.raiseRecoverable(this.pos,"Numeric separator must be exactly one underscore"),w===0&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed at the first of digits"),b=P;continue}if(P>=97?W=P-97+10:P>=65?W=P-65+10:P>=48&&P<=57?W=P-48:W=1/0,W>=e)break;b=P,g=g*e+W}return a&&b===95&&this.raiseRecoverable(this.pos-1,"Numeric separator is not allowed at the last of digits"),this.pos===h||i!=null&&this.pos-h!==i?null:g};function Qx(e,i){return i?parseInt(e,8):parseFloat(e.replace(/_/g,""))}function rc(e){return typeof BigInt!="function"?null:BigInt(e.replace(/_/g,""))}Q.readRadixNumber=function(e){var i=this.pos;this.pos+=2;var s=this.readInt(e);return s==null&&this.raise(this.start+2,"Expected number in radix "+e),this.options.ecmaVersion>=11&&this.input.charCodeAt(this.pos)===110?(s=rc(this.input.slice(i,this.pos)),++this.pos):Wt(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(f.num,s)};Q.readNumber=function(e){var i=this.pos;!e&&this.readInt(10,void 0,!0)===null&&this.raise(i,"Invalid number");var s=this.pos-i>=2&&this.input.charCodeAt(i)===48;s&&this.strict&&this.raise(i,"Invalid number");var a=this.input.charCodeAt(this.pos);if(!s&&!e&&this.options.ecmaVersion>=11&&a===110){var u=rc(this.input.slice(i,this.pos));return++this.pos,Wt(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(f.num,u)}s&&/[89]/.test(this.input.slice(i,this.pos))&&(s=!1),a===46&&!s&&(++this.pos,this.readInt(10),a=this.input.charCodeAt(this.pos)),(a===69||a===101)&&!s&&(a=this.input.charCodeAt(++this.pos),(a===43||a===45)&&++this.pos,this.readInt(10)===null&&this.raise(i,"Invalid number")),Wt(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var h=Qx(this.input.slice(i,this.pos),s);return this.finishToken(f.num,h)};Q.readCodePoint=function(){var e=this.input.charCodeAt(this.pos),i;if(e===123){this.options.ecmaVersion<6&&this.unexpected();var s=++this.pos;i=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,i>1114111&&this.invalidStringToken(s,"Code point out of bounds")}else i=this.readHexChar(4);return i};Q.readString=function(e){for(var i="",s=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var a=this.input.charCodeAt(this.pos);if(a===e)break;a===92?(i+=this.input.slice(s,this.pos),i+=this.readEscapedChar(!1),s=this.pos):a===8232||a===8233?(this.options.ecmaVersion<10&&this.raise(this.start,"Unterminated string constant"),++this.pos,this.options.locations&&(this.curLine++,this.lineStart=this.pos)):(Mi(a)&&this.raise(this.start,"Unterminated string constant"),++this.pos)}return i+=this.input.slice(s,this.pos++),this.finishToken(f.string,i)};var nc={};Q.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken()}catch(e){if(e===nc)this.readInvalidTemplateToken();else throw e}this.inTemplateElement=!1};Q.invalidStringToken=function(e,i){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw nc;this.raise(e,i)};Q.readTmplToken=function(){for(var e="",i=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var s=this.input.charCodeAt(this.pos);if(s===96||s===36&&this.input.charCodeAt(this.pos+1)===123)return this.pos===this.start&&(this.type===f.template||this.type===f.invalidTemplate)?s===36?(this.pos+=2,this.finishToken(f.dollarBraceL)):(++this.pos,this.finishToken(f.backQuote)):(e+=this.input.slice(i,this.pos),this.finishToken(f.template,e));if(s===92)e+=this.input.slice(i,this.pos),e+=this.readEscapedChar(!0),i=this.pos;else if(Mi(s)){switch(e+=this.input.slice(i,this.pos),++this.pos,s){case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:e+=\`
\`;break;default:e+=String.fromCharCode(s);break}this.options.locations&&(++this.curLine,this.lineStart=this.pos),i=this.pos}else++this.pos}};Q.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\\\":++this.pos;break;case"$":if(this.input[this.pos+1]!=="{")break;case"\`":return this.finishToken(f.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template")};Q.readEscapedChar=function(e){var i=this.input.charCodeAt(++this.pos);switch(++this.pos,i){case 110:return\`
\`;case 114:return"\\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return ii(this.readCodePoint());case 116:return"	";case 98:return"\\b";case 118:return"\\v";case 102:return"\\f";case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";case 56:case 57:if(this.strict&&this.invalidStringToken(this.pos-1,"Invalid escape sequence"),e){var s=this.pos-1;this.invalidStringToken(s,"Invalid escape sequence in template string")}default:if(i>=48&&i<=55){var a=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],u=parseInt(a,8);return u>255&&(a=a.slice(0,-1),u=parseInt(a,8)),this.pos+=a.length-1,i=this.input.charCodeAt(this.pos),(a!=="0"||i===56||i===57)&&(this.strict||e)&&this.invalidStringToken(this.pos-1-a.length,e?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(u)}return Mi(i)?"":String.fromCharCode(i)}};Q.readHexChar=function(e){var i=this.pos,s=this.readInt(16,e);return s===null&&this.invalidStringToken(i,"Bad character escape sequence"),s};Q.readWord1=function(){this.containsEsc=!1;for(var e="",i=!0,s=this.pos,a=this.options.ecmaVersion>=6;this.pos<this.input.length;){var u=this.fullCharCodeAtPos();if(Di(u,a))this.pos+=u<=65535?1:2;else if(u===92){this.containsEsc=!0,e+=this.input.slice(s,this.pos);var h=this.pos;this.input.charCodeAt(++this.pos)!==117&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\\\uXXXX"),++this.pos;var g=this.readCodePoint();(i?Wt:Di)(g,a)||this.invalidStringToken(h,"Invalid Unicode escape"),e+=ii(g),s=this.pos}else break;i=!1}return e+this.input.slice(s,this.pos)};Q.readWord=function(){var e=this.readWord1(),i=f.name;return this.keywords.test(e)&&(i=da[e]),this.finishToken(i,e)};var Zx="8.8.2";Se.acorn={Parser:Se,version:Zx,defaultOptions:pa,Position:pr,SourceLocation:Sn,getLineInfo:El,Node:Cn,TokenType:j,tokTypes:f,keywordTypes:da,TokContext:yt,tokContexts:pe,isIdentifierChar:Di,isIdentifierStart:Wt,Token:wa,isNewLine:Mi,lineBreak:ct,lineBreakG:Tx,nonASCIIwhitespace:Il};function Sa(e,i,s){s(e,i)}function gi(e,i,s){}var I={};I.Program=I.BlockStatement=I.StaticBlock=function(e,i,s){for(var a=0,u=e.body;a<u.length;a+=1){var h=u[a];s(h,i,"Statement")}};I.Statement=Sa;I.EmptyStatement=gi;I.ExpressionStatement=I.ParenthesizedExpression=I.ChainExpression=function(e,i,s){return s(e.expression,i,"Expression")};I.IfStatement=function(e,i,s){s(e.test,i,"Expression"),s(e.consequent,i,"Statement"),e.alternate&&s(e.alternate,i,"Statement")};I.LabeledStatement=function(e,i,s){return s(e.body,i,"Statement")};I.BreakStatement=I.ContinueStatement=gi;I.WithStatement=function(e,i,s){s(e.object,i,"Expression"),s(e.body,i,"Statement")};I.SwitchStatement=function(e,i,s){s(e.discriminant,i,"Expression");for(var a=0,u=e.cases;a<u.length;a+=1){var h=u[a];h.test&&s(h.test,i,"Expression");for(var g=0,b=h.consequent;g<b.length;g+=1){var w=b[g];s(w,i,"Statement")}}};I.SwitchCase=function(e,i,s){e.test&&s(e.test,i,"Expression");for(var a=0,u=e.consequent;a<u.length;a+=1){var h=u[a];s(h,i,"Statement")}};I.ReturnStatement=I.YieldExpression=I.AwaitExpression=function(e,i,s){e.argument&&s(e.argument,i,"Expression")};I.ThrowStatement=I.SpreadElement=function(e,i,s){return s(e.argument,i,"Expression")};I.TryStatement=function(e,i,s){s(e.block,i,"Statement"),e.handler&&s(e.handler,i),e.finalizer&&s(e.finalizer,i,"Statement")};I.CatchClause=function(e,i,s){e.param&&s(e.param,i,"Pattern"),s(e.body,i,"Statement")};I.WhileStatement=I.DoWhileStatement=function(e,i,s){s(e.test,i,"Expression"),s(e.body,i,"Statement")};I.ForStatement=function(e,i,s){e.init&&s(e.init,i,"ForInit"),e.test&&s(e.test,i,"Expression"),e.update&&s(e.update,i,"Expression"),s(e.body,i,"Statement")};I.ForInStatement=I.ForOfStatement=function(e,i,s){s(e.left,i,"ForInit"),s(e.right,i,"Expression"),s(e.body,i,"Statement")};I.ForInit=function(e,i,s){e.type==="VariableDeclaration"?s(e,i):s(e,i,"Expression")};I.DebuggerStatement=gi;I.FunctionDeclaration=function(e,i,s){return s(e,i,"Function")};I.VariableDeclaration=function(e,i,s){for(var a=0,u=e.declarations;a<u.length;a+=1){var h=u[a];s(h,i)}};I.VariableDeclarator=function(e,i,s){s(e.id,i,"Pattern"),e.init&&s(e.init,i,"Expression")};I.Function=function(e,i,s){e.id&&s(e.id,i,"Pattern");for(var a=0,u=e.params;a<u.length;a+=1){var h=u[a];s(h,i,"Pattern")}s(e.body,i,e.expression?"Expression":"Statement")};I.Pattern=function(e,i,s){e.type==="Identifier"?s(e,i,"VariablePattern"):e.type==="MemberExpression"?s(e,i,"MemberPattern"):s(e,i)};I.VariablePattern=gi;I.MemberPattern=Sa;I.RestElement=function(e,i,s){return s(e.argument,i,"Pattern")};I.ArrayPattern=function(e,i,s){for(var a=0,u=e.elements;a<u.length;a+=1){var h=u[a];h&&s(h,i,"Pattern")}};I.ObjectPattern=function(e,i,s){for(var a=0,u=e.properties;a<u.length;a+=1){var h=u[a];h.type==="Property"?(h.computed&&s(h.key,i,"Expression"),s(h.value,i,"Pattern")):h.type==="RestElement"&&s(h.argument,i,"Pattern")}};I.Expression=Sa;I.ThisExpression=I.Super=I.MetaProperty=gi;I.ArrayExpression=function(e,i,s){for(var a=0,u=e.elements;a<u.length;a+=1){var h=u[a];h&&s(h,i,"Expression")}};I.ObjectExpression=function(e,i,s){for(var a=0,u=e.properties;a<u.length;a+=1){var h=u[a];s(h,i)}};I.FunctionExpression=I.ArrowFunctionExpression=I.FunctionDeclaration;I.SequenceExpression=function(e,i,s){for(var a=0,u=e.expressions;a<u.length;a+=1){var h=u[a];s(h,i,"Expression")}};I.TemplateLiteral=function(e,i,s){for(var a=0,u=e.quasis;a<u.length;a+=1){var h=u[a];s(h,i)}for(var g=0,b=e.expressions;g<b.length;g+=1){var w=b[g];s(w,i,"Expression")}};I.TemplateElement=gi;I.UnaryExpression=I.UpdateExpression=function(e,i,s){s(e.argument,i,"Expression")};I.BinaryExpression=I.LogicalExpression=function(e,i,s){s(e.left,i,"Expression"),s(e.right,i,"Expression")};I.AssignmentExpression=I.AssignmentPattern=function(e,i,s){s(e.left,i,"Pattern"),s(e.right,i,"Expression")};I.ConditionalExpression=function(e,i,s){s(e.test,i,"Expression"),s(e.consequent,i,"Expression"),s(e.alternate,i,"Expression")};I.NewExpression=I.CallExpression=function(e,i,s){if(s(e.callee,i,"Expression"),e.arguments)for(var a=0,u=e.arguments;a<u.length;a+=1){var h=u[a];s(h,i,"Expression")}};I.MemberExpression=function(e,i,s){s(e.object,i,"Expression"),e.computed&&s(e.property,i,"Expression")};I.ExportNamedDeclaration=I.ExportDefaultDeclaration=function(e,i,s){e.declaration&&s(e.declaration,i,e.type==="ExportNamedDeclaration"||e.declaration.id?"Statement":"Expression"),e.source&&s(e.source,i,"Expression")};I.ExportAllDeclaration=function(e,i,s){e.exported&&s(e.exported,i),s(e.source,i,"Expression")};I.ImportDeclaration=function(e,i,s){for(var a=0,u=e.specifiers;a<u.length;a+=1){var h=u[a];s(h,i)}s(e.source,i,"Expression")};I.ImportExpression=function(e,i,s){s(e.source,i,"Expression")};I.ImportSpecifier=I.ImportDefaultSpecifier=I.ImportNamespaceSpecifier=I.Identifier=I.PrivateIdentifier=I.Literal=gi;I.TaggedTemplateExpression=function(e,i,s){s(e.tag,i,"Expression"),s(e.quasi,i,"Expression")};I.ClassDeclaration=I.ClassExpression=function(e,i,s){return s(e,i,"Class")};I.Class=function(e,i,s){e.id&&s(e.id,i,"Pattern"),e.superClass&&s(e.superClass,i,"Expression"),s(e.body,i)};I.ClassBody=function(e,i,s){for(var a=0,u=e.body;a<u.length;a+=1){var h=u[a];s(h,i)}};I.MethodDefinition=I.PropertyDefinition=I.Property=function(e,i,s){e.computed&&s(e.key,i,"Expression"),e.value&&s(e.value,i,"Expression")};var{stringify:Xx}=JSON;if(!String.prototype.repeat)throw new Error("String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation");if(!String.prototype.endsWith)throw new Error("String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation");var Tn={"||":3,"&&":4,"|":5,"??":5,"^":6,"&":7,"==":8,"!=":8,"===":8,"!==":8,"<":9,">":9,"<=":9,">=":9,in:9,instanceof:9,"<<":10,">>":10,">>>":10,"+":11,"-":11,"*":12,"%":12,"/":12,"**":13},xi=17;function Wi(e,i){let{generator:s}=e;if(e.write("("),i!=null&&i.length>0){s[i[0].type](i[0],e);let{length:a}=i;for(let u=1;u<a;u++){let h=i[u];e.write(", "),s[h.type](h,e)}}e.write(")")}function fc(e,i,s,a){let u=e.expressionsPrecedence[i.type];if(u===xi)return!0;let h=e.expressionsPrecedence[s.type];return u!==h?!a&&u===15&&h===14&&s.operator==="**"||u<h:u!==13&&u!==14?!1:i.operator==="**"&&s.operator==="**"?!a:a?Tn[i.operator]<=Tn[s.operator]:Tn[i.operator]<Tn[s.operator]}function In(e,i,s,a){let{generator:u}=e;fc(e,i,s,a)?(e.write("("),u[i.type](i,e),e.write(")")):u[i.type](i,e)}function $x(e,i,s,a){let u=i.split(\`
\`),h=u.length-1;if(e.write(u[0].trim()),h>0){e.write(a);for(let g=1;g<h;g++)e.write(s+u[g].trim()+a);e.write(s+u[h].trim())}}function Re(e,i,s,a){let{length:u}=i;for(let h=0;h<u;h++){let g=i[h];e.write(s),g.type[0]==="L"?e.write("// "+g.value.trim()+\`
\`,g):(e.write("/*"),$x(e,g.value,s,a),e.write("*/"+a))}}function jx(e){let i=e;for(;i!=null;){let{type:s}=i;if(s[0]==="C"&&s[1]==="a")return!0;if(s[0]==="M"&&s[1]==="e"&&s[2]==="m")i=i.object;else return!1}}function _a(e,i){let{generator:s}=e,{declarations:a}=i;e.write(i.kind+" ");let{length:u}=a;if(u>0){s.VariableDeclarator(a[0],e);for(let h=1;h<u;h++)e.write(", "),s.VariableDeclarator(a[h],e)}}var sc,ac,oc,uc,lc,cc,My={Program(e,i){let s=i.indent.repeat(i.indentLevel),{lineEnd:a,writeComments:u}=i;u&&e.comments!=null&&Re(i,e.comments,s,a);let h=e.body,{length:g}=h;for(let b=0;b<g;b++){let w=h[b];u&&w.comments!=null&&Re(i,w.comments,s,a),i.write(s),this[w.type](w,i),i.write(a)}u&&e.trailingComments!=null&&Re(i,e.trailingComments,s,a)},BlockStatement:cc=function(e,i){let s=i.indent.repeat(i.indentLevel++),{lineEnd:a,writeComments:u}=i,h=s+i.indent;i.write("{");let g=e.body;if(g!=null&&g.length>0){i.write(a),u&&e.comments!=null&&Re(i,e.comments,h,a);let{length:b}=g;for(let w=0;w<b;w++){let T=g[w];u&&T.comments!=null&&Re(i,T.comments,h,a),i.write(h),this[T.type](T,i),i.write(a)}i.write(s)}else u&&e.comments!=null&&(i.write(a),Re(i,e.comments,h,a),i.write(s));u&&e.trailingComments!=null&&Re(i,e.trailingComments,h,a),i.write("}"),i.indentLevel--},ClassBody:cc,StaticBlock(e,i){i.write("static "),this.BlockStatement(e,i)},EmptyStatement(e,i){i.write(";")},ExpressionStatement(e,i){let s=i.expressionsPrecedence[e.expression.type];s===xi||s===3&&e.expression.left.type[0]==="O"?(i.write("("),this[e.expression.type](e.expression,i),i.write(")")):this[e.expression.type](e.expression,i),i.write(";")},IfStatement(e,i){i.write("if ("),this[e.test.type](e.test,i),i.write(") "),this[e.consequent.type](e.consequent,i),e.alternate!=null&&(i.write(" else "),this[e.alternate.type](e.alternate,i))},LabeledStatement(e,i){this[e.label.type](e.label,i),i.write(": "),this[e.body.type](e.body,i)},BreakStatement(e,i){i.write("break"),e.label!=null&&(i.write(" "),this[e.label.type](e.label,i)),i.write(";")},ContinueStatement(e,i){i.write("continue"),e.label!=null&&(i.write(" "),this[e.label.type](e.label,i)),i.write(";")},WithStatement(e,i){i.write("with ("),this[e.object.type](e.object,i),i.write(") "),this[e.body.type](e.body,i)},SwitchStatement(e,i){let s=i.indent.repeat(i.indentLevel++),{lineEnd:a,writeComments:u}=i;i.indentLevel++;let h=s+i.indent,g=h+i.indent;i.write("switch ("),this[e.discriminant.type](e.discriminant,i),i.write(") {"+a);let{cases:b}=e,{length:w}=b;for(let T=0;T<w;T++){let P=b[T];u&&P.comments!=null&&Re(i,P.comments,h,a),P.test?(i.write(h+"case "),this[P.test.type](P.test,i),i.write(":"+a)):i.write(h+"default:"+a);let{consequent:W}=P,{length:X}=W;for(let oe=0;oe<X;oe++){let M=W[oe];u&&M.comments!=null&&Re(i,M.comments,g,a),i.write(g),this[M.type](M,i),i.write(a)}}i.indentLevel-=2,i.write(s+"}")},ReturnStatement(e,i){i.write("return"),e.argument&&(i.write(" "),this[e.argument.type](e.argument,i)),i.write(";")},ThrowStatement(e,i){i.write("throw "),this[e.argument.type](e.argument,i),i.write(";")},TryStatement(e,i){if(i.write("try "),this[e.block.type](e.block,i),e.handler){let{handler:s}=e;s.param==null?i.write(" catch "):(i.write(" catch ("),this[s.param.type](s.param,i),i.write(") ")),this[s.body.type](s.body,i)}e.finalizer&&(i.write(" finally "),this[e.finalizer.type](e.finalizer,i))},WhileStatement(e,i){i.write("while ("),this[e.test.type](e.test,i),i.write(") "),this[e.body.type](e.body,i)},DoWhileStatement(e,i){i.write("do "),this[e.body.type](e.body,i),i.write(" while ("),this[e.test.type](e.test,i),i.write(");")},ForStatement(e,i){if(i.write("for ("),e.init!=null){let{init:s}=e;s.type[0]==="V"?_a(i,s):this[s.type](s,i)}i.write("; "),e.test&&this[e.test.type](e.test,i),i.write("; "),e.update&&this[e.update.type](e.update,i),i.write(") "),this[e.body.type](e.body,i)},ForInStatement:sc=function(e,i){i.write(\`for \${e.await?"await ":""}(\`);let{left:s}=e;s.type[0]==="V"?_a(i,s):this[s.type](s,i),i.write(e.type[3]==="I"?" in ":" of "),this[e.right.type](e.right,i),i.write(") "),this[e.body.type](e.body,i)},ForOfStatement:sc,DebuggerStatement(e,i){i.write("debugger;",e)},FunctionDeclaration:ac=function(e,i){i.write((e.async?"async ":"")+(e.generator?"function* ":"function ")+(e.id?e.id.name:""),e),Wi(i,e.params),i.write(" "),this[e.body.type](e.body,i)},FunctionExpression:ac,VariableDeclaration(e,i){_a(i,e),i.write(";")},VariableDeclarator(e,i){this[e.id.type](e.id,i),e.init!=null&&(i.write(" = "),this[e.init.type](e.init,i))},ClassDeclaration(e,i){if(i.write("class "+(e.id?\`\${e.id.name} \`:""),e),e.superClass){i.write("extends ");let{superClass:s}=e,{type:a}=s,u=i.expressionsPrecedence[a];(a[0]!=="C"||a[1]!=="l"||a[5]!=="E")&&(u===xi||u<i.expressionsPrecedence.ClassExpression)?(i.write("("),this[e.superClass.type](s,i),i.write(")")):this[s.type](s,i),i.write(" ")}this.ClassBody(e.body,i)},ImportDeclaration(e,i){i.write("import ");let{specifiers:s}=e,{length:a}=s,u=0;if(a>0){for(;u<a;){u>0&&i.write(", ");let h=s[u],g=h.type[6];if(g==="D")i.write(h.local.name,h),u++;else if(g==="N")i.write("* as "+h.local.name,h),u++;else break}if(u<a){for(i.write("{");;){let h=s[u],{name:g}=h.imported;if(i.write(g,h),g!==h.local.name&&i.write(" as "+h.local.name),++u<a)i.write(", ");else break}i.write("}")}i.write(" from ")}this.Literal(e.source,i),i.write(";")},ImportExpression(e,i){i.write("import("),this[e.source.type](e.source,i),i.write(")")},ExportDefaultDeclaration(e,i){i.write("export default "),this[e.declaration.type](e.declaration,i),i.expressionsPrecedence[e.declaration.type]!=null&&e.declaration.type[0]!=="F"&&i.write(";")},ExportNamedDeclaration(e,i){if(i.write("export "),e.declaration)this[e.declaration.type](e.declaration,i);else{i.write("{");let{specifiers:s}=e,{length:a}=s;if(a>0)for(let u=0;;){let h=s[u],{name:g}=h.local;if(i.write(g,h),g!==h.exported.name&&i.write(" as "+h.exported.name),++u<a)i.write(", ");else break}i.write("}"),e.source&&(i.write(" from "),this.Literal(e.source,i)),i.write(";")}},ExportAllDeclaration(e,i){e.exported!=null?i.write("export * as "+e.exported.name+" from "):i.write("export * from "),this.Literal(e.source,i),i.write(";")},MethodDefinition(e,i){e.static&&i.write("static ");let s=e.kind[0];(s==="g"||s==="s")&&i.write(e.kind+" "),e.value.async&&i.write("async "),e.value.generator&&i.write("*"),e.computed?(i.write("["),this[e.key.type](e.key,i),i.write("]")):this[e.key.type](e.key,i),Wi(i,e.value.params),i.write(" "),this[e.value.body.type](e.value.body,i)},ClassExpression(e,i){this.ClassDeclaration(e,i)},ArrowFunctionExpression(e,i){i.write(e.async?"async ":"",e);let{params:s}=e;s!=null&&(s.length===1&&s[0].type[0]==="I"?i.write(s[0].name,s[0]):Wi(i,e.params)),i.write(" => "),e.body.type[0]==="O"?(i.write("("),this.ObjectExpression(e.body,i),i.write(")")):this[e.body.type](e.body,i)},ThisExpression(e,i){i.write("this",e)},Super(e,i){i.write("super",e)},RestElement:oc=function(e,i){i.write("..."),this[e.argument.type](e.argument,i)},SpreadElement:oc,YieldExpression(e,i){i.write(e.delegate?"yield*":"yield"),e.argument&&(i.write(" "),this[e.argument.type](e.argument,i))},AwaitExpression(e,i){i.write("await ",e),In(i,e.argument,e)},TemplateLiteral(e,i){let{quasis:s,expressions:a}=e;i.write("\`");let{length:u}=a;for(let g=0;g<u;g++){let b=a[g],w=s[g];i.write(w.value.raw,w),i.write("\${"),this[b.type](b,i),i.write("}")}let h=s[s.length-1];i.write(h.value.raw,h),i.write("\`")},TemplateElement(e,i){i.write(e.value.raw,e)},TaggedTemplateExpression(e,i){In(i,e.tag,e),this[e.quasi.type](e.quasi,i)},ArrayExpression:lc=function(e,i){if(i.write("["),e.elements.length>0){let{elements:s}=e,{length:a}=s;for(let u=0;;){let h=s[u];if(h!=null&&this[h.type](h,i),++u<a)i.write(", ");else{h==null&&i.write(", ");break}}}i.write("]")},ArrayPattern:lc,ObjectExpression(e,i){let s=i.indent.repeat(i.indentLevel++),{lineEnd:a,writeComments:u}=i,h=s+i.indent;if(i.write("{"),e.properties.length>0){i.write(a),u&&e.comments!=null&&Re(i,e.comments,h,a);let g=","+a,{properties:b}=e,{length:w}=b;for(let T=0;;){let P=b[T];if(u&&P.comments!=null&&Re(i,P.comments,h,a),i.write(h),this[P.type](P,i),++T<w)i.write(g);else break}i.write(a),u&&e.trailingComments!=null&&Re(i,e.trailingComments,h,a),i.write(s+"}")}else u?e.comments!=null?(i.write(a),Re(i,e.comments,h,a),e.trailingComments!=null&&Re(i,e.trailingComments,h,a),i.write(s+"}")):e.trailingComments!=null?(i.write(a),Re(i,e.trailingComments,h,a),i.write(s+"}")):i.write("}"):i.write("}");i.indentLevel--},Property(e,i){e.method||e.kind[0]!=="i"?this.MethodDefinition(e,i):(e.shorthand||(e.computed?(i.write("["),this[e.key.type](e.key,i),i.write("]")):this[e.key.type](e.key,i),i.write(": ")),this[e.value.type](e.value,i))},PropertyDefinition(e,i){if(e.static&&i.write("static "),e.computed&&i.write("["),this[e.key.type](e.key,i),e.computed&&i.write("]"),e.value==null){e.key.type[0]!=="F"&&i.write(";");return}i.write(" = "),this[e.value.type](e.value,i),i.write(";")},ObjectPattern(e,i){if(i.write("{"),e.properties.length>0){let{properties:s}=e,{length:a}=s;for(let u=0;this[s[u].type](s[u],i),++u<a;)i.write(", ")}i.write("}")},SequenceExpression(e,i){Wi(i,e.expressions)},UnaryExpression(e,i){if(e.prefix){let{operator:s,argument:a,argument:{type:u}}=e;i.write(s);let h=fc(i,a,e);!h&&(s.length>1||u[0]==="U"&&(u[1]==="n"||u[1]==="p")&&a.prefix&&a.operator[0]===s&&(s==="+"||s==="-"))&&i.write(" "),h?(i.write(s.length>1?" (":"("),this[u](a,i),i.write(")")):this[u](a,i)}else this[e.argument.type](e.argument,i),i.write(e.operator)},UpdateExpression(e,i){e.prefix?(i.write(e.operator),this[e.argument.type](e.argument,i)):(this[e.argument.type](e.argument,i),i.write(e.operator))},AssignmentExpression(e,i){this[e.left.type](e.left,i),i.write(" "+e.operator+" "),this[e.right.type](e.right,i)},AssignmentPattern(e,i){this[e.left.type](e.left,i),i.write(" = "),this[e.right.type](e.right,i)},BinaryExpression:uc=function(e,i){let s=e.operator==="in";s&&i.write("("),In(i,e.left,e,!1),i.write(" "+e.operator+" "),In(i,e.right,e,!0),s&&i.write(")")},LogicalExpression:uc,ConditionalExpression(e,i){let{test:s}=e,a=i.expressionsPrecedence[s.type];a===xi||a<=i.expressionsPrecedence.ConditionalExpression?(i.write("("),this[s.type](s,i),i.write(")")):this[s.type](s,i),i.write(" ? "),this[e.consequent.type](e.consequent,i),i.write(" : "),this[e.alternate.type](e.alternate,i)},NewExpression(e,i){i.write("new ");let s=i.expressionsPrecedence[e.callee.type];s===xi||s<i.expressionsPrecedence.CallExpression||jx(e.callee)?(i.write("("),this[e.callee.type](e.callee,i),i.write(")")):this[e.callee.type](e.callee,i),Wi(i,e.arguments)},CallExpression(e,i){let s=i.expressionsPrecedence[e.callee.type];s===xi||s<i.expressionsPrecedence.CallExpression?(i.write("("),this[e.callee.type](e.callee,i),i.write(")")):this[e.callee.type](e.callee,i),e.optional&&i.write("?."),Wi(i,e.arguments)},ChainExpression(e,i){this[e.expression.type](e.expression,i)},MemberExpression(e,i){let s=i.expressionsPrecedence[e.object.type];s===xi||s<i.expressionsPrecedence.MemberExpression?(i.write("("),this[e.object.type](e.object,i),i.write(")")):this[e.object.type](e.object,i),e.computed?(e.optional&&i.write("?."),i.write("["),this[e.property.type](e.property,i),i.write("]")):(e.optional?i.write("?."):i.write("."),this[e.property.type](e.property,i))},MetaProperty(e,i){i.write(e.meta.name+"."+e.property.name,e)},Identifier(e,i){i.write(e.name,e)},PrivateIdentifier(e,i){i.write(\`#\${e.name}\`,e)},Literal(e,i){e.raw!=null?i.write(e.raw,e):e.regex!=null?this.RegExpLiteral(e,i):e.bigint!=null?i.write(e.bigint+"n",e):i.write(Xx(e.value),e)},RegExpLiteral(e,i){let{regex:s}=e;i.write(\`/\${s.pattern}/\${s.flags}\`,e)}};var pc={def:{icon:"lucide//box-select"},node:{id:"group",schemaId:"group",name:Y.commands.group,rank:0,parentId:"",styles:{layout:'"column"'},type:"group"}},b1={def:{icon:"lucide//columns"},node:{id:"container",schemaId:"container",name:Y.commands.columns,rank:0,parentId:"",styles:{layout:'"row"',width:"'100%'",gap:"'24px'"},type:"container"}},w1={def:{icon:"lucide//columns"},node:{icon:"lucide//columns",id:"column",schemaId:"column",name:Y.commands.column,rank:0,parentId:"",styles:{layout:'"column"',layoutAlign:"'left'",flex:"1",gap:"'16px'",width:"0"},type:"column"}};var S1={def:{icon:"lucide//file-text"},node:{icon:"lucide//file-text",schemaId:"flow",parentId:"",name:Y.commands.flow,rank:0,id:"flow",type:"flow",props:{value:""},styles:{width:"'100%'"},types:{value:"link"}}};var An={def:{icon:"lucide//gem"},node:{icon:"lucide//gem",schemaId:"icon",parentId:"",name:Y.properties.icon.label,rank:0,id:"icon",styles:{},type:"icon",props:{value:""},types:{value:"icon"}}},_1={def:{icon:"lucide//layout-grid"},node:{icon:"lucide//layout-grid",schemaId:"space",parentId:"",name:Y.properties.space.label,rank:0,id:"space",styles:{width:"'100%'"},type:"space",props:{value:""},types:{value:"view"}}},C1={def:{icon:"lucide//image"},node:{icon:"lucide//image",schemaId:"image",parentId:"",name:Y.properties.image.label,rank:0,id:"image",type:"image",props:{value:""},types:{value:"image"}}},Ui={def:{icon:"lucide//type",description:"Insert a text labels to decorate your Space"},node:{icon:"lucide//type",schemaId:"text",parentId:"",name:Y.commands.label,rank:0,id:"text",type:"text",props:{value:""},types:{value:"text"}}},k1={def:{icon:"lucide//type"},node:{icon:"lucide//type",schemaId:"hr",parentId:"",name:Y.commands.divider,rank:0,id:"hr",type:"hr",styles:{as:"'hr'"}}};var T1={id:"button",def:{icon:"lucide//mouse-pointer-click"},node:{icon:"lucide//mouse-pointer-click",schemaId:"button",parentId:"",name:Y.commands.button,rank:0,id:"button",type:"group",props:{icon:"",label:"",action:"",actionValue:""},types:{icon:"icon",label:"text",action:"option",actionValue:"super"},propsAttrs:{action:JSON.stringify({name:Y.properties.super.whenClicked,icon:"lucide//mouse-pointer-click"}),actionValue:JSON.stringify({name:Y.properties.super.performAction})},propsValue:{action:JSON.stringify({options:[{name:Y.properties.super.runCommand,value:"$commands"},{name:"Open Link",value:"$links"}]}),actionValue:JSON.stringify({dynamic:!0,field:"action"})},actions:{onClick:"(a,b,c,api) => api.buttonCommand(button.props.action, button.props.actionValue)"},styles:{class:"'mk-button'",gap:"'4px'"}},children:[ae(ee({},An),{node:ae(ee({},An.node),{props:{value:"button.props.icon"}})}),ae(ee({},Ui),{node:ae(ee({},Ui.node),{props:{value:"button.props.label"}})})]},I1={id:"progress",def:{icon:"lucide//pie-chart"},node:{icon:"lucide//pie-chart",schemaId:"progress",parentId:"",name:Y.commands.progress,rank:0,id:"progress",type:"group",props:{value:"50",total:"100",color:"'var(--background-modifier-form-field)'"},types:{total:"number",value:"number",color:"color"},styles:{background:"progress.props.color",height:"'10px'",width:"'100px'",borderRadius:"'5px'"}},children:[ae(ee({},pc),{node:ae(ee({},pc.node),{styles:{width:"progress.props.value/progress.props.total*100+'%'",height:"'100%'",borderRadius:"'5px'",background:"'var(--color-orange)'",display:"'block'"}})})]},A1={id:"card",def:{icon:"lucide//mouse-pointer-click"},node:{icon:"lucide//mouse-pointer-click",schemaId:"card",parentId:"",name:Y.commands.card,rank:0,id:"card",type:"group",props:{icon:"",label:""},types:{icon:"icon",label:"text"},actions:{},styles:{borderRadius:"'10px'",background:"'var(--background-primary-alt)'",width:"'160px'",height:"'80px'",padding:"'16px'",border:"'thin solid var(--divider-color)'"}},children:[ae(ee({},An),{node:ae(ee({},An.node),{props:{value:"card.props.icon"}})}),ae(ee({},Ui),{node:ae(ee({},Ui.node),{props:{value:"card.props.label"}})})]},E1={id:"link",def:{icon:"lucide//link"},node:{icon:"lucide//link",schemaId:"link",parentId:"",name:Y.commands.link,rank:0,id:"link",type:"group",props:{label:'"Link"',link:""},styles:{class:"'mk-a'"},actions:{onClick:"(e,v,k,api) => { api.openLink(link.props.link, false) }"},types:{label:"text",link:"link"}},children:[ae(ee({},Ui),{node:ae(ee({},Ui.node),{props:{value:"link.props.label"}})})]};var hc=e=>ae(ee({},e),{def:JSON.stringify(e.def)});var q1=[{type:"unknown",label:"",restricted:!0,icon:"lucide//file-question"},{type:"text",label:Y.properties.text.label,metadata:!0,icon:"lucide//text"},{type:"number",label:Y.properties.number.label,metadata:!0,icon:"lucide//binary",configKeys:["unit"]},{type:"boolean",label:Y.properties.boolean.label,metadata:!0,icon:"lucide//check-square"},{type:"date",label:Y.properties.date.label,metadata:!0,icon:"lucide//calendar",configKeys:["format"]},{type:"option",label:Y.properties.option.label,multi:!0,multiType:"option-multi",icon:"lucide//list",configKeys:["options"]},{type:"tags",label:Y.properties.tags.label,icon:"lucide//tags"},{type:"file",label:Y.properties.file.label,restricted:!0,icon:"ui//mk-make-h3"},{type:"fileprop",label:Y.properties.fileProperty.label,icon:"lucide//list",configKeys:["field","value"]},{type:"link",label:Y.properties.link.label,multi:!0,multiType:"link-multi",metadata:!0,icon:"lucide//file-text"},{type:"context",label:Y.properties.context.label,icon:"ui//mk-make-note",multi:!0,multiType:"context-multi",configKeys:["space"]},{type:"object",label:Y.properties.object.label,multi:!0,multiType:"object-multi",metadata:!0,icon:"lucide//list-tree"},{type:"icon",label:Y.properties.icon.label,multi:!0,multiType:"icon-multi",icon:"lucide//gem",restricted:!0},{type:"image",label:Y.properties.image.label,multi:!0,multiType:"image-multi",metadata:!0,icon:"ui//mk-make-image"},{type:"color",label:Y.properties.color.label,icon:"ui//mk-make-image",restricted:!0},{type:"space",label:Y.properties.space.label,icon:"lucide//layout-grid",restricted:!0},{type:"super",label:Y.properties.super.label,icon:"lucide//zap",restricted:!0,configKeys:["dynamic","field"]}];var yi="files",Fn={id:yi,name:"Files",type:"db",primary:"true"},ty="filesView",iy={id:ty,name:"Files",type:"view",def:{db:yi}},ry="main",ny=e=>({id:e,name:e,type:"frame",def:"",predicate:"",primary:"true"}),H1={uniques:[],cols:["id","name","type","def","predicate","primary"],rows:[ny(ry),hc(iy)]},En={uniques:[],cols:["id","name","type","def","predicate","primary"],rows:[Fn]},dc={uniques:["name,schemaId"],cols:["name","schemaId","type","value","attrs","hidden","unique","primary"]},Pn=ae(ee({},dc),{rows:[{name:jt,schemaId:yi,type:"file",primary:"true",hidden:"",unique:"",attrs:"",value:""},{name:Y.properties.fileProperty.createdTime,schemaId:yi,type:"fileprop",value:jt+".ctime",hidden:"",unique:"",attrs:"",primary:"true"}]});var G1=[{name:Y.properties.defaultField,schemaId:"",type:"text"}],Ca=ae(ee({},dc),{rows:[{name:jt,schemaId:yi,type:"file",primary:"true",hidden:"",unique:"",attrs:"",value:""}]});var z1={schema:Fn,cols:Pn.rows,rows:[]},K1={schema:Fn,cols:Pn.rows,rows:[]},Y1={schema:Fn,cols:Ca.rows,rows:[]},mc=(e,i)=>e.filter(s=>i.find(a=>a.id==s.schemaId&&a.type=="db")).reduce((s,a)=>ee(ee({},s),s[a.schemaId]?{[a.schemaId]:{uniques:a.unique=="true"?[...s[a.schemaId].uniques,a.name]:s[a.schemaId].uniques,cols:[...s[a.schemaId].cols,a.name],rows:[]}}:{[a.schemaId]:{uniques:a.unique=="true"?[a.name]:[],cols:[a.name],rows:[]}}),{});var Q1=ee({m_schema:En,m_fields:Pn},mc(Pn.rows,En.rows)),Z1=ee({m_schema:En,m_fields:Ca},mc(Ca.rows,En.rows));var gc=(e,i)=>e.hiddenExtensions.some(s=>i.endsWith(s))||i.startsWith(e.spacesFolder+"/#")||e.hiddenFiles.some(s=>s==i);var xc=(e,i,s)=>{if(!e)return{changed:!1,cache:null};if(!i)return{changed:!1,cache:{path:e.path,frames:{},schemas:[],listitems:{}}};let a=Object.values(i).map(w=>w.schema),u=a.filter(w=>w.type=="frame").reduce((w,T)=>ae(ee({},w),{[T.id]:i[T.id]}),{}),h=a.filter(w=>w.type=="listitem").reduce((w,T)=>ae(ee({},w),{[T.id]:i[T.id]}),{}),g={path:e.path,frames:u,schemas:a,listitems:h},b=!0;return s&&Nn.default.isEqual(g,s)&&(b=!1),{changed:b,cache:g}},yc=(e,i,s,a)=>{var ce,He,_e,Ge,Te,Oe,De;let u={};if(!e)return{changed:!1,cache:null};if(!i)return{changed:!1,cache:{cols:[],path:e.path,schemas:[],outlinks:[],contexts:[],paths:[],tables:{},space:e,spaceMap:u}};let h=Object.values(i).map(he=>he.schema),g=h.find(he=>he.primary=="true"),b=i[g.id],w=i,T=(He=(ce=b.cols)==null?void 0:ce.filter(he=>he.type.startsWith("context")))!=null?He:[],P=(Ge=(_e=b.cols)==null?void 0:_e.filter(he=>he.type.startsWith("link")))!=null?Ge:[],W=$t(T.map(he=>he.value));T.forEach(he=>{u[he.name]={},b.rows.forEach(kt=>{ei(kt[he.name]).forEach(Tt=>{var It;return u[he.name][Tt]=[...(It=u[he.name][Tt])!=null?It:[],kt[jt]]})})});let X=(De=(Oe=(Te=w[yi])==null?void 0:Te.rows)==null?void 0:Oe.map(he=>he[jt]))!=null?De:[],oe=ol(s!=null?s:[],X),M=$t(b.rows.reduce((he,kt)=>$t([...he,...[...T,...P].flatMap(Tt=>ei(kt[Tt.name]).map(It=>cr(It)))]),[])),$={cols:b.cols,path:e.path,contexts:W,outlinks:M,paths:oe,tables:w,schemas:h,space:e,spaceMap:u},ke=!0;return a&&Nn.default.isEqual($,a)&&(ke=!0),{changed:ke,cache:$}},vc=(e,i,s,a)=>{var h,g,b,w,T,P;let u={};for(let[W,X]of e){let oe=(g=(h=s.get(W))==null?void 0:h.defPath)!=null?g:W,M=(b=e.get(oe))!=null?b:X,$=(w=X==null?void 0:X.parent)!=null?w:"",ke=(T=X==null?void 0:X.type)!=null?T:"",ce=(P=X==null?void 0:X.subtype)!=null?P:"",He=M==null?void 0:M.label,_e=a==null?void 0:a.get(W),{changed:Ge,cache:Te}=ka(W,i,s,M,He,ke,ce,$,_e);u[W]={changed:Ge,cache:Te}}return u},ka=(e,i,s,a,u,h,g,b,w)=>{var It,qi,xr,yr,bt,ft,vr,ni,ze,br,wr,Sr,At;let T=(ne,Ke,Me)=>(ne==null?void 0:ne.length)>0||(ne==null?void 0:ne.length)>0?ne:Ke=="space"?Me=="Spaces/Home"?"ui//mk-ui-home":Me=="/"?"lucide//vault":Me.startsWith("spaces://#")?"lucide//tags":"ui//mk-ui-folder":"ui//mk-ui-file",P={label:a==null?void 0:a.label,path:e,name:mn(e),displayName:mn(e)},W=[],X=(qi=(It=a==null?void 0:a.tags)==null?void 0:It.map(ne=>ne))!=null?qi:[],oe=gc(i,e),M=(ne,Ke,Me=new Set)=>{var _r,si;let pt=[];for(let vi of Ke){let Cr=(si=(_r=ne.get(vi))==null?void 0:_r.contexts)!=null?si:[];for(let Ie of Cr)Me.has(Ie)||(pt.push(Ie),Me.add(Ie),pt.push(...M(ne,[gn(Ie)],Me)))}return pt};if(s.has(b))for(let ne of(xr=s.get(b).contexts)!=null?xr:[])W.push(ne);W.push(...X);let $=u==null?void 0:u.name,ke=a!=null&&a.properties?ll(a.properties[i.fmKeyAlias]):[],ce=T(u.sticker,h,e),He=(yr=u==null?void 0:u.color)!=null?yr:"",_e=(bt=a==null?void 0:a.inlinks)!=null?bt:[],Ge=(ft=a==null?void 0:a.links)!=null?ft:[],Te=i.spacesUseAlias&&(vr=ke[0])!=null?vr:$,Oe=ae(ee({},P),{name:$,tags:$t(W),type:h,subtype:g,displayName:Te,parent:b,label:{name:$,sticker:ce,color:He},metadata:ee({},a),inlinks:_e,outlinks:Ge}),De=[];for(let ne of W)De.push(gn(ne));for(let[ne,Ke]of s){if(Ke.defPath==e&&(oe=!0),Ke.space&&Ke.space.path==b){De.push(ne);continue}if(((ze=(ni=Ke.metadata)==null?void 0:ni.filters)==null?void 0:ze.length)>0&&vl(Ke.metadata.filters,Oe)){De.push(ne);continue}if(((wr=(br=Ke.metadata)==null?void 0:br.links)==null?void 0:wr.length)>0&&((At=(Sr=Ke.metadata)==null?void 0:Sr.links)!=null?At:[]).find(pt=>pt==Oe.path)){De.push(ne);continue}}let he=M(s,De);De.push(...he.map(ne=>gn(ne))),Oe.tags.push(...he);let kt=oe?ae(ee({},Oe),{spaces:[],hidden:oe}):ae(ee({},Oe),{spaces:$t(De),hidden:oe}),Tt=!0;return w&&Nn.default.isEqual(kt,w)&&(Tt=!1),{changed:Tt,cache:kt}};function bc(e){let{path:i,settings:s,spacesCache:a,pathMetadata:u,label:h,type:g,subtype:b,parent:w,oldMetadata:T}=e;return ka(i,s,a,u,h,g,b,w,T)}function wc(e){let{space:i,mdb:s,paths:a,oldCache:u}=e;return yc(i,s,a,u)}function Sc(e){let{pathCache:i,settings:s,spacesCache:a,oldMetadata:u}=e;return vc(i,s,a,u)}function _c(e){let{space:i,mdb:s,oldCache:a}=e;return xc(i,s,a)}var sy=self;sy.onmessage=async e=>{let{payload:i,job:s}=e.data,a;s.type=="path"?a=bc(i):s.type=="context"?a=wc(i):s.type=="frames"?a=_c(i):s.type=="paths"&&(a=Sc(i));try{postMessage({job:s,result:a})}catch(u){console.log(u),postMessage({job:s,result:{$error:\`Failed to index \${s.type} \${s.path}: \${u}\`}})}};
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
`);
}

// src/core/superstate/workers/manager.ts
var Manager = class {
  constructor(numWorkers, cache) {
    this.numWorkers = numWorkers;
    this.cache = cache;
    this.workers = [];
    this.busy = [];
    this.reloadQueue = [];
    this.reloadSet = /* @__PURE__ */ new Set();
    this.callbacks = /* @__PURE__ */ new Map();
    for (let index = 0; index < numWorkers; index++) {
      const worker = new Worker2({ name: "Make.md Superstate Indexer " + (index + 1) });
      worker.onmessage = (evt) => this.finish(evt.data.job, evt.data.result, index);
      this.workers.push(worker);
      this.busy.push(false);
    }
  }
  reload(jerb) {
    const jobKey = stringifyJob(jerb);
    const promise = new Promise((resolve, reject) => {
      var _a2;
      if (this.callbacks.has(jobKey))
        (_a2 = this.callbacks.get(jobKey)) == null ? void 0 : _a2.push([resolve, reject]);
      else
        this.callbacks.set(jobKey, [[resolve, reject]]);
    });
    if (this.reloadSet.has(jobKey))
      return promise;
    this.reloadSet.add(jobKey);
    const workerId = this.nextAvailableWorker();
    if (workerId !== void 0) {
      this.send(jerb, workerId);
    } else {
      this.reloadQueue.push(jerb);
    }
    return promise;
  }
  finish(jerb, data2, index) {
    var _a2;
    const jobKey = stringifyJob(jerb);
    const calls = [].concat((_a2 = this.callbacks.get(jobKey)) != null ? _a2 : []);
    this.reloadSet.delete(jobKey);
    this.callbacks.delete(jobKey);
    this.busy[index] = false;
    const job = this.reloadQueue.shift();
    if (job !== void 0)
      this.send(job, index);
    if ("$error" in data2) {
      for (const [_11, reject] of calls)
        reject(data2["$error"]);
    } else {
      for (const [callback, _11] of calls)
        callback(data2);
    }
  }
  async send(job, workerId) {
    var _a2, _b2, _c2, _d2, _e2;
    if (job.type == "paths") {
      const payload = {
        settings: this.cache.settings,
        spacesCache: this.cache.spacesIndex,
        pathCache: this.cache.spaceManager.allCaches(),
        oldMetadata: this.cache.pathsIndex
      };
      this.workers[workerId].postMessage({
        job,
        payload
      });
      this.busy[workerId] = true;
      return;
    }
    if (job.type == "path") {
      const spaceState = this.cache.spacesIndex.get(job.path);
      const cachePath = (_a2 = spaceState == null ? void 0 : spaceState.defPath) != null ? _a2 : job.path;
      const pathMetadata = (_b2 = await this.cache.spaceManager.readPathCache(cachePath)) != null ? _b2 : await this.cache.spaceManager.readPathCache(job.path);
      const label = pathMetadata.label;
      const parent = await this.cache.spaceManager.parentPathForPath(job.path);
      const type = spaceState ? "space" : "file";
      const subtype = spaceState ? spaceState.type : (_c2 = pathMetadata == null ? void 0 : pathMetadata.file) == null ? void 0 : _c2.extension;
      const payload = {
        path: job.path,
        settings: this.cache.settings,
        spacesCache: this.cache.spacesIndex,
        pathMetadata,
        label,
        parent,
        type,
        subtype,
        oldMetadata: this.cache.pathsIndex.get(job.path)
      };
      this.workers[workerId].postMessage({
        job,
        payload
      });
      this.busy[workerId] = true;
      return;
    }
    if (job.type == "context") {
      const space = (_d2 = this.cache.spacesIndex.get(job.path)) == null ? void 0 : _d2.space;
      if (!space || !space.path) {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb: null,
            paths: [...this.cache.spacesMap.getInverse(job.path)],
            oldCache: this.cache.contextsIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
        return;
      }
      this.cache.spaceManager.readAllTables(space.path).then((mdb) => {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb,
            paths: [...this.cache.spacesMap.getInverse(job.path)],
            oldCache: this.cache.contextsIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
      });
      return;
    }
    if (job.type == "frames") {
      const space = (_e2 = this.cache.spacesIndex.get(job.path)) == null ? void 0 : _e2.space;
      if (!space) {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb: null,
            oldCache: this.cache.framesIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
        return;
      }
      this.cache.spaceManager.readAllFrames(space.path).then((mdb) => {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb,
            oldCache: this.cache.framesIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
      });
      return;
    }
  }
  nextAvailableWorker() {
    const index = this.busy.indexOf(false);
    return index == -1 ? void 0 : index;
  }
};

// src/core/superstate/superstate.ts
var Superstate = class {
  constructor(indexVersion, onChange, spaceManager, uiManager, commandsManager, persister) {
    this.indexVersion = indexVersion;
    this.onChange = onChange;
    this.persister = persister;
    this.kit = [rootToFrame(buttonNode), rootToFrame(dividerNode), rootToFrame(progressNode), rootToFrame(cardNode), rootToFrame(linkNode)];
    this.eventsDispatcher = new EventDispatcher();
    this.initialized = false;
    this.spaceManager = spaceManager;
    this.spaceManager.superstate = this;
    this.ui = uiManager;
    this.commands = commandsManager;
    this.api = new API(this);
    this.pathsIndex = /* @__PURE__ */ new Map();
    this.spacesIndex = /* @__PURE__ */ new Map();
    this.contextsIndex = /* @__PURE__ */ new Map();
    this.framesIndex = /* @__PURE__ */ new Map();
    this.spacesMap = new IndexMap();
    this.linksMap = new IndexMap();
    this.tagsMap = new IndexMap();
    this.superProperties = /* @__PURE__ */ new Map();
    this.iconsCache = /* @__PURE__ */ new Map();
    this.contextStateQueue = Promise.resolve();
    this.vaultDBCache = [];
    this.indexer = new Manager(2, this);
    this.loadSuperProperties();
  }
  static create(indexVersion, onChange, spaceManager, uiManager, commandsManager, persister) {
    return new Superstate(indexVersion, onChange, spaceManager, uiManager, commandsManager, persister);
  }
  loadSuperProperties() {
    this.superProperties.set("$commands", { name: i18n_default.properties.super.obsidianCommands, schemaId: "$super", type: "option" });
    this.superProperties.set("$links", { name: i18n_default.properties.super.links, schemaId: "$super", type: "option" });
  }
  valueForSuperproperty(superProperty, property) {
    if (superProperty == "$commands") {
      return { options: this.commands.allCommands() };
    } else if (superProperty == "$links") {
      return { options: this.spaceManager.allPaths().map((f4) => ({ name: f4, value: f4 })) };
    } else {
      return parseFieldValue(property.value, property.type);
    }
  }
  async initializeIndex() {
    await this.loadFromCache();
  }
  addToContextStateQueue(operation) {
    this.contextStateQueue = this.contextStateQueue.then(operation).catch(() => {
    });
  }
  async initialize() {
    const start = Date.now();
    if (this.settings.spacesEnabled)
      await this.initializeSpaces();
    await this.initializeTags();
    await this.initializePaths();
    await this.initializeContexts();
    await this.initializeFrames();
    await this.initializeDefaults();
    this.cleanContexts();
    this.dispatchEvent("superstateUpdated", null);
    this.ui.notify(`Make.md - Superstate Loaded in ${(Date.now() - start) / 1e3} seconds`, "console");
  }
  initializeDefaults() {
    if (this.settings.enableDefaultSpaces) {
      if (this.settings.enableTagSpaces) {
        this.spacesIndex.set(tagsSpace.path, tagsSpace);
        this.pathsIndex.set(tagsPath.path, tagsPath);
      }
    }
  }
  async initializeSpaces() {
    const allSpaces = [...this.spaceManager.allSpaces().values()];
    const promises = allSpaces.map((f4) => this.reloadSpace(f4, null, true));
    [...this.spacesIndex.keys()].filter((f4) => !allSpaces.some((g4) => g4.path == f4)).forEach((f4) => this.onSpaceDeleted(f4));
    await Promise.all(promises);
  }
  getSpaceItems(spacePath, filesOnly) {
    var _a2, _b2;
    let items = [];
    const ranks = (_b2 = (_a2 = this.contextsIndex.get(spacePath)) == null ? void 0 : _a2.paths) != null ? _b2 : [];
    if (spacePath == "spaces://$tags") {
      items = this.allSpaces().filter((f4) => f4.type == "tag").map((f4) => f4.path);
    } else {
      items = [...this.spacesMap.getInverse(spacePath)];
    }
    return items.map((f4, i4) => {
      const pathCache = this.pathsIndex.get(f4);
      return {
        ...pathCache,
        rank: ranks.indexOf(f4)
      };
    }).filter((f4) => (f4 == null ? void 0 : f4.hidden) != true);
  }
  async initializeFrames() {
    const promises = this.allSpaces().filter((f4) => f4.type != "default").map((f4) => f4.space).map(
      (l3) => this.reloadFrames(l3)
    );
    await Promise.all(promises);
  }
  async initializeContexts() {
    const promises = this.allSpaces().filter((f4) => f4.type != "default").map((f4) => f4.space).map(
      (l3) => this.reloadContext(l3)
    );
    await Promise.all(promises);
  }
  async cleanContexts() {
    this.contextsIndex.forEach((context) => {
      var _a2, _b2, _c2;
      const contextFiles = [...this.spacesMap.getInverse(context.path)];
      const removeFiles = (_c2 = (_b2 = (_a2 = context.tables) == null ? void 0 : _a2[defaultContextSchemaID]) == null ? void 0 : _b2.rows.filter((f4) => !contextFiles.includes(f4[PathPropertyName]))) != null ? _c2 : [];
      if (removeFiles.length > 0) {
        this.addToContextStateQueue(() => removePathsInContext(this.spaceManager, removeFiles.map((f4) => f4[PathPropertyName]), this.spacesIndex.get(context.path).space).then((f4) => this.reloadSpaceByPath(context.path)));
      }
    });
    this.spacesIndex.forEach((space) => {
      const removeFiles = [...this.spacesMap.getInverse(space.path)];
    });
  }
  async loadFromCache() {
    this.dispatchEvent("superstateReindex", null);
    if (this.settings.indexSVG) {
      const allIcons = await this.persister.loadAll("icon");
      this.spaceManager.allPaths(["svg"]).forEach((s5) => {
        const row = allIcons.find((f4) => f4.path == s5);
        if ((row == null ? void 0 : row.cache.length) > 0)
          this.iconsCache.set(s5, row.cache);
      });
    }
    const allPaths = await this.persister.loadAll("path");
    const allSpaces = await this.persister.loadAll("space");
    const allContexts = await this.persister.loadAll("context");
    const allFrames = await this.persister.loadAll("frame");
    allSpaces.forEach((s5) => {
      const space = safelyParseJSON(s5.cache);
      if (space && space.type) {
        this.spacesIndex.set(s5.path, space);
      }
    });
    allContexts.forEach((s5) => {
      const space = safelyParseJSON(s5.cache);
      if (space) {
        this.contextsIndex.set(s5.path, space);
      }
    });
    allFrames.forEach((s5) => {
      const space = safelyParseJSON(s5.cache);
      if (space) {
        this.framesIndex.set(s5.path, space);
      }
    });
    allPaths.forEach((f4) => {
      const cache = parsePathState(f4.cache);
      this.pathsIndex.set(f4.path, cache);
      this.tagsMap.set(f4.path, new Set(cache.tags));
      this.spacesMap.set(f4.path, new Set(cache.spaces));
      this.linksMap.set(f4.path, new Set(cache.outlinks));
    });
    this.dispatchEvent("superstateUpdated", null);
  }
  dispatchEvent(event, payload) {
    this.eventsDispatcher.dispatchEvent(event, payload);
  }
  async initializeTags() {
    const allTags = this.spaceManager.readTags().map((f4) => tagSpacePathFromTag(f4));
    const promises = allTags.map((l3) => this.reloadPath(l3, true));
    await Promise.all(promises);
  }
  async initializePaths() {
    this.dispatchEvent("superstateReindex", null);
    const allFiles = this.spaceManager.allPaths();
    const start = Date.now();
    await this.indexer.reload({ type: "paths", path: "" }).then((r3) => {
      for (const [path, { cache, changed }] of Object.entries(r3)) {
        this.pathReloaded(path, cache, changed, false);
      }
    });
    this.ui.notify(`Make.md - ${allFiles.length} Paths Cached in ${(Date.now() - start) / 1e3} seconds`, "console");
    const allPaths = uniq([...this.spaceManager.allSpaces().map((f4) => f4.path), ...allFiles]);
    [...this.pathsIndex.keys()].filter((f4) => !allPaths.some((g4) => g4 == f4)).forEach((f4) => this.onPathDeleted(f4));
    this.dispatchEvent("superstateUpdated", null);
  }
  async onTagRenamed(tag, newTag) {
    const oldPath = spacePathFromName(tag);
    const newSpaceInfo = fileSystemSpaceInfoFromTag(this.spaceManager, newTag);
    await this.onSpaceRenamed(oldPath, newSpaceInfo);
    this.dispatchEvent("spaceChanged", { path: oldPath, newPath: newSpaceInfo.path });
    const allContextsWithTag = [];
    for (const [contextPath, spaceCache] of this.spacesIndex) {
      const contextCache = this.contextsIndex.get(contextPath);
      if (contextCache == null ? void 0 : contextCache.contexts.includes(tag)) {
        this.addToContextStateQueue(() => renameTagInContexts(this.spaceManager, tag, newTag, allContextsWithTag));
      }
      if (spaceCache.metadata.contexts.includes(tag)) {
        saveSpaceCache(this, spaceCache.space, { ...spaceCache.metadata, contexts: spaceCache.metadata.contexts.map((f4) => f4 == tag ? newTag : f4) });
      }
    }
  }
  async onTagDeleted(tag) {
    this.tagsMap.getInverse(tag).forEach((path) => {
      this.deleteTagInPath(tag, path);
    });
    const spacePath = folderForTagSpace(tag, this.settings);
    await this.spaceManager.deletePath(spacePath);
    this.onSpaceDeleted(tagSpacePathFromTag(tag));
    for (const [contextPath, spaceCache] of this.spacesIndex) {
      if (spaceCache.metadata.contexts.includes(tag)) {
        saveSpaceCache(this, spaceCache.space, { ...spaceCache.metadata, contexts: spaceCache.metadata.contexts.filter((f4) => f4 != tag) });
      }
    }
    const allContextsWithTag = [];
    for (const [contextPath, contextCache] of this.contextsIndex) {
      if (contextCache.contexts.includes(tag)) {
        allContextsWithTag.push(this.spaceManager.spaceInfoForPath(contextCache.path));
      }
    }
    this.addToContextStateQueue(() => removeTagInContexts(this.spaceManager, tag, allContextsWithTag));
  }
  async deleteTagInPath(tag, path) {
    let oldMetadata;
    if (this.pathsIndex.has(path)) {
      oldMetadata = this.pathsIndex.get(path);
    }
    if (oldMetadata) {
      const newMetadata = {
        ...oldMetadata,
        tags: oldMetadata.tags.filter((f4) => f4 != tag),
        spaces: oldMetadata.spaces.filter((f4) => f4 != tagSpacePathFromTag(tag))
      };
      this.pathsIndex.set(path, newMetadata);
      this.tagsMap.set(path, new Set(newMetadata.tags));
      this.spacesMap.set(path, new Set(newMetadata.spaces));
    } else {
      await this.reloadPath(path);
    }
    this.onPathReloaded(path);
    this.dispatchEvent("pathStateUpdated", { path });
  }
  onMetadataChange(path) {
    const pathState = this.pathsIndex.get(path);
    if (!pathState)
      return;
    const allContextsWithFile = pathState.spaces.map((f4) => {
      var _a2;
      return (_a2 = this.spacesIndex.get(f4)) == null ? void 0 : _a2.space;
    }).filter((f4) => f4);
    this.addToContextStateQueue(() => updateContextWithProperties(this.spaceManager, path, allContextsWithFile));
    this.reloadPath(path).then(
      (f4) => {
        this.dispatchEvent("pathStateUpdated", { path });
      }
    );
  }
  reloadSpaceByPath(path, metadata) {
    return this.reloadSpace(this.spaceManager.spaceInfoForPath(path), metadata);
  }
  async onPathRename(oldPath, newPath) {
    var _a2, _b2, _c2, _d2;
    const newFilePath = newPath;
    const oldFileCache = this.pathsIndex.get(oldPath);
    const oldSpaces = (_a2 = oldFileCache.spaces) != null ? _a2 : [];
    if (oldFileCache) {
      this.spacesMap.delete(oldPath);
      this.spacesMap.deleteInverse(oldPath);
      this.linksMap.delete(oldPath);
      this.linksMap.deleteInverse(oldPath);
      this.pathsIndex.delete(oldPath);
      const allContextsWithPath = oldSpaces.map((f4) => this.spacesIndex.get(f4)).filter((f4) => f4);
      await renamePathInContexts(this.spaceManager, oldPath, newFilePath, allContextsWithPath.map((f4) => f4.space));
      for (const space of allContextsWithPath) {
        if ((_c2 = (_b2 = space.metadata) == null ? void 0 : _b2.links) == null ? void 0 : _c2.includes(oldPath)) {
          this.addToContextStateQueue(() => saveSpaceMetadataValue(this, space.path, "links", space.metadata.links.map((f4) => f4 == oldPath ? newPath : f4)));
        }
        await this.reloadContext(space.space);
      }
      const allContextsWithLink = [];
      for (const [contextPath, contextCache] of this.contextsIndex) {
        if (contextCache.outlinks.includes(oldPath)) {
          allContextsWithLink.push(this.spacesIndex.get(contextCache.path).space);
        }
      }
      this.addToContextStateQueue(() => renameLinkInContexts(this.spaceManager, oldPath, newFilePath, allContextsWithLink).then((f4) => Promise.all(allContextsWithLink.map((c4) => this.reloadContext(c4)))));
    }
    if (this.settings.waypoints.includes(oldPath)) {
      this.settings.waypoints = this.settings.waypoints.map((f4) => f4 == oldPath ? newPath : f4);
      this.saveSettings();
      this.dispatchEvent("settingsChanged", null);
    }
    await this.reloadPath(newPath, true);
    const changedSpaces = uniq([...(_d2 = this.spacesMap.get(newPath)) != null ? _d2 : [], ...oldSpaces]);
    const cachedPromises = changedSpaces.map((f4) => {
      var _a3;
      return this.reloadContext((_a3 = this.spacesIndex.get(f4)) == null ? void 0 : _a3.space);
    });
    await Promise.all(cachedPromises);
    changedSpaces.forEach((f4) => this.dispatchEvent("spaceStateUpdated", { path: f4 }));
    this.dispatchEvent("pathChanged", { path: oldPath, newPath });
  }
  async onPathCreated(path) {
    await this.reloadPath(path, true);
    this.dispatchEvent("pathCreated", { path });
  }
  onPathDeleted(path) {
    var _a2, _b2;
    this.spacesMap.delete(path);
    this.linksMap.delete(path);
    this.linksMap.deleteInverse(path);
    this.persister.remove(path, "path");
    const fileCache = this.pathsIndex.get(path);
    if (!fileCache) {
      return;
    }
    const allContextsWithFile = ((_a2 = fileCache.spaces) != null ? _a2 : []).map((f4) => {
      var _a3;
      return (_a3 = this.spacesIndex.get(f4)) == null ? void 0 : _a3.space;
    }).filter((f4) => f4);
    this.addToContextStateQueue(() => removePathInContexts(this.spaceManager, path, allContextsWithFile).then((f4) => allContextsWithFile.forEach((c4) => this.reloadContext(c4))));
    const allContextsWithLink = [];
    for (const [contextPath, contextCache] of this.contextsIndex) {
      if (contextCache.outlinks.includes(path) && this.spacesIndex.has(contextCache.path)) {
        allContextsWithLink.push(this.spacesIndex.get(contextCache.path).space);
      }
    }
    this.addToContextStateQueue(() => removeLinkInContexts(this.spaceManager, path, allContextsWithLink).then((f4) => allContextsWithFile.forEach((c4) => this.reloadContext(c4))));
    ((_b2 = fileCache.spaces) != null ? _b2 : []).forEach((f4) => {
      this.dispatchEvent("spaceStateUpdated", { path: f4 });
    });
    this.pathsIndex.delete(path);
    this.dispatchEvent("pathDeleted", { path });
  }
  async onSpaceRenamed(oldPath, newSpaceInfo) {
    if (this.spacesIndex.has(oldPath)) {
      this.spacesIndex.set(newSpaceInfo.path, {
        ...this.spacesIndex.get(oldPath),
        path: newSpaceInfo.path,
        defPath: newSpaceInfo.defPath,
        name: newSpaceInfo.name,
        space: newSpaceInfo
      });
      this.spacesIndex.delete(oldPath);
      this.contextsIndex.delete(oldPath);
      this.framesIndex.delete(oldPath);
      await this.reloadSpace(newSpaceInfo);
      await this.reloadContext(newSpaceInfo);
      await this.reloadFrames(newSpaceInfo);
    }
    this.ui.viewsByPath(oldPath).forEach((view) => {
      view.openPath(newSpaceInfo.path);
    });
  }
  onSpaceDeleted(space) {
    if (this.spacesIndex.has(space)) {
      this.spacesIndex.delete(space);
      this.contextsIndex.delete(space);
      this.framesIndex.delete(space);
    }
    this.spacesMap.delete(space);
    this.spacesMap.deleteInverse(space);
    this.persister.remove(space, "space");
    this.dispatchEvent("spaceDeleted", { path: space });
  }
  async reloadFrames(space) {
    if (!space)
      return false;
    return this.indexer.reload({ type: "frames", path: space.path }).then((r3) => {
      const { changed, cache } = r3;
      if (!changed) {
        return false;
      }
      this.framesIndex.set(space.path, cache);
      this.persister.store(space.path, JSON.stringify(cache), "frame");
      this.dispatchEvent("frameStateUpdated", { path: space.path });
      return true;
    });
  }
  async reloadContext(space) {
    if (!space)
      return false;
    return this.indexer.reload({ type: "context", path: space.path }).then((r3) => {
      var _a2, _b2, _c2;
      const { changed, cache } = r3;
      if (!changed) {
        return false;
      }
      this.contextsIndex.set(space.path, cache);
      const contextPaths = (_c2 = (_b2 = (_a2 = cache.tables) == null ? void 0 : _a2[defaultContextSchemaID]) == null ? void 0 : _b2.rows.map((f4) => f4[PathPropertyName])) != null ? _c2 : [];
      const missingPaths = cache.paths.filter((f4) => !contextPaths.includes(f4));
      const removedPaths = contextPaths.filter((f4) => !cache.paths.includes(f4));
      if (missingPaths.length > 0) {
        this.addToContextStateQueue(() => insertContextItems(this.spaceManager, missingPaths, space.path));
      }
      if (removedPaths.length > 0) {
        this.addToContextStateQueue(() => removePathsInContext(this.spaceManager, removedPaths, space));
      }
      this.persister.store(space.path, JSON.stringify(cache), "context");
      this.dispatchEvent("contextStateUpdated", { path: space.path });
      return true;
    });
  }
  allSpaces(ordered) {
    if (ordered) {
      return orderArrayByArrayWithKey([...this.spacesIndex.values()], this.spaceOrder(), "path");
    }
    return [...this.spacesIndex.values()];
  }
  spaceOrder() {
    return [...this.settings.waypoints];
  }
  allFrames() {
    return [...this.framesIndex.values()].filter((f4) => f4).flatMap((f4) => f4.schemas.filter((f5) => f5.type == "frame").map((s5) => ({ schema: s5, path: f4.path })));
  }
  allListItems() {
    return [...this.framesIndex.values()].filter((f4) => f4).flatMap((f4) => f4.schemas.filter((f5) => f5.type == "listitem").map((s5) => ({ schema: s5, path: f4.path })));
  }
  async updateSpaceMetadata(spacePath, metadata) {
    var _a2, _b2;
    const space = this.spacesIndex.get(spacePath);
    if (!space) {
      return this.reloadSpaceByPath(spacePath);
    }
    let reinit = false;
    const spaceSort = (_a2 = metadata == null ? void 0 : metadata.sort) != null ? _a2 : { field: "rank", asc: true, group: true };
    const sortable = spaceSort.field == "rank";
    if (!import_lodash2.default.isEqual(space.metadata.links, metadata.links) || !import_lodash2.default.isEqual(space.metadata.filters, metadata.filters)) {
      reinit = true;
    }
    const newSpaceCache = {
      ...space,
      metadata,
      contexts: (_b2 = metadata == null ? void 0 : metadata.contexts) != null ? _b2 : [],
      sortable
    };
    this.spacesIndex.set(spacePath, newSpaceCache);
    if (reinit) {
      await this.initializePaths();
    }
    this.dispatchEvent("spaceStateUpdated", { path: space.path });
    return newSpaceCache;
  }
  async reloadSpace(space, spaceMetadata, initialized = true) {
    var _a2, _b2, _c2, _d2;
    if (!space)
      return;
    const metadata = spaceMetadata != null ? spaceMetadata : await this.spaceManager.spaceDefForSpace(space.path);
    const type = this.spaceManager.spaceTypeByString(this.spaceManager.uriByString(space.path));
    const spaceSort = (_a2 = metadata == null ? void 0 : metadata.sort) != null ? _a2 : { field: "rank", asc: true, group: true };
    const sortable = spaceSort.field == "rank" || !spaceSort;
    const contexts = (_b2 = metadata == null ? void 0 : metadata.contexts) != null ? _b2 : [];
    if (type == "tag" && this.settings.autoAddContextsToSubtags) {
      const parentTags = getAllParentTags(space.name);
      contexts.push(...parentTags);
    }
    const cache = {
      name: space.name,
      space,
      path: space.path,
      defPath: space.defPath,
      type,
      contexts: contexts.map((f4) => ensureTag(f4)),
      metadata,
      sortable
    };
    this.spacesIndex.set(space.path, cache);
    this.persister.store(space.path, JSON.stringify(cache), "space");
    (_d2 = (_c2 = cache.metadata) == null ? void 0 : _c2.links) == null ? void 0 : _d2.forEach((f4) => {
      if (pathIsSpace(this, f4)) {
        this.spacesMap.set(f4, /* @__PURE__ */ new Set([...this.spacesMap.get(f4), space.path]));
      }
    });
    if (initialized) {
      this.dispatchEvent("spaceStateUpdated", { path: space.path });
      return cache;
    }
  }
  pathReloaded(path, cache, changed, force) {
    if (!changed && !force) {
      return false;
    }
    this.pathsIndex.set(path, cache);
    this.tagsMap.set(path, new Set(cache.tags));
    this.linksMap.set(path, new Set(cache.outlinks));
    if (!import_lodash2.default.isEqual(cache.spaces, Array.from(this.spacesMap.get(path)))) {
      this.spacesMap.set(path, new Set(cache.spaces));
      const promises = cache.tags.map((f4) => this.spacesIndex.has(tagSpacePathFromTag(f4)) ? null : fileSystemSpaceInfoFromTag(this.spaceManager, f4)).filter((f4) => f4).map(
        async (f4) => {
          await this.reloadSpace(f4);
          this.reloadContext(f4);
          await this.reloadPath(f4.path);
          return;
        }
      );
      const allPromises = Promise.all(promises);
      allPromises.then((f4) => {
        this.dispatchEvent("spaceStateUpdated", { path: "spaces://$tags" });
      });
    }
    if (force) {
      const allContextsWithFile = cache.spaces.map((f4) => {
        var _a2;
        return (_a2 = this.spacesIndex.get(f4)) == null ? void 0 : _a2.space;
      }).filter((f4) => f4);
      this.addToContextStateQueue(() => updateContextWithProperties(this.spaceManager, path, allContextsWithFile).then((g4) => {
        allContextsWithFile.forEach((f4) => {
          this.reloadContext(f4);
          this.dispatchEvent("spaceStateUpdated", { path: f4.path });
        });
      }));
    }
    if (cache.type == "svg" && this.settings.indexSVG) {
      this.spaceManager.readPath(path).then((f4) => {
        this.iconsCache.set(path, f4);
        this.persister.store(path, f4, "icon");
      });
    }
    this.onPathReloaded(path);
  }
  async reloadPath(path, force) {
    if (!path)
      return false;
    return this.indexer.reload({ type: "path", path }).then((r3) => {
      this.pathReloaded(path, r3.cache, r3.changed, force);
      return true;
    });
  }
  async onPathReloaded(path) {
    let pathState;
    if (this.pathsIndex.has(path)) {
      pathState = this.pathsIndex.get(path);
    }
    if (!pathState) {
      return false;
    }
    this.persister.store(path, serializePathState(pathState), "path");
  }
};

// src/core/middleware/filesystem.ts
var FilesystemMiddleware = class {
  constructor() {
    this.filesystems = [];
    this.filetypes = [];
    this.eventDispatch = new EventDispatcher();
  }
  static create() {
    return new FilesystemMiddleware();
  }
  resolvePath(path, source) {
    return this.primary.resolvePath(path, source);
  }
  allTags() {
    return this.primary.readAllTags();
  }
  fileFragmentChanged(file) {
    this.eventDispatch.dispatchEvent("onFileFragmentChanged", { file });
  }
  initiateFileSystemAdapter(adapter, primary) {
    adapter.initiate(this);
    if (primary) {
      this.primary = adapter;
    }
    this.filesystems.push(adapter);
  }
  initiateFiletypeAdapter(adapter) {
    adapter.initiate(this);
    this.filetypes.push(adapter);
  }
  filetypeAdaptersForFile(file) {
    if (!file)
      return [];
    return this.filetypes.filter((f4) => f4.supportedFileTypes.includes(file.extension));
  }
  filetypeAdaptersForFileFragments(file, fragmentType) {
    return this.filetypeAdaptersForFile(file).filter((f4) => f4.contentTypes ? f4.contentTypes(file).includes(fragmentType) : false);
  }
  getFileCacheTypeByRefString(file, refString) {
    const adapters = this.filetypeAdaptersForFile(file);
    return adapters.reduce((p3, c4) => {
      if (p3)
        return p3;
      return c4.getCacheTypeByRefString(file, refString);
    }, null);
  }
  allCaches() {
    return this.primary.cache;
  }
  allFiles() {
    return this.primary.allFiles();
  }
  resourcePathForPath(path) {
    return this.adapterForPath(path).resourcePathForPath(path);
  }
  parentPathForPath(path) {
    return this.adapterForPath(path).parentPathForPath(path);
  }
  async createFileCache(path) {
    const file = await this.getFile(path);
    for (const adapter of this.filetypeAdaptersForFile(file)) {
      if (adapter.parseCache)
        await adapter.parseCache(file, false);
    }
  }
  getFileCache(path) {
    return this.adapterForPath(path).getFileCache(path);
  }
  getFileContent(file, contentType, contentId) {
    const adapters = this.filetypeAdaptersForFile(file).filter((f4) => f4.contentTypes(file).includes(contentType));
    if (adapters.length >= 1) {
      return adapters[0].readContent(file, contentType, contentId);
    }
  }
  updateFileCache(path, cache, refresh) {
    this.adapterForPath(path).updateFileCache(path, cache, refresh);
  }
  readFileFragments(file, fragmentType, query) {
    const adapters = this.filetypeAdaptersForFileFragments(file, fragmentType);
    if (adapters.length >= 1) {
      return adapters[0].readContent(file, fragmentType, query);
    }
  }
  async newFile(parent, name, type, content) {
    const adapter = this.filetypes.find((f4) => f4.supportedFileTypes.includes(type));
    if (adapter)
      return adapter.newFile(parent, name, type, content);
  }
  newFileFragment(file, fragmentType, name, content, options) {
    const adapters = this.filetypeAdaptersForFileFragments(file, fragmentType);
    if (adapters.length >= 1) {
      return adapters[0].newContent(file, fragmentType, name, content, options);
    }
  }
  saveFileLabel(file, key2, value) {
    const adapters = this.filetypeAdaptersForFileFragments(file, "label");
    if (adapters.length >= 1) {
      return adapters[0].saveContent(file, "label", key2, () => value);
    } else {
      return this.primary.updateFileLabel(file.path, key2, value);
    }
  }
  saveFileFragment(file, fragmentType, fragmentId, saveContent) {
    const adapters = this.filetypeAdaptersForFileFragments(file, fragmentType);
    if (adapters.length >= 1) {
      return adapters[0].saveContent(file, fragmentType, fragmentId, saveContent);
    }
  }
  deleteFileFragment(file, fragmentType, fragmentId) {
    const adapters = this.filetypeAdaptersForFileFragments(file, fragmentType);
    if (adapters.length >= 1) {
      return adapters[0].deleteContent(file, fragmentType, fragmentId);
    }
  }
  onCreate(file) {
    this.eventDispatch.dispatchEvent("onCreate", { file });
  }
  onModify(file) {
    this.eventDispatch.dispatchEvent("onModify", { file });
  }
  onRename(file, oldPath) {
    this.eventDispatch.dispatchEvent("onRename", { file, oldPath });
  }
  onDelete(file) {
    this.eventDispatch.dispatchEvent("onDelete", { file });
  }
  adapterForPath(path) {
    return this.primary;
  }
  async getRoot() {
    return this.adapterForPath().getRoot();
  }
  async copyFile(folder, path) {
    return this.adapterForPath(path).copyFile(folder, path);
  }
  async writeTextToFile(path, content) {
    return this.adapterForPath(path).writeTextToFile(path, content);
  }
  async readTextFromFile(path) {
    return this.adapterForPath(path).readTextFromFile(path);
  }
  async writeBinaryToFile(path, buffer) {
    return this.adapterForPath(path).writeBinaryToFile(path, buffer);
  }
  async readBinaryToFile(path) {
    return this.adapterForPath(path).readBinaryToFile(path);
  }
  async renameFile(path, newPath) {
    return this.adapterForPath(path).renameFile(path, newPath);
  }
  async createFolder(path) {
    return this.adapterForPath(path).createFolder(path);
  }
  async fileExists(path) {
    return this.adapterForPath(path).fileExists(path);
  }
  async getFile(path, source) {
    return this.adapterForPath(path).getFile(path, source);
  }
  async deleteFile(path) {
    return this.adapterForPath(path).deleteFile(path);
  }
  async addTagToFile(path, tag) {
    return this.adapterForPath(path).addTagToFile(path, tag);
  }
  async renameTagForFile(path, oldTag, newTag) {
    return this.adapterForPath(path).renameTagForFile(path, oldTag, newTag);
  }
  async removeTagFromFile(path, tag) {
    return this.adapterForPath(path).removeTagFromFile(path, tag);
  }
  filesForTag(tag) {
    return this.primary.filesForTag(tag);
  }
};

// src/core/utils/frames/frame.ts
var addNodes = async (superstate, tableData, space, treeNode, target) => {
  var _a2, _b2, _c2, _d2, _e2;
  if (!tableData)
    return;
  const frameSchema = mdbSchemaToFrameSchema(tableData.schema);
  const nodes = (_a2 = tableData == null ? void 0 : tableData.rows.map(
    (f4) => f4.id == frameSchema.id ? {
      ...frameToNode(f4),
      types: tableData.cols.reduce(
        (p3, c4) => ({ ...p3, [c4.name]: c4.type }),
        {}
      ),
      propsValue: tableData.cols.reduce(
        (p3, c4) => ({ ...p3, [c4.name]: c4.value }),
        {}
      )
    } : frameToNode(f4)
  )) != null ? _a2 : [];
  const root = buildRoot(
    frameSchema,
    (_b2 = tableData == null ? void 0 : tableData.cols) != null ? _b2 : [],
    nodes,
    superstate
  );
  const id2 = uniqueNameFromString(
    treeNode.id,
    nodes.map((f4) => f4.id)
  );
  let parent = target ? target : root.node;
  let rank = target ? target.rank + 1 : parent.rank;
  if (!groupableTypes.some((f4) => parent.type == f4)) {
    parent = findParent(root, parent.id).node;
  } else {
    rank = nodes.filter((f4) => f4.parentId == parent.id).length;
  }
  const newTreeNode = {
    ...treeNode,
    id: id2,
    schemaId: frameSchema.id,
    parentId: parent.id
  };
  const newNodes = insert(
    nodes.filter((f4) => f4.parentId == parent.id).sort((a5, b4) => a5.rank - b4.rank),
    rank,
    newTreeNode
  ).map((f4, i4) => ({ ...f4, rank: i4 }));
  const newRows = ((_c2 = tableData == null ? void 0 : tableData.rows) == null ? void 0 : _c2.some((f4) => f4.id == root.id)) ? tableData.rows : [...(_d2 = tableData == null ? void 0 : tableData.rows) != null ? _d2 : [], nodeToFrame(root.node)];
  const insertRows = newNodes.filter((f4) => !newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
  const modRows = newNodes.filter((f4) => newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
  const newTable = {
    ...tableData,
    cols: (_e2 = tableData.cols) != null ? _e2 : [],
    rows: [
      ...newRows.map((f4) => {
        var _a3;
        return (_a3 = modRows.find((g4) => g4.id == f4.id)) != null ? _a3 : f4;
      }),
      ...insertRows
    ]
  };
  await superstate.spaceManager.saveFrame(space.path, newTable);
};
var addNodeToMFrame = async (superstate, space, schema, treeNode, target) => {
  return superstate.spaceManager.readFrame(space.path, schema).then(
    (tagDB) => addNodes(superstate, tagDB, space, treeNode, target)
  );
};
var mdbFrameToDBTables = (tables, uniques) => {
  return Object.keys(tables).reduce((p3, c4) => {
    return {
      ...p3,
      [c4]: {
        uniques: defaultFrameSchema.uniques,
        cols: defaultFrameSchema.cols,
        rows: tables[c4].rows
      }
    };
  }, {
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: Object.values(tables).flatMap((f4) => f4.cols)
    }
  });
};
var schemasAndFields = (tables) => {
  return {
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: Object.values(tables).flatMap((f4) => f4.cols)
    },
    m_schema: defaultFramesTable
  };
};

// src/core/react/components/SpaceView/Frames/DefaultFrames/DefaultFrames.ts
var defaultMainFrame = [
  {
    ...groupNode.node,
    id: "main",
    type: "group",
    rank: 0,
    schemaId: "main",
    props: {
      note: "",
      space: ""
    },
    types: {
      note: "link",
      space: "space"
    },
    propsValue: {
      note: JSON.stringify({
        alias: i18n_default.defaults.spaceNote
      }),
      space: JSON.stringify({
        alias: i18n_default.defaults.spaceContext
      })
    },
    styles: {
      layout: `"column"`,
      class: `'mk-f-main'`
    }
  },
  {
    ...flowNode.node,
    rank: 0,
    props: {
      value: `main.props.note`
    },
    styles: { width: `'100%'` },
    parentId: "main",
    schemaId: "main"
  },
  {
    ...spaceNode.node,
    id: "context",
    rank: 1,
    props: {
      value: `main.props.space`
    },
    styles: { width: `'100%'` },
    parentId: "main",
    schemaId: "main"
  }
];
var DefaultMDBTables = {
  main: {
    schema: defaultMainFrameSchema(mainFrameID),
    cols: [{ name: "space", type: "space", schemaId: "main", value: JSON.stringify({
      alias: i18n_default.defaults.spaceContext
    }) }, { name: "note", type: "link", schemaId: "main", value: JSON.stringify({
      alias: i18n_default.defaults.spaceNote
    }) }],
    rows: defaultMainFrame.map((f4) => nodeToFrame(f4))
  },
  [defaultFrameListViewID]: {
    schema: frameSchemaToMDBSchema(defaultFrameListViewSchema),
    cols: defaultContextFields.rows,
    rows: []
  }
};

// src/core/spaceManager/filesystemAdapter/filesystemAdapter.ts
var FilesystemSpaceAdapter = class {
  constructor(fileSystem) {
    this.fileSystem = fileSystem;
    this.onCreate = async (payload) => {
      if (payload.file.isFolder) {
        this.spaceManager.onSpaceCreated(payload.file.path);
      } else {
        this.spaceManager.onPathCreated(payload.file.path);
      }
    };
    this.onDelete = (payload) => {
      if (!payload.file)
        return;
      if (!payload.file.isFolder && payload.file.extension != "mdb") {
        this.spaceManager.onPathDeleted(payload.file.path);
      } else if (payload.file.isFolder) {
        this.spaceManager.onSpaceDeleted(payload.file.path);
      }
    };
    this.onRename = (payload) => {
      if (!payload.file)
        return;
      if (!payload.file.isFolder && payload.file.extension != "mdb") {
        this.spaceManager.onPathChanged(payload.file.path, payload.oldPath);
      } else if (payload.file.isFolder) {
        this.spaceManager.onSpaceRenamed(payload.file.path, payload.oldPath);
      }
    };
    this.authorities = ["vault"];
    fileSystem.eventDispatch.addListener("onCreate", this.onCreate, 0, this);
    fileSystem.eventDispatch.addListener("onRename", this.onRename, 0, this);
    fileSystem.eventDispatch.addListener("onDelete", this.onDelete, 0, this);
    fileSystem.eventDispatch.addListener("onCacheUpdated", this.onMetadataChange, 0, this);
  }
  initiateAdapter(manager) {
    this.spaceManager = manager;
  }
  async onMetadataChange(payload) {
    if (!payload.path)
      return;
    for (const space of this.allSpaces()) {
      if (space.defPath == payload.path) {
        this.spaceManager.onSpaceDefinitionChanged(space.path);
        this.spaceManager.onPathPropertyChanged(space.path);
      }
    }
    this.spaceManager.onPathPropertyChanged(payload.path);
  }
  uriByPath(path) {
    return this.spaceManager.uriByString(path);
  }
  allPaths(type) {
    return [...this.fileSystem.allFiles().filter((f4) => type ? type.some((g4) => g4 == "folder" ? f4.isFolder : f4.extension == g4) : true).map((g4) => g4.path)];
  }
  async pathExists(path) {
    return this.fileSystem.fileExists(path);
  }
  async createItemAtPath(parent, type, name, content) {
    const parentURI = await this.getPath(parent);
    if (!parentURI.isFolder) {
      const file = await this.fileSystem.getFile(parent);
      return this.fileSystem.newFileFragment(file, type, name, content).then((f4) => file.path);
    }
    return this.fileSystem.newFile(parent, name, type, content).then((f4) => f4.path);
  }
  async renamePath(oldPath, path) {
    const uri = this.uriByPath(oldPath);
    const newUri = this.uriByPath(path);
    const file = await this.fileSystem.getFile(uri.path);
    if (uri.refStr) {
      const refType = await this.fileSystem.getFileCacheTypeByRefString(file, uri.refStr);
      return await this.fileSystem.saveFileFragment(file, refType, uri.refStr, () => newUri.refStr);
    }
    return await this.fileSystem.renameFile(oldPath, path);
  }
  async deletePath(path) {
    const uri = this.uriByPath(path);
    if (uri.refStr) {
      const file = await this.fileSystem.getFile(uri.path);
      const refType = await this.fileSystem.getFileCacheTypeByRefString(file, uri.refStr);
      return this.fileSystem.deleteFileFragment(file, refType, uri.refStr);
    }
    return this.fileSystem.deleteFile(path);
  }
  async getPath(path) {
    const uri = this.uriByPath(path);
    const file = await this.fileSystem.getFile(uri.path);
    if (uri.refStr) {
      const type = this.fileSystem.getFileCacheTypeByRefString(file, uri.refStr);
    }
    return file;
  }
  readPathCache(path) {
    const uri = this.uriByPath(path);
    if (uri.scheme == "spaces") {
      if (uri.authority.charAt(0) == "#") {
        return {
          file: null,
          metadata: null,
          label: {
            name: uri.authority,
            sticker: "",
            color: ""
          },
          type: "space",
          parent: "",
          tags: []
        };
      }
    }
    return this.fileSystem.getFileCache(path);
  }
  async readPath(path) {
    const uri = this.uriByPath(path);
    const file = await this.fileSystem.getFile(uri.path);
    if (uri.refStr) {
      const fragmentType = this.fileSystem.getFileCacheTypeByRefString(file, uri.refStr);
      this.fileSystem.getFileContent(file, fragmentType, uri.refStr);
    }
    return this.fileSystem.readTextFromFile(path);
  }
  async copyPath(path, newPath) {
    const uri = this.uriByPath(path);
    const file = await this.fileSystem.getFile(uri.path);
    return this.fileSystem.copyFile(file.path, newPath);
  }
  async writeToPath(path, content, binary) {
    const uri = this.uriByPath(path);
    const file = await this.fileSystem.getFile(uri.path);
    if (uri.refStr) {
      const fragmentType = this.fileSystem.getFileCacheTypeByRefString(file, uri.refStr);
      this.fileSystem.saveFileFragment(file, fragmentType, uri.refStr, () => content);
    }
    if (binary) {
      return this.fileSystem.writeBinaryToFile(path, content);
    }
    return this.fileSystem.writeTextToFile(path, content);
  }
  parentPathForPath(path) {
    return this.fileSystem.parentPathForPath(path);
  }
  async readFrame(path, schema) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile && Object.keys(DefaultMDBTables).some((f4) => f4 == schema)) {
      const defaultTable = DefaultMDBTables[schema];
      return defaultTable;
    }
    return this.fileSystem.readFileFragments(mdbFile, "mdbTable", schema);
  }
  async readAllFrames(path) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile) {
      return DefaultMDBTables;
    }
    return this.fileSystem.readFileFragments(mdbFile, "mdbTables");
  }
  async readTable(path, schema) {
    const spaceInfo = this.spaceInfoForPath(path);
    const mdbFile = await this.fileSystem.getFile(spaceInfo.dbPath);
    if (!mdbFile && schema == defaultContextDBSchema.id) {
      const defaultTable = defaultTableDataForContext(this.spaceManager.superstate, spaceInfo);
      return defaultTable;
    }
    return this.fileSystem.readFileFragments(mdbFile, "mdbTable", schema);
  }
  async tablesForSpace(path) {
    const spaceInfo = this.spaceInfoForPath(path);
    const mdbFile = await this.fileSystem.getFile(spaceInfo.dbPath);
    if (!mdbFile) {
      return defaultContextTable.rows;
    }
    return this.fileSystem.readFileFragments(mdbFile, "schemas", null);
  }
  defaultDBTablesForContext(spaceInfo) {
    var _a2;
    const table = defaultTableDataForContext(this.spaceManager.superstate, spaceInfo);
    const defaultFields = defaultFieldsForContext(spaceInfo);
    const defaultTable = defaultTablesForContext(spaceInfo);
    return {
      ...defaultTable,
      m_fields: {
        uniques: defaultFields.uniques,
        cols: defaultFields.cols,
        rows: [...(_a2 = defaultFields.rows) != null ? _a2 : [], ...table.cols]
      },
      [table.schema.id]: {
        uniques: table.cols.filter((c4) => c4.unique == "true").map((c4) => c4.name),
        cols: table.cols.map((c4) => c4.name),
        rows: table.rows
      }
    };
  }
  async createDefaultTable(path) {
    const spaceInfo = this.spaceInfoForPath(path);
    const dbPath = this.spaceInfoForPath(path).dbPath;
    const extension = dbPath.split(".").pop();
    const folder = dbPath.split("/").slice(0, -1).join("/");
    const filename = dbPath.split("/").pop().split(".")[0];
    return this.fileSystem.newFile(folder, filename, extension, this.defaultDBTablesForContext(spaceInfo));
  }
  async createDefaultFrames(path) {
    const dbField = {
      ...mdbFrameToDBTables(DefaultMDBTables, {
        m_fields: fieldSchema.uniques,
        main: defaultFrameSchema.uniques
      }),
      ...schemasAndFields(DefaultMDBTables)
    };
    const dbPath = this.spaceInfoForPath(path).framePath;
    const extension = dbPath.split(".").pop();
    const folder = dbPath.split("/").slice(0, -1).join("/");
    const filename = dbPath.split("/").pop().split(".")[0];
    return this.fileSystem.newFile(folder, filename, extension, dbField);
  }
  async createTable(path, schema) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      mdbFile = await this.createDefaultTable(path);
    }
    return this.fileSystem.newFileFragment(mdbFile, "schema", schema.id, schema);
  }
  async saveTableSchema(path, schemaId, saveSchema) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      mdbFile = await this.createDefaultTable(path);
    }
    return this.fileSystem.saveFileFragment(mdbFile, "schema", schemaId, saveSchema);
  }
  async saveTable(path, table, force) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      if (force) {
        mdbFile = await this.createDefaultTable(path);
      } else {
        return null;
      }
    }
    return this.fileSystem.saveFileFragment(mdbFile, "mdbTable", table.schema.id, () => table);
  }
  async deleteTable(path, name) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    return this.fileSystem.deleteFileFragment(mdbFile, "schema", name);
  }
  async readAllTables(path) {
    const spaceInfo = this.spaceInfoForPath(path);
    const mdbFile = await this.fileSystem.getFile(spaceInfo.dbPath);
    if (!mdbFile) {
      const defaultTable = defaultTableDataForContext(this.spaceManager.superstate, spaceInfo);
      return {
        [defaultTable.schema.id]: defaultTable
      };
    }
    return this.fileSystem.readFileFragments(mdbFile, "mdbTables", null);
  }
  async framesForSpace(path) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile) {
      return Object.values(DefaultMDBTables).map((f4) => f4.schema);
    }
    return this.fileSystem.readFileFragments(mdbFile, "schemas", null);
  }
  async createFrame(path, schema) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile) {
      mdbFile = await this.createDefaultFrames(path);
    }
    return this.fileSystem.newFileFragment(mdbFile, "schema", schema.id, schema);
  }
  async deleteFrame(path, name) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    return this.fileSystem.deleteFileFragment(mdbFile, "schema", name);
  }
  async saveFrameSchema(path, schemaId, saveSchema) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile) {
      mdbFile = await this.createDefaultFrames(path);
    }
    return this.fileSystem.saveFileFragment(mdbFile, "schema", schemaId, saveSchema);
  }
  async saveFrame(path, frame) {
    let mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).framePath);
    if (!mdbFile) {
      mdbFile = await this.createDefaultFrames(path);
    }
    return this.fileSystem.saveFileFragment(mdbFile, "mdbFrame", frame.schema.id, () => frame);
  }
  async contextForSpace(path) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      return defaultTableDataForContext(this.spaceManager.superstate, this.spaceInfoForPath(path));
    }
    return this.fileSystem.readFileFragments(mdbFile, "mdbTable", defaultContextSchemaID);
  }
  async addSpaceProperty(path, property) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      await this.createDefaultTable(path);
    }
    this.fileSystem.newFileFragment(mdbFile, "field", property.name, property);
  }
  async deleteSpaceProperty(path, property) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    this.fileSystem.deleteFileFragment(mdbFile, "field", property);
  }
  async saveSpaceProperty(path, property, oldProperty) {
    const mdbFile = await this.fileSystem.getFile(this.spaceInfoForPath(path).dbPath);
    if (!mdbFile) {
      await this.createDefaultTable(path);
    }
    this.fileSystem.saveFileFragment(mdbFile, "field", oldProperty, (prev) => property);
  }
  async addProperty(path, property) {
    const file = await this.fileSystem.getFile(path);
    this.fileSystem.newFileFragment(file, "property", property.name, property);
  }
  async saveProperties(path, properties2) {
    const file = await this.fileSystem.getFile(path);
    this.fileSystem.saveFileFragment(file, "property", null, (prev) => properties2);
  }
  async readLabel(path) {
    return this.fileSystem.getFileCache(path).label;
  }
  async saveLabel(path, label, value) {
    const file = await this.fileSystem.getFile(path);
    this.fileSystem.saveFileLabel(file, label, value);
  }
  async renameProperty(path, property, newProperty) {
    const file = await this.fileSystem.getFile(path);
    this.fileSystem.saveFileFragment(file, "property", null, (prev) => {
      const { [property]: _11, properties: properties2 } = prev;
      return { ...properties2, [newProperty]: prev[property] };
    });
  }
  async readProperties(path) {
    const file = await this.fileSystem.getFile(path);
    return this.fileSystem.readFileFragments(file, "property", null);
  }
  async deleteProperty(path, property) {
    const file = await this.fileSystem.getFile(path);
    this.fileSystem.deleteFileFragment(file, "property", property);
  }
  allSpaces() {
    const getAllTagContextFiles = () => {
      var _a2;
      return (_a2 = this.readTags().map((f4) => fileSystemSpaceInfoFromTag(this.spaceManager, tagPathToTag(f4)))) != null ? _a2 : [];
    };
    const getAllFolderContextFiles = () => {
      const folders = this.allPaths(["folder"]).filter((f4) => !f4.startsWith(this.spaceManager.superstate.settings.spacesFolder + "/#"));
      return folders.map((f4) => fileSystemSpaceInfoFromFolder(this.spaceManager, f4));
    };
    const allTagSpaces = this.spaceManager.superstate.settings.enableTagSpaces && this.spaceManager.superstate.settings.enableDefaultSpaces ? getAllTagContextFiles() : [];
    const allFolders = getAllFolderContextFiles();
    return [...allTagSpaces, ...allFolders];
  }
  readTags() {
    return this.fileSystem.allTags();
  }
  spaceInfoForPath(path) {
    return fileSystemSpaceInfoByPath(this.spaceManager, path);
  }
  allCaches() {
    return this.fileSystem.allCaches();
  }
  async spaceDefForSpace(path) {
    var _a2;
    const space = this.spaceInfoForPath(path);
    if (!space)
      return null;
    const defFile = await this.fileSystem.getFile(space.defPath);
    const metaCache = defFile ? (_a2 = this.fileSystem.getFileCache(defFile.path)) == null ? void 0 : _a2.frontmatter : null;
    const spaceDef = metaCache != null ? metaCache : {};
    return parseSpaceMetadata(spaceDef, this.spaceManager.superstate.settings);
  }
  async createSpace(name, parentPath, definition) {
    const spaceInfo = this.spaceInfoForPath(parentPath);
    const newPath = spaceInfo.folderPath == "/" ? name : spaceInfo.folderPath + "/" + name;
    await this.fileSystem.createFolder(newPath);
    return this.saveSpace(newPath, () => definition);
  }
  async saveSpace(path, definitionFn, properties2) {
    var _a2;
    const metadata = (_a2 = definitionFn(await this.spaceDefForSpace(path))) != null ? _a2 : {};
    const spaceInfo = this.spaceInfoForPath(path);
    let file = await this.fileSystem.getFile(spaceInfo.defPath);
    if (!file) {
      file = await this.fileSystem.newFile(spaceInfo.folderPath, spaceInfo.name, "md");
    }
    await this.fileSystem.saveFileFragment(file, "frontmatter", null, (frontmatter) => ({
      [spaceFilterKey(this.spaceManager.superstate.settings)]: metadata.filters,
      [spaceContextsKey(this.spaceManager.superstate.settings)]: metadata.contexts,
      [spaceLinksKey(this.spaceManager.superstate.settings)]: metadata.links,
      [spaceSortKey(this.spaceManager.superstate.settings)]: metadata.sort,
      ...properties2 != null ? properties2 : {}
    }));
    await this.spaceManager.onPathPropertyChanged(file.path);
    await this.spaceManager.onSpaceCreated(path);
    return;
  }
  renameSpace(oldPath, newPath) {
    const spaceInfo = this.spaceInfoForPath(oldPath);
    const newSpaceInfo = this.spaceInfoForPath(newPath);
    this.fileSystem.renameFile(spaceInfo.folderPath, newSpaceInfo.folderPath);
  }
  deleteSpace(path) {
    const spaceCache = this.spaceInfoForPath(path);
    const spaceInfo = fileSystemSpaceInfoFromTag(this.spaceManager, spaceCache.name);
    this.fileSystem.deleteFile(spaceInfo.folderPath);
  }
  childrenForSpace(path) {
    return [];
  }
  addTag(path, tag) {
    this.fileSystem.addTagToFile(path, tag);
  }
  renameTag(path, tag, newTag) {
    this.fileSystem.renameTagForFile(path, tag, newTag);
  }
  deleteTag(path, tag) {
    this.fileSystem.removeTagFromFile(path, tag);
  }
  pathsForTag(tag) {
    return this.fileSystem.filesForTag(tag);
  }
  resolvePath(path, source) {
    return this.fileSystem.resolvePath(path, source);
  }
};

// src/core/middleware/ui.ts
var UIManager = class {
  constructor(primaryAdapter, adapters) {
    this.eventsDispatch = new EventDispatcher();
    this.adapters = [];
    this.adapters = adapters != null ? adapters : [];
    primaryAdapter.manager = this;
    this.mainFrame = primaryAdapter;
  }
  quickOpen() {
    this.mainFrame.quickOpen();
  }
  setActivePath(path) {
    this.activePath = path;
    this.eventsDispatch.dispatchEvent("activePathChanged", path);
  }
  mainMenu(el, superstate) {
    this.mainFrame.mainMenu(el, superstate);
  }
  navigationHistory() {
    return this.mainFrame.navigationHistory();
  }
  allViews() {
    return [];
  }
  viewsByPath(path) {
    return [];
  }
  static create(adapter, adapters) {
    return new UIManager(adapter, adapters);
  }
  openMenu(position, menuProps) {
    this.mainFrame.openMenu(position, menuProps);
  }
  openCustomMenu(position, fc) {
    this.mainFrame.openCustomMenu(position, fc);
  }
  notify(content, destination) {
    if (destination == "console") {
      console.log(content);
      return;
    }
    this.mainFrame.openToast(content);
  }
  openPalette(modal, className) {
    this.mainFrame.openPalette(modal, className);
  }
  openModal(title, modal) {
    this.mainFrame.openModal(title, modal);
  }
  openPopover(position, popover) {
    this.mainFrame.openPopover(position, popover);
  }
  openPath(path, newLeaf, source, props2) {
    this.mainFrame.openPath(path, newLeaf, source, props2);
  }
  getScreenType() {
    return this.mainFrame.getScreenType();
  }
  getSticker(icon) {
    return this.mainFrame.getSticker(icon);
  }
  allStickers() {
    return this.mainFrame.allStickers();
  }
  getUIPath(path) {
    return this.mainFrame.getUIPath(path);
  }
  dragStarted(e4, paths) {
    this.mainFrame.dragStarted(e4, paths);
  }
  dragEnded(e4) {
    this.mainFrame.dragEnded(e4);
  }
  setDragLabel(label) {
    this.mainFrame.setDragLabel(label);
  }
};

// node_modules/fuse.js/dist/fuse.mjs
function isArray2(value) {
  return !Array.isArray ? getTag(value) === "[object Array]" : Array.isArray(value);
}
var INFINITY = 1 / 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  let result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
function toString2(value) {
  return value == null ? "" : baseToString(value);
}
function isString(value) {
  return typeof value === "string";
}
function isNumber(value) {
  return typeof value === "number";
}
function isBoolean(value) {
  return value === true || value === false || isObjectLike(value) && getTag(value) == "[object Boolean]";
}
function isObject(value) {
  return typeof value === "object";
}
function isObjectLike(value) {
  return isObject(value) && value !== null;
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isBlank(value) {
  return !value.trim().length;
}
function getTag(value) {
  return value == null ? value === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(value);
}
var INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
var LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key2) => `Invalid value for key ${key2}`;
var PATTERN_LENGTH_TOO_LARGE = (max3) => `Pattern length exceeds max of ${max3}.`;
var MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;
var INVALID_KEY_WEIGHT_VALUE = (key2) => `Property 'weight' in key '${key2}' must be a positive integer`;
var hasOwn2 = Object.prototype.hasOwnProperty;
var KeyStore = class {
  constructor(keys) {
    this._keys = [];
    this._keyMap = {};
    let totalWeight = 0;
    keys.forEach((key2) => {
      let obj = createKey(key2);
      this._keys.push(obj);
      this._keyMap[obj.id] = obj;
      totalWeight += obj.weight;
    });
    this._keys.forEach((key2) => {
      key2.weight /= totalWeight;
    });
  }
  get(keyId) {
    return this._keyMap[keyId];
  }
  keys() {
    return this._keys;
  }
  toJSON() {
    return JSON.stringify(this._keys);
  }
};
function createKey(key2) {
  let path = null;
  let id2 = null;
  let src = null;
  let weight = 1;
  let getFn = null;
  if (isString(key2) || isArray2(key2)) {
    src = key2;
    path = createKeyPath(key2);
    id2 = createKeyId(key2);
  } else {
    if (!hasOwn2.call(key2, "name")) {
      throw new Error(MISSING_KEY_PROPERTY("name"));
    }
    const name = key2.name;
    src = name;
    if (hasOwn2.call(key2, "weight")) {
      weight = key2.weight;
      if (weight <= 0) {
        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
      }
    }
    path = createKeyPath(name);
    id2 = createKeyId(name);
    getFn = key2.getFn;
  }
  return { path, id: id2, weight, src, getFn };
}
function createKeyPath(key2) {
  return isArray2(key2) ? key2 : key2.split(".");
}
function createKeyId(key2) {
  return isArray2(key2) ? key2.join(".") : key2;
}
function get(obj, path) {
  let list = [];
  let arr = false;
  const deepGet = (obj2, path2, index) => {
    if (!isDefined(obj2)) {
      return;
    }
    if (!path2[index]) {
      list.push(obj2);
    } else {
      let key2 = path2[index];
      const value = obj2[key2];
      if (!isDefined(value)) {
        return;
      }
      if (index === path2.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) {
        list.push(toString2(value));
      } else if (isArray2(value)) {
        arr = true;
        for (let i4 = 0, len = value.length; i4 < len; i4 += 1) {
          deepGet(value[i4], path2, index + 1);
        }
      } else if (path2.length) {
        deepGet(value, path2, index + 1);
      }
    }
  };
  deepGet(obj, isString(path) ? path.split(".") : path, 0);
  return arr ? list : list[0];
}
var MatchOptions = {
  includeMatches: false,
  findAllMatches: false,
  minMatchCharLength: 1
};
var BasicOptions = {
  isCaseSensitive: false,
  includeScore: false,
  keys: [],
  shouldSort: true,
  sortFn: (a5, b4) => a5.score === b4.score ? a5.idx < b4.idx ? -1 : 1 : a5.score < b4.score ? -1 : 1
};
var FuzzyOptions = {
  location: 0,
  threshold: 0.6,
  distance: 100
};
var AdvancedOptions = {
  useExtendedSearch: false,
  getFn: get,
  ignoreLocation: false,
  ignoreFieldNorm: false,
  fieldNormWeight: 1
};
var Config = {
  ...BasicOptions,
  ...MatchOptions,
  ...FuzzyOptions,
  ...AdvancedOptions
};
var SPACE = /[^ ]+/g;
function norm(weight = 1, mantissa = 3) {
  const cache = /* @__PURE__ */ new Map();
  const m5 = Math.pow(10, mantissa);
  return {
    get(value) {
      const numTokens = value.match(SPACE).length;
      if (cache.has(numTokens)) {
        return cache.get(numTokens);
      }
      const norm2 = 1 / Math.pow(numTokens, 0.5 * weight);
      const n2 = parseFloat(Math.round(norm2 * m5) / m5);
      cache.set(numTokens, n2);
      return n2;
    },
    clear() {
      cache.clear();
    }
  };
}
var FuseIndex = class {
  constructor({
    getFn = Config.getFn,
    fieldNormWeight = Config.fieldNormWeight
  } = {}) {
    this.norm = norm(fieldNormWeight, 3);
    this.getFn = getFn;
    this.isCreated = false;
    this.setIndexRecords();
  }
  setSources(docs = []) {
    this.docs = docs;
  }
  setIndexRecords(records = []) {
    this.records = records;
  }
  setKeys(keys = []) {
    this.keys = keys;
    this._keysMap = {};
    keys.forEach((key2, idx) => {
      this._keysMap[key2.id] = idx;
    });
  }
  create() {
    if (this.isCreated || !this.docs.length) {
      return;
    }
    this.isCreated = true;
    if (isString(this.docs[0])) {
      this.docs.forEach((doc, docIndex) => {
        this._addString(doc, docIndex);
      });
    } else {
      this.docs.forEach((doc, docIndex) => {
        this._addObject(doc, docIndex);
      });
    }
    this.norm.clear();
  }
  add(doc) {
    const idx = this.size();
    if (isString(doc)) {
      this._addString(doc, idx);
    } else {
      this._addObject(doc, idx);
    }
  }
  removeAt(idx) {
    this.records.splice(idx, 1);
    for (let i4 = idx, len = this.size(); i4 < len; i4 += 1) {
      this.records[i4].i -= 1;
    }
  }
  getValueForItemAtKeyId(item, keyId) {
    return item[this._keysMap[keyId]];
  }
  size() {
    return this.records.length;
  }
  _addString(doc, docIndex) {
    if (!isDefined(doc) || isBlank(doc)) {
      return;
    }
    let record = {
      v: doc,
      i: docIndex,
      n: this.norm.get(doc)
    };
    this.records.push(record);
  }
  _addObject(doc, docIndex) {
    let record = { i: docIndex, $: {} };
    this.keys.forEach((key2, keyIndex) => {
      let value = key2.getFn ? key2.getFn(doc) : this.getFn(doc, key2.path);
      if (!isDefined(value)) {
        return;
      }
      if (isArray2(value)) {
        let subRecords = [];
        const stack = [{ nestedArrIndex: -1, value }];
        while (stack.length) {
          const { nestedArrIndex, value: value2 } = stack.pop();
          if (!isDefined(value2)) {
            continue;
          }
          if (isString(value2) && !isBlank(value2)) {
            let subRecord = {
              v: value2,
              i: nestedArrIndex,
              n: this.norm.get(value2)
            };
            subRecords.push(subRecord);
          } else if (isArray2(value2)) {
            value2.forEach((item, k5) => {
              stack.push({
                nestedArrIndex: k5,
                value: item
              });
            });
          } else
            ;
        }
        record.$[keyIndex] = subRecords;
      } else if (isString(value) && !isBlank(value)) {
        let subRecord = {
          v: value,
          n: this.norm.get(value)
        };
        record.$[keyIndex] = subRecord;
      }
    });
    this.records.push(record);
  }
  toJSON() {
    return {
      keys: this.keys,
      records: this.records
    };
  }
};
function createIndex(keys, docs, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys.map(createKey));
  myIndex.setSources(docs);
  myIndex.create();
  return myIndex;
}
function parseIndex(data2, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const { keys, records } = data2;
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys);
  myIndex.setIndexRecords(records);
  return myIndex;
}
function computeScore$1(pattern, {
  errors = 0,
  currentLocation = 0,
  expectedLocation = 0,
  distance = Config.distance,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  const accuracy = errors / pattern.length;
  if (ignoreLocation) {
    return accuracy;
  }
  const proximity = Math.abs(expectedLocation - currentLocation);
  if (!distance) {
    return proximity ? 1 : accuracy;
  }
  return accuracy + proximity / distance;
}
function convertMaskToIndices(matchmask = [], minMatchCharLength = Config.minMatchCharLength) {
  let indices = [];
  let start = -1;
  let end = -1;
  let i4 = 0;
  for (let len = matchmask.length; i4 < len; i4 += 1) {
    let match2 = matchmask[i4];
    if (match2 && start === -1) {
      start = i4;
    } else if (!match2 && start !== -1) {
      end = i4 - 1;
      if (end - start + 1 >= minMatchCharLength) {
        indices.push([start, end]);
      }
      start = -1;
    }
  }
  if (matchmask[i4 - 1] && i4 - start >= minMatchCharLength) {
    indices.push([start, i4 - 1]);
  }
  return indices;
}
var MAX_BITS = 32;
function search(text2, pattern, patternAlphabet, {
  location = Config.location,
  distance = Config.distance,
  threshold = Config.threshold,
  findAllMatches = Config.findAllMatches,
  minMatchCharLength = Config.minMatchCharLength,
  includeMatches = Config.includeMatches,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  if (pattern.length > MAX_BITS) {
    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
  }
  const patternLen = pattern.length;
  const textLen = text2.length;
  const expectedLocation = Math.max(0, Math.min(location, textLen));
  let currentThreshold = threshold;
  let bestLocation = expectedLocation;
  const computeMatches = minMatchCharLength > 1 || includeMatches;
  const matchMask = computeMatches ? Array(textLen) : [];
  let index;
  while ((index = text2.indexOf(pattern, bestLocation)) > -1) {
    let score = computeScore$1(pattern, {
      currentLocation: index,
      expectedLocation,
      distance,
      ignoreLocation
    });
    currentThreshold = Math.min(score, currentThreshold);
    bestLocation = index + patternLen;
    if (computeMatches) {
      let i4 = 0;
      while (i4 < patternLen) {
        matchMask[index + i4] = 1;
        i4 += 1;
      }
    }
  }
  bestLocation = -1;
  let lastBitArr = [];
  let finalScore = 1;
  let binMax = patternLen + textLen;
  const mask = 1 << patternLen - 1;
  for (let i4 = 0; i4 < patternLen; i4 += 1) {
    let binMin = 0;
    let binMid = binMax;
    while (binMin < binMid) {
      const score2 = computeScore$1(pattern, {
        errors: i4,
        currentLocation: expectedLocation + binMid,
        expectedLocation,
        distance,
        ignoreLocation
      });
      if (score2 <= currentThreshold) {
        binMin = binMid;
      } else {
        binMax = binMid;
      }
      binMid = Math.floor((binMax - binMin) / 2 + binMin);
    }
    binMax = binMid;
    let start = Math.max(1, expectedLocation - binMid + 1);
    let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
    let bitArr = Array(finish + 2);
    bitArr[finish + 1] = (1 << i4) - 1;
    for (let j4 = finish; j4 >= start; j4 -= 1) {
      let currentLocation = j4 - 1;
      let charMatch = patternAlphabet[text2.charAt(currentLocation)];
      if (computeMatches) {
        matchMask[currentLocation] = +!!charMatch;
      }
      bitArr[j4] = (bitArr[j4 + 1] << 1 | 1) & charMatch;
      if (i4) {
        bitArr[j4] |= (lastBitArr[j4 + 1] | lastBitArr[j4]) << 1 | 1 | lastBitArr[j4 + 1];
      }
      if (bitArr[j4] & mask) {
        finalScore = computeScore$1(pattern, {
          errors: i4,
          currentLocation,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (finalScore <= currentThreshold) {
          currentThreshold = finalScore;
          bestLocation = currentLocation;
          if (bestLocation <= expectedLocation) {
            break;
          }
          start = Math.max(1, 2 * expectedLocation - bestLocation);
        }
      }
    }
    const score = computeScore$1(pattern, {
      errors: i4 + 1,
      currentLocation: expectedLocation,
      expectedLocation,
      distance,
      ignoreLocation
    });
    if (score > currentThreshold) {
      break;
    }
    lastBitArr = bitArr;
  }
  const result = {
    isMatch: bestLocation >= 0,
    score: Math.max(1e-3, finalScore)
  };
  if (computeMatches) {
    const indices = convertMaskToIndices(matchMask, minMatchCharLength);
    if (!indices.length) {
      result.isMatch = false;
    } else if (includeMatches) {
      result.indices = indices;
    }
  }
  return result;
}
function createPatternAlphabet(pattern) {
  let mask = {};
  for (let i4 = 0, len = pattern.length; i4 < len; i4 += 1) {
    const char = pattern.charAt(i4);
    mask[char] = (mask[char] || 0) | 1 << len - i4 - 1;
  }
  return mask;
}
var BitapSearch = class {
  constructor(pattern, {
    location = Config.location,
    threshold = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    this.options = {
      location,
      threshold,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreLocation
    };
    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    this.chunks = [];
    if (!this.pattern.length) {
      return;
    }
    const addChunk = (pattern2, startIndex) => {
      this.chunks.push({
        pattern: pattern2,
        alphabet: createPatternAlphabet(pattern2),
        startIndex
      });
    };
    const len = this.pattern.length;
    if (len > MAX_BITS) {
      let i4 = 0;
      const remainder = len % MAX_BITS;
      const end = len - remainder;
      while (i4 < end) {
        addChunk(this.pattern.substr(i4, MAX_BITS), i4);
        i4 += MAX_BITS;
      }
      if (remainder) {
        const startIndex = len - MAX_BITS;
        addChunk(this.pattern.substr(startIndex), startIndex);
      }
    } else {
      addChunk(this.pattern, 0);
    }
  }
  searchIn(text2) {
    const { isCaseSensitive, includeMatches } = this.options;
    if (!isCaseSensitive) {
      text2 = text2.toLowerCase();
    }
    if (this.pattern === text2) {
      let result2 = {
        isMatch: true,
        score: 0
      };
      if (includeMatches) {
        result2.indices = [[0, text2.length - 1]];
      }
      return result2;
    }
    const {
      location,
      distance,
      threshold,
      findAllMatches,
      minMatchCharLength,
      ignoreLocation
    } = this.options;
    let allIndices = [];
    let totalScore = 0;
    let hasMatches = false;
    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {
      const { isMatch: isMatch2, score, indices } = search(text2, pattern, alphabet, {
        location: location + startIndex,
        distance,
        threshold,
        findAllMatches,
        minMatchCharLength,
        includeMatches,
        ignoreLocation
      });
      if (isMatch2) {
        hasMatches = true;
      }
      totalScore += score;
      if (isMatch2 && indices) {
        allIndices = [...allIndices, ...indices];
      }
    });
    let result = {
      isMatch: hasMatches,
      score: hasMatches ? totalScore / this.chunks.length : 1
    };
    if (hasMatches && includeMatches) {
      result.indices = allIndices;
    }
    return result;
  }
};
var BaseMatch = class {
  constructor(pattern) {
    this.pattern = pattern;
  }
  static isMultiMatch(pattern) {
    return getMatch(pattern, this.multiRegex);
  }
  static isSingleMatch(pattern) {
    return getMatch(pattern, this.singleRegex);
  }
  search() {
  }
};
function getMatch(pattern, exp) {
  const matches = pattern.match(exp);
  return matches ? matches[1] : null;
}
var ExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "exact";
  }
  static get multiRegex() {
    return /^="(.*)"$/;
  }
  static get singleRegex() {
    return /^=(.*)$/;
  }
  search(text2) {
    const isMatch2 = text2 === this.pattern;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
};
var InverseExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"$/;
  }
  static get singleRegex() {
    return /^!(.*)$/;
  }
  search(text2) {
    const index = text2.indexOf(this.pattern);
    const isMatch2 = index === -1;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text2.length - 1]
    };
  }
};
var PrefixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "prefix-exact";
  }
  static get multiRegex() {
    return /^\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^\^(.*)$/;
  }
  search(text2) {
    const isMatch2 = text2.startsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
};
var InversePrefixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-prefix-exact";
  }
  static get multiRegex() {
    return /^!\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^!\^(.*)$/;
  }
  search(text2) {
    const isMatch2 = !text2.startsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text2.length - 1]
    };
  }
};
var SuffixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "suffix-exact";
  }
  static get multiRegex() {
    return /^"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^(.*)\$$/;
  }
  search(text2) {
    const isMatch2 = text2.endsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [text2.length - this.pattern.length, text2.length - 1]
    };
  }
};
var InverseSuffixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-suffix-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^!(.*)\$$/;
  }
  search(text2) {
    const isMatch2 = !text2.endsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text2.length - 1]
    };
  }
};
var FuzzyMatch = class extends BaseMatch {
  constructor(pattern, {
    location = Config.location,
    threshold = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    super(pattern);
    this._bitapSearch = new BitapSearch(pattern, {
      location,
      threshold,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreLocation
    });
  }
  static get type() {
    return "fuzzy";
  }
  static get multiRegex() {
    return /^"(.*)"$/;
  }
  static get singleRegex() {
    return /^(.*)$/;
  }
  search(text2) {
    return this._bitapSearch.searchIn(text2);
  }
};
var IncludeMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "include";
  }
  static get multiRegex() {
    return /^'"(.*)"$/;
  }
  static get singleRegex() {
    return /^'(.*)$/;
  }
  search(text2) {
    let location = 0;
    let index;
    const indices = [];
    const patternLen = this.pattern.length;
    while ((index = text2.indexOf(this.pattern, location)) > -1) {
      location = index + patternLen;
      indices.push([index, location - 1]);
    }
    const isMatch2 = !!indices.length;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices
    };
  }
};
var searchers = [
  ExactMatch,
  IncludeMatch,
  PrefixExactMatch,
  InversePrefixExactMatch,
  InverseSuffixExactMatch,
  SuffixExactMatch,
  InverseExactMatch,
  FuzzyMatch
];
var searchersLen = searchers.length;
var SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
var OR_TOKEN = "|";
function parseQuery(pattern, options = {}) {
  return pattern.split(OR_TOKEN).map((item) => {
    let query = item.trim().split(SPACE_RE).filter((item2) => item2 && !!item2.trim());
    let results = [];
    for (let i4 = 0, len = query.length; i4 < len; i4 += 1) {
      const queryItem = query[i4];
      let found = false;
      let idx = -1;
      while (!found && ++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isMultiMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          found = true;
        }
      }
      if (found) {
        continue;
      }
      idx = -1;
      while (++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isSingleMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          break;
        }
      }
    }
    return results;
  });
}
var MultiMatchSet = /* @__PURE__ */ new Set([FuzzyMatch.type, IncludeMatch.type]);
var ExtendedSearch = class {
  constructor(pattern, {
    isCaseSensitive = Config.isCaseSensitive,
    includeMatches = Config.includeMatches,
    minMatchCharLength = Config.minMatchCharLength,
    ignoreLocation = Config.ignoreLocation,
    findAllMatches = Config.findAllMatches,
    location = Config.location,
    threshold = Config.threshold,
    distance = Config.distance
  } = {}) {
    this.query = null;
    this.options = {
      isCaseSensitive,
      includeMatches,
      minMatchCharLength,
      findAllMatches,
      ignoreLocation,
      location,
      threshold,
      distance
    };
    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    this.query = parseQuery(this.pattern, this.options);
  }
  static condition(_11, options) {
    return options.useExtendedSearch;
  }
  searchIn(text2) {
    const query = this.query;
    if (!query) {
      return {
        isMatch: false,
        score: 1
      };
    }
    const { includeMatches, isCaseSensitive } = this.options;
    text2 = isCaseSensitive ? text2 : text2.toLowerCase();
    let numMatches = 0;
    let allIndices = [];
    let totalScore = 0;
    for (let i4 = 0, qLen = query.length; i4 < qLen; i4 += 1) {
      const searchers2 = query[i4];
      allIndices.length = 0;
      numMatches = 0;
      for (let j4 = 0, pLen = searchers2.length; j4 < pLen; j4 += 1) {
        const searcher = searchers2[j4];
        const { isMatch: isMatch2, indices, score } = searcher.search(text2);
        if (isMatch2) {
          numMatches += 1;
          totalScore += score;
          if (includeMatches) {
            const type = searcher.constructor.type;
            if (MultiMatchSet.has(type)) {
              allIndices = [...allIndices, ...indices];
            } else {
              allIndices.push(indices);
            }
          }
        } else {
          totalScore = 0;
          numMatches = 0;
          allIndices.length = 0;
          break;
        }
      }
      if (numMatches) {
        let result = {
          isMatch: true,
          score: totalScore / numMatches
        };
        if (includeMatches) {
          result.indices = allIndices;
        }
        return result;
      }
    }
    return {
      isMatch: false,
      score: 1
    };
  }
};
var registeredSearchers = [];
function register(...args) {
  registeredSearchers.push(...args);
}
function createSearcher(pattern, options) {
  for (let i4 = 0, len = registeredSearchers.length; i4 < len; i4 += 1) {
    let searcherClass = registeredSearchers[i4];
    if (searcherClass.condition(pattern, options)) {
      return new searcherClass(pattern, options);
    }
  }
  return new BitapSearch(pattern, options);
}
var LogicalOperator = {
  AND: "$and",
  OR: "$or"
};
var KeyType = {
  PATH: "$path",
  PATTERN: "$val"
};
var isExpression = (query) => !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
var isPath = (query) => !!query[KeyType.PATH];
var isLeaf = (query) => !isArray2(query) && isObject(query) && !isExpression(query);
var convertToExplicit = (query) => ({
  [LogicalOperator.AND]: Object.keys(query).map((key2) => ({
    [key2]: query[key2]
  }))
});
function parse4(query, options, { auto = true } = {}) {
  const next = (query2) => {
    let keys = Object.keys(query2);
    const isQueryPath = isPath(query2);
    if (!isQueryPath && keys.length > 1 && !isExpression(query2)) {
      return next(convertToExplicit(query2));
    }
    if (isLeaf(query2)) {
      const key2 = isQueryPath ? query2[KeyType.PATH] : keys[0];
      const pattern = isQueryPath ? query2[KeyType.PATTERN] : query2[key2];
      if (!isString(pattern)) {
        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key2));
      }
      const obj = {
        keyId: createKeyId(key2),
        pattern
      };
      if (auto) {
        obj.searcher = createSearcher(pattern, options);
      }
      return obj;
    }
    let node = {
      children: [],
      operator: keys[0]
    };
    keys.forEach((key2) => {
      const value = query2[key2];
      if (isArray2(value)) {
        value.forEach((item) => {
          node.children.push(next(item));
        });
      }
    });
    return node;
  };
  if (!isExpression(query)) {
    query = convertToExplicit(query);
  }
  return next(query);
}
function computeScore(results, { ignoreFieldNorm = Config.ignoreFieldNorm }) {
  results.forEach((result) => {
    let totalScore = 1;
    result.matches.forEach(({ key: key2, norm: norm2, score }) => {
      const weight = key2 ? key2.weight : null;
      totalScore *= Math.pow(
        score === 0 && weight ? Number.EPSILON : score,
        (weight || 1) * (ignoreFieldNorm ? 1 : norm2)
      );
    });
    result.score = totalScore;
  });
}
function transformMatches(result, data2) {
  const matches = result.matches;
  data2.matches = [];
  if (!isDefined(matches)) {
    return;
  }
  matches.forEach((match2) => {
    if (!isDefined(match2.indices) || !match2.indices.length) {
      return;
    }
    const { indices, value } = match2;
    let obj = {
      indices,
      value
    };
    if (match2.key) {
      obj.key = match2.key.src;
    }
    if (match2.idx > -1) {
      obj.refIndex = match2.idx;
    }
    data2.matches.push(obj);
  });
}
function transformScore(result, data2) {
  data2.score = result.score;
}
function format2(results, docs, {
  includeMatches = Config.includeMatches,
  includeScore = Config.includeScore
} = {}) {
  const transformers = [];
  if (includeMatches)
    transformers.push(transformMatches);
  if (includeScore)
    transformers.push(transformScore);
  return results.map((result) => {
    const { idx } = result;
    const data2 = {
      item: docs[idx],
      refIndex: idx
    };
    if (transformers.length) {
      transformers.forEach((transformer) => {
        transformer(result, data2);
      });
    }
    return data2;
  });
}
var Fuse = class {
  constructor(docs, options = {}, index) {
    this.options = { ...Config, ...options };
    if (this.options.useExtendedSearch && false) {
      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
    }
    this._keyStore = new KeyStore(this.options.keys);
    this.setCollection(docs, index);
  }
  setCollection(docs, index) {
    this._docs = docs;
    if (index && !(index instanceof FuseIndex)) {
      throw new Error(INCORRECT_INDEX_TYPE);
    }
    this._myIndex = index || createIndex(this.options.keys, this._docs, {
      getFn: this.options.getFn,
      fieldNormWeight: this.options.fieldNormWeight
    });
  }
  add(doc) {
    if (!isDefined(doc)) {
      return;
    }
    this._docs.push(doc);
    this._myIndex.add(doc);
  }
  remove(predicate = () => false) {
    const results = [];
    for (let i4 = 0, len = this._docs.length; i4 < len; i4 += 1) {
      const doc = this._docs[i4];
      if (predicate(doc, i4)) {
        this.removeAt(i4);
        i4 -= 1;
        len -= 1;
        results.push(doc);
      }
    }
    return results;
  }
  removeAt(idx) {
    this._docs.splice(idx, 1);
    this._myIndex.removeAt(idx);
  }
  getIndex() {
    return this._myIndex;
  }
  search(query, { limit = -1 } = {}) {
    const {
      includeMatches,
      includeScore,
      shouldSort,
      sortFn,
      ignoreFieldNorm
    } = this.options;
    let results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
    computeScore(results, { ignoreFieldNorm });
    if (shouldSort) {
      results.sort(sortFn);
    }
    if (isNumber(limit) && limit > -1) {
      results = results.slice(0, limit);
    }
    return format2(results, this._docs, {
      includeMatches,
      includeScore
    });
  }
  _searchStringList(query) {
    const searcher = createSearcher(query, this.options);
    const { records } = this._myIndex;
    const results = [];
    records.forEach(({ v: text2, i: idx, n: norm2 }) => {
      if (!isDefined(text2)) {
        return;
      }
      const { isMatch: isMatch2, score, indices } = searcher.searchIn(text2);
      if (isMatch2) {
        results.push({
          item: text2,
          idx,
          matches: [{ score, value: text2, norm: norm2, indices }]
        });
      }
    });
    return results;
  }
  _searchLogical(query) {
    const expression = parse4(query, this.options);
    const evaluate = (node, item, idx) => {
      if (!node.children) {
        const { keyId, searcher } = node;
        const matches = this._findMatches({
          key: this._keyStore.get(keyId),
          value: this._myIndex.getValueForItemAtKeyId(item, keyId),
          searcher
        });
        if (matches && matches.length) {
          return [
            {
              idx,
              item,
              matches
            }
          ];
        }
        return [];
      }
      const res = [];
      for (let i4 = 0, len = node.children.length; i4 < len; i4 += 1) {
        const child = node.children[i4];
        const result = evaluate(child, item, idx);
        if (result.length) {
          res.push(...result);
        } else if (node.operator === LogicalOperator.AND) {
          return [];
        }
      }
      return res;
    };
    const records = this._myIndex.records;
    const resultMap = {};
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (isDefined(item)) {
        let expResults = evaluate(expression, item, idx);
        if (expResults.length) {
          if (!resultMap[idx]) {
            resultMap[idx] = { idx, item, matches: [] };
            results.push(resultMap[idx]);
          }
          expResults.forEach(({ matches }) => {
            resultMap[idx].matches.push(...matches);
          });
        }
      }
    });
    return results;
  }
  _searchObjectList(query) {
    const searcher = createSearcher(query, this.options);
    const { keys, records } = this._myIndex;
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (!isDefined(item)) {
        return;
      }
      let matches = [];
      keys.forEach((key2, keyIndex) => {
        matches.push(
          ...this._findMatches({
            key: key2,
            value: item[keyIndex],
            searcher
          })
        );
      });
      if (matches.length) {
        results.push({
          idx,
          item,
          matches
        });
      }
    });
    return results;
  }
  _findMatches({ key: key2, value, searcher }) {
    if (!isDefined(value)) {
      return [];
    }
    let matches = [];
    if (isArray2(value)) {
      value.forEach(({ v: text2, i: idx, n: norm2 }) => {
        if (!isDefined(text2)) {
          return;
        }
        const { isMatch: isMatch2, score, indices } = searcher.searchIn(text2);
        if (isMatch2) {
          matches.push({
            score,
            key: key2,
            value: text2,
            idx,
            norm: norm2,
            indices
          });
        }
      });
    } else {
      const { v: text2, n: norm2 } = value;
      const { isMatch: isMatch2, score, indices } = searcher.searchIn(text2);
      if (isMatch2) {
        matches.push({ score, key: key2, value: text2, norm: norm2, indices });
      }
    }
    return matches;
  }
};
Fuse.version = "7.0.0";
Fuse.createIndex = createIndex;
Fuse.parseIndex = parseIndex;
Fuse.config = Config;
{
  Fuse.parseQuery = parse4;
}
{
  register(ExtendedSearch);
}

// src/core/react/components/UI/Menus/menu/SelectMenuComponent.tsx
var import_lodash3 = __toESM(require_lodash());

// src/core/react/components/UI/Menus/menu/SelectMenuInput.tsx
var SIZER_STYLES = {
  position: "absolute",
  width: 0,
  height: 0,
  visibility: "hidden",
  overflow: "scroll",
  whiteSpace: "pre"
};
var STYLE_PROPS = [
  "fontSize",
  "fontFamily",
  "fontWeight",
  "fontStyle",
  "letterSpacing",
  "textTransform"
];
var SelectMenuInput = k3(
  (props2, input) => {
    const { classNames: classNames9, inputAttributes, inputEventHandlers, index } = props2;
    const sizer = _2(null);
    const [inputWidth, setInputWidth] = h2(null);
    const [query, setQuery] = h2("");
    const [placeholderText, setPlaceholderText] = h2("");
    p2(() => {
      copyInputStyles();
      updateInputWidth();
      setTimeout(() => {
        input.current.focus();
      }, 50);
    }, []);
    p2(() => {
      if (query !== props2.query || placeholderText !== props2.placeholderText) {
        setQuery(props2.query);
        setPlaceholderText(props2.placeholderText);
        updateInputWidth();
      }
    }, [props2.query, props2.placeholderText]);
    const copyInputStyles = () => {
      const inputStyle = window.getComputedStyle(input.current);
      STYLE_PROPS.forEach((prop) => {
        sizer.current.style[prop] = inputStyle[prop];
      });
    };
    const updateInputWidth = () => {
      let _inputWidth;
      _inputWidth = Math.ceil(sizer.current.scrollWidth) + 2;
      if (_inputWidth !== inputWidth) {
        setInputWidth(_inputWidth);
      }
    };
    return /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.searchWrapper
    }, /* @__PURE__ */ Cn.createElement("input", {
      ...inputAttributes,
      ...inputEventHandlers,
      ref: input,
      value: query,
      placeholder: placeholderText,
      className: classNames9.searchInput,
      role: "combobox",
      style: { width: "100%" }
    }), /* @__PURE__ */ Cn.createElement("div", {
      ref: sizer,
      style: SIZER_STYLES
    }, query || placeholderText));
  }
);
var SelectMenuInput_default = SelectMenuInput;

// src/core/react/components/UI/Menus/menu/SelectMenuPill.tsx
var SelectMenuPillComponent = (props2) => {
  return /* @__PURE__ */ Cn.createElement("button", {
    type: "button",
    className: props2.classNames.selectedTag,
    onClick: props2.onDelete
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: props2.classNames.selectedTagName
  }, props2.tag.name));
};
var SelectMenuPill_default = SelectMenuPillComponent;

// src/core/react/components/UI/Stickers/Sticker.tsx
var Sticker = (props2) => {
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-sticker",
    dangerouslySetInnerHTML: {
      __html: props2.ui.getSticker(props2.sticker)
    }
  });
};

// src/core/react/components/UI/Menus/menu/concerns/matchers.js
function escapeForRegExp(string) {
  return string.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&");
}
function matchAny(string) {
  return new RegExp(escapeForRegExp(string), "gi");
}
function matchExact(string) {
  return new RegExp(`^${escapeForRegExp(string)}$`, "i");
}

// src/core/react/components/UI/Menus/menu/SelectMenuSuggestions.tsx
function markIt(name, query) {
  const regexp = matchAny(query);
  return name.replace(regexp, "<mark>$&</mark>");
}
var SelectMenuSuggestionsComponent = (props2) => {
  const ref2 = _2(null);
  p2(() => {
    var _a2;
    if (props2.active) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.scrollIntoViewIfNeeded();
    }
  }, [props2.active]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.item.icon && /* @__PURE__ */ Cn.createElement(Sticker, {
    ui: props2.ui,
    sticker: props2.item.icon
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-options-menu-inner"
  }, props2.item.onToggle && /* @__PURE__ */ Cn.createElement("div", null, "Toggle"), /* @__PURE__ */ Cn.createElement("span", {
    ref: ref2,
    dangerouslySetInnerHTML: {
      __html: markIt(props2.item.name, props2.query)
    }
  }), props2.item.description && /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-description",
    ref: ref2,
    dangerouslySetInnerHTML: {
      __html: markIt(props2.item.description, props2.query)
    }
  })), props2.item.type == 3 /* Radio */ && props2.item.value && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.ui.getSticker("ui//mk-ui-check")
    }
  }), props2.onMoreOption && props2.item.removeable && /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      e4.stopPropagation();
      e4.preventDefault();
      props2.onMoreOption(e4, props2.item.value);
    },
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.ui.getSticker("ui//mk-ui-options")
    }
  }), props2.item.removeable && /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      e4.stopPropagation();
      e4.preventDefault();
      props2.onDeleteOption(props2.item.value);
    },
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.ui.getSticker("ui//mk-ui-close")
    }
  }));
};
var SelectMenuInput2 = (props2) => {
  const [value, setValue] = h2(props2.value);
  return /* @__PURE__ */ Cn.createElement("input", {
    type: "text",
    value,
    onKeyDown: (e4) => {
      if (e4.key == "Enter") {
        props2.setValue(value);
      }
    },
    onChange: (e4) => setValue(e4.target.value),
    onBlur: (e4) => props2.setValue(value)
  });
};
var SelectMenuSuggestions = (props2) => {
  const timer = _2(null);
  const mouseOver = (e4, index) => {
    if (!props2.hoverSelect) {
      return;
    }
    timer.current && clearTimeout(timer.current);
    timer.current = setTimeout(() => props2.setIndex(index), 300);
  };
  const options = props2.options.map((item, index) => {
    const key2 = `${props2.id}-${index}`;
    const classNames9 = [];
    if (props2.index === index) {
      classNames9.push(props2.classNames.suggestionActive);
    }
    if (item.disabled) {
      classNames9.push(props2.classNames.suggestionDisabled);
    }
    return item.type == -1 /* Separator */ ? /* @__PURE__ */ Cn.createElement("div", {
      className: "menu-separator"
    }) : item.type == 2 /* Input */ ? /* @__PURE__ */ Cn.createElement("li", {
      className: "mk-menu-input"
    }, /* @__PURE__ */ Cn.createElement(SelectMenuInput2, {
      value: item.value,
      setValue: item.onValueChange
    })) : item.type == 4 /* Custom */ ? /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(item.fragment, null)) : /* @__PURE__ */ Cn.createElement("li", {
      id: key2,
      key: key2,
      role: "option",
      className: classNames9.join(" "),
      "aria-disabled": Boolean(item.disabled),
      onMouseDown: (e4) => e4.preventDefault(),
      onClick: (e4) => {
        if (item.onClick) {
          item.onClick(e4);
          props2.hide();
        } else {
          props2.addTag(item, {
            ctrlKey: e4.ctrlKey,
            metaKey: e4.metaKey,
            altKey: e4.altKey,
            shiftKey: e4.shiftKey
          });
        }
      },
      onMouseOver: (e4) => mouseOver(e4, index),
      onMouseOut: (e4) => props2.hoverSelect && clearTimeout(timer.current)
    }, /* @__PURE__ */ Cn.createElement(SelectMenuSuggestionsComponent, {
      ui: props2.ui,
      item,
      query: props2.query,
      active: index == props2.index,
      onMoreOption: props2.moreOption,
      onDeleteOption: props2.deleteOption
    }));
  });
  return /* @__PURE__ */ Cn.createElement("div", {
    className: props2.classNames.suggestions
  }, /* @__PURE__ */ Cn.createElement("ul", {
    role: "listbox",
    id: props2.id
  }, options, props2.query && props2.allowNew && /* @__PURE__ */ Cn.createElement("li", {
    onMouseDown: (e4) => e4.preventDefault(),
    onClick: (e4) => props2.addTag(
      { name: props2.query, value: props2.query },
      {
        ctrlKey: e4.ctrlKey,
        metaKey: e4.metaKey,
        altKey: e4.altKey,
        shiftKey: e4.shiftKey
      }
    )
  }, "Add ", props2.query)));
};
var SelectMenuSuggestions_default = SelectMenuSuggestions;

// src/core/react/components/UI/Menus/menu/concerns/focusNextElement.js
function focusNextElement(scope, currentTarget) {
  const interactiveEls = scope.querySelectorAll("a,button,input");
  const currentEl = Array.prototype.findIndex.call(
    interactiveEls,
    (element) => element === currentTarget
  );
  const nextEl = interactiveEls[currentEl - 1] || interactiveEls[currentEl + 1];
  if (nextEl) {
    nextEl.focus();
  }
}

// src/core/react/components/UI/Menus/menu/SelectMenuComponent.tsx
var KEYS = {
  ENTER: "Enter",
  TAB: "Tab",
  BACKSPACE: "Backspace",
  UP_ARROW: "ArrowUp",
  UP_ARROW_COMPAT: "Up",
  DOWN_ARROW: "ArrowDown",
  DOWN_ARROW_COMPAT: "Down"
};
var CLASS_NAMES = {
  root: "mk-options-menu",
  rootFocused: "is-focused",
  selected: "mk-options-menu__selected",
  selectedTag: "mk-options-menu__selected-tag",
  selectedTagName: "mk-options-menu__selected-tag-name",
  search: "mk-options-menu__search",
  searchWrapper: "mk-options-menu__search-wrapper",
  searchInput: "mk-options-menu__search-input",
  suggestions: "mk-options-menu__suggestions",
  suggestionActive: "is-active",
  suggestionDisabled: "is-disabled"
};
var defaultProps = {
  ui: null,
  id: "SelectMenu",
  tags: [],
  hide: () => {
  },
  suggestionsOnly: false,
  placeholderText: i18n_default.labels.optionItemSelectPlaceholder,
  noSuggestionsText: null,
  newTagText: null,
  suggestions: [],
  suggestionsFilter: defaultSuggestionsFilter,
  suggestionsTransform: null,
  classNames: CLASS_NAMES,
  delimiters: [KEYS.ENTER],
  minQueryLength: 2,
  maxSuggestionsLength: 8,
  inputAttributes: {},
  hoverSelect: false
};
var findMatchIndex = (options, query) => {
  return options.findIndex((option) => matchExact(query).test(option.name));
};
var pressDelimiter = (props2, query, index, options, addTag2, modifiers) => {
  if (query.length >= props2.minQueryLength) {
    const match2 = findMatchIndex(options, query);
    const _index = index === -1 ? match2 : index;
    const tag = _index > -1 ? options[_index] : null;
    if (tag) {
      addTag2(tag, modifiers);
    } else {
      addTag2({ name: query, value: query }, modifiers);
    }
  }
};
function defaultSuggestionsFilter(item, query) {
  const regexp = matchAny(query);
  return regexp.test(item.name);
}
function getOptions2(props2, query, section) {
  let options;
  let suggestions = props2.suggestions;
  if (section.length > 0) {
    suggestions = props2.suggestions.filter((f4) => f4.section == section);
  }
  const fuseOptions = {
    keys: ["name", "value"]
  };
  const fuse = new Fuse(suggestions, fuseOptions);
  options = query.length == 0 ? suggestions : fuse.search(query).map((result) => result.item);
  options = options.slice(0, props2.maxSuggestionsLength);
  if (props2.newTagText && findMatchIndex(options, query) === -1) {
    options.push({ id: 0, name: query, value: query });
  } else if (props2.noSuggestionsText && options.length === 0) {
    options.push({
      id: 0,
      name: props2.noSuggestionsText,
      value: "",
      disabled: true
    });
  }
  return options;
}
var SelectMenuComponent = Cn.forwardRef(
  (_props, ref2) => {
    const props2 = { ...defaultProps, ..._props };
    const [options, setOptions] = h2([]);
    const sections = F2(() => {
      var _a2;
      if (!props2.showSections)
        return [];
      return [
        "",
        ...(_a2 = props2.sections) != null ? _a2 : uniq(props2.suggestions.map((f4) => f4.section)).filter((f4) => f4)
      ];
    }, [props2.showSections, props2.sections, props2.suggestions]);
    const inputRef = _2(null);
    const [section, setSection] = h2("");
    const [query, setQuery] = h2("");
    const [focused, setFocused] = h2(false);
    const [index, setIndex] = h2(0);
    const onComposition = _2(false);
    p2(() => {
      if (ref2) {
        ref2.current = () => {
          var _a2;
          if (!focused) {
            (_a2 = inputRef == null ? void 0 : inputRef.current) == null ? void 0 : _a2.focus();
            setFocused(true);
            return false;
          }
          return true;
        };
      }
    }, [focused]);
    p2(() => {
      var _a2;
      if (index != -1 && props2.onHover && props2.hoverSelect) {
        debounceFn((_a2 = options[index]) == null ? void 0 : _a2.value);
      }
    }, [index, options]);
    const debounceFn = T2(
      (0, import_lodash3.debounce)(handleDebounceFn, 300, {
        leading: false
      }),
      []
    );
    function handleDebounceFn(inputValue) {
      props2.onHover(inputValue);
    }
    p2(() => {
      if (query.length == 0 && props2.defaultSuggestions) {
        setOptions(props2.defaultSuggestions);
        return;
      }
      setOptions(getOptions2(props2, query, section));
    }, [query, props2.suggestions, section, props2]);
    const container = _2(null);
    const onInput = (e4) => {
      if (e4.type === "compositionstart") {
        onComposition.current = true;
        return;
      }
      if (e4.type === "compositionend") {
        onComposition.current = false;
      }
      if (onComposition.current) {
        return;
      }
      const _query = e4.target.value;
      if (props2.onInput) {
        props2.onInput(_query);
      }
      if (_query.length === query.length + 1 && props2.delimiters.indexOf(query.slice(-1)) > -1) {
        pressDelimiter(props2, query, index, options, addTag2, {});
      } else if (_query !== query) {
        setQuery(_query);
      }
    };
    const onKeyDown = (e4) => {
      if (props2.delimiters.indexOf(e4.key) > -1) {
        if (query || index > -1) {
          e4.preventDefault();
        }
        pressDelimiter(props2, query, index, options, addTag2, {
          ctrlKey: e4.ctrlKey,
          metaKey: e4.metaKey,
          altKey: e4.altKey,
          shiftKey: e4.shiftKey
        });
      }
      if (e4.key === KEYS.TAB) {
        pressTabKey(e4);
      }
      if (e4.key === KEYS.BACKSPACE) {
        pressBackspaceKey();
      }
      if (e4.key === KEYS.UP_ARROW || e4.key === KEYS.UP_ARROW_COMPAT) {
        pressUpKey(e4);
      }
      if (e4.key === KEYS.DOWN_ARROW || e4.key === KEYS.DOWN_ARROW_COMPAT) {
        pressDownKey(e4);
      }
    };
    const onBlur = () => {
      setFocused(false);
      if (props2.onBlur) {
        props2.onBlur();
      }
    };
    const onFocus = () => {
      setFocused(true);
      if (props2.onFocus) {
        props2.onFocus();
      }
    };
    const onDeleteTag = (index2, event) => {
      if (container.current) {
        focusNextElement(container.current, event.currentTarget);
      }
      deleteTag(index2);
    };
    const addTag2 = (tag, modifiers) => {
      if (tag.disabled) {
        return;
      }
      if (props2.onValidate && !props2.onValidate(tag)) {
        return;
      }
      props2.onAddition(tag, modifiers);
      clearInput();
    };
    const deleteTag = (i4) => {
      props2.onDelete(i4);
    };
    const clearInput = () => {
      setQuery("");
      setIndex(-1);
    };
    const clearSelectedIndex = () => {
      setIndex(-1);
    };
    const pressUpKey = (e4) => {
      e4.preventDefault();
      const size = options.length - 1;
      setIndex(index <= 0 ? size : index - 1);
    };
    const pressDownKey = (e4) => {
      e4.preventDefault();
      const size = options.length - 1;
      setIndex((i4) => i4 >= size ? 0 : i4 + 1);
    };
    function pressBackspaceKey() {
      if (!query.length) {
        deleteTag(props2.tags.length - 1);
      }
    }
    function pressTabKey(e4) {
      if (props2.showSections) {
        e4.preventDefault();
        e4.stopPropagation();
        setSection((p3) => {
          const sectionIndex = sections.findIndex((g4) => g4 == p3);
          if (e4.shiftKey) {
            if (sectionIndex == 0) {
              return p3;
            }
            return sections[sectionIndex - 1];
          }
          if (sectionIndex == sections.length - 1) {
            return p3;
          }
          return sections[sectionIndex + 1];
        });
      }
    }
    const focusInput = () => {
      inputRef.current.focus();
    };
    const inputEventHandlers = {
      onChange: onInput,
      onBlur,
      onFocus,
      onInput: () => {
      },
      onKeyDown,
      onCompositionEnd: onInput,
      onCompositionStart: onInput
    };
    const expanded = focused && query.length >= props2.minQueryLength;
    const classNames9 = Object.assign({}, CLASS_NAMES, props2.classNames);
    const rootClassNames = [classNames9.root];
    focused && rootClassNames.push(classNames9.rootFocused);
    return /* @__PURE__ */ Cn.createElement("div", {
      ref: container,
      className: rootClassNames.join(" "),
      style: {
        "--mk-menu-max-height": props2.suggestionsOnly ? "none" : "200px"
      }
    }, !props2.suggestionsOnly ? /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.selected,
      "aria-relevant": "additions removals",
      "aria-live": "polite"
    }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.tags.map((tag, i4) => /* @__PURE__ */ Cn.createElement(SelectMenuPill_default, {
      key: i4,
      tag,
      classNames: classNames9,
      onDelete: (e4) => onDeleteTag(i4, e4)
    }))), /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.search
    }, /* @__PURE__ */ Cn.createElement(SelectMenuInput_default, {
      ref: inputRef,
      query,
      index,
      id: props2.id,
      classNames: classNames9,
      inputAttributes: props2.inputAttributes,
      inputEventHandlers,
      expanded,
      placeholderText: props2.placeholderText
    }))) : null, props2.showSections ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-options-menu-sections"
    }, sections.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      onClick: () => setSection(f4),
      className: `${section == f4 ? "is-active" : ""} mk-options-menu-section`
    }, f4 == "" ? i18n_default.labels.all : f4))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), options.length || props2.allowNew ? /* @__PURE__ */ Cn.createElement(SelectMenuSuggestions_default, {
      ui: props2.ui,
      hide: () => {
        props2.hide();
      },
      options,
      hoverSelect: props2.hoverSelect,
      query,
      setIndex,
      index,
      id: props2.id,
      classNames: classNames9,
      expanded,
      addTag: addTag2,
      allowNew: props2.allowNew,
      moreOption: props2.onMoreOption,
      deleteOption: props2.onDeleteOption
    }) : null, props2.previewComponent);
  }
);
SelectMenuComponent.displayName = "SelectMenuComponent";
var SelectMenuComponent_default = SelectMenuComponent;

// src/core/react/components/UI/Menus/menu.tsx
var showDisclosureMenu = (ui, e4, multi, editable, value, options, saveOptions) => {
  var _a2;
  const offset2 = e4.target.getBoundingClientRect();
  ui.openMenu(
    { x: offset2.right + 10, y: offset2.top },
    {
      ui,
      multi,
      editable,
      value: (_a2 = parseMultiString(value)) != null ? _a2 : [],
      options,
      saveOptions,
      searchable: true,
      showAll: true
    }
  );
};
var menuInput = (value, setValue) => ({
  name: "",
  type: 2 /* Input */,
  value,
  onValueChange: setValue
});
var menuSeparator = {
  name: "",
  type: -1 /* Separator */,
  disabled: true
};
var defaultMenu = (ui, options) => ({
  ui,
  multi: false,
  value: [],
  editable: false,
  options,
  searchable: false,
  showAll: true
});
var SelectMenu = Cn.forwardRef(
  (props2, ref2) => {
    var _a2;
    const initialOptions = props2.options.map((o3, i4) => {
      return {
        ...o3,
        id: i4 + 1
      };
    });
    p2(() => {
      setSuggestions(
        props2.options.map((o3, i4) => {
          return {
            ...o3,
            id: i4 + 1
          };
        })
      );
    }, [props2.options]);
    const [suggestions, setSuggestions] = h2(initialOptions);
    const [tags, setTags] = h2(
      props2.value.map(
        (v3) => {
          var _a3;
          return (_a3 = initialOptions.find((f4) => f4.value == v3)) != null ? _a3 : {
            id: 0,
            name: v3,
            value: v3
          };
        }
      )
    );
    const onDelete = T2(
      (tagIndex) => {
        const newTags = tags.filter((_11, i4) => i4 !== tagIndex);
        setTags(newTags);
        props2.saveOptions(
          suggestions.map((f4) => f4.value),
          newTags.map((f4) => f4.value),
          false
        );
      },
      [suggestions, tags, props2]
    );
    const onDeleteOption = T2(
      (removeTag) => {
        const newSuggestions = suggestions.filter((f4) => f4.value != removeTag);
        const newTags = tags.filter((f4) => f4.value != removeTag);
        setSuggestions(newSuggestions);
        setTags(newTags);
        if (props2.removeOption)
          props2.removeOption(removeTag);
        props2.hide();
      },
      [tags, suggestions, props2]
    );
    const onAddition = T2(
      (newTag, modifiers) => {
        var _a3;
        let tag = newTag;
        let newSuggestions = suggestions;
        let newTags = tags;
        if (!suggestions.find((s5) => s5.value == newTag.value)) {
          tag = {
            id: suggestions.length + 1,
            name: newTag.name,
            value: (_a3 = newTag.value) != null ? _a3 : newTag.name
          };
          newSuggestions = [...suggestions, tag];
          setSuggestions(newSuggestions);
        }
        if (props2.multi) {
          if (!tags.find((t4) => t4.value == tag.value)) {
            newTags = [...tags, tag];
            setTags(newTags);
          }
        } else {
          newTags = [tag];
          setTags(newTags);
        }
        props2.saveOptions(
          newSuggestions.map((f4) => f4.value),
          newTags.map((f4) => f4.value),
          true
        );
        if (!props2.multi) {
          props2.hide();
        }
      },
      [tags, suggestions]
    );
    const onValidation = T2(
      (newTag) => {
        if (!props2.editable && !suggestions.find((s5) => s5.value == newTag.value)) {
          return false;
        }
        if (newTag.name.length == 0) {
          return false;
        }
        return true;
      },
      [suggestions]
    );
    return /* @__PURE__ */ Cn.createElement(SelectMenuComponent_default, {
      tags: props2.multi ? tags : [],
      suggestions,
      ui: props2.ui,
      ref: ref2,
      hide: props2.hide,
      onDelete,
      onMoreOption: props2.onMoreOption,
      onDeleteOption,
      onAddition,
      onValidate: onValidation,
      defaultSuggestions: props2.defaultOptions,
      placeholderText: (_a2 = props2.placeholder) != null ? _a2 : "",
      minQueryLength: 0,
      onHover: props2.onHover,
      hoverSelect: props2.onHover ? true : false,
      showSections: props2.showSections,
      sections: props2.sections,
      maxSuggestionsLength: props2.showAll ? Math.min(50, props2.options.length) : 25,
      suggestionsOnly: !props2.searchable && !props2.editable,
      allowNew: props2.editable,
      previewComponent: props2.previewComponent
    });
  }
);
SelectMenu.displayName = "SelectMenu";
var menu_default = SelectMenu;

// src/core/react/components/PathView/PathView.tsx
var PathView = k3((props2, ref2) => {
  var _a2;
  const flowRef = _2(null);
  const [existsPas, setExistsPas] = h2(false);
  const [loaded, setLoaded] = h2(false);
  const loadPath = async (force) => {
    const div = flowRef.current;
    const path = props2.superstate.spaceManager.uriByString(
      props2.path,
      props2.source
    );
    const properties2 = props2.properties;
    const pathExists = await props2.superstate.spaceManager.pathExists(
      path.path
    );
    if (!pathExists) {
      if (!force) {
        setExistsPas(true);
        setLoaded(false);
        return;
      } else {
        const parent = props2.superstate.spaceManager.parentPathForPath(
          path.path
        );
        if (!parent)
          return;
        const newPath = await props2.superstate.spaceManager.createItemAtPath(
          parent,
          "md",
          pathToString(props2.path)
        );
        setExistsPas(false);
        await props2.superstate.ui.openPath(newPath, false, div, properties2);
      }
    } else {
      setExistsPas(false);
      props2.superstate.ui.openPath(props2.path, false, div, properties2);
    }
    setLoaded(true);
  };
  const toggleFlow = () => {
    if (props2.load) {
      loadPath();
    } else {
      if (flowRef == null ? void 0 : flowRef.current)
        flowRef.current.empty();
    }
  };
  p2(() => {
    toggleFlow();
  }, [props2.load, props2.path]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: `${(_a2 = props2.classname) != null ? _a2 : ""} mk-flowspace-editor`,
    ref: flowRef
  }), existsPas ? /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => loadPath(true),
    className: "mk-placeholder",
    style: { color: "var(--text-faint)" }
  }, "Create a Note") : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
});
PathView.displayName = "FlowView";

// node_modules/@tanstack/table-core/build/lib/index.mjs
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function makeStateUpdater(key2, instance) {
  return (updater) => {
    instance.setState((old) => {
      return {
        ...old,
        [key2]: functionalUpdate(updater, old[key2])
      };
    });
  };
}
function isFunction(d5) {
  return d5 instanceof Function;
}
function flattenBy(arr, getChildren) {
  const flat = [];
  const recurse = (subArr) => {
    subArr.forEach((item) => {
      flat.push(item);
      const children = getChildren(item);
      if (children != null && children.length) {
        recurse(children);
      }
    });
  };
  recurse(arr);
  return flat;
}
function memo(getDeps, fn2, opts) {
  let deps = [];
  let result;
  return () => {
    let depTime;
    if (opts.key && opts.debug)
      depTime = Date.now();
    const newDeps = getDeps();
    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);
    if (!depsChanged) {
      return result;
    }
    deps = newDeps;
    let resultTime;
    if (opts.key && opts.debug)
      resultTime = Date.now();
    result = fn2(...newDeps);
    opts == null ? void 0 : opts.onChange == null ? void 0 : opts.onChange(result);
    if (opts.key && opts.debug) {
      if (opts != null && opts.debug()) {
        const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
        const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;
        const resultFpsPercentage = resultEndTime / 16;
        const pad = (str, num) => {
          str = String(str);
          while (str.length < num) {
            str = " " + str;
          }
          return str;
        };
        console.info(`%c\u23F1 ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120))}deg 100% 31%);`, opts == null ? void 0 : opts.key);
      }
    }
    return result;
  };
}
function createColumn(table, columnDef, depth, parent) {
  var _ref, _resolvedColumnDef$id;
  const defaultColumn = table._getDefaultColumnDef();
  const resolvedColumnDef = {
    ...defaultColumn,
    ...columnDef
  };
  const accessorKey = resolvedColumnDef.accessorKey;
  let id2 = (_ref = (_resolvedColumnDef$id = resolvedColumnDef.id) != null ? _resolvedColumnDef$id : accessorKey ? accessorKey.replace(".", "_") : void 0) != null ? _ref : typeof resolvedColumnDef.header === "string" ? resolvedColumnDef.header : void 0;
  let accessorFn;
  if (resolvedColumnDef.accessorFn) {
    accessorFn = resolvedColumnDef.accessorFn;
  } else if (accessorKey) {
    if (accessorKey.includes(".")) {
      accessorFn = (originalRow) => {
        let result = originalRow;
        for (const key2 of accessorKey.split(".")) {
          var _result;
          result = (_result = result) == null ? void 0 : _result[key2];
          if (result === void 0) {
            console.warn(`"${key2}" in deeply nested key "${accessorKey}" returned undefined.`);
          }
        }
        return result;
      };
    } else {
      accessorFn = (originalRow) => originalRow[resolvedColumnDef.accessorKey];
    }
  }
  if (!id2) {
    if (true) {
      throw new Error(resolvedColumnDef.accessorFn ? `Columns require an id when using an accessorFn` : `Columns require an id when using a non-string header`);
    }
    throw new Error();
  }
  let column = {
    id: `${String(id2)}`,
    accessorFn,
    parent,
    depth,
    columnDef: resolvedColumnDef,
    columns: [],
    getFlatColumns: memo(() => [true], () => {
      var _column$columns;
      return [column, ...(_column$columns = column.columns) == null ? void 0 : _column$columns.flatMap((d5) => d5.getFlatColumns())];
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugColumns;
      }
    }),
    getLeafColumns: memo(() => [table._getOrderColumnsFn()], (orderColumns2) => {
      var _column$columns2;
      if ((_column$columns2 = column.columns) != null && _column$columns2.length) {
        let leafColumns = column.columns.flatMap((column2) => column2.getLeafColumns());
        return orderColumns2(leafColumns);
      }
      return [column];
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugColumns;
      }
    })
  };
  column = table._features.reduce((obj, feature) => {
    return Object.assign(obj, feature.createColumn == null ? void 0 : feature.createColumn(column, table));
  }, column);
  return column;
}
function createHeader(table, column, options) {
  var _options$id;
  const id2 = (_options$id = options.id) != null ? _options$id : column.id;
  let header = {
    id: id2,
    column,
    index: options.index,
    isPlaceholder: !!options.isPlaceholder,
    placeholderId: options.placeholderId,
    depth: options.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const leafHeaders = [];
      const recurseHeader = (h5) => {
        if (h5.subHeaders && h5.subHeaders.length) {
          h5.subHeaders.map(recurseHeader);
        }
        leafHeaders.push(h5);
      };
      recurseHeader(header);
      return leafHeaders;
    },
    getContext: () => ({
      table,
      header,
      column
    })
  };
  table._features.forEach((feature) => {
    Object.assign(header, feature.createHeader == null ? void 0 : feature.createHeader(header, table));
  });
  return header;
}
var Headers = {
  createTable: (table) => {
    return {
      getHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
        var _left$map$filter, _right$map$filter;
        const leftColumns = (_left$map$filter = left == null ? void 0 : left.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _left$map$filter : [];
        const rightColumns = (_right$map$filter = right == null ? void 0 : right.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _right$map$filter : [];
        const centerColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
        const headerGroups = buildHeaderGroups(allColumns, [...leftColumns, ...centerColumns, ...rightColumns], table);
        return headerGroups;
      }, {
        key: "getHeaderGroups",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugHeaders;
        }
      }),
      getCenterHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
        leafColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
        return buildHeaderGroups(allColumns, leafColumns, table, "center");
      }, {
        key: "getCenterHeaderGroups",
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugHeaders;
        }
      }),
      getLeftHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left], (allColumns, leafColumns, left) => {
        var _left$map$filter2;
        const orderedLeafColumns = (_left$map$filter2 = left == null ? void 0 : left.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _left$map$filter2 : [];
        return buildHeaderGroups(allColumns, orderedLeafColumns, table, "left");
      }, {
        key: "getLeftHeaderGroups",
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugHeaders;
        }
      }),
      getRightHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.right], (allColumns, leafColumns, right) => {
        var _right$map$filter2;
        const orderedLeafColumns = (_right$map$filter2 = right == null ? void 0 : right.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _right$map$filter2 : [];
        return buildHeaderGroups(allColumns, orderedLeafColumns, table, "right");
      }, {
        key: "getRightHeaderGroups",
        debug: () => {
          var _table$options$debugA4;
          return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugHeaders;
        }
      }),
      getFooterGroups: memo(() => [table.getHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getFooterGroups",
        debug: () => {
          var _table$options$debugA5;
          return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugHeaders;
        }
      }),
      getLeftFooterGroups: memo(() => [table.getLeftHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getLeftFooterGroups",
        debug: () => {
          var _table$options$debugA6;
          return (_table$options$debugA6 = table.options.debugAll) != null ? _table$options$debugA6 : table.options.debugHeaders;
        }
      }),
      getCenterFooterGroups: memo(() => [table.getCenterHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getCenterFooterGroups",
        debug: () => {
          var _table$options$debugA7;
          return (_table$options$debugA7 = table.options.debugAll) != null ? _table$options$debugA7 : table.options.debugHeaders;
        }
      }),
      getRightFooterGroups: memo(() => [table.getRightHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getRightFooterGroups",
        debug: () => {
          var _table$options$debugA8;
          return (_table$options$debugA8 = table.options.debugAll) != null ? _table$options$debugA8 : table.options.debugHeaders;
        }
      }),
      getFlatHeaders: memo(() => [table.getHeaderGroups()], (headerGroups) => {
        return headerGroups.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getFlatHeaders",
        debug: () => {
          var _table$options$debugA9;
          return (_table$options$debugA9 = table.options.debugAll) != null ? _table$options$debugA9 : table.options.debugHeaders;
        }
      }),
      getLeftFlatHeaders: memo(() => [table.getLeftHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getLeftFlatHeaders",
        debug: () => {
          var _table$options$debugA10;
          return (_table$options$debugA10 = table.options.debugAll) != null ? _table$options$debugA10 : table.options.debugHeaders;
        }
      }),
      getCenterFlatHeaders: memo(() => [table.getCenterHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getCenterFlatHeaders",
        debug: () => {
          var _table$options$debugA11;
          return (_table$options$debugA11 = table.options.debugAll) != null ? _table$options$debugA11 : table.options.debugHeaders;
        }
      }),
      getRightFlatHeaders: memo(() => [table.getRightHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getRightFlatHeaders",
        debug: () => {
          var _table$options$debugA12;
          return (_table$options$debugA12 = table.options.debugAll) != null ? _table$options$debugA12 : table.options.debugHeaders;
        }
      }),
      getCenterLeafHeaders: memo(() => [table.getCenterFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders;
          return !((_header$subHeaders = header.subHeaders) != null && _header$subHeaders.length);
        });
      }, {
        key: "getCenterLeafHeaders",
        debug: () => {
          var _table$options$debugA13;
          return (_table$options$debugA13 = table.options.debugAll) != null ? _table$options$debugA13 : table.options.debugHeaders;
        }
      }),
      getLeftLeafHeaders: memo(() => [table.getLeftFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders2;
          return !((_header$subHeaders2 = header.subHeaders) != null && _header$subHeaders2.length);
        });
      }, {
        key: "getLeftLeafHeaders",
        debug: () => {
          var _table$options$debugA14;
          return (_table$options$debugA14 = table.options.debugAll) != null ? _table$options$debugA14 : table.options.debugHeaders;
        }
      }),
      getRightLeafHeaders: memo(() => [table.getRightFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders3;
          return !((_header$subHeaders3 = header.subHeaders) != null && _header$subHeaders3.length);
        });
      }, {
        key: "getRightLeafHeaders",
        debug: () => {
          var _table$options$debugA15;
          return (_table$options$debugA15 = table.options.debugAll) != null ? _table$options$debugA15 : table.options.debugHeaders;
        }
      }),
      getLeafHeaders: memo(() => [table.getLeftHeaderGroups(), table.getCenterHeaderGroups(), table.getRightHeaderGroups()], (left, center, right) => {
        var _left$0$headers, _left$, _center$0$headers, _center$, _right$0$headers, _right$;
        return [...(_left$0$headers = (_left$ = left[0]) == null ? void 0 : _left$.headers) != null ? _left$0$headers : [], ...(_center$0$headers = (_center$ = center[0]) == null ? void 0 : _center$.headers) != null ? _center$0$headers : [], ...(_right$0$headers = (_right$ = right[0]) == null ? void 0 : _right$.headers) != null ? _right$0$headers : []].map((header) => {
          return header.getLeafHeaders();
        }).flat();
      }, {
        key: "getLeafHeaders",
        debug: () => {
          var _table$options$debugA16;
          return (_table$options$debugA16 = table.options.debugAll) != null ? _table$options$debugA16 : table.options.debugHeaders;
        }
      })
    };
  }
};
function buildHeaderGroups(allColumns, columnsToGroup, table, headerFamily) {
  var _headerGroups$0$heade, _headerGroups$;
  let maxDepth = 0;
  const findMaxDepth = function(columns, depth) {
    if (depth === void 0) {
      depth = 1;
    }
    maxDepth = Math.max(maxDepth, depth);
    columns.filter((column) => column.getIsVisible()).forEach((column) => {
      var _column$columns;
      if ((_column$columns = column.columns) != null && _column$columns.length) {
        findMaxDepth(column.columns, depth + 1);
      }
    }, 0);
  };
  findMaxDepth(allColumns);
  let headerGroups = [];
  const createHeaderGroup = (headersToGroup, depth) => {
    const headerGroup = {
      depth,
      id: [headerFamily, `${depth}`].filter(Boolean).join("_"),
      headers: []
    };
    const pendingParentHeaders = [];
    headersToGroup.forEach((headerToGroup) => {
      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0];
      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth;
      let column;
      let isPlaceholder = false;
      if (isLeafHeader && headerToGroup.column.parent) {
        column = headerToGroup.column.parent;
      } else {
        column = headerToGroup.column;
        isPlaceholder = true;
      }
      if (latestPendingParentHeader && (latestPendingParentHeader == null ? void 0 : latestPendingParentHeader.column) === column) {
        latestPendingParentHeader.subHeaders.push(headerToGroup);
      } else {
        const header = createHeader(table, column, {
          id: [headerFamily, depth, column.id, headerToGroup == null ? void 0 : headerToGroup.id].filter(Boolean).join("_"),
          isPlaceholder,
          placeholderId: isPlaceholder ? `${pendingParentHeaders.filter((d5) => d5.column === column).length}` : void 0,
          depth,
          index: pendingParentHeaders.length
        });
        header.subHeaders.push(headerToGroup);
        pendingParentHeaders.push(header);
      }
      headerGroup.headers.push(headerToGroup);
      headerToGroup.headerGroup = headerGroup;
    });
    headerGroups.push(headerGroup);
    if (depth > 0) {
      createHeaderGroup(pendingParentHeaders, depth - 1);
    }
  };
  const bottomHeaders = columnsToGroup.map((column, index) => createHeader(table, column, {
    depth: maxDepth,
    index
  }));
  createHeaderGroup(bottomHeaders, maxDepth - 1);
  headerGroups.reverse();
  const recurseHeadersForSpans = (headers) => {
    const filteredHeaders = headers.filter((header) => header.column.getIsVisible());
    return filteredHeaders.map((header) => {
      let colSpan = 0;
      let rowSpan = 0;
      let childRowSpans = [0];
      if (header.subHeaders && header.subHeaders.length) {
        childRowSpans = [];
        recurseHeadersForSpans(header.subHeaders).forEach((_ref) => {
          let {
            colSpan: childColSpan,
            rowSpan: childRowSpan
          } = _ref;
          colSpan += childColSpan;
          childRowSpans.push(childRowSpan);
        });
      } else {
        colSpan = 1;
      }
      const minChildRowSpan = Math.min(...childRowSpans);
      rowSpan = rowSpan + minChildRowSpan;
      header.colSpan = colSpan;
      header.rowSpan = rowSpan;
      return {
        colSpan,
        rowSpan
      };
    });
  };
  recurseHeadersForSpans((_headerGroups$0$heade = (_headerGroups$ = headerGroups[0]) == null ? void 0 : _headerGroups$.headers) != null ? _headerGroups$0$heade : []);
  return headerGroups;
}
var defaultColumnSizing = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
};
var getDefaultColumnSizingInfoState = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: false,
  columnSizingStart: []
});
var ColumnSizing = {
  getDefaultColumnDef: () => {
    return defaultColumnSizing;
  },
  getInitialState: (state) => {
    return {
      columnSizing: {},
      columnSizingInfo: getDefaultColumnSizingInfoState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      columnResizeMode: "onEnd",
      onColumnSizingChange: makeStateUpdater("columnSizing", table),
      onColumnSizingInfoChange: makeStateUpdater("columnSizingInfo", table)
    };
  },
  createColumn: (column, table) => {
    return {
      getSize: () => {
        var _column$columnDef$min, _ref, _column$columnDef$max;
        const columnSize = table.getState().columnSizing[column.id];
        return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);
      },
      getStart: (position) => {
        const columns = !position ? table.getVisibleLeafColumns() : position === "left" ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();
        const index = columns.findIndex((d5) => d5.id === column.id);
        if (index > 0) {
          const prevSiblingColumn = columns[index - 1];
          return prevSiblingColumn.getStart(position) + prevSiblingColumn.getSize();
        }
        return 0;
      },
      resetSize: () => {
        table.setColumnSizing((_ref2) => {
          let {
            [column.id]: _11,
            ...rest
          } = _ref2;
          return rest;
        });
      },
      getCanResize: () => {
        var _column$columnDef$ena, _table$options$enable;
        return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);
      },
      getIsResizing: () => {
        return table.getState().columnSizingInfo.isResizingColumn === column.id;
      }
    };
  },
  createHeader: (header, table) => {
    return {
      getSize: () => {
        let sum2 = 0;
        const recurse = (header2) => {
          if (header2.subHeaders.length) {
            header2.subHeaders.forEach(recurse);
          } else {
            var _header$column$getSiz;
            sum2 += (_header$column$getSiz = header2.column.getSize()) != null ? _header$column$getSiz : 0;
          }
        };
        recurse(header);
        return sum2;
      },
      getStart: () => {
        if (header.index > 0) {
          const prevSiblingHeader = header.headerGroup.headers[header.index - 1];
          return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();
        }
        return 0;
      },
      getResizeHandler: () => {
        const column = table.getColumn(header.column.id);
        const canResize = column == null ? void 0 : column.getCanResize();
        return (e4) => {
          if (!column || !canResize) {
            return;
          }
          e4.persist == null ? void 0 : e4.persist();
          if (isTouchStartEvent(e4)) {
            if (e4.touches && e4.touches.length > 1) {
              return;
            }
          }
          const startSize = header.getSize();
          const columnSizingStart = header ? header.getLeafHeaders().map((d5) => [d5.column.id, d5.column.getSize()]) : [[column.id, column.getSize()]];
          const clientX = isTouchStartEvent(e4) ? Math.round(e4.touches[0].clientX) : e4.clientX;
          const newColumnSizing = {};
          const updateOffset = (eventType, clientXPos) => {
            if (typeof clientXPos !== "number") {
              return;
            }
            table.setColumnSizingInfo((old) => {
              var _old$startOffset, _old$startSize;
              const deltaOffset = clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0);
              const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);
              old.columnSizingStart.forEach((_ref3) => {
                let [columnId, headerSize] = _ref3;
                newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;
              });
              return {
                ...old,
                deltaOffset,
                deltaPercentage
              };
            });
            if (table.options.columnResizeMode === "onChange" || eventType === "end") {
              table.setColumnSizing((old) => ({
                ...old,
                ...newColumnSizing
              }));
            }
          };
          const onMove = (clientXPos) => updateOffset("move", clientXPos);
          const onEnd = (clientXPos) => {
            updateOffset("end", clientXPos);
            table.setColumnSizingInfo((old) => ({
              ...old,
              isResizingColumn: false,
              startOffset: null,
              startSize: null,
              deltaOffset: null,
              deltaPercentage: null,
              columnSizingStart: []
            }));
          };
          const mouseEvents = {
            moveHandler: (e5) => onMove(e5.clientX),
            upHandler: (e5) => {
              document.removeEventListener("mousemove", mouseEvents.moveHandler);
              document.removeEventListener("mouseup", mouseEvents.upHandler);
              onEnd(e5.clientX);
            }
          };
          const touchEvents = {
            moveHandler: (e5) => {
              if (e5.cancelable) {
                e5.preventDefault();
                e5.stopPropagation();
              }
              onMove(e5.touches[0].clientX);
              return false;
            },
            upHandler: (e5) => {
              var _e$touches$;
              document.removeEventListener("touchmove", touchEvents.moveHandler);
              document.removeEventListener("touchend", touchEvents.upHandler);
              if (e5.cancelable) {
                e5.preventDefault();
                e5.stopPropagation();
              }
              onEnd((_e$touches$ = e5.touches[0]) == null ? void 0 : _e$touches$.clientX);
            }
          };
          const passiveIfSupported = passiveEventSupported() ? {
            passive: false
          } : false;
          if (isTouchStartEvent(e4)) {
            document.addEventListener("touchmove", touchEvents.moveHandler, passiveIfSupported);
            document.addEventListener("touchend", touchEvents.upHandler, passiveIfSupported);
          } else {
            document.addEventListener("mousemove", mouseEvents.moveHandler, passiveIfSupported);
            document.addEventListener("mouseup", mouseEvents.upHandler, passiveIfSupported);
          }
          table.setColumnSizingInfo((old) => ({
            ...old,
            startOffset: clientX,
            startSize,
            deltaOffset: 0,
            deltaPercentage: 0,
            columnSizingStart,
            isResizingColumn: column.id
          }));
        };
      }
    };
  },
  createTable: (table) => {
    return {
      setColumnSizing: (updater) => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater),
      setColumnSizingInfo: (updater) => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater),
      resetColumnSizing: (defaultState) => {
        var _table$initialState$c;
        table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});
      },
      resetHeaderSizeInfo: (defaultState) => {
        var _table$initialState$c2;
        table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());
      },
      getTotalSize: () => {
        var _table$getHeaderGroup, _table$getHeaderGroup2;
        return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getHeaderGroup : 0;
      },
      getLeftTotalSize: () => {
        var _table$getLeftHeaderG, _table$getLeftHeaderG2;
        return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getLeftHeaderG : 0;
      },
      getCenterTotalSize: () => {
        var _table$getCenterHeade, _table$getCenterHeade2;
        return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getCenterHeade : 0;
      },
      getRightTotalSize: () => {
        var _table$getRightHeader, _table$getRightHeader2;
        return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getRightHeader : 0;
      }
    };
  }
};
var passiveSupported = null;
function passiveEventSupported() {
  if (typeof passiveSupported === "boolean")
    return passiveSupported;
  let supported = false;
  try {
    const options = {
      get passive() {
        supported = true;
        return false;
      }
    };
    const noop3 = () => {
    };
    window.addEventListener("test", noop3, options);
    window.removeEventListener("test", noop3);
  } catch (err) {
    supported = false;
  }
  passiveSupported = supported;
  return passiveSupported;
}
function isTouchStartEvent(e4) {
  return e4.type === "touchstart";
}
var Expanding = {
  getInitialState: (state) => {
    return {
      expanded: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onExpandedChange: makeStateUpdater("expanded", table),
      paginateExpandedRows: true
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    return {
      _autoResetExpanded: () => {
        var _ref, _table$options$autoRe;
        if (!registered) {
          table._queue(() => {
            registered = true;
          });
          return;
        }
        if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetExpanded) != null ? _ref : !table.options.manualExpanding) {
          if (queued)
            return;
          queued = true;
          table._queue(() => {
            table.resetExpanded();
            queued = false;
          });
        }
      },
      setExpanded: (updater) => table.options.onExpandedChange == null ? void 0 : table.options.onExpandedChange(updater),
      toggleAllRowsExpanded: (expanded) => {
        if (expanded != null ? expanded : !table.getIsAllRowsExpanded()) {
          table.setExpanded(true);
        } else {
          table.setExpanded({});
        }
      },
      resetExpanded: (defaultState) => {
        var _table$initialState$e, _table$initialState;
        table.setExpanded(defaultState ? {} : (_table$initialState$e = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.expanded) != null ? _table$initialState$e : {});
      },
      getCanSomeRowsExpand: () => {
        return table.getRowModel().flatRows.some((row) => row.getCanExpand());
      },
      getToggleAllRowsExpandedHandler: () => {
        return (e4) => {
          e4.persist == null ? void 0 : e4.persist();
          table.toggleAllRowsExpanded();
        };
      },
      getIsSomeRowsExpanded: () => {
        const expanded = table.getState().expanded;
        return expanded === true || Object.values(expanded).some(Boolean);
      },
      getIsAllRowsExpanded: () => {
        const expanded = table.getState().expanded;
        if (typeof expanded === "boolean") {
          return expanded === true;
        }
        if (!Object.keys(expanded).length) {
          return false;
        }
        if (table.getRowModel().flatRows.some((row) => !row.getIsExpanded())) {
          return false;
        }
        return true;
      },
      getExpandedDepth: () => {
        let maxDepth = 0;
        const rowIds = table.getState().expanded === true ? Object.keys(table.getRowModel().rowsById) : Object.keys(table.getState().expanded);
        rowIds.forEach((id2) => {
          const splitId = id2.split(".");
          maxDepth = Math.max(maxDepth, splitId.length);
        });
        return maxDepth;
      },
      getPreExpandedRowModel: () => table.getSortedRowModel(),
      getExpandedRowModel: () => {
        if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {
          table._getExpandedRowModel = table.options.getExpandedRowModel(table);
        }
        if (table.options.manualExpanding || !table._getExpandedRowModel) {
          return table.getPreExpandedRowModel();
        }
        return table._getExpandedRowModel();
      }
    };
  },
  createRow: (row, table) => {
    return {
      toggleExpanded: (expanded) => {
        table.setExpanded((old) => {
          var _expanded;
          const exists = old === true ? true : !!(old != null && old[row.id]);
          let oldExpanded = {};
          if (old === true) {
            Object.keys(table.getRowModel().rowsById).forEach((rowId) => {
              oldExpanded[rowId] = true;
            });
          } else {
            oldExpanded = old;
          }
          expanded = (_expanded = expanded) != null ? _expanded : !exists;
          if (!exists && expanded) {
            return {
              ...oldExpanded,
              [row.id]: true
            };
          }
          if (exists && !expanded) {
            const {
              [row.id]: _11,
              ...rest
            } = oldExpanded;
            return rest;
          }
          return old;
        });
      },
      getIsExpanded: () => {
        var _table$options$getIsR;
        const expanded = table.getState().expanded;
        return !!((_table$options$getIsR = table.options.getIsRowExpanded == null ? void 0 : table.options.getIsRowExpanded(row)) != null ? _table$options$getIsR : expanded === true || (expanded == null ? void 0 : expanded[row.id]));
      },
      getCanExpand: () => {
        var _table$options$getRow, _table$options$enable, _row$subRows;
        return (_table$options$getRow = table.options.getRowCanExpand == null ? void 0 : table.options.getRowCanExpand(row)) != null ? _table$options$getRow : ((_table$options$enable = table.options.enableExpanding) != null ? _table$options$enable : true) && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
      },
      getToggleExpandedHandler: () => {
        const canExpand = row.getCanExpand();
        return () => {
          if (!canExpand)
            return;
          row.toggleExpanded();
        };
      }
    };
  }
};
var includesString = (row, columnId, filterValue) => {
  var _row$getValue;
  const search2 = filterValue.toLowerCase();
  return Boolean((_row$getValue = row.getValue(columnId)) == null ? void 0 : _row$getValue.toLowerCase().includes(search2));
};
includesString.autoRemove = (val) => testFalsey(val);
var includesStringSensitive = (row, columnId, filterValue) => {
  var _row$getValue2;
  return Boolean((_row$getValue2 = row.getValue(columnId)) == null ? void 0 : _row$getValue2.includes(filterValue));
};
includesStringSensitive.autoRemove = (val) => testFalsey(val);
var equalsString = (row, columnId, filterValue) => {
  var _row$getValue3;
  return ((_row$getValue3 = row.getValue(columnId)) == null ? void 0 : _row$getValue3.toLowerCase()) === filterValue.toLowerCase();
};
equalsString.autoRemove = (val) => testFalsey(val);
var arrIncludes = (row, columnId, filterValue) => {
  var _row$getValue4;
  return (_row$getValue4 = row.getValue(columnId)) == null ? void 0 : _row$getValue4.includes(filterValue);
};
arrIncludes.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var arrIncludesAll = (row, columnId, filterValue) => {
  return !filterValue.some((val) => {
    var _row$getValue5;
    return !((_row$getValue5 = row.getValue(columnId)) != null && _row$getValue5.includes(val));
  });
};
arrIncludesAll.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var arrIncludesSome = (row, columnId, filterValue) => {
  return filterValue.some((val) => {
    var _row$getValue6;
    return (_row$getValue6 = row.getValue(columnId)) == null ? void 0 : _row$getValue6.includes(val);
  });
};
arrIncludesSome.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var equals = (row, columnId, filterValue) => {
  return row.getValue(columnId) === filterValue;
};
equals.autoRemove = (val) => testFalsey(val);
var weakEquals = (row, columnId, filterValue) => {
  return row.getValue(columnId) == filterValue;
};
weakEquals.autoRemove = (val) => testFalsey(val);
var inNumberRange = (row, columnId, filterValue) => {
  let [min3, max3] = filterValue;
  const rowValue = row.getValue(columnId);
  return rowValue >= min3 && rowValue <= max3;
};
inNumberRange.resolveFilterValue = (val) => {
  let [unsafeMin, unsafeMax] = val;
  let parsedMin = typeof unsafeMin !== "number" ? parseFloat(unsafeMin) : unsafeMin;
  let parsedMax = typeof unsafeMax !== "number" ? parseFloat(unsafeMax) : unsafeMax;
  let min3 = unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin;
  let max3 = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax;
  if (min3 > max3) {
    const temp = min3;
    min3 = max3;
    max3 = temp;
  }
  return [min3, max3];
};
inNumberRange.autoRemove = (val) => testFalsey(val) || testFalsey(val[0]) && testFalsey(val[1]);
var filterFns = {
  includesString,
  includesStringSensitive,
  equalsString,
  arrIncludes,
  arrIncludesAll,
  arrIncludesSome,
  equals,
  weakEquals,
  inNumberRange
};
function testFalsey(val) {
  return val === void 0 || val === null || val === "";
}
var Filters = {
  getDefaultColumnDef: () => {
    return {
      filterFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      columnFilters: [],
      globalFilter: void 0,
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnFiltersChange: makeStateUpdater("columnFilters", table),
      onGlobalFilterChange: makeStateUpdater("globalFilter", table),
      filterFromLeafRows: false,
      maxLeafRowFilterDepth: 100,
      globalFilterFn: "auto",
      getColumnCanGlobalFilter: (column) => {
        var _table$getCoreRowMode, _table$getCoreRowMode2;
        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null ? void 0 : (_table$getCoreRowMode2 = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode2.getValue();
        return typeof value === "string" || typeof value === "number";
      }
    };
  },
  createColumn: (column, table) => {
    return {
      getAutoFilterFn: () => {
        const firstRow = table.getCoreRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "string") {
          return filterFns.includesString;
        }
        if (typeof value === "number") {
          return filterFns.inNumberRange;
        }
        if (typeof value === "boolean") {
          return filterFns.equals;
        }
        if (value !== null && typeof value === "object") {
          return filterFns.equals;
        }
        if (Array.isArray(value)) {
          return filterFns.arrIncludes;
        }
        return filterFns.weakEquals;
      },
      getFilterFn: () => {
        var _table$options$filter, _table$options$filter2;
        return isFunction(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === "auto" ? column.getAutoFilterFn() : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns[column.columnDef.filterFn];
      },
      getCanFilter: () => {
        var _column$columnDef$ena, _table$options$enable, _table$options$enable2;
        return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;
      },
      getCanGlobalFilter: () => {
        var _column$columnDef$ena2, _table$options$enable3, _table$options$enable4, _table$options$getCol;
        return ((_column$columnDef$ena2 = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena2 : true) && ((_table$options$enable3 = table.options.enableGlobalFilter) != null ? _table$options$enable3 : true) && ((_table$options$enable4 = table.options.enableFilters) != null ? _table$options$enable4 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;
      },
      getIsFiltered: () => column.getFilterIndex() > -1,
      getFilterValue: () => {
        var _table$getState$colum, _table$getState$colum2;
        return (_table$getState$colum = table.getState().columnFilters) == null ? void 0 : (_table$getState$colum2 = _table$getState$colum.find((d5) => d5.id === column.id)) == null ? void 0 : _table$getState$colum2.value;
      },
      getFilterIndex: () => {
        var _table$getState$colum3, _table$getState$colum4;
        return (_table$getState$colum3 = (_table$getState$colum4 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum4.findIndex((d5) => d5.id === column.id)) != null ? _table$getState$colum3 : -1;
      },
      setFilterValue: (value) => {
        table.setColumnFilters((old) => {
          const filterFn = column.getFilterFn();
          const previousfilter = old == null ? void 0 : old.find((d5) => d5.id === column.id);
          const newFilter = functionalUpdate(value, previousfilter ? previousfilter.value : void 0);
          if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {
            var _old$filter;
            return (_old$filter = old == null ? void 0 : old.filter((d5) => d5.id !== column.id)) != null ? _old$filter : [];
          }
          const newFilterObj = {
            id: column.id,
            value: newFilter
          };
          if (previousfilter) {
            var _old$map;
            return (_old$map = old == null ? void 0 : old.map((d5) => {
              if (d5.id === column.id) {
                return newFilterObj;
              }
              return d5;
            })) != null ? _old$map : [];
          }
          if (old != null && old.length) {
            return [...old, newFilterObj];
          }
          return [newFilterObj];
        });
      },
      _getFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id),
      getFacetedRowModel: () => {
        if (!column._getFacetedRowModel) {
          return table.getPreFilteredRowModel();
        }
        return column._getFacetedRowModel();
      },
      _getFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id),
      getFacetedUniqueValues: () => {
        if (!column._getFacetedUniqueValues) {
          return /* @__PURE__ */ new Map();
        }
        return column._getFacetedUniqueValues();
      },
      _getFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id),
      getFacetedMinMaxValues: () => {
        if (!column._getFacetedMinMaxValues) {
          return void 0;
        }
        return column._getFacetedMinMaxValues();
      }
    };
  },
  createRow: (row, table) => {
    return {
      columnFilters: {},
      columnFiltersMeta: {}
    };
  },
  createTable: (table) => {
    return {
      getGlobalAutoFilterFn: () => {
        return filterFns.includesString;
      },
      getGlobalFilterFn: () => {
        var _table$options$filter3, _table$options$filter4;
        const {
          globalFilterFn
        } = table.options;
        return isFunction(globalFilterFn) ? globalFilterFn : globalFilterFn === "auto" ? table.getGlobalAutoFilterFn() : (_table$options$filter3 = (_table$options$filter4 = table.options.filterFns) == null ? void 0 : _table$options$filter4[globalFilterFn]) != null ? _table$options$filter3 : filterFns[globalFilterFn];
      },
      setColumnFilters: (updater) => {
        const leafColumns = table.getAllLeafColumns();
        const updateFn = (old) => {
          var _functionalUpdate;
          return (_functionalUpdate = functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter((filter) => {
            const column = leafColumns.find((d5) => d5.id === filter.id);
            if (column) {
              const filterFn = column.getFilterFn();
              if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {
                return false;
              }
            }
            return true;
          });
        };
        table.options.onColumnFiltersChange == null ? void 0 : table.options.onColumnFiltersChange(updateFn);
      },
      setGlobalFilter: (updater) => {
        table.options.onGlobalFilterChange == null ? void 0 : table.options.onGlobalFilterChange(updater);
      },
      resetGlobalFilter: (defaultState) => {
        table.setGlobalFilter(defaultState ? void 0 : table.initialState.globalFilter);
      },
      resetColumnFilters: (defaultState) => {
        var _table$initialState$c, _table$initialState;
        table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);
      },
      getPreFilteredRowModel: () => table.getCoreRowModel(),
      getFilteredRowModel: () => {
        if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {
          table._getFilteredRowModel = table.options.getFilteredRowModel(table);
        }
        if (table.options.manualFiltering || !table._getFilteredRowModel) {
          return table.getPreFilteredRowModel();
        }
        return table._getFilteredRowModel();
      },
      _getGlobalFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, "__global__"),
      getGlobalFacetedRowModel: () => {
        if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {
          return table.getPreFilteredRowModel();
        }
        return table._getGlobalFacetedRowModel();
      },
      _getGlobalFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, "__global__"),
      getGlobalFacetedUniqueValues: () => {
        if (!table._getGlobalFacetedUniqueValues) {
          return /* @__PURE__ */ new Map();
        }
        return table._getGlobalFacetedUniqueValues();
      },
      _getGlobalFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, "__global__"),
      getGlobalFacetedMinMaxValues: () => {
        if (!table._getGlobalFacetedMinMaxValues) {
          return;
        }
        return table._getGlobalFacetedMinMaxValues();
      }
    };
  }
};
function shouldAutoRemoveFilter(filterFn, value, column) {
  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === "undefined" || typeof value === "string" && !value;
}
var sum = (columnId, _leafRows, childRows) => {
  return childRows.reduce((sum2, next) => {
    const nextValue = next.getValue(columnId);
    return sum2 + (typeof nextValue === "number" ? nextValue : 0);
  }, 0);
};
var min2 = (columnId, _leafRows, childRows) => {
  let min3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (min3 > value || min3 === void 0 && value >= value)) {
      min3 = value;
    }
  });
  return min3;
};
var max2 = (columnId, _leafRows, childRows) => {
  let max3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (max3 < value || max3 === void 0 && value >= value)) {
      max3 = value;
    }
  });
  return max3;
};
var extent = (columnId, _leafRows, childRows) => {
  let min3;
  let max3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null) {
      if (min3 === void 0) {
        if (value >= value)
          min3 = max3 = value;
      } else {
        if (min3 > value)
          min3 = value;
        if (max3 < value)
          max3 = value;
      }
    }
  });
  return [min3, max3];
};
var mean = (columnId, leafRows) => {
  let count2 = 0;
  let sum2 = 0;
  leafRows.forEach((row) => {
    let value = row.getValue(columnId);
    if (value != null && (value = +value) >= value) {
      ++count2, sum2 += value;
    }
  });
  if (count2)
    return sum2 / count2;
  return;
};
var median = (columnId, leafRows) => {
  if (!leafRows.length) {
    return;
  }
  let min3 = 0;
  let max3 = 0;
  leafRows.forEach((row) => {
    let value = row.getValue(columnId);
    if (typeof value === "number") {
      min3 = Math.min(min3, value);
      max3 = Math.max(max3, value);
    }
  });
  return (min3 + max3) / 2;
};
var unique = (columnId, leafRows) => {
  return Array.from(new Set(leafRows.map((d5) => d5.getValue(columnId))).values());
};
var uniqueCount = (columnId, leafRows) => {
  return new Set(leafRows.map((d5) => d5.getValue(columnId))).size;
};
var count = (_columnId, leafRows) => {
  return leafRows.length;
};
var aggregationFns = {
  sum,
  min: min2,
  max: max2,
  extent,
  mean,
  median,
  unique,
  uniqueCount,
  count
};
var Grouping = {
  getDefaultColumnDef: () => {
    return {
      aggregatedCell: (props2) => {
        var _toString, _props$getValue;
        return (_toString = (_props$getValue = props2.getValue()) == null ? void 0 : _props$getValue.toString == null ? void 0 : _props$getValue.toString()) != null ? _toString : null;
      },
      aggregationFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      grouping: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onGroupingChange: makeStateUpdater("grouping", table),
      groupedColumnMode: "reorder"
    };
  },
  createColumn: (column, table) => {
    return {
      toggleGrouping: () => {
        table.setGrouping((old) => {
          if (old != null && old.includes(column.id)) {
            return old.filter((d5) => d5 !== column.id);
          }
          return [...old != null ? old : [], column.id];
        });
      },
      getCanGroup: () => {
        var _ref, _ref2, _ref3, _column$columnDef$ena;
        return (_ref = (_ref2 = (_ref3 = (_column$columnDef$ena = column.columnDef.enableGrouping) != null ? _column$columnDef$ena : true) != null ? _ref3 : table.options.enableGrouping) != null ? _ref2 : true) != null ? _ref : !!column.accessorFn;
      },
      getIsGrouped: () => {
        var _table$getState$group;
        return (_table$getState$group = table.getState().grouping) == null ? void 0 : _table$getState$group.includes(column.id);
      },
      getGroupedIndex: () => {
        var _table$getState$group2;
        return (_table$getState$group2 = table.getState().grouping) == null ? void 0 : _table$getState$group2.indexOf(column.id);
      },
      getToggleGroupingHandler: () => {
        const canGroup = column.getCanGroup();
        return () => {
          if (!canGroup)
            return;
          column.toggleGrouping();
        };
      },
      getAutoAggregationFn: () => {
        const firstRow = table.getCoreRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "number") {
          return aggregationFns.sum;
        }
        if (Object.prototype.toString.call(value) === "[object Date]") {
          return aggregationFns.extent;
        }
      },
      getAggregationFn: () => {
        var _table$options$aggreg, _table$options$aggreg2;
        if (!column) {
          throw new Error();
        }
        return isFunction(column.columnDef.aggregationFn) ? column.columnDef.aggregationFn : column.columnDef.aggregationFn === "auto" ? column.getAutoAggregationFn() : (_table$options$aggreg = (_table$options$aggreg2 = table.options.aggregationFns) == null ? void 0 : _table$options$aggreg2[column.columnDef.aggregationFn]) != null ? _table$options$aggreg : aggregationFns[column.columnDef.aggregationFn];
      }
    };
  },
  createTable: (table) => {
    return {
      setGrouping: (updater) => table.options.onGroupingChange == null ? void 0 : table.options.onGroupingChange(updater),
      resetGrouping: (defaultState) => {
        var _table$initialState$g, _table$initialState;
        table.setGrouping(defaultState ? [] : (_table$initialState$g = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.grouping) != null ? _table$initialState$g : []);
      },
      getPreGroupedRowModel: () => table.getFilteredRowModel(),
      getGroupedRowModel: () => {
        if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {
          table._getGroupedRowModel = table.options.getGroupedRowModel(table);
        }
        if (table.options.manualGrouping || !table._getGroupedRowModel) {
          return table.getPreGroupedRowModel();
        }
        return table._getGroupedRowModel();
      }
    };
  },
  createRow: (row) => {
    return {
      getIsGrouped: () => !!row.groupingColumnId,
      _groupingValuesCache: {}
    };
  },
  createCell: (cell, column, row, table) => {
    return {
      getIsGrouped: () => column.getIsGrouped() && column.id === row.groupingColumnId,
      getIsPlaceholder: () => !cell.getIsGrouped() && column.getIsGrouped(),
      getIsAggregated: () => {
        var _row$subRows;
        return !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
      }
    };
  }
};
function orderColumns(leafColumns, grouping, groupedColumnMode) {
  if (!(grouping != null && grouping.length) || !groupedColumnMode) {
    return leafColumns;
  }
  const nonGroupingColumns = leafColumns.filter((col) => !grouping.includes(col.id));
  if (groupedColumnMode === "remove") {
    return nonGroupingColumns;
  }
  const groupingColumns = grouping.map((g4) => leafColumns.find((col) => col.id === g4)).filter(Boolean);
  return [...groupingColumns, ...nonGroupingColumns];
}
var Ordering = {
  getInitialState: (state) => {
    return {
      columnOrder: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnOrderChange: makeStateUpdater("columnOrder", table)
    };
  },
  createTable: (table) => {
    return {
      setColumnOrder: (updater) => table.options.onColumnOrderChange == null ? void 0 : table.options.onColumnOrderChange(updater),
      resetColumnOrder: (defaultState) => {
        var _table$initialState$c;
        table.setColumnOrder(defaultState ? [] : (_table$initialState$c = table.initialState.columnOrder) != null ? _table$initialState$c : []);
      },
      _getOrderColumnsFn: memo(() => [table.getState().columnOrder, table.getState().grouping, table.options.groupedColumnMode], (columnOrder, grouping, groupedColumnMode) => (columns) => {
        let orderedColumns = [];
        if (!(columnOrder != null && columnOrder.length)) {
          orderedColumns = columns;
        } else {
          const columnOrderCopy = [...columnOrder];
          const columnsCopy = [...columns];
          while (columnsCopy.length && columnOrderCopy.length) {
            const targetColumnId = columnOrderCopy.shift();
            const foundIndex = columnsCopy.findIndex((d5) => d5.id === targetColumnId);
            if (foundIndex > -1) {
              orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]);
            }
          }
          orderedColumns = [...orderedColumns, ...columnsCopy];
        }
        return orderColumns(orderedColumns, grouping, groupedColumnMode);
      }, {
        key: "getOrderColumnsFn"
      })
    };
  }
};
var defaultPageIndex = 0;
var defaultPageSize = 10;
var getDefaultPaginationState = () => ({
  pageIndex: defaultPageIndex,
  pageSize: defaultPageSize
});
var Pagination = {
  getInitialState: (state) => {
    return {
      ...state,
      pagination: {
        ...getDefaultPaginationState(),
        ...state == null ? void 0 : state.pagination
      }
    };
  },
  getDefaultOptions: (table) => {
    return {
      onPaginationChange: makeStateUpdater("pagination", table)
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    return {
      _autoResetPageIndex: () => {
        var _ref, _table$options$autoRe;
        if (!registered) {
          table._queue(() => {
            registered = true;
          });
          return;
        }
        if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {
          if (queued)
            return;
          queued = true;
          table._queue(() => {
            table.resetPageIndex();
            queued = false;
          });
        }
      },
      setPagination: (updater) => {
        const safeUpdater = (old) => {
          let newState = functionalUpdate(updater, old);
          return newState;
        };
        return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);
      },
      resetPagination: (defaultState) => {
        var _table$initialState$p;
        table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());
      },
      setPageIndex: (updater) => {
        table.setPagination((old) => {
          let pageIndex = functionalUpdate(updater, old.pageIndex);
          const maxPageIndex = typeof table.options.pageCount === "undefined" || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;
          pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));
          return {
            ...old,
            pageIndex
          };
        });
      },
      resetPageIndex: (defaultState) => {
        var _table$initialState$p2, _table$initialState, _table$initialState$p3;
        table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null ? void 0 : (_table$initialState$p3 = _table$initialState.pagination) == null ? void 0 : _table$initialState$p3.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);
      },
      resetPageSize: (defaultState) => {
        var _table$initialState$p4, _table$initialState2, _table$initialState2$;
        table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p4 = (_table$initialState2 = table.initialState) == null ? void 0 : (_table$initialState2$ = _table$initialState2.pagination) == null ? void 0 : _table$initialState2$.pageSize) != null ? _table$initialState$p4 : defaultPageSize);
      },
      setPageSize: (updater) => {
        table.setPagination((old) => {
          const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize));
          const topRowIndex = old.pageSize * old.pageIndex;
          const pageIndex = Math.floor(topRowIndex / pageSize);
          return {
            ...old,
            pageIndex,
            pageSize
          };
        });
      },
      setPageCount: (updater) => table.setPagination((old) => {
        var _table$options$pageCo;
        let newPageCount = functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);
        if (typeof newPageCount === "number") {
          newPageCount = Math.max(-1, newPageCount);
        }
        return {
          ...old,
          pageCount: newPageCount
        };
      }),
      getPageOptions: memo(() => [table.getPageCount()], (pageCount) => {
        let pageOptions = [];
        if (pageCount && pageCount > 0) {
          pageOptions = [...new Array(pageCount)].fill(null).map((_11, i4) => i4);
        }
        return pageOptions;
      }, {
        key: "getPageOptions",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
        }
      }),
      getCanPreviousPage: () => table.getState().pagination.pageIndex > 0,
      getCanNextPage: () => {
        const {
          pageIndex
        } = table.getState().pagination;
        const pageCount = table.getPageCount();
        if (pageCount === -1) {
          return true;
        }
        if (pageCount === 0) {
          return false;
        }
        return pageIndex < pageCount - 1;
      },
      previousPage: () => {
        return table.setPageIndex((old) => old - 1);
      },
      nextPage: () => {
        return table.setPageIndex((old) => {
          return old + 1;
        });
      },
      getPrePaginationRowModel: () => table.getExpandedRowModel(),
      getPaginationRowModel: () => {
        if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {
          table._getPaginationRowModel = table.options.getPaginationRowModel(table);
        }
        if (table.options.manualPagination || !table._getPaginationRowModel) {
          return table.getPrePaginationRowModel();
        }
        return table._getPaginationRowModel();
      },
      getPageCount: () => {
        var _table$options$pageCo2;
        return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getPrePaginationRowModel().rows.length / table.getState().pagination.pageSize);
      }
    };
  }
};
var getDefaultPinningState = () => ({
  left: [],
  right: []
});
var Pinning = {
  getInitialState: (state) => {
    return {
      columnPinning: getDefaultPinningState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnPinningChange: makeStateUpdater("columnPinning", table)
    };
  },
  createColumn: (column, table) => {
    return {
      pin: (position) => {
        const columnIds = column.getLeafColumns().map((d5) => d5.id).filter(Boolean);
        table.setColumnPinning((old) => {
          var _old$left3, _old$right3;
          if (position === "right") {
            var _old$left, _old$right;
            return {
              left: ((_old$left = old == null ? void 0 : old.left) != null ? _old$left : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))),
              right: [...((_old$right = old == null ? void 0 : old.right) != null ? _old$right : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))), ...columnIds]
            };
          }
          if (position === "left") {
            var _old$left2, _old$right2;
            return {
              left: [...((_old$left2 = old == null ? void 0 : old.left) != null ? _old$left2 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))), ...columnIds],
              right: ((_old$right2 = old == null ? void 0 : old.right) != null ? _old$right2 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5)))
            };
          }
          return {
            left: ((_old$left3 = old == null ? void 0 : old.left) != null ? _old$left3 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))),
            right: ((_old$right3 = old == null ? void 0 : old.right) != null ? _old$right3 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5)))
          };
        });
      },
      getCanPin: () => {
        const leafColumns = column.getLeafColumns();
        return leafColumns.some((d5) => {
          var _d$columnDef$enablePi, _table$options$enable;
          return ((_d$columnDef$enablePi = d5.columnDef.enablePinning) != null ? _d$columnDef$enablePi : true) && ((_table$options$enable = table.options.enablePinning) != null ? _table$options$enable : true);
        });
      },
      getIsPinned: () => {
        const leafColumnIds = column.getLeafColumns().map((d5) => d5.id);
        const {
          left,
          right
        } = table.getState().columnPinning;
        const isLeft = leafColumnIds.some((d5) => left == null ? void 0 : left.includes(d5));
        const isRight = leafColumnIds.some((d5) => right == null ? void 0 : right.includes(d5));
        return isLeft ? "left" : isRight ? "right" : false;
      },
      getPinnedIndex: () => {
        var _table$getState$colum, _table$getState$colum2, _table$getState$colum3;
        const position = column.getIsPinned();
        return position ? (_table$getState$colum = (_table$getState$colum2 = table.getState().columnPinning) == null ? void 0 : (_table$getState$colum3 = _table$getState$colum2[position]) == null ? void 0 : _table$getState$colum3.indexOf(column.id)) != null ? _table$getState$colum : -1 : 0;
      }
    };
  },
  createRow: (row, table) => {
    return {
      getCenterVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allCells, left, right) => {
        const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
        return allCells.filter((d5) => !leftAndRight.includes(d5.column.id));
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
        }
      }),
      getLeftVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, ,], (allCells, left) => {
        const cells = (left != null ? left : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d5) => ({
          ...d5,
          position: "left"
        }));
        return cells;
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
        }
      }),
      getRightVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.right], (allCells, right) => {
        const cells = (right != null ? right : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d5) => ({
          ...d5,
          position: "right"
        }));
        return cells;
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugRows;
        }
      })
    };
  },
  createTable: (table) => {
    return {
      setColumnPinning: (updater) => table.options.onColumnPinningChange == null ? void 0 : table.options.onColumnPinningChange(updater),
      resetColumnPinning: (defaultState) => {
        var _table$initialState$c, _table$initialState;
        return table.setColumnPinning(defaultState ? getDefaultPinningState() : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnPinning) != null ? _table$initialState$c : getDefaultPinningState());
      },
      getIsSomeColumnsPinned: (position) => {
        var _pinningState$positio;
        const pinningState = table.getState().columnPinning;
        if (!position) {
          var _pinningState$left, _pinningState$right;
          return Boolean(((_pinningState$left = pinningState.left) == null ? void 0 : _pinningState$left.length) || ((_pinningState$right = pinningState.right) == null ? void 0 : _pinningState$right.length));
        }
        return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);
      },
      getLeftLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left], (allColumns, left) => {
        return (left != null ? left : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
      }, {
        key: "getLeftLeafColumns",
        debug: () => {
          var _table$options$debugA4;
          return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugColumns;
        }
      }),
      getRightLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.right], (allColumns, right) => {
        return (right != null ? right : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
      }, {
        key: "getRightLeafColumns",
        debug: () => {
          var _table$options$debugA5;
          return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugColumns;
        }
      }),
      getCenterLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, left, right) => {
        const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
        return allColumns.filter((d5) => !leftAndRight.includes(d5.id));
      }, {
        key: "getCenterLeafColumns",
        debug: () => {
          var _table$options$debugA6;
          return (_table$options$debugA6 = table.options.debugAll) != null ? _table$options$debugA6 : table.options.debugColumns;
        }
      })
    };
  }
};
var RowSelection = {
  getInitialState: (state) => {
    return {
      rowSelection: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onRowSelectionChange: makeStateUpdater("rowSelection", table),
      enableRowSelection: true,
      enableMultiRowSelection: true,
      enableSubRowSelection: true
    };
  },
  createTable: (table) => {
    return {
      setRowSelection: (updater) => table.options.onRowSelectionChange == null ? void 0 : table.options.onRowSelectionChange(updater),
      resetRowSelection: (defaultState) => {
        var _table$initialState$r;
        return table.setRowSelection(defaultState ? {} : (_table$initialState$r = table.initialState.rowSelection) != null ? _table$initialState$r : {});
      },
      toggleAllRowsSelected: (value) => {
        table.setRowSelection((old) => {
          value = typeof value !== "undefined" ? value : !table.getIsAllRowsSelected();
          const rowSelection = {
            ...old
          };
          const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows;
          if (value) {
            preGroupedFlatRows.forEach((row) => {
              if (!row.getCanSelect()) {
                return;
              }
              rowSelection[row.id] = true;
            });
          } else {
            preGroupedFlatRows.forEach((row) => {
              delete rowSelection[row.id];
            });
          }
          return rowSelection;
        });
      },
      toggleAllPageRowsSelected: (value) => table.setRowSelection((old) => {
        const resolvedValue = typeof value !== "undefined" ? value : !table.getIsAllPageRowsSelected();
        const rowSelection = {
          ...old
        };
        table.getRowModel().rows.forEach((row) => {
          mutateRowIsSelected(rowSelection, row.id, resolvedValue, table);
        });
        return rowSelection;
      }),
      getPreSelectedRowModel: () => table.getCoreRowModel(),
      getSelectedRowModel: memo(() => [table.getState().rowSelection, table.getCoreRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: "getSelectedRowModel",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
        }
      }),
      getFilteredSelectedRowModel: memo(() => [table.getState().rowSelection, table.getFilteredRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugTable;
        }
      }),
      getGroupedSelectedRowModel: memo(() => [table.getState().rowSelection, table.getSortedRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugTable;
        }
      }),
      getIsAllRowsSelected: () => {
        const preGroupedFlatRows = table.getFilteredRowModel().flatRows;
        const {
          rowSelection
        } = table.getState();
        let isAllRowsSelected = Boolean(preGroupedFlatRows.length && Object.keys(rowSelection).length);
        if (isAllRowsSelected) {
          if (preGroupedFlatRows.some((row) => row.getCanSelect() && !rowSelection[row.id])) {
            isAllRowsSelected = false;
          }
        }
        return isAllRowsSelected;
      },
      getIsAllPageRowsSelected: () => {
        const paginationFlatRows = table.getPaginationRowModel().flatRows;
        const {
          rowSelection
        } = table.getState();
        let isAllPageRowsSelected = !!paginationFlatRows.length;
        if (isAllPageRowsSelected && paginationFlatRows.some((row) => row.getCanSelect() && !rowSelection[row.id])) {
          isAllPageRowsSelected = false;
        }
        return isAllPageRowsSelected;
      },
      getIsSomeRowsSelected: () => {
        var _table$getState$rowSe;
        const totalSelected = Object.keys((_table$getState$rowSe = table.getState().rowSelection) != null ? _table$getState$rowSe : {}).length;
        return totalSelected > 0 && totalSelected < table.getFilteredRowModel().flatRows.length;
      },
      getIsSomePageRowsSelected: () => {
        const paginationFlatRows = table.getPaginationRowModel().flatRows;
        return table.getIsAllPageRowsSelected() ? false : paginationFlatRows.some((d5) => d5.getIsSelected() || d5.getIsSomeSelected());
      },
      getToggleAllRowsSelectedHandler: () => {
        return (e4) => {
          table.toggleAllRowsSelected(e4.target.checked);
        };
      },
      getToggleAllPageRowsSelectedHandler: () => {
        return (e4) => {
          table.toggleAllPageRowsSelected(e4.target.checked);
        };
      }
    };
  },
  createRow: (row, table) => {
    return {
      toggleSelected: (value) => {
        const isSelected = row.getIsSelected();
        table.setRowSelection((old) => {
          value = typeof value !== "undefined" ? value : !isSelected;
          if (isSelected === value) {
            return old;
          }
          const selectedRowIds = {
            ...old
          };
          mutateRowIsSelected(selectedRowIds, row.id, value, table);
          return selectedRowIds;
        });
      },
      getIsSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isRowSelected(row, rowSelection);
      },
      getIsSomeSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isSubRowSelected(row, rowSelection) === "some";
      },
      getIsAllSubRowsSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isSubRowSelected(row, rowSelection) === "all";
      },
      getCanSelect: () => {
        var _table$options$enable;
        if (typeof table.options.enableRowSelection === "function") {
          return table.options.enableRowSelection(row);
        }
        return (_table$options$enable = table.options.enableRowSelection) != null ? _table$options$enable : true;
      },
      getCanSelectSubRows: () => {
        var _table$options$enable2;
        if (typeof table.options.enableSubRowSelection === "function") {
          return table.options.enableSubRowSelection(row);
        }
        return (_table$options$enable2 = table.options.enableSubRowSelection) != null ? _table$options$enable2 : true;
      },
      getCanMultiSelect: () => {
        var _table$options$enable3;
        if (typeof table.options.enableMultiRowSelection === "function") {
          return table.options.enableMultiRowSelection(row);
        }
        return (_table$options$enable3 = table.options.enableMultiRowSelection) != null ? _table$options$enable3 : true;
      },
      getToggleSelectedHandler: () => {
        const canSelect = row.getCanSelect();
        return (e4) => {
          var _target;
          if (!canSelect)
            return;
          row.toggleSelected((_target = e4.target) == null ? void 0 : _target.checked);
        };
      }
    };
  }
};
var mutateRowIsSelected = (selectedRowIds, id2, value, table) => {
  var _row$subRows;
  const row = table.getRow(id2);
  if (value) {
    if (!row.getCanMultiSelect()) {
      Object.keys(selectedRowIds).forEach((key2) => delete selectedRowIds[key2]);
    }
    if (row.getCanSelect()) {
      selectedRowIds[id2] = true;
    }
  } else {
    delete selectedRowIds[id2];
  }
  if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getCanSelectSubRows()) {
    row.subRows.forEach((row2) => mutateRowIsSelected(selectedRowIds, row2.id, value, table));
  }
};
function selectRowsFn(table, rowModel) {
  const rowSelection = table.getState().rowSelection;
  const newSelectedFlatRows = [];
  const newSelectedRowsById = {};
  const recurseRows = function(rows, depth) {
    return rows.map((row) => {
      var _row$subRows2;
      const isSelected = isRowSelected(row, rowSelection);
      if (isSelected) {
        newSelectedFlatRows.push(row);
        newSelectedRowsById[row.id] = row;
      }
      if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length) {
        row = {
          ...row,
          subRows: recurseRows(row.subRows)
        };
      }
      if (isSelected) {
        return row;
      }
    }).filter(Boolean);
  };
  return {
    rows: recurseRows(rowModel.rows),
    flatRows: newSelectedFlatRows,
    rowsById: newSelectedRowsById
  };
}
function isRowSelected(row, selection) {
  var _selection$row$id;
  return (_selection$row$id = selection[row.id]) != null ? _selection$row$id : false;
}
function isSubRowSelected(row, selection, table) {
  if (row.subRows && row.subRows.length) {
    let allChildrenSelected = true;
    let someSelected = false;
    row.subRows.forEach((subRow) => {
      if (someSelected && !allChildrenSelected) {
        return;
      }
      if (isRowSelected(subRow, selection)) {
        someSelected = true;
      } else {
        allChildrenSelected = false;
      }
    });
    return allChildrenSelected ? "all" : someSelected ? "some" : false;
  }
  return false;
}
var reSplitAlphaNumeric = /([0-9]+)/gm;
var alphanumeric = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString3(rowA.getValue(columnId)).toLowerCase(), toString3(rowB.getValue(columnId)).toLowerCase());
};
var alphanumericCaseSensitive = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString3(rowA.getValue(columnId)), toString3(rowB.getValue(columnId)));
};
var text = (rowA, rowB, columnId) => {
  return compareBasic(toString3(rowA.getValue(columnId)).toLowerCase(), toString3(rowB.getValue(columnId)).toLowerCase());
};
var textCaseSensitive = (rowA, rowB, columnId) => {
  return compareBasic(toString3(rowA.getValue(columnId)), toString3(rowB.getValue(columnId)));
};
var datetime = (rowA, rowB, columnId) => {
  const a5 = rowA.getValue(columnId);
  const b4 = rowB.getValue(columnId);
  return a5 > b4 ? 1 : a5 < b4 ? -1 : 0;
};
var basic = (rowA, rowB, columnId) => {
  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId));
};
function compareBasic(a5, b4) {
  return a5 === b4 ? 0 : a5 > b4 ? 1 : -1;
}
function toString3(a5) {
  if (typeof a5 === "number") {
    if (isNaN(a5) || a5 === Infinity || a5 === -Infinity) {
      return "";
    }
    return String(a5);
  }
  if (typeof a5 === "string") {
    return a5;
  }
  return "";
}
function compareAlphanumeric(aStr, bStr) {
  const a5 = aStr.split(reSplitAlphaNumeric).filter(Boolean);
  const b4 = bStr.split(reSplitAlphaNumeric).filter(Boolean);
  while (a5.length && b4.length) {
    const aa = a5.shift();
    const bb = b4.shift();
    const an2 = parseInt(aa, 10);
    const bn2 = parseInt(bb, 10);
    const combo = [an2, bn2].sort();
    if (isNaN(combo[0])) {
      if (aa > bb) {
        return 1;
      }
      if (bb > aa) {
        return -1;
      }
      continue;
    }
    if (isNaN(combo[1])) {
      return isNaN(an2) ? -1 : 1;
    }
    if (an2 > bn2) {
      return 1;
    }
    if (bn2 > an2) {
      return -1;
    }
  }
  return a5.length - b4.length;
}
var sortingFns = {
  alphanumeric,
  alphanumericCaseSensitive,
  text,
  textCaseSensitive,
  datetime,
  basic
};
var Sorting = {
  getInitialState: (state) => {
    return {
      sorting: [],
      ...state
    };
  },
  getDefaultColumnDef: () => {
    return {
      sortingFn: "auto"
    };
  },
  getDefaultOptions: (table) => {
    return {
      onSortingChange: makeStateUpdater("sorting", table),
      isMultiSortEvent: (e4) => {
        return e4.shiftKey;
      }
    };
  },
  createColumn: (column, table) => {
    return {
      getAutoSortingFn: () => {
        const firstRows = table.getFilteredRowModel().flatRows.slice(10);
        let isString2 = false;
        for (const row of firstRows) {
          const value = row == null ? void 0 : row.getValue(column.id);
          if (Object.prototype.toString.call(value) === "[object Date]") {
            return sortingFns.datetime;
          }
          if (typeof value === "string") {
            isString2 = true;
            if (value.split(reSplitAlphaNumeric).length > 1) {
              return sortingFns.alphanumeric;
            }
          }
        }
        if (isString2) {
          return sortingFns.text;
        }
        return sortingFns.basic;
      },
      getAutoSortDir: () => {
        const firstRow = table.getFilteredRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "string") {
          return "asc";
        }
        return "desc";
      },
      getSortingFn: () => {
        var _table$options$sortin, _table$options$sortin2;
        if (!column) {
          throw new Error();
        }
        return isFunction(column.columnDef.sortingFn) ? column.columnDef.sortingFn : column.columnDef.sortingFn === "auto" ? column.getAutoSortingFn() : (_table$options$sortin = (_table$options$sortin2 = table.options.sortingFns) == null ? void 0 : _table$options$sortin2[column.columnDef.sortingFn]) != null ? _table$options$sortin : sortingFns[column.columnDef.sortingFn];
      },
      toggleSorting: (desc, multi) => {
        const nextSortingOrder = column.getNextSortingOrder();
        const hasManualValue = typeof desc !== "undefined" && desc !== null;
        table.setSorting((old) => {
          const existingSorting = old == null ? void 0 : old.find((d5) => d5.id === column.id);
          const existingIndex = old == null ? void 0 : old.findIndex((d5) => d5.id === column.id);
          let newSorting = [];
          let sortAction;
          let nextDesc = hasManualValue ? desc : nextSortingOrder === "desc";
          if (old != null && old.length && column.getCanMultiSort() && multi) {
            if (existingSorting) {
              sortAction = "toggle";
            } else {
              sortAction = "add";
            }
          } else {
            if (old != null && old.length && existingIndex !== old.length - 1) {
              sortAction = "replace";
            } else if (existingSorting) {
              sortAction = "toggle";
            } else {
              sortAction = "replace";
            }
          }
          if (sortAction === "toggle") {
            if (!hasManualValue) {
              if (!nextSortingOrder) {
                sortAction = "remove";
              }
            }
          }
          if (sortAction === "add") {
            var _table$options$maxMul;
            newSorting = [...old, {
              id: column.id,
              desc: nextDesc
            }];
            newSorting.splice(0, newSorting.length - ((_table$options$maxMul = table.options.maxMultiSortColCount) != null ? _table$options$maxMul : Number.MAX_SAFE_INTEGER));
          } else if (sortAction === "toggle") {
            newSorting = old.map((d5) => {
              if (d5.id === column.id) {
                return {
                  ...d5,
                  desc: nextDesc
                };
              }
              return d5;
            });
          } else if (sortAction === "remove") {
            newSorting = old.filter((d5) => d5.id !== column.id);
          } else {
            newSorting = [{
              id: column.id,
              desc: nextDesc
            }];
          }
          return newSorting;
        });
      },
      getFirstSortDir: () => {
        var _ref, _column$columnDef$sor;
        const sortDescFirst = (_ref = (_column$columnDef$sor = column.columnDef.sortDescFirst) != null ? _column$columnDef$sor : table.options.sortDescFirst) != null ? _ref : column.getAutoSortDir() === "desc";
        return sortDescFirst ? "desc" : "asc";
      },
      getNextSortingOrder: (multi) => {
        var _table$options$enable, _table$options$enable2;
        const firstSortDirection = column.getFirstSortDir();
        const isSorted = column.getIsSorted();
        if (!isSorted) {
          return firstSortDirection;
        }
        if (isSorted !== firstSortDirection && ((_table$options$enable = table.options.enableSortingRemoval) != null ? _table$options$enable : true) && (multi ? (_table$options$enable2 = table.options.enableMultiRemove) != null ? _table$options$enable2 : true : true)) {
          return false;
        }
        return isSorted === "desc" ? "asc" : "desc";
      },
      getCanSort: () => {
        var _column$columnDef$ena, _table$options$enable3;
        return ((_column$columnDef$ena = column.columnDef.enableSorting) != null ? _column$columnDef$ena : true) && ((_table$options$enable3 = table.options.enableSorting) != null ? _table$options$enable3 : true) && !!column.accessorFn;
      },
      getCanMultiSort: () => {
        var _ref2, _column$columnDef$ena2;
        return (_ref2 = (_column$columnDef$ena2 = column.columnDef.enableMultiSort) != null ? _column$columnDef$ena2 : table.options.enableMultiSort) != null ? _ref2 : !!column.accessorFn;
      },
      getIsSorted: () => {
        var _table$getState$sorti;
        const columnSort = (_table$getState$sorti = table.getState().sorting) == null ? void 0 : _table$getState$sorti.find((d5) => d5.id === column.id);
        return !columnSort ? false : columnSort.desc ? "desc" : "asc";
      },
      getSortIndex: () => {
        var _table$getState$sorti2, _table$getState$sorti3;
        return (_table$getState$sorti2 = (_table$getState$sorti3 = table.getState().sorting) == null ? void 0 : _table$getState$sorti3.findIndex((d5) => d5.id === column.id)) != null ? _table$getState$sorti2 : -1;
      },
      clearSorting: () => {
        table.setSorting((old) => old != null && old.length ? old.filter((d5) => d5.id !== column.id) : []);
      },
      getToggleSortingHandler: () => {
        const canSort = column.getCanSort();
        return (e4) => {
          if (!canSort)
            return;
          e4.persist == null ? void 0 : e4.persist();
          column.toggleSorting == null ? void 0 : column.toggleSorting(void 0, column.getCanMultiSort() ? table.options.isMultiSortEvent == null ? void 0 : table.options.isMultiSortEvent(e4) : false);
        };
      }
    };
  },
  createTable: (table) => {
    return {
      setSorting: (updater) => table.options.onSortingChange == null ? void 0 : table.options.onSortingChange(updater),
      resetSorting: (defaultState) => {
        var _table$initialState$s, _table$initialState;
        table.setSorting(defaultState ? [] : (_table$initialState$s = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.sorting) != null ? _table$initialState$s : []);
      },
      getPreSortedRowModel: () => table.getGroupedRowModel(),
      getSortedRowModel: () => {
        if (!table._getSortedRowModel && table.options.getSortedRowModel) {
          table._getSortedRowModel = table.options.getSortedRowModel(table);
        }
        if (table.options.manualSorting || !table._getSortedRowModel) {
          return table.getPreSortedRowModel();
        }
        return table._getSortedRowModel();
      }
    };
  }
};
var Visibility = {
  getInitialState: (state) => {
    return {
      columnVisibility: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnVisibilityChange: makeStateUpdater("columnVisibility", table)
    };
  },
  createColumn: (column, table) => {
    return {
      toggleVisibility: (value) => {
        if (column.getCanHide()) {
          table.setColumnVisibility((old) => ({
            ...old,
            [column.id]: value != null ? value : !column.getIsVisible()
          }));
        }
      },
      getIsVisible: () => {
        var _table$getState$colum, _table$getState$colum2;
        return (_table$getState$colum = (_table$getState$colum2 = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum2[column.id]) != null ? _table$getState$colum : true;
      },
      getCanHide: () => {
        var _column$columnDef$ena, _table$options$enable;
        return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);
      },
      getToggleVisibilityHandler: () => {
        return (e4) => {
          column.toggleVisibility == null ? void 0 : column.toggleVisibility(e4.target.checked);
        };
      }
    };
  },
  createRow: (row, table) => {
    return {
      _getAllVisibleCells: memo(() => [row.getAllCells(), table.getState().columnVisibility], (cells) => {
        return cells.filter((cell) => cell.column.getIsVisible());
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
        }
      }),
      getVisibleCells: memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], {
        key: "row.getVisibleCells",
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
        }
      })
    };
  },
  createTable: (table) => {
    const makeVisibleColumnsMethod = (key2, getColumns) => {
      return memo(() => [getColumns(), getColumns().filter((d5) => d5.getIsVisible()).map((d5) => d5.id).join("_")], (columns) => {
        return columns.filter((d5) => d5.getIsVisible == null ? void 0 : d5.getIsVisible());
      }, {
        key: key2,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugColumns;
        }
      });
    };
    return {
      getVisibleFlatColumns: makeVisibleColumnsMethod("getVisibleFlatColumns", () => table.getAllFlatColumns()),
      getVisibleLeafColumns: makeVisibleColumnsMethod("getVisibleLeafColumns", () => table.getAllLeafColumns()),
      getLeftVisibleLeafColumns: makeVisibleColumnsMethod("getLeftVisibleLeafColumns", () => table.getLeftLeafColumns()),
      getRightVisibleLeafColumns: makeVisibleColumnsMethod("getRightVisibleLeafColumns", () => table.getRightLeafColumns()),
      getCenterVisibleLeafColumns: makeVisibleColumnsMethod("getCenterVisibleLeafColumns", () => table.getCenterLeafColumns()),
      setColumnVisibility: (updater) => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater),
      resetColumnVisibility: (defaultState) => {
        var _table$initialState$c;
        table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});
      },
      toggleAllColumnsVisible: (value) => {
        var _value;
        value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();
        table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({
          ...obj,
          [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value
        }), {}));
      },
      getIsAllColumnsVisible: () => !table.getAllLeafColumns().some((column) => !(column.getIsVisible != null && column.getIsVisible())),
      getIsSomeColumnsVisible: () => table.getAllLeafColumns().some((column) => column.getIsVisible == null ? void 0 : column.getIsVisible()),
      getToggleAllColumnsVisibilityHandler: () => {
        return (e4) => {
          var _target;
          table.toggleAllColumnsVisible((_target = e4.target) == null ? void 0 : _target.checked);
        };
      }
    };
  }
};
var features = [Headers, Visibility, Ordering, Pinning, Filters, Sorting, Grouping, Expanding, Pagination, RowSelection, ColumnSizing];
function createTable(options) {
  var _options$initialState;
  if (options.debugAll || options.debugTable) {
    console.info("Creating Table Instance...");
  }
  let table = {
    _features: features
  };
  const defaultOptions4 = table._features.reduce((obj, feature) => {
    return Object.assign(obj, feature.getDefaultOptions == null ? void 0 : feature.getDefaultOptions(table));
  }, {});
  const mergeOptions = (options2) => {
    if (table.options.mergeOptions) {
      return table.options.mergeOptions(defaultOptions4, options2);
    }
    return {
      ...defaultOptions4,
      ...options2
    };
  };
  const coreInitialState = {};
  let initialState2 = {
    ...coreInitialState,
    ...(_options$initialState = options.initialState) != null ? _options$initialState : {}
  };
  table._features.forEach((feature) => {
    var _feature$getInitialSt;
    initialState2 = (_feature$getInitialSt = feature.getInitialState == null ? void 0 : feature.getInitialState(initialState2)) != null ? _feature$getInitialSt : initialState2;
  });
  const queued = [];
  let queuedTimeout = false;
  const coreInstance = {
    _features: features,
    options: {
      ...defaultOptions4,
      ...options
    },
    initialState: initialState2,
    _queue: (cb) => {
      queued.push(cb);
      if (!queuedTimeout) {
        queuedTimeout = true;
        Promise.resolve().then(() => {
          while (queued.length) {
            queued.shift()();
          }
          queuedTimeout = false;
        }).catch((error) => setTimeout(() => {
          throw error;
        }));
      }
    },
    reset: () => {
      table.setState(table.initialState);
    },
    setOptions: (updater) => {
      const newOptions = functionalUpdate(updater, table.options);
      table.options = mergeOptions(newOptions);
    },
    getState: () => {
      return table.options.state;
    },
    setState: (updater) => {
      table.options.onStateChange == null ? void 0 : table.options.onStateChange(updater);
    },
    _getRowId: (row, index, parent) => {
      var _table$options$getRow;
      return (_table$options$getRow = table.options.getRowId == null ? void 0 : table.options.getRowId(row, index, parent)) != null ? _table$options$getRow : `${parent ? [parent.id, index].join(".") : index}`;
    },
    getCoreRowModel: () => {
      if (!table._getCoreRowModel) {
        table._getCoreRowModel = table.options.getCoreRowModel(table);
      }
      return table._getCoreRowModel();
    },
    getRowModel: () => {
      return table.getPaginationRowModel();
    },
    getRow: (id2) => {
      const row = table.getRowModel().rowsById[id2];
      if (!row) {
        if (true) {
          throw new Error(`getRow expected an ID, but got ${id2}`);
        }
        throw new Error();
      }
      return row;
    },
    _getDefaultColumnDef: memo(() => [table.options.defaultColumn], (defaultColumn) => {
      var _defaultColumn;
      defaultColumn = (_defaultColumn = defaultColumn) != null ? _defaultColumn : {};
      return {
        header: (props2) => {
          const resolvedColumnDef = props2.header.column.columnDef;
          if (resolvedColumnDef.accessorKey) {
            return resolvedColumnDef.accessorKey;
          }
          if (resolvedColumnDef.accessorFn) {
            return resolvedColumnDef.id;
          }
          return null;
        },
        cell: (props2) => {
          var _props$renderValue$to, _props$renderValue;
          return (_props$renderValue$to = (_props$renderValue = props2.renderValue()) == null ? void 0 : _props$renderValue.toString == null ? void 0 : _props$renderValue.toString()) != null ? _props$renderValue$to : null;
        },
        ...table._features.reduce((obj, feature) => {
          return Object.assign(obj, feature.getDefaultColumnDef == null ? void 0 : feature.getDefaultColumnDef());
        }, {}),
        ...defaultColumn
      };
    }, {
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugColumns;
      },
      key: "getDefaultColumnDef"
    }),
    _getColumnDefs: () => table.options.columns,
    getAllColumns: memo(() => [table._getColumnDefs()], (columnDefs) => {
      const recurseColumns = function(columnDefs2, parent, depth) {
        if (depth === void 0) {
          depth = 0;
        }
        return columnDefs2.map((columnDef) => {
          const column = createColumn(table, columnDef, depth, parent);
          const groupingColumnDef = columnDef;
          column.columns = groupingColumnDef.columns ? recurseColumns(groupingColumnDef.columns, column, depth + 1) : [];
          return column;
        });
      };
      return recurseColumns(columnDefs);
    }, {
      key: "getAllColumns",
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugColumns;
      }
    }),
    getAllFlatColumns: memo(() => [table.getAllColumns()], (allColumns) => {
      return allColumns.flatMap((column) => {
        return column.getFlatColumns();
      });
    }, {
      key: "getAllFlatColumns",
      debug: () => {
        var _table$options$debugA3;
        return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugColumns;
      }
    }),
    _getAllFlatColumnsById: memo(() => [table.getAllFlatColumns()], (flatColumns) => {
      return flatColumns.reduce((acc, column) => {
        acc[column.id] = column;
        return acc;
      }, {});
    }, {
      key: "getAllFlatColumnsById",
      debug: () => {
        var _table$options$debugA4;
        return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugColumns;
      }
    }),
    getAllLeafColumns: memo(() => [table.getAllColumns(), table._getOrderColumnsFn()], (allColumns, orderColumns2) => {
      let leafColumns = allColumns.flatMap((column) => column.getLeafColumns());
      return orderColumns2(leafColumns);
    }, {
      key: "getAllLeafColumns",
      debug: () => {
        var _table$options$debugA5;
        return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugColumns;
      }
    }),
    getColumn: (columnId) => {
      const column = table._getAllFlatColumnsById()[columnId];
      if (!column) {
        console.error(`[Table] Column with id '${columnId}' does not exist.`);
      }
      return column;
    }
  };
  Object.assign(table, coreInstance);
  table._features.forEach((feature) => {
    return Object.assign(table, feature.createTable == null ? void 0 : feature.createTable(table));
  });
  return table;
}
function createCell(table, row, column, columnId) {
  const getRenderValue = () => {
    var _cell$getValue;
    return (_cell$getValue = cell.getValue()) != null ? _cell$getValue : table.options.renderFallbackValue;
  };
  const cell = {
    id: `${row.id}_${column.id}`,
    row,
    column,
    getValue: () => row.getValue(columnId),
    renderValue: getRenderValue,
    getContext: memo(() => [table, column, row, cell], (table2, column2, row2, cell2) => ({
      table: table2,
      column: column2,
      row: row2,
      cell: cell2,
      getValue: cell2.getValue,
      renderValue: cell2.renderValue
    }), {
      key: "cell.getContext",
      debug: () => table.options.debugAll
    })
  };
  table._features.forEach((feature) => {
    Object.assign(cell, feature.createCell == null ? void 0 : feature.createCell(cell, column, row, table));
  }, {});
  return cell;
}
var createRow = (table, id2, original, rowIndex, depth, subRows) => {
  let row = {
    id: id2,
    index: rowIndex,
    original,
    depth,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (columnId) => {
      if (row._valuesCache.hasOwnProperty(columnId)) {
        return row._valuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);
      return row._valuesCache[columnId];
    },
    getUniqueValues: (columnId) => {
      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {
        return row._uniqueValuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      if (!column.columnDef.getUniqueValues) {
        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];
        return row._uniqueValuesCache[columnId];
      }
      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);
      return row._uniqueValuesCache[columnId];
    },
    renderValue: (columnId) => {
      var _row$getValue;
      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;
    },
    subRows: subRows != null ? subRows : [],
    getLeafRows: () => flattenBy(row.subRows, (d5) => d5.subRows),
    getAllCells: memo(() => [table.getAllLeafColumns()], (leafColumns) => {
      return leafColumns.map((column) => {
        return createCell(table, row, column, column.id);
      });
    }, {
      key: "row.getAllCells",
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
      }
    }),
    _getAllCellsByColumnId: memo(() => [row.getAllCells()], (allCells) => {
      return allCells.reduce((acc, cell) => {
        acc[cell.column.id] = cell;
        return acc;
      }, {});
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
      }
    })
  };
  for (let i4 = 0; i4 < table._features.length; i4++) {
    const feature = table._features[i4];
    Object.assign(row, feature == null ? void 0 : feature.createRow == null ? void 0 : feature.createRow(row, table));
  }
  return row;
};
function getCoreRowModel() {
  return (table) => memo(() => [table.options.data], (data2) => {
    const rowModel = {
      rows: [],
      flatRows: [],
      rowsById: {}
    };
    const accessRows = function(originalRows, depth, parent) {
      if (depth === void 0) {
        depth = 0;
      }
      const rows = [];
      for (let i4 = 0; i4 < originalRows.length; i4++) {
        const row = createRow(table, table._getRowId(originalRows[i4], i4, parent), originalRows[i4], i4, depth);
        rowModel.flatRows.push(row);
        rowModel.rowsById[row.id] = row;
        rows.push(row);
        if (table.options.getSubRows) {
          var _row$originalSubRows;
          row.originalSubRows = table.options.getSubRows(originalRows[i4], i4);
          if ((_row$originalSubRows = row.originalSubRows) != null && _row$originalSubRows.length) {
            row.subRows = accessRows(row.originalSubRows, depth + 1, row);
          }
        }
      }
      return rows;
    };
    rowModel.rows = accessRows(data2);
    return rowModel;
  }, {
    key: "getRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    },
    onChange: () => {
      table._autoResetPageIndex();
    }
  });
}
function getGroupedRowModel() {
  return (table) => memo(() => [table.getState().grouping, table.getPreGroupedRowModel()], (grouping, rowModel) => {
    if (!rowModel.rows.length || !grouping.length) {
      return rowModel;
    }
    const existingGrouping = grouping.filter((columnId) => table.getColumn(columnId));
    const groupedFlatRows = [];
    const groupedRowsById = {};
    const groupUpRecursively = function(rows, depth, parentId) {
      if (depth === void 0) {
        depth = 0;
      }
      if (depth >= existingGrouping.length) {
        return rows.map((row) => {
          row.depth = depth;
          groupedFlatRows.push(row);
          groupedRowsById[row.id] = row;
          if (row.subRows) {
            row.subRows = groupUpRecursively(row.subRows, depth + 1);
          }
          return row;
        });
      }
      const columnId = existingGrouping[depth];
      const rowGroupsMap = groupBy(rows, columnId);
      const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map((_ref, index) => {
        let [groupingValue, groupedRows2] = _ref;
        let id2 = `${columnId}:${groupingValue}`;
        id2 = parentId ? `${parentId}>${id2}` : id2;
        const subRows = groupUpRecursively(groupedRows2, depth + 1, id2);
        const leafRows = depth ? flattenBy(groupedRows2, (row2) => row2.subRows) : groupedRows2;
        const row = createRow(table, id2, leafRows[0].original, index, depth);
        Object.assign(row, {
          groupingColumnId: columnId,
          groupingValue,
          subRows,
          leafRows,
          getValue: (columnId2) => {
            if (existingGrouping.includes(columnId2)) {
              if (row._valuesCache.hasOwnProperty(columnId2)) {
                return row._valuesCache[columnId2];
              }
              if (groupedRows2[0]) {
                var _groupedRows$0$getVal;
                row._valuesCache[columnId2] = (_groupedRows$0$getVal = groupedRows2[0].getValue(columnId2)) != null ? _groupedRows$0$getVal : void 0;
              }
              return row._valuesCache[columnId2];
            }
            if (row._groupingValuesCache.hasOwnProperty(columnId2)) {
              return row._groupingValuesCache[columnId2];
            }
            const column = table.getColumn(columnId2);
            const aggregateFn = column == null ? void 0 : column.getAggregationFn();
            if (aggregateFn) {
              row._groupingValuesCache[columnId2] = aggregateFn(columnId2, leafRows, groupedRows2);
              return row._groupingValuesCache[columnId2];
            }
          }
        });
        subRows.forEach((subRow) => {
          groupedFlatRows.push(subRow);
          groupedRowsById[subRow.id] = subRow;
        });
        return row;
      });
      return aggregatedGroupedRows;
    };
    const groupedRows = groupUpRecursively(rowModel.rows, 0, "");
    groupedRows.forEach((subRow) => {
      groupedFlatRows.push(subRow);
      groupedRowsById[subRow.id] = subRow;
    });
    return {
      rows: groupedRows,
      flatRows: groupedFlatRows,
      rowsById: groupedRowsById
    };
  }, {
    key: "getGroupedRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    },
    onChange: () => {
      table._queue(() => {
        table._autoResetExpanded();
        table._autoResetPageIndex();
      });
    }
  });
}
function groupBy(rows, columnId) {
  const groupMap = /* @__PURE__ */ new Map();
  return rows.reduce((map, row) => {
    const resKey = `${row.getValue(columnId)}`;
    const previous = map.get(resKey);
    if (!previous) {
      map.set(resKey, [row]);
    } else {
      previous.push(row);
    }
    return map;
  }, groupMap);
}
function getExpandedRowModel() {
  return (table) => memo(() => [table.getState().expanded, table.getPreExpandedRowModel(), table.options.paginateExpandedRows], (expanded, rowModel, paginateExpandedRows) => {
    if (!rowModel.rows.length || expanded !== true && !Object.keys(expanded != null ? expanded : {}).length) {
      return rowModel;
    }
    if (!paginateExpandedRows) {
      return rowModel;
    }
    return expandRows(rowModel);
  }, {
    key: "getExpandedRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    }
  });
}
function expandRows(rowModel) {
  const expandedRows = [];
  const handleRow = (row) => {
    var _row$subRows;
    expandedRows.push(row);
    if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getIsExpanded()) {
      row.subRows.forEach(handleRow);
    }
  };
  rowModel.rows.forEach(handleRow);
  return {
    rows: expandedRows,
    flatRows: rowModel.flatRows,
    rowsById: rowModel.rowsById
  };
}

// node_modules/@tanstack/react-table/build/lib/index.mjs
function flexRender(Comp, props2) {
  return !Comp ? null : isReactComponent(Comp) ? /* @__PURE__ */ y(Comp, props2) : Comp;
}
function isReactComponent(component) {
  return isClassComponent(component) || typeof component === "function" || isExoticComponent(component);
}
function isClassComponent(component) {
  return typeof component === "function" && (() => {
    const proto = Object.getPrototypeOf(component);
    return proto.prototype && proto.prototype.isReactComponent;
  })();
}
function isExoticComponent(component) {
  return typeof component === "object" && typeof component.$$typeof === "symbol" && ["react.memo", "react.forward_ref"].includes(component.$$typeof.description);
}
function useReactTable(options) {
  const resolvedOptions = {
    state: {},
    onStateChange: () => {
    },
    renderFallbackValue: null,
    ...options
  };
  const [tableRef] = h2(() => ({
    current: createTable(resolvedOptions)
  }));
  const [state, setState] = h2(() => tableRef.current.initialState);
  tableRef.current.setOptions((prev) => ({
    ...prev,
    ...options,
    state: {
      ...state,
      ...options.state
    },
    onStateChange: (updater) => {
      setState(updater);
      options.onStateChange == null ? void 0 : options.onStateChange(updater);
    }
  }));
  return tableRef.current;
}

// src/utils/sanitizers.ts
var sanitizeSQLStatement = (name) => {
  return name == null ? void 0 : name.replace(/'/g, `''`);
};
var sanitizeColumnName = (name) => {
  if ((name == null ? void 0 : name.charAt(0)) == "_") {
    return sanitizeColumnName(name.substring(1));
  }
  return name == null ? void 0 : name.replace(/"/g, ``);
};
var sanitizeTableName = (name) => {
  return name == null ? void 0 : name.replace(/[^a-z0-9+]+/gi, "");
};
var illegalRe = /[\/\?<>\\:\*\|":]/g;
var controlRe = /[\x00-\x1f\x80-\x9f]/g;
var reservedRe = /^\.+$/;
var windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i;
var sanitizeFileName = (name) => {
  const replacement = "";
  return name.replace(illegalRe, replacement).replace(controlRe, replacement).replace(reservedRe, replacement).replace(windowsReservedRe, replacement);
};

// src/core/react/context/SpaceContext.tsx
var SpaceContext = F({
  spaceInfo: null,
  readMode: false,
  spaceState: null,
  pathState: null
});
var SpaceContextProvider = (props2) => {
  var _a2;
  const readMode = (_a2 = props2.space) == null ? void 0 : _a2.readOnly;
  const spaceInfo = F2(() => {
    return props2.space;
  }, [props2.space]);
  const [spaceState, setSpaceState] = h2(null);
  const [pathState, setPathState] = h2(null);
  p2(() => {
    const reloadSpace = () => {
      setSpaceState(props2.superstate.spacesIndex.get(spaceInfo.path));
    };
    const reloadPath = () => {
      setPathState(props2.superstate.pathsIndex.get(spaceInfo.path));
    };
    const refreshSpace = (payload) => {
      if (payload.path == spaceInfo.path) {
        reloadSpace();
      }
    };
    const refreshPath = (payload) => {
      if (payload.path == spaceInfo.path) {
        reloadPath();
      }
    };
    reloadSpace();
    reloadPath();
    props2.superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      refreshSpace
    );
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      refreshPath
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        refreshSpace
      );
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        refreshPath
      );
    };
  }, [spaceInfo]);
  return /* @__PURE__ */ Cn.createElement(SpaceContext.Provider, {
    value: {
      spaceState,
      readMode,
      spaceInfo,
      pathState
    }
  }, props2.children);
};

// src/core/react/context/ContextMDBContext.tsx
var ContextMDBContext = F({
  dbSchemas: [],
  tableData: null,
  contextTable: {},
  setContextTable: () => null,
  saveDB: () => null,
  saveContextDB: () => null,
  dbSchema: null,
  setDBSchema: () => null,
  saveSchema: () => null,
  deleteSchema: () => null
});
var ContextMDBProvider = (props2) => {
  var _a2, _b2;
  const [schemaTable, setSchemaTable] = h2(null);
  const schemas = (_a2 = schemaTable == null ? void 0 : schemaTable.rows) != null ? _a2 : [];
  const [tableData, setTableData] = h2(null);
  const [dbSchema, setDBSchema] = h2(null);
  const [contextTable, setContextTable] = h2({});
  const defaultSchema = defaultContextTable;
  const {
    spaceInfo,
    readMode,
    spaceState: spaceCache
  } = q2(SpaceContext);
  const contexts = (_b2 = spaceCache == null ? void 0 : spaceCache.contexts) != null ? _b2 : [];
  const deleteSchema = async (table) => {
    if (table.primary)
      return;
    await props2.superstate.spaceManager.deleteTable(spaceInfo.path, table.id);
    const newSchemaTable = {
      ...schemaTable,
      rows: schemaTable.rows.filter((f4) => f4.id != table.id)
    };
    setSchemaTable(newSchemaTable);
  };
  const saveSchema = async (table) => {
    if (spaceInfo.readOnly)
      return;
    await props2.superstate.spaceManager.saveTableSchema(
      spaceInfo.path,
      table.id,
      () => table
    );
    const newSchema = schemaTable.rows.some((f4) => f4.id == table.id);
    const newSchemaTable = newSchema ? {
      ...schemaTable,
      rows: schemaTable.rows.map((f4) => f4.id == table.id ? table : f4)
    } : {
      ...schemaTable,
      rows: [...schemaTable.rows, table]
    };
    if (table.id == (dbSchema == null ? void 0 : dbSchema.id)) {
      setDBSchema(table);
      setTableData((f4) => ({
        ...f4,
        schema: table
      }));
    }
    setSchemaTable(newSchemaTable);
  };
  p2(() => {
    var _a3, _b3;
    if (schemaTable) {
      if (props2.schema) {
        const preselectSchema = schemaTable.rows.find(
          (g4) => g4.id == props2.schema
        );
        if (preselectSchema) {
          if (preselectSchema.type == "db") {
            setDBSchema(preselectSchema);
            return;
          } else {
            const preselectDBSchema = schemaTable.rows.find(
              (g4) => g4.id == preselectSchema.def
            );
            if (preselectDBSchema) {
              setDBSchema(preselectDBSchema);
              return;
            }
          }
        } else {
          const newSchema = {
            id: uniqueNameFromString(
              sanitizeTableName(props2.schema),
              schemaTable.rows.map((g4) => g4.id)
            ),
            name: props2.schema,
            type: "db"
          };
          setDBSchema(newSchema);
          saveSchema(newSchema).then(() => {
            saveDB({
              schema: newSchema,
              cols: defaultTableFields.map((g4) => ({
                ...g4,
                schemaId: newSchema.id
              })),
              rows: []
            });
          });
        }
      } else {
        if (!dbSchema) {
          setDBSchema(
            (_a3 = schemaTable.rows) == null ? void 0 : _a3.find(
              (g4) => g4.id == defaultContextSchemaID
            )
          );
        } else {
          setDBSchema(
            (_b3 = schemaTable.rows) == null ? void 0 : _b3.find(
              (g4) => g4.id == dbSchema.id
            )
          );
        }
      }
    }
  }, [schemaTable]);
  const loadTables = async () => {
    if (!spaceInfo)
      return;
    const schemas2 = await props2.superstate.spaceManager.tablesForSpace(
      spaceInfo.path
    );
    if (schemas2)
      setSchemaTable(() => ({
        ...defaultSchema,
        rows: schemas2
      }));
  };
  const loadContextFields = T2(async (tag) => {
    props2.superstate.spaceManager.contextForSpace(tagSpacePathFromTag(tag)).then((f4) => {
      setContextTable((t4) => ({
        ...t4,
        [tag]: f4
      }));
    });
  }, []);
  const retrieveCachedTable = () => {
    props2.superstate.spaceManager.readTable(spaceInfo.path, dbSchema.id).then((f4) => {
      if (f4) {
        if (dbSchema.primary) {
          for (const c4 of contexts) {
            loadContextFields(c4);
          }
        }
        setTableData(f4);
      }
    });
  };
  p2(() => {
    const refreshMDB = (payload) => {
      if ((dbSchema == null ? void 0 : dbSchema.primary) != "true") {
        return;
      }
      if (payload.path == spaceInfo.path) {
        if (dbSchema) {
          loadTables();
        }
      } else {
        const tag = Object.keys(contextTable).find(
          (t4) => props2.superstate.spaceManager.spaceInfoForPath(t4).path == payload.path
        );
        if (tag)
          loadContextFields(tag);
      }
    };
    const refreshPath = (payload) => {
      if (payload.path == props2.path && dbSchema) {
        retrieveCachedTable();
      } else if ((dbSchema == null ? void 0 : dbSchema.primary) == "true" && (tableData == null ? void 0 : tableData.rows.some((f4) => f4[PathPropertyName] == payload.path))) {
        retrieveCachedTable();
      }
    };
    props2.superstate.eventsDispatcher.addListener(
      "contextStateUpdated",
      refreshMDB
    );
    props2.superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      refreshMDB
    );
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      refreshPath
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "contextStateUpdated",
        refreshMDB
      );
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        refreshMDB
      );
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        refreshPath
      );
    };
  }, [
    contextTable,
    dbSchema,
    props2.path,
    retrieveCachedTable,
    spaceInfo,
    tableData
  ]);
  p2(() => {
    loadTables();
  }, [spaceInfo]);
  const saveDB = async (newTable) => {
    if (spaceInfo.readOnly)
      return;
    await props2.superstate.spaceManager.saveTable(spaceInfo.path, newTable, true).then((f4) => {
      setTableData(newTable);
    });
  };
  p2(() => {
    if (!schemaTable || !dbSchema)
      return;
    retrieveCachedTable();
  }, [dbSchema]);
  p2(() => {
    if (tableData)
      getContextTags(tableData);
  }, [tableData]);
  const getContextTags = async (_tableData) => {
    const contextFields = _tableData.cols.filter((f4) => f4.type.includes("context")).map((f4) => f4.value).filter((f4) => !contexts.some((g4) => g4 == f4));
    for (const c4 of contextFields) {
      loadContextFields(c4);
    }
  };
  p2(() => {
    if (tableData) {
      for (const c4 of contexts) {
        loadContextFields(c4);
      }
    }
  }, [tableData]);
  const saveContextDB = async (newTable, tag) => {
    await props2.superstate.spaceManager.saveTable(tagSpacePathFromTag(tag), newTable, true).then((f4) => {
      setContextTable((t4) => ({
        ...t4,
        [tag]: newTable
      }));
    });
  };
  return /* @__PURE__ */ Cn.createElement(ContextMDBContext.Provider, {
    value: {
      tableData,
      contextTable,
      setContextTable,
      saveDB,
      saveContextDB,
      dbSchemas: schemas,
      saveSchema,
      deleteSchema,
      dbSchema,
      setDBSchema
    }
  }, props2.children);
};

// src/core/react/hooks/useLongPress.tsx
function isMouseEvent(e4) {
  return e4 && "screenX" in e4;
}

// src/core/react/components/SpaceView/Contexts/DataTypeView/OptionCell.tsx
var import_lodash4 = __toESM(require_lodash());
var OptionCell = (props2) => {
  var _a2, _b2, _c2;
  const parsedValue = F2(
    () => parseFieldValue(props2.options, "option"),
    [props2.options]
  );
  const serializeValue = (newOptions, value2) => {
    return JSON.stringify({
      ...value2,
      options: newOptions.map((f4) => ({ name: f4.name, value: f4.value }))
    });
  };
  const initialValue = (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).filter((f4) => f4);
  const initialOptions = [
    ...(_c2 = ((_b2 = parsedValue.options) != null ? _b2 : []).filter((f4) => f4.value).map((t4) => ({ name: t4.name, value: t4.value, removeable: true }))) != null ? _c2 : [],
    ...initialValue.map((f4) => ({ name: f4, value: f4, removeable: true }))
  ].filter(onlyUniqueProp("value")).filter((f4) => f4.value.length > 0);
  const [options, setOptions] = h2(initialOptions);
  const [value, setValue] = h2(initialValue);
  p2(() => {
    var _a3;
    setValue(
      (props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]).filter((f4) => f4)
    );
  }, [props2.initialValue]);
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4 != v3);
    setValue(newValues);
    props2.saveOptions(
      serializeValue(options, parsedValue),
      serializeMultiString(newValues)
    );
  };
  const removeOption = (option) => {
    const newOptions = options.filter((f4) => f4.value != option);
    const newValues = value.filter((f4) => f4 != option);
    setOptions(newOptions);
    setValue(newValues);
    props2.saveOptions(
      serializeValue(
        newOptions.map((f4) => f4.value),
        parsedValue
      ),
      serializeMultiString(newValues)
    );
  };
  const saveOptions = (_options, _value) => {
    if (!props2.multi) {
      setOptions(
        _options.filter((f4) => f4.length > 0).map((t4) => ({ name: t4, value: t4, removeable: true }))
      );
      setValue(_value);
      props2.saveOptions(
        serializeValue(
          _options.filter((f4) => f4.length > 0).map((t4) => ({ name: t4, value: t4 })),
          parsedValue
        ),
        serializeMultiString(_value)
      );
    } else {
      const newValues = (0, import_lodash4.uniq)([...value, _value[0]]);
      setOptions(
        _options.map((t4) => ({ name: t4, value: t4, removeable: true }))
      );
      setValue(newValues);
      props2.saveOptions(
        serializeValue(
          _options.filter((f4) => f4.length > 0).map((t4) => ({ name: t4, value: t4 })),
          parsedValue
        ),
        serializeMultiString(newValues)
      );
    }
  };
  const renameOption = (option, newValue) => {
    const newOptions = options.map(
      (t4) => t4.value == option ? { ...t4, name: newValue, value: newValue } : t4
    );
    const newValues = value.map((t4) => t4 == option ? newValue : t4);
    setOptions(newOptions);
    setValue(newValues);
    props2.saveOptions(
      serializeValue(newOptions, parsedValue),
      serializeMultiString(newValues)
    );
  };
  const showOptionMenu = (e4, option) => {
    const menuOptions = [];
    menuOptions.push(menuInput(option, (value2) => renameOption(option, value2)));
    props2.superstate.ui.openMenu(
      isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const menuProps = () => ({
    multi: false,
    editable: true,
    ui: props2.superstate.ui,
    value,
    options: !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options,
    saveOptions,
    removeOption,
    onMoreOption: showOptionMenu,
    placeholder: i18n_default.labels.optionItemSelectPlaceholder,
    searchable: true,
    showAll: true,
    onHide: () => props2.setEditMode(null)
  });
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    superstate: props2.superstate,
    baseClass: "mk-cell-option",
    value,
    menuProps,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};
var OptionCellBase = (props2) => {
  const {
    value,
    menuProps,
    removeValue,
    getLabelString,
    openItem,
    valueClass
  } = props2;
  const menuRef = _2(null);
  p2(() => {
    if (props2.editMode == 2) {
      if (!menuRef.current)
        showMenu();
    }
  }, [props2.editMode]);
  const ref2 = _2(null);
  const showMenu = () => {
    const offset2 = ref2.current.getBoundingClientRect();
    menuRef.current = props2.superstate.ui.openMenu(
      { x: offset2.left - 4, y: offset2.bottom - 4 },
      menuProps()
    );
  };
  const editable = props2.editMode > 0;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: props2.baseClass,
    ref: ref2
  }, value.length > 0 ? value.map((o3, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-cell-option-item"
  }, (getLabelString ? getLabelString(o3).length > 0 : o3.length > 0) ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: valueClass && valueClass(o3),
    onClick: () => openItem && openItem(o3)
  }, getLabelString ? getLabelString(o3) : o3), editable && props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    onClick: () => removeValue(o3),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)) : /* @__PURE__ */ Cn.createElement("div", null, i18n_default.labels.select), editable && !props2.multi && value.length > 0 ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => editable && !props2.multi && showMenu(),
    className: "mk-cell-option-select mk-icon-xxsmall mk-icon-rotated",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        "ui//mk-ui-collapse-sm"
      )
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null))) : editable && !props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => !props2.multi && showMenu()
  }, i18n_default.labels.select)) : props2.editMode == -1 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item mk-cell-empty"
  }, /* @__PURE__ */ Cn.createElement("div", null, i18n_default.menu.none)) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), editable && props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => editable && showMenu(),
    className: "mk-cell-option-new mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-plus")
    }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/ContextCell.tsx
var ContextCell = (props2) => {
  var _a2, _b2, _c2;
  const stringValueToLink = (strings) => strings.map((f4) => {
    return {
      label: parseLinkDisplayString(f4),
      path: parseLinkString(f4),
      ref: false
    };
  });
  const initialValue = stringValueToLink(
    props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]
  );
  const [propValues, setPropValues] = h2(
    (_c2 = (_b2 = props2.superstate.contextsIndex.get(props2.space)) == null ? void 0 : _b2.spaceMap[props2.spaceField]) == null ? void 0 : _c2[props2.path]
  );
  p2(() => {
    var _a3, _b3;
    setPropValues(
      (_b3 = (_a3 = props2.superstate.contextsIndex.get(props2.space)) == null ? void 0 : _a3.spaceMap[props2.spaceField]) == null ? void 0 : _b3[props2.path]
    );
  }, [props2.space, props2.spaceField]);
  const options = stringValueToLink([
    ...props2.superstate.spacesMap.getInverse(props2.space)
  ]).map((f4) => ({
    name: f4.label,
    value: f4.path
  }));
  const [value, setValue] = h2(initialValue);
  const allValues = F2(
    () => [
      ...value,
      ...(propValues != null ? propValues : []).map((f4) => ({
        label: parseLinkDisplayString(f4),
        path: parseLinkString(f4),
        ref: true
      }))
    ],
    [value, propValues]
  );
  const removeValue = (v3) => {
    if (v3.ref) {
      const newPropValues = propValues.filter((f4) => f4 != v3.path);
      setPropValues(newPropValues);
      updateContextValue(
        props2.superstate.spaceManager,
        props2.superstate.spacesIndex.get(props2.space).space,
        v3.path,
        props2.spaceField,
        props2.path,
        deletePropertyMultiValue
      );
    } else {
      const newValues = value.filter((f4) => f4.path != v3.path);
      setValue(newValues);
      props2.saveValue(serializeMultiString(newValues.map((f4) => f4.path)));
    }
  };
  p2(() => {
    var _a3;
    setValue(
      stringValueToLink(
        props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]
      )
    );
  }, [props2.initialValue]);
  const saveOptions = (_options, _value) => {
    insertContextItems(props2.superstate.spaceManager, _value, props2.space);
    if (!props2.multi) {
      setValue(
        _value.map((f4) => ({
          path: f4,
          label: pathNameToString(folderPathToString(f4)),
          ref: false
        }))
      );
      props2.saveValue(serializeMultiString(_value));
    } else {
      const newValue = _value[0];
      if (newValue) {
        const newValues = uniq([...value.map((f4) => f4.path), newValue]);
        setValue(
          newValues.map((f4) => ({
            label: pathNameToString(folderPathToString(f4)),
            path: f4,
            ref: false
          }))
        );
        props2.saveValue(serializeMultiString(newValues));
      }
    }
  };
  const openLink = async (o3) => {
    props2.superstate.ui.openPath(o3.path, false);
  };
  const menuProps = () => {
    const _options = !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options;
    return {
      ui: props2.superstate.ui,
      multi: false,
      editable: true,
      value: allValues.map((f4) => f4.path),
      options: _options,
      saveOptions,
      placeholder: i18n_default.labels.contextItemSelectPlaceholder,
      searchable: true,
      showAll: true,
      onHide: () => props2.setEditMode(null)
    };
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    baseClass: "mk-cell-context",
    superstate: props2.superstate,
    menuProps,
    openItem: openLink,
    getLabelString: (o3) => o3.label,
    value: allValues,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};

// node_modules/react-day-picker/dist/index.esm.js
var __assign = function() {
  __assign = Object.assign || function __assign5(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
function __rest(s5, e4) {
  var t4 = {};
  for (var p3 in s5)
    if (Object.prototype.hasOwnProperty.call(s5, p3) && e4.indexOf(p3) < 0)
      t4[p3] = s5[p3];
  if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p3 = Object.getOwnPropertySymbols(s5); i4 < p3.length; i4++) {
      if (e4.indexOf(p3[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p3[i4]))
        t4[p3[i4]] = s5[p3[i4]];
    }
  return t4;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i4 = 0, l3 = from.length, ar; i4 < l3; i4++) {
      if (ar || !(i4 in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i4);
        ar[i4] = from[i4];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}
function isDayPickerMultiple(props2) {
  return props2.mode === "multiple";
}
function isDayPickerRange(props2) {
  return props2.mode === "range";
}
function isDayPickerSingle(props2) {
  return props2.mode === "single";
}
var defaultClassNames = {
  root: "rdp",
  multiple_months: "rdp-multiple_months",
  with_weeknumber: "rdp-with_weeknumber",
  vhidden: "rdp-vhidden",
  button_reset: "rdp-button_reset",
  button: "rdp-button",
  caption: "rdp-caption",
  caption_start: "rdp-caption_start",
  caption_end: "rdp-caption_end",
  caption_between: "rdp-caption_between",
  caption_label: "rdp-caption_label",
  caption_dropdowns: "rdp-caption_dropdowns",
  dropdown: "rdp-dropdown",
  dropdown_month: "rdp-dropdown_month",
  dropdown_year: "rdp-dropdown_year",
  dropdown_icon: "rdp-dropdown_icon",
  months: "rdp-months",
  month: "rdp-month",
  table: "rdp-table",
  tbody: "rdp-tbody",
  tfoot: "rdp-tfoot",
  head: "rdp-head",
  head_row: "rdp-head_row",
  head_cell: "rdp-head_cell",
  nav: "rdp-nav",
  nav_button: "rdp-nav_button",
  nav_button_previous: "rdp-nav_button_previous",
  nav_button_next: "rdp-nav_button_next",
  nav_icon: "rdp-nav_icon",
  row: "rdp-row",
  weeknumber: "rdp-weeknumber",
  cell: "rdp-cell",
  day: "rdp-day",
  day_today: "rdp-day_today",
  day_outside: "rdp-day_outside",
  day_selected: "rdp-day_selected",
  day_disabled: "rdp-day_disabled",
  day_hidden: "rdp-day_hidden",
  day_range_start: "rdp-day_range_start",
  day_range_end: "rdp-day_range_end",
  day_range_middle: "rdp-day_range_middle"
};
function formatCaption(month, options) {
  return format(month, "LLLL y", options);
}
function formatDay(day, options) {
  return format(day, "d", options);
}
function formatMonthCaption(month, options) {
  return format(month, "LLLL", options);
}
function formatWeekNumber(weekNumber) {
  return "".concat(weekNumber);
}
function formatWeekdayName(weekday, options) {
  return format(weekday, "cccccc", options).toUpperCase();
}
function formatYearCaption(year, options) {
  return format(year, "yyyy", options);
}
var formatters3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  formatCaption,
  formatDay,
  formatMonthCaption,
  formatWeekNumber,
  formatWeekdayName,
  formatYearCaption
});
var labelDay = function(day, activeModifiers, options) {
  return format(day, "do MMMM (EEEE)", options);
};
var labelMonthDropdown = function() {
  return "Month: ";
};
var labelNext = function() {
  return "Go to next month";
};
var labelPrevious = function() {
  return "Go to previous month";
};
var labelWeekday = function(day, options) {
  return format(day, "cccc", options);
};
var labelWeekNumber = function(n2) {
  return "Week n. ".concat(n2);
};
var labelYearDropdown = function() {
  return "Year: ";
};
var labels = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  labelDay,
  labelMonthDropdown,
  labelNext,
  labelPrevious,
  labelWeekNumber,
  labelWeekday,
  labelYearDropdown
});
function getDefaultContextValues() {
  var captionLayout = "buttons";
  var classNames9 = defaultClassNames;
  var locale2 = en_US_default;
  var modifiersClassNames = {};
  var modifiers = {};
  var numberOfMonths = 1;
  var styles2 = {};
  var today = new Date();
  return {
    captionLayout,
    classNames: classNames9,
    formatters: formatters3,
    labels,
    locale: locale2,
    modifiersClassNames,
    modifiers,
    numberOfMonths,
    styles: styles2,
    today,
    mode: "default"
  };
}
function parseFromToProps(props2) {
  var fromYear = props2.fromYear, toYear = props2.toYear, fromMonth = props2.fromMonth, toMonth = props2.toMonth;
  var fromDate = props2.fromDate, toDate2 = props2.toDate;
  if (fromMonth) {
    fromDate = startOfMonth(fromMonth);
  } else if (fromYear) {
    fromDate = new Date(fromYear, 0, 1);
  }
  if (toMonth) {
    toDate2 = endOfMonth(toMonth);
  } else if (toYear) {
    toDate2 = new Date(toYear, 11, 31);
  }
  return {
    fromDate: fromDate ? startOfDay(fromDate) : void 0,
    toDate: toDate2 ? startOfDay(toDate2) : void 0
  };
}
var DayPickerContext = F(void 0);
function DayPickerProvider(props2) {
  var _a2;
  var initialProps = props2.initialProps;
  var defaultContextValues = getDefaultContextValues();
  var _b2 = parseFromToProps(initialProps), fromDate = _b2.fromDate, toDate2 = _b2.toDate;
  var captionLayout = (_a2 = initialProps.captionLayout) !== null && _a2 !== void 0 ? _a2 : defaultContextValues.captionLayout;
  if (captionLayout !== "buttons" && (!fromDate || !toDate2)) {
    captionLayout = "buttons";
  }
  var onSelect;
  if (isDayPickerSingle(initialProps) || isDayPickerMultiple(initialProps) || isDayPickerRange(initialProps)) {
    onSelect = initialProps.onSelect;
  }
  var value = __assign(__assign(__assign({}, defaultContextValues), initialProps), { captionLayout, classNames: __assign(__assign({}, defaultContextValues.classNames), initialProps.classNames), components: __assign({}, initialProps.components), formatters: __assign(__assign({}, defaultContextValues.formatters), initialProps.formatters), fromDate, labels: __assign(__assign({}, defaultContextValues.labels), initialProps.labels), mode: initialProps.mode || defaultContextValues.mode, modifiers: __assign(__assign({}, defaultContextValues.modifiers), initialProps.modifiers), modifiersClassNames: __assign(__assign({}, defaultContextValues.modifiersClassNames), initialProps.modifiersClassNames), onSelect, styles: __assign(__assign({}, defaultContextValues.styles), initialProps.styles), toDate: toDate2 });
  return Cn.createElement(DayPickerContext.Provider, { value }, props2.children);
}
function useDayPicker() {
  var context = q2(DayPickerContext);
  if (!context) {
    throw new Error("useDayPicker must be used within a DayPickerProvider.");
  }
  return context;
}
function CaptionLabel(props2) {
  var _a2 = useDayPicker(), locale2 = _a2.locale, classNames9 = _a2.classNames, styles2 = _a2.styles, formatCaption2 = _a2.formatters.formatCaption;
  return Cn.createElement("div", { className: classNames9.caption_label, style: styles2.caption_label, "aria-live": "polite", role: "presentation", id: props2.id }, formatCaption2(props2.displayMonth, { locale: locale2 }));
}
function IconDropdown(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "8px", height: "8px", viewBox: "0 0 120 120", "data-testid": "iconDropdown" }, props2),
    Cn.createElement("path", { d: "M4.22182541,48.2218254 C8.44222828,44.0014225 15.2388494,43.9273804 19.5496459,47.9996989 L19.7781746,48.2218254 L60,88.443 L100.221825,48.2218254 C104.442228,44.0014225 111.238849,43.9273804 115.549646,47.9996989 L115.778175,48.2218254 C119.998577,52.4422283 120.07262,59.2388494 116.000301,63.5496459 L115.778175,63.7781746 L67.7781746,111.778175 C63.5577717,115.998577 56.7611506,116.07262 52.4503541,112.000301 L52.2218254,111.778175 L4.22182541,63.7781746 C-0.0739418023,59.4824074 -0.0739418023,52.5175926 4.22182541,48.2218254 Z", fill: "currentColor", fillRule: "nonzero" })
  );
}
function Dropdown(props2) {
  var _a2, _b2;
  var onChange = props2.onChange, value = props2.value, children = props2.children, caption = props2.caption, className = props2.className, style = props2.style;
  var dayPicker = useDayPicker();
  var IconDropdownComponent = (_b2 = (_a2 = dayPicker.components) === null || _a2 === void 0 ? void 0 : _a2.IconDropdown) !== null && _b2 !== void 0 ? _b2 : IconDropdown;
  return Cn.createElement(
    "div",
    { className, style },
    Cn.createElement("span", { className: dayPicker.classNames.vhidden }, props2["aria-label"]),
    Cn.createElement("select", { name: props2.name, "aria-label": props2["aria-label"], className: dayPicker.classNames.dropdown, style: dayPicker.styles.dropdown, value, onChange }, children),
    Cn.createElement(
      "div",
      { className: dayPicker.classNames.caption_label, style: dayPicker.styles.caption_label, "aria-hidden": "true" },
      caption,
      Cn.createElement(IconDropdownComponent, { className: dayPicker.classNames.dropdown_icon, style: dayPicker.styles.dropdown_icon })
    )
  );
}
function MonthsDropdown(props2) {
  var _a2;
  var _b2 = useDayPicker(), fromDate = _b2.fromDate, toDate2 = _b2.toDate, styles2 = _b2.styles, locale2 = _b2.locale, formatMonthCaption2 = _b2.formatters.formatMonthCaption, classNames9 = _b2.classNames, components = _b2.components, labelMonthDropdown2 = _b2.labels.labelMonthDropdown;
  if (!fromDate)
    return Cn.createElement(Cn.Fragment, null);
  if (!toDate2)
    return Cn.createElement(Cn.Fragment, null);
  var dropdownMonths = [];
  if (isSameYear(fromDate, toDate2)) {
    var date = startOfMonth(fromDate);
    for (var month = fromDate.getMonth(); month <= toDate2.getMonth(); month++) {
      dropdownMonths.push(setMonth(date, month));
    }
  } else {
    var date = startOfMonth(new Date());
    for (var month = 0; month <= 11; month++) {
      dropdownMonths.push(setMonth(date, month));
    }
  }
  var handleChange = function(e4) {
    var selectedMonth = Number(e4.target.value);
    var newMonth = setMonth(startOfMonth(props2.displayMonth), selectedMonth);
    props2.onChange(newMonth);
  };
  var DropdownComponent2 = (_a2 = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a2 !== void 0 ? _a2 : Dropdown;
  return Cn.createElement(DropdownComponent2, { name: "months", "aria-label": labelMonthDropdown2(), className: classNames9.dropdown_month, style: styles2.dropdown_month, onChange: handleChange, value: props2.displayMonth.getMonth(), caption: formatMonthCaption2(props2.displayMonth, { locale: locale2 }) }, dropdownMonths.map(function(m5) {
    return Cn.createElement("option", { key: m5.getMonth(), value: m5.getMonth() }, formatMonthCaption2(m5, { locale: locale2 }));
  }));
}
function YearsDropdown(props2) {
  var _a2;
  var displayMonth = props2.displayMonth;
  var _b2 = useDayPicker(), fromDate = _b2.fromDate, toDate2 = _b2.toDate, locale2 = _b2.locale, styles2 = _b2.styles, classNames9 = _b2.classNames, components = _b2.components, formatYearCaption2 = _b2.formatters.formatYearCaption, labelYearDropdown2 = _b2.labels.labelYearDropdown;
  var years = [];
  if (!fromDate)
    return Cn.createElement(Cn.Fragment, null);
  if (!toDate2)
    return Cn.createElement(Cn.Fragment, null);
  var fromYear = fromDate.getFullYear();
  var toYear = toDate2.getFullYear();
  for (var year = fromYear; year <= toYear; year++) {
    years.push(setYear(startOfYear(new Date()), year));
  }
  var handleChange = function(e4) {
    var newMonth = setYear(startOfMonth(displayMonth), Number(e4.target.value));
    props2.onChange(newMonth);
  };
  var DropdownComponent2 = (_a2 = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a2 !== void 0 ? _a2 : Dropdown;
  return Cn.createElement(DropdownComponent2, { name: "years", "aria-label": labelYearDropdown2(), className: classNames9.dropdown_year, style: styles2.dropdown_year, onChange: handleChange, value: displayMonth.getFullYear(), caption: formatYearCaption2(displayMonth, { locale: locale2 }) }, years.map(function(year2) {
    return Cn.createElement("option", { key: year2.getFullYear(), value: year2.getFullYear() }, formatYearCaption2(year2, { locale: locale2 }));
  }));
}
function useControlledValue(defaultValue2, controlledValue) {
  var _a2 = h2(defaultValue2), uncontrolledValue = _a2[0], setValue = _a2[1];
  var value = controlledValue === void 0 ? uncontrolledValue : controlledValue;
  return [value, setValue];
}
function getInitialMonth(context) {
  var month = context.month, defaultMonth = context.defaultMonth, today = context.today;
  var initialMonth = month || defaultMonth || today || new Date();
  var toDate2 = context.toDate, fromDate = context.fromDate, _a2 = context.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  if (toDate2 && differenceInCalendarMonths(toDate2, initialMonth) < 0) {
    var offset2 = -1 * (numberOfMonths - 1);
    initialMonth = addMonths(toDate2, offset2);
  }
  if (fromDate && differenceInCalendarMonths(initialMonth, fromDate) < 0) {
    initialMonth = fromDate;
  }
  return startOfMonth(initialMonth);
}
function useNavigationState() {
  var context = useDayPicker();
  var initialMonth = getInitialMonth(context);
  var _a2 = useControlledValue(initialMonth, context.month), month = _a2[0], setMonth2 = _a2[1];
  var goToMonth = function(date) {
    var _a3;
    if (context.disableNavigation)
      return;
    var month2 = startOfMonth(date);
    setMonth2(month2);
    (_a3 = context.onMonthChange) === null || _a3 === void 0 ? void 0 : _a3.call(context, month2);
  };
  return [month, goToMonth];
}
function getDisplayMonths(month, _a2) {
  var reverseMonths = _a2.reverseMonths, numberOfMonths = _a2.numberOfMonths;
  var start = startOfMonth(month);
  var end = startOfMonth(addMonths(start, numberOfMonths));
  var monthsDiff = differenceInCalendarMonths(end, start);
  var months = [];
  for (var i4 = 0; i4 < monthsDiff; i4++) {
    var nextMonth = addMonths(start, i4);
    months.push(nextMonth);
  }
  if (reverseMonths)
    months = months.reverse();
  return months;
}
function getNextMonth(startingMonth, options) {
  if (options.disableNavigation) {
    return void 0;
  }
  var toDate2 = options.toDate, pagedNavigation = options.pagedNavigation, _a2 = options.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  var offset2 = pagedNavigation ? numberOfMonths : 1;
  var month = startOfMonth(startingMonth);
  if (!toDate2) {
    return addMonths(month, offset2);
  }
  var monthsDiff = differenceInCalendarMonths(toDate2, startingMonth);
  if (monthsDiff < numberOfMonths) {
    return void 0;
  }
  return addMonths(month, offset2);
}
function getPreviousMonth(startingMonth, options) {
  if (options.disableNavigation) {
    return void 0;
  }
  var fromDate = options.fromDate, pagedNavigation = options.pagedNavigation, _a2 = options.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  var offset2 = pagedNavigation ? numberOfMonths : 1;
  var month = startOfMonth(startingMonth);
  if (!fromDate) {
    return addMonths(month, -offset2);
  }
  var monthsDiff = differenceInCalendarMonths(month, fromDate);
  if (monthsDiff <= 0) {
    return void 0;
  }
  return addMonths(month, -offset2);
}
var NavigationContext = F(void 0);
function NavigationProvider(props2) {
  var dayPicker = useDayPicker();
  var _a2 = useNavigationState(), currentMonth = _a2[0], goToMonth = _a2[1];
  var displayMonths = getDisplayMonths(currentMonth, dayPicker);
  var nextMonth = getNextMonth(currentMonth, dayPicker);
  var previousMonth = getPreviousMonth(currentMonth, dayPicker);
  var isDateDisplayed = function(date) {
    return displayMonths.some(function(displayMonth) {
      return isSameMonth(date, displayMonth);
    });
  };
  var goToDate = function(date, refDate) {
    if (isDateDisplayed(date)) {
      return;
    }
    if (refDate && isBefore(date, refDate)) {
      goToMonth(addMonths(date, 1 + dayPicker.numberOfMonths * -1));
    } else {
      goToMonth(date);
    }
  };
  var value = {
    currentMonth,
    displayMonths,
    goToMonth,
    goToDate,
    previousMonth,
    nextMonth,
    isDateDisplayed
  };
  return Cn.createElement(NavigationContext.Provider, { value }, props2.children);
}
function useNavigation() {
  var context = q2(NavigationContext);
  if (!context) {
    throw new Error("useNavigation must be used within a NavigationProvider");
  }
  return context;
}
function CaptionDropdowns(props2) {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, styles2 = _b2.styles, components = _b2.components;
  var goToMonth = useNavigation().goToMonth;
  var handleMonthChange = function(newMonth) {
    goToMonth(newMonth);
  };
  var CaptionLabelComponent = (_a2 = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a2 !== void 0 ? _a2 : CaptionLabel;
  var captionLabel = Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth });
  return Cn.createElement(
    "div",
    { className: classNames9.caption_dropdowns, style: styles2.caption_dropdowns },
    Cn.createElement("div", { className: classNames9.vhidden }, captionLabel),
    Cn.createElement(MonthsDropdown, { onChange: handleMonthChange, displayMonth: props2.displayMonth }),
    Cn.createElement(YearsDropdown, { onChange: handleMonthChange, displayMonth: props2.displayMonth })
  );
}
function IconLeft(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "16px", height: "16px", viewBox: "0 0 120 120" }, props2),
    Cn.createElement("path", { d: "M69.490332,3.34314575 C72.6145263,0.218951416 77.6798462,0.218951416 80.8040405,3.34314575 C83.8617626,6.40086786 83.9268205,11.3179931 80.9992143,14.4548388 L80.8040405,14.6568542 L35.461,60 L80.8040405,105.343146 C83.8617626,108.400868 83.9268205,113.317993 80.9992143,116.454839 L80.8040405,116.656854 C77.7463184,119.714576 72.8291931,119.779634 69.6923475,116.852028 L69.490332,116.656854 L18.490332,65.6568542 C15.4326099,62.5991321 15.367552,57.6820069 18.2951583,54.5451612 L18.490332,54.3431458 L69.490332,3.34314575 Z", fill: "currentColor", fillRule: "nonzero" })
  );
}
function IconRight(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "16px", height: "16px", viewBox: "0 0 120 120" }, props2),
    Cn.createElement("path", { d: "M49.8040405,3.34314575 C46.6798462,0.218951416 41.6145263,0.218951416 38.490332,3.34314575 C35.4326099,6.40086786 35.367552,11.3179931 38.2951583,14.4548388 L38.490332,14.6568542 L83.8333725,60 L38.490332,105.343146 C35.4326099,108.400868 35.367552,113.317993 38.2951583,116.454839 L38.490332,116.656854 C41.5480541,119.714576 46.4651794,119.779634 49.602025,116.852028 L49.8040405,116.656854 L100.804041,65.6568542 C103.861763,62.5991321 103.926821,57.6820069 100.999214,54.5451612 L100.804041,54.3431458 L49.8040405,3.34314575 Z", fill: "currentColor" })
  );
}
var Button = k3(function(props2, ref2) {
  var _a2 = useDayPicker(), classNames9 = _a2.classNames, styles2 = _a2.styles;
  var classNamesArr = [classNames9.button_reset, classNames9.button];
  if (props2.className) {
    classNamesArr.push(props2.className);
  }
  var className = classNamesArr.join(" ");
  var style = __assign(__assign({}, styles2.button_reset), styles2.button);
  if (props2.style) {
    Object.assign(style, props2.style);
  }
  return Cn.createElement("button", __assign({}, props2, { ref: ref2, type: "button", className, style }));
});
function Navigation(props2) {
  var _a2, _b2;
  var _c2 = useDayPicker(), dir = _c2.dir, locale2 = _c2.locale, classNames9 = _c2.classNames, styles2 = _c2.styles, _d2 = _c2.labels, labelPrevious2 = _d2.labelPrevious, labelNext2 = _d2.labelNext, components = _c2.components;
  if (!props2.nextMonth && !props2.previousMonth) {
    return Cn.createElement(Cn.Fragment, null);
  }
  var previousLabel = labelPrevious2(props2.previousMonth, { locale: locale2 });
  var previousClassName = [
    classNames9.nav_button,
    classNames9.nav_button_previous
  ].join(" ");
  var nextLabel = labelNext2(props2.nextMonth, { locale: locale2 });
  var nextClassName = [
    classNames9.nav_button,
    classNames9.nav_button_next
  ].join(" ");
  var IconRightComponent = (_a2 = components === null || components === void 0 ? void 0 : components.IconRight) !== null && _a2 !== void 0 ? _a2 : IconRight;
  var IconLeftComponent = (_b2 = components === null || components === void 0 ? void 0 : components.IconLeft) !== null && _b2 !== void 0 ? _b2 : IconLeft;
  return Cn.createElement(
    "div",
    { className: classNames9.nav, style: styles2.nav },
    !props2.hidePrevious && Cn.createElement(Button, { name: "previous-month", "aria-label": previousLabel, className: previousClassName, style: styles2.nav_button_previous, disabled: !props2.previousMonth, onClick: props2.onPreviousClick }, dir === "rtl" ? Cn.createElement(IconRightComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }) : Cn.createElement(IconLeftComponent, { className: classNames9.nav_icon, style: styles2.nav_icon })),
    !props2.hideNext && Cn.createElement(Button, { name: "next-month", "aria-label": nextLabel, className: nextClassName, style: styles2.nav_button_next, disabled: !props2.nextMonth, onClick: props2.onNextClick }, dir === "rtl" ? Cn.createElement(IconLeftComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }) : Cn.createElement(IconRightComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }))
  );
}
function CaptionNavigation(props2) {
  var _a2;
  var _b2 = useDayPicker(), numberOfMonths = _b2.numberOfMonths, dir = _b2.dir;
  var _c2 = useNavigation(), previousMonth = _c2.previousMonth, nextMonth = _c2.nextMonth, goToMonth = _c2.goToMonth, displayMonths = _c2.displayMonths;
  var displayIndex = displayMonths.findIndex(function(month) {
    return isSameMonth(props2.displayMonth, month);
  });
  var isFirst = displayIndex === 0;
  var isLast = displayIndex === displayMonths.length - 1;
  if (dir === "rtl") {
    _a2 = [isFirst, isLast], isLast = _a2[0], isFirst = _a2[1];
  }
  var hideNext = numberOfMonths > 1 && (isFirst || !isLast);
  var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);
  var handlePreviousClick = function() {
    if (!previousMonth)
      return;
    goToMonth(previousMonth);
  };
  var handleNextClick = function() {
    if (!nextMonth)
      return;
    goToMonth(nextMonth);
  };
  return Cn.createElement(Navigation, { displayMonth: props2.displayMonth, hideNext, hidePrevious, nextMonth, previousMonth, onPreviousClick: handlePreviousClick, onNextClick: handleNextClick });
}
function Caption(props2) {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, disableNavigation = _b2.disableNavigation, styles2 = _b2.styles, captionLayout = _b2.captionLayout, components = _b2.components;
  var CaptionLabelComponent = (_a2 = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a2 !== void 0 ? _a2 : CaptionLabel;
  var caption;
  if (disableNavigation) {
    caption = Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth });
  } else if (captionLayout === "dropdown") {
    caption = Cn.createElement(CaptionDropdowns, { displayMonth: props2.displayMonth, id: props2.id });
  } else if (captionLayout === "dropdown-buttons") {
    caption = Cn.createElement(
      Cn.Fragment,
      null,
      Cn.createElement(CaptionDropdowns, { displayMonth: props2.displayMonth, id: props2.id }),
      Cn.createElement(CaptionNavigation, { displayMonth: props2.displayMonth, id: props2.id })
    );
  } else {
    caption = Cn.createElement(
      Cn.Fragment,
      null,
      Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth }),
      Cn.createElement(CaptionNavigation, { displayMonth: props2.displayMonth, id: props2.id })
    );
  }
  return Cn.createElement("div", { className: classNames9.caption, style: styles2.caption }, caption);
}
function Footer(props2) {
  var _a2 = useDayPicker(), footer = _a2.footer, styles2 = _a2.styles, tfoot = _a2.classNames.tfoot;
  if (!footer)
    return Cn.createElement(Cn.Fragment, null);
  return Cn.createElement(
    "tfoot",
    { className: tfoot, style: styles2.tfoot },
    Cn.createElement(
      "tr",
      null,
      Cn.createElement("td", { colSpan: 8 }, footer)
    )
  );
}
function getWeekdays(locale2, weekStartsOn, ISOWeek) {
  var start = ISOWeek ? startOfISOWeek(new Date()) : startOfWeek(new Date(), { locale: locale2, weekStartsOn });
  var days = [];
  for (var i4 = 0; i4 < 7; i4++) {
    var day = addDays(start, i4);
    days.push(day);
  }
  return days;
}
function HeadRow() {
  var _a2 = useDayPicker(), classNames9 = _a2.classNames, styles2 = _a2.styles, showWeekNumber = _a2.showWeekNumber, locale2 = _a2.locale, weekStartsOn = _a2.weekStartsOn, ISOWeek = _a2.ISOWeek, formatWeekdayName2 = _a2.formatters.formatWeekdayName, labelWeekday2 = _a2.labels.labelWeekday;
  var weekdays = getWeekdays(locale2, weekStartsOn, ISOWeek);
  return Cn.createElement(
    "tr",
    { style: styles2.head_row, className: classNames9.head_row },
    showWeekNumber && Cn.createElement("th", { scope: "col", style: styles2.head_cell, className: classNames9.head_cell }),
    weekdays.map(function(weekday, i4) {
      return Cn.createElement("th", { key: i4, scope: "col", className: classNames9.head_cell, style: styles2.head_cell, "aria-label": labelWeekday2(weekday, { locale: locale2 }) }, formatWeekdayName2(weekday, { locale: locale2 }));
    })
  );
}
function Head() {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, styles2 = _b2.styles, components = _b2.components;
  var HeadRowComponent = (_a2 = components === null || components === void 0 ? void 0 : components.HeadRow) !== null && _a2 !== void 0 ? _a2 : HeadRow;
  return Cn.createElement(
    "thead",
    { style: styles2.head, className: classNames9.head },
    Cn.createElement(HeadRowComponent, null)
  );
}
function DayContent(props2) {
  var _a2 = useDayPicker(), locale2 = _a2.locale, formatDay2 = _a2.formatters.formatDay;
  return Cn.createElement(Cn.Fragment, null, formatDay2(props2.date, { locale: locale2 }));
}
var SelectMultipleContext = F(void 0);
function SelectMultipleProvider(props2) {
  if (!isDayPickerMultiple(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0,
      modifiers: {
        disabled: []
      }
    };
    return Cn.createElement(SelectMultipleContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectMultipleProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectMultipleProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var selected = initialProps.selected, min3 = initialProps.min, max3 = initialProps.max;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b2;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    var isMinSelected = Boolean(activeModifiers.selected && min3 && (selected === null || selected === void 0 ? void 0 : selected.length) === min3);
    if (isMinSelected) {
      return;
    }
    var isMaxSelected = Boolean(!activeModifiers.selected && max3 && (selected === null || selected === void 0 ? void 0 : selected.length) === max3);
    if (isMaxSelected) {
      return;
    }
    var selectedDays = selected ? __spreadArray([], selected, true) : [];
    if (activeModifiers.selected) {
      var index = selectedDays.findIndex(function(selectedDay) {
        return isSameDay(day, selectedDay);
      });
      selectedDays.splice(index, 1);
    } else {
      selectedDays.push(day);
    }
    (_b2 = initialProps.onSelect) === null || _b2 === void 0 ? void 0 : _b2.call(initialProps, selectedDays, day, activeModifiers, e4);
  };
  var modifiers = {
    disabled: []
  };
  if (selected) {
    modifiers.disabled.push(function(day) {
      var isMaxSelected = max3 && selected.length > max3 - 1;
      var isSelected = selected.some(function(selectedDay) {
        return isSameDay(selectedDay, day);
      });
      return Boolean(isMaxSelected && !isSelected);
    });
  }
  var contextValue = {
    selected,
    onDayClick,
    modifiers
  };
  return Cn.createElement(SelectMultipleContext.Provider, { value: contextValue }, children);
}
function useSelectMultiple() {
  var context = q2(SelectMultipleContext);
  if (!context) {
    throw new Error("useSelectMultiple must be used within a SelectMultipleProvider");
  }
  return context;
}
function addToRange(day, range) {
  var _a2 = range || {}, from = _a2.from, to = _a2.to;
  if (!from) {
    return { from: day, to: void 0 };
  }
  if (!to && isSameDay(from, day)) {
    return { from, to: day };
  }
  if (!to && isBefore(day, from)) {
    return { from: day, to: from };
  }
  if (!to) {
    return { from, to: day };
  }
  if (isSameDay(to, day) && isSameDay(from, day)) {
    return void 0;
  }
  if (isSameDay(to, day)) {
    return { from: to, to: void 0 };
  }
  if (isSameDay(from, day)) {
    return void 0;
  }
  if (isAfter(from, day)) {
    return { from: day, to };
  }
  return { from, to: day };
}
var SelectRangeContext = F(void 0);
function SelectRangeProvider(props2) {
  if (!isDayPickerRange(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0,
      modifiers: {
        range_start: [],
        range_end: [],
        range_middle: [],
        disabled: []
      }
    };
    return Cn.createElement(SelectRangeContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectRangeProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectRangeProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var selected = initialProps.selected;
  var _b2 = selected || {}, selectedFrom = _b2.from, selectedTo = _b2.to;
  var min3 = initialProps.min;
  var max3 = initialProps.max;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b3;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    var newRange = addToRange(day, selected);
    (_b3 = initialProps.onSelect) === null || _b3 === void 0 ? void 0 : _b3.call(initialProps, newRange, day, activeModifiers, e4);
  };
  var modifiers = {
    range_start: [],
    range_end: [],
    range_middle: [],
    disabled: []
  };
  if (selectedFrom) {
    modifiers.range_start = [selectedFrom];
    if (!selectedTo) {
      modifiers.range_end = [selectedFrom];
    } else {
      modifiers.range_end = [selectedTo];
      if (!isSameDay(selectedFrom, selectedTo)) {
        modifiers.range_middle = [
          {
            after: selectedFrom,
            before: selectedTo
          }
        ];
      }
    }
  }
  if (min3) {
    if (selectedFrom && !selectedTo) {
      modifiers.disabled.push({
        after: subDays(selectedFrom, min3 - 1),
        before: addDays(selectedFrom, min3 - 1)
      });
    }
    if (selectedFrom && selectedTo) {
      modifiers.disabled.push({
        after: selectedFrom,
        before: addDays(selectedFrom, min3 - 1)
      });
    }
  }
  if (max3) {
    if (selectedFrom && !selectedTo) {
      modifiers.disabled.push({
        before: addDays(selectedFrom, -max3 + 1)
      });
      modifiers.disabled.push({
        after: addDays(selectedFrom, max3 - 1)
      });
    }
    if (selectedFrom && selectedTo) {
      var selectedCount = differenceInCalendarDays(selectedTo, selectedFrom) + 1;
      var offset2 = max3 - selectedCount;
      modifiers.disabled.push({
        before: subDays(selectedFrom, offset2)
      });
      modifiers.disabled.push({
        after: addDays(selectedTo, offset2)
      });
    }
  }
  return Cn.createElement(SelectRangeContext.Provider, { value: { selected, onDayClick, modifiers } }, children);
}
function useSelectRange() {
  var context = q2(SelectRangeContext);
  if (!context) {
    throw new Error("useSelectRange must be used within a SelectRangeProvider");
  }
  return context;
}
function matcherToArray(matcher) {
  if (Array.isArray(matcher)) {
    return __spreadArray([], matcher, true);
  } else if (matcher !== void 0) {
    return [matcher];
  } else {
    return [];
  }
}
function getCustomModifiers(dayModifiers) {
  var customModifiers = {};
  Object.entries(dayModifiers).forEach(function(_a2) {
    var modifier = _a2[0], matcher = _a2[1];
    customModifiers[modifier] = matcherToArray(matcher);
  });
  return customModifiers;
}
var InternalModifier;
(function(InternalModifier2) {
  InternalModifier2["Outside"] = "outside";
  InternalModifier2["Disabled"] = "disabled";
  InternalModifier2["Selected"] = "selected";
  InternalModifier2["Hidden"] = "hidden";
  InternalModifier2["Today"] = "today";
  InternalModifier2["RangeStart"] = "range_start";
  InternalModifier2["RangeEnd"] = "range_end";
  InternalModifier2["RangeMiddle"] = "range_middle";
})(InternalModifier || (InternalModifier = {}));
var Selected = InternalModifier.Selected;
var Disabled = InternalModifier.Disabled;
var Hidden = InternalModifier.Hidden;
var Today = InternalModifier.Today;
var RangeEnd = InternalModifier.RangeEnd;
var RangeMiddle = InternalModifier.RangeMiddle;
var RangeStart = InternalModifier.RangeStart;
var Outside2 = InternalModifier.Outside;
function getInternalModifiers(dayPicker, selectMultiple, selectRange2) {
  var _a2;
  var internalModifiers = (_a2 = {}, _a2[Selected] = matcherToArray(dayPicker.selected), _a2[Disabled] = matcherToArray(dayPicker.disabled), _a2[Hidden] = matcherToArray(dayPicker.hidden), _a2[Today] = [dayPicker.today], _a2[RangeEnd] = [], _a2[RangeMiddle] = [], _a2[RangeStart] = [], _a2[Outside2] = [], _a2);
  if (dayPicker.fromDate) {
    internalModifiers[Disabled].push({ before: dayPicker.fromDate });
  }
  if (dayPicker.toDate) {
    internalModifiers[Disabled].push({ after: dayPicker.toDate });
  }
  if (isDayPickerMultiple(dayPicker)) {
    internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectMultiple.modifiers[Disabled]);
  } else if (isDayPickerRange(dayPicker)) {
    internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectRange2.modifiers[Disabled]);
    internalModifiers[RangeStart] = selectRange2.modifiers[RangeStart];
    internalModifiers[RangeMiddle] = selectRange2.modifiers[RangeMiddle];
    internalModifiers[RangeEnd] = selectRange2.modifiers[RangeEnd];
  }
  return internalModifiers;
}
var ModifiersContext = F(void 0);
function ModifiersProvider(props2) {
  var dayPicker = useDayPicker();
  var selectMultiple = useSelectMultiple();
  var selectRange2 = useSelectRange();
  var internalModifiers = getInternalModifiers(dayPicker, selectMultiple, selectRange2);
  var customModifiers = getCustomModifiers(dayPicker.modifiers);
  var modifiers = __assign(__assign({}, internalModifiers), customModifiers);
  return Cn.createElement(ModifiersContext.Provider, { value: modifiers }, props2.children);
}
function useModifiers() {
  var context = q2(ModifiersContext);
  if (!context) {
    throw new Error("useModifiers must be used within a ModifiersProvider");
  }
  return context;
}
function isDateInterval(matcher) {
  return Boolean(matcher && typeof matcher === "object" && "before" in matcher && "after" in matcher);
}
function isDateRange(value) {
  return Boolean(value && typeof value === "object" && "from" in value);
}
function isDateAfterType(value) {
  return Boolean(value && typeof value === "object" && "after" in value);
}
function isDateBeforeType(value) {
  return Boolean(value && typeof value === "object" && "before" in value);
}
function isDayOfWeekType(value) {
  return Boolean(value && typeof value === "object" && "dayOfWeek" in value);
}
function isDateInRange(date, range) {
  var _a2;
  var from = range.from, to = range.to;
  if (!from) {
    return false;
  }
  if (!to && isSameDay(from, date)) {
    return true;
  }
  if (!to) {
    return false;
  }
  var isRangeInverted = differenceInCalendarDays(to, from) < 0;
  if (isRangeInverted) {
    _a2 = [to, from], from = _a2[0], to = _a2[1];
  }
  var isInRange = differenceInCalendarDays(date, from) >= 0 && differenceInCalendarDays(to, date) >= 0;
  return isInRange;
}
function isDateType(value) {
  return isDate(value);
}
function isArrayOfDates(value) {
  return Array.isArray(value) && value.every(isDate);
}
function isMatch(day, matchers) {
  return matchers.some(function(matcher) {
    if (typeof matcher === "boolean") {
      return matcher;
    }
    if (isDateType(matcher)) {
      return isSameDay(day, matcher);
    }
    if (isArrayOfDates(matcher)) {
      return matcher.includes(day);
    }
    if (isDateRange(matcher)) {
      return isDateInRange(day, matcher);
    }
    if (isDayOfWeekType(matcher)) {
      return matcher.dayOfWeek.includes(day.getDay());
    }
    if (isDateInterval(matcher)) {
      var diffBefore = differenceInCalendarDays(matcher.before, day);
      var diffAfter = differenceInCalendarDays(matcher.after, day);
      var isDayBefore = diffBefore > 0;
      var isDayAfter = diffAfter < 0;
      var isClosedInterval = isAfter(matcher.before, matcher.after);
      if (isClosedInterval) {
        return isDayAfter && isDayBefore;
      } else {
        return isDayBefore || isDayAfter;
      }
    }
    if (isDateAfterType(matcher)) {
      return differenceInCalendarDays(day, matcher.after) > 0;
    }
    if (isDateBeforeType(matcher)) {
      return differenceInCalendarDays(matcher.before, day) > 0;
    }
    if (typeof matcher === "function") {
      return matcher(day);
    }
    return false;
  });
}
function getActiveModifiers(day, modifiers, displayMonth) {
  var matchedModifiers = Object.keys(modifiers).reduce(function(result, key2) {
    var modifier = modifiers[key2];
    if (isMatch(day, modifier)) {
      result.push(key2);
    }
    return result;
  }, []);
  var activeModifiers = {};
  matchedModifiers.forEach(function(modifier) {
    return activeModifiers[modifier] = true;
  });
  if (displayMonth && !isSameMonth(day, displayMonth)) {
    activeModifiers.outside = true;
  }
  return activeModifiers;
}
function getInitialFocusTarget(displayMonths, modifiers) {
  var firstDayInMonth = startOfMonth(displayMonths[0]);
  var lastDayInMonth = endOfMonth(displayMonths[displayMonths.length - 1]);
  var firstFocusableDay;
  var today;
  var date = firstDayInMonth;
  while (date <= lastDayInMonth) {
    var activeModifiers = getActiveModifiers(date, modifiers);
    var isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;
    if (!isFocusable) {
      date = addDays(date, 1);
      continue;
    }
    if (activeModifiers.selected) {
      return date;
    }
    if (activeModifiers.today && !today) {
      today = date;
    }
    if (!firstFocusableDay) {
      firstFocusableDay = date;
    }
    date = addDays(date, 1);
  }
  if (today) {
    return today;
  } else {
    return firstFocusableDay;
  }
}
var MAX_RETRY = 365;
function getNextFocus(focusedDay, options) {
  var moveBy = options.moveBy, direction = options.direction, context = options.context, modifiers = options.modifiers, _a2 = options.retry, retry = _a2 === void 0 ? { count: 0, lastFocused: focusedDay } : _a2;
  var weekStartsOn = context.weekStartsOn, fromDate = context.fromDate, toDate2 = context.toDate, locale2 = context.locale;
  var moveFns = {
    day: addDays,
    week: addWeeks,
    month: addMonths,
    year: addYears,
    startOfWeek: function(date) {
      return context.ISOWeek ? startOfISOWeek(date) : startOfWeek(date, { locale: locale2, weekStartsOn });
    },
    endOfWeek: function(date) {
      return context.ISOWeek ? endOfISOWeek(date) : endOfWeek(date, { locale: locale2, weekStartsOn });
    }
  };
  var newFocusedDay = moveFns[moveBy](focusedDay, direction === "after" ? 1 : -1);
  if (direction === "before" && fromDate) {
    newFocusedDay = max([fromDate, newFocusedDay]);
  } else if (direction === "after" && toDate2) {
    newFocusedDay = min([toDate2, newFocusedDay]);
  }
  var isFocusable = true;
  if (modifiers) {
    var activeModifiers = getActiveModifiers(newFocusedDay, modifiers);
    isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;
  }
  if (isFocusable) {
    return newFocusedDay;
  } else {
    if (retry.count > MAX_RETRY) {
      return retry.lastFocused;
    }
    return getNextFocus(newFocusedDay, {
      moveBy,
      direction,
      context,
      modifiers,
      retry: __assign(__assign({}, retry), { count: retry.count + 1 })
    });
  }
}
var FocusContext = F(void 0);
function FocusProvider(props2) {
  var navigation = useNavigation();
  var modifiers = useModifiers();
  var _a2 = h2(), focusedDay = _a2[0], setFocusedDay = _a2[1];
  var _b2 = h2(), lastFocused = _b2[0], setLastFocused = _b2[1];
  var initialFocusTarget = getInitialFocusTarget(navigation.displayMonths, modifiers);
  var focusTarget = (focusedDay !== null && focusedDay !== void 0 ? focusedDay : lastFocused && navigation.isDateDisplayed(lastFocused)) ? lastFocused : initialFocusTarget;
  var blur = function() {
    setLastFocused(focusedDay);
    setFocusedDay(void 0);
  };
  var focus = function(date) {
    setFocusedDay(date);
  };
  var context = useDayPicker();
  var moveFocus = function(moveBy, direction) {
    if (!focusedDay)
      return;
    var nextFocused = getNextFocus(focusedDay, {
      moveBy,
      direction,
      context,
      modifiers
    });
    if (isSameDay(focusedDay, nextFocused))
      return void 0;
    navigation.goToDate(nextFocused, focusedDay);
    focus(nextFocused);
  };
  var value = {
    focusedDay,
    focusTarget,
    blur,
    focus,
    focusDayAfter: function() {
      return moveFocus("day", "after");
    },
    focusDayBefore: function() {
      return moveFocus("day", "before");
    },
    focusWeekAfter: function() {
      return moveFocus("week", "after");
    },
    focusWeekBefore: function() {
      return moveFocus("week", "before");
    },
    focusMonthBefore: function() {
      return moveFocus("month", "before");
    },
    focusMonthAfter: function() {
      return moveFocus("month", "after");
    },
    focusYearBefore: function() {
      return moveFocus("year", "before");
    },
    focusYearAfter: function() {
      return moveFocus("year", "after");
    },
    focusStartOfWeek: function() {
      return moveFocus("startOfWeek", "before");
    },
    focusEndOfWeek: function() {
      return moveFocus("endOfWeek", "after");
    }
  };
  return Cn.createElement(FocusContext.Provider, { value }, props2.children);
}
function useFocusContext() {
  var context = q2(FocusContext);
  if (!context) {
    throw new Error("useFocusContext must be used within a FocusProvider");
  }
  return context;
}
function useActiveModifiers(day, displayMonth) {
  var modifiers = useModifiers();
  var activeModifiers = getActiveModifiers(day, modifiers, displayMonth);
  return activeModifiers;
}
var SelectSingleContext = F(void 0);
function SelectSingleProvider(props2) {
  if (!isDayPickerSingle(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0
    };
    return Cn.createElement(SelectSingleContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectSingleProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectSingleProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b2, _c2;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    if (activeModifiers.selected && !initialProps.required) {
      (_b2 = initialProps.onSelect) === null || _b2 === void 0 ? void 0 : _b2.call(initialProps, void 0, day, activeModifiers, e4);
      return;
    }
    (_c2 = initialProps.onSelect) === null || _c2 === void 0 ? void 0 : _c2.call(initialProps, day, day, activeModifiers, e4);
  };
  var contextValue = {
    selected: initialProps.selected,
    onDayClick
  };
  return Cn.createElement(SelectSingleContext.Provider, { value: contextValue }, children);
}
function useSelectSingle() {
  var context = q2(SelectSingleContext);
  if (!context) {
    throw new Error("useSelectSingle must be used within a SelectSingleProvider");
  }
  return context;
}
function useDayEventHandlers(date, activeModifiers) {
  var dayPicker = useDayPicker();
  var single = useSelectSingle();
  var multiple = useSelectMultiple();
  var range = useSelectRange();
  var _a2 = useFocusContext(), focusDayAfter = _a2.focusDayAfter, focusDayBefore = _a2.focusDayBefore, focusWeekAfter = _a2.focusWeekAfter, focusWeekBefore = _a2.focusWeekBefore, blur = _a2.blur, focus = _a2.focus, focusMonthBefore = _a2.focusMonthBefore, focusMonthAfter = _a2.focusMonthAfter, focusYearBefore = _a2.focusYearBefore, focusYearAfter = _a2.focusYearAfter, focusStartOfWeek = _a2.focusStartOfWeek, focusEndOfWeek = _a2.focusEndOfWeek;
  var onClick = function(e4) {
    var _a3, _b2, _c2, _d2;
    if (isDayPickerSingle(dayPicker)) {
      (_a3 = single.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(single, date, activeModifiers, e4);
    } else if (isDayPickerMultiple(dayPicker)) {
      (_b2 = multiple.onDayClick) === null || _b2 === void 0 ? void 0 : _b2.call(multiple, date, activeModifiers, e4);
    } else if (isDayPickerRange(dayPicker)) {
      (_c2 = range.onDayClick) === null || _c2 === void 0 ? void 0 : _c2.call(range, date, activeModifiers, e4);
    } else {
      (_d2 = dayPicker.onDayClick) === null || _d2 === void 0 ? void 0 : _d2.call(dayPicker, date, activeModifiers, e4);
    }
  };
  var onFocus = function(e4) {
    var _a3;
    focus(date);
    (_a3 = dayPicker.onDayFocus) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onBlur = function(e4) {
    var _a3;
    blur();
    (_a3 = dayPicker.onDayBlur) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onMouseEnter = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayMouseEnter) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onMouseLeave = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayMouseLeave) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onPointerEnter = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayPointerEnter) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onPointerLeave = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayPointerLeave) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchCancel = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchCancel) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchEnd = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchEnd) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchMove = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchMove) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchStart = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchStart) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onKeyUp = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayKeyUp) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onKeyDown = function(e4) {
    var _a3;
    switch (e4.key) {
      case "ArrowLeft":
        e4.preventDefault();
        e4.stopPropagation();
        dayPicker.dir === "rtl" ? focusDayAfter() : focusDayBefore();
        break;
      case "ArrowRight":
        e4.preventDefault();
        e4.stopPropagation();
        dayPicker.dir === "rtl" ? focusDayBefore() : focusDayAfter();
        break;
      case "ArrowDown":
        e4.preventDefault();
        e4.stopPropagation();
        focusWeekAfter();
        break;
      case "ArrowUp":
        e4.preventDefault();
        e4.stopPropagation();
        focusWeekBefore();
        break;
      case "PageUp":
        e4.preventDefault();
        e4.stopPropagation();
        e4.shiftKey ? focusYearBefore() : focusMonthBefore();
        break;
      case "PageDown":
        e4.preventDefault();
        e4.stopPropagation();
        e4.shiftKey ? focusYearAfter() : focusMonthAfter();
        break;
      case "Home":
        e4.preventDefault();
        e4.stopPropagation();
        focusStartOfWeek();
        break;
      case "End":
        e4.preventDefault();
        e4.stopPropagation();
        focusEndOfWeek();
        break;
    }
    (_a3 = dayPicker.onDayKeyDown) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var eventHandlers = {
    onClick,
    onFocus,
    onBlur,
    onKeyDown,
    onKeyUp,
    onMouseEnter,
    onMouseLeave,
    onPointerEnter,
    onPointerLeave,
    onTouchCancel,
    onTouchEnd,
    onTouchMove,
    onTouchStart
  };
  return eventHandlers;
}
function useSelectedDays() {
  var dayPicker = useDayPicker();
  var single = useSelectSingle();
  var multiple = useSelectMultiple();
  var range = useSelectRange();
  var selectedDays = isDayPickerSingle(dayPicker) ? single.selected : isDayPickerMultiple(dayPicker) ? multiple.selected : isDayPickerRange(dayPicker) ? range.selected : void 0;
  return selectedDays;
}
function isInternalModifier(modifier) {
  return Object.values(InternalModifier).includes(modifier);
}
function getDayClassNames(dayPicker, activeModifiers) {
  var classNames9 = [dayPicker.classNames.day];
  Object.keys(activeModifiers).forEach(function(modifier) {
    var customClassName = dayPicker.modifiersClassNames[modifier];
    if (customClassName) {
      classNames9.push(customClassName);
    } else if (isInternalModifier(modifier)) {
      var internalClassName = dayPicker.classNames["day_".concat(modifier)];
      if (internalClassName) {
        classNames9.push(internalClassName);
      }
    }
  });
  return classNames9;
}
function getDayStyle(dayPicker, activeModifiers) {
  var style = __assign({}, dayPicker.styles.day);
  Object.keys(activeModifiers).forEach(function(modifier) {
    var _a2;
    style = __assign(__assign({}, style), (_a2 = dayPicker.modifiersStyles) === null || _a2 === void 0 ? void 0 : _a2[modifier]);
  });
  return style;
}
function useDayRender(day, displayMonth, buttonRef) {
  var _a2;
  var _b2, _c2;
  var dayPicker = useDayPicker();
  var focusContext = useFocusContext();
  var activeModifiers = useActiveModifiers(day, displayMonth);
  var eventHandlers = useDayEventHandlers(day, activeModifiers);
  var selectedDays = useSelectedDays();
  var isButton = Boolean(dayPicker.onDayClick || dayPicker.mode !== "default");
  p2(function() {
    var _a3;
    if (activeModifiers.outside)
      return;
    if (!focusContext.focusedDay)
      return;
    if (!isButton)
      return;
    if (isSameDay(focusContext.focusedDay, day)) {
      (_a3 = buttonRef.current) === null || _a3 === void 0 ? void 0 : _a3.focus();
    }
  }, [
    focusContext.focusedDay,
    day,
    buttonRef,
    isButton,
    activeModifiers.outside
  ]);
  var className = getDayClassNames(dayPicker, activeModifiers).join(" ");
  var style = getDayStyle(dayPicker, activeModifiers);
  var isHidden = Boolean(activeModifiers.outside && !dayPicker.showOutsideDays || activeModifiers.hidden);
  var DayContentComponent = (_c2 = (_b2 = dayPicker.components) === null || _b2 === void 0 ? void 0 : _b2.DayContent) !== null && _c2 !== void 0 ? _c2 : DayContent;
  var children = Cn.createElement(DayContentComponent, { date: day, displayMonth, activeModifiers });
  var divProps = {
    style,
    className,
    children,
    role: "gridcell"
  };
  var isFocusTarget = focusContext.focusTarget && isSameDay(focusContext.focusTarget, day) && !activeModifiers.outside;
  var isFocused = focusContext.focusedDay && isSameDay(focusContext.focusedDay, day);
  var buttonProps = __assign(__assign(__assign({}, divProps), (_a2 = { disabled: activeModifiers.disabled, role: "gridcell" }, _a2["aria-selected"] = activeModifiers.selected, _a2.tabIndex = isFocused || isFocusTarget ? 0 : -1, _a2)), eventHandlers);
  var dayRender = {
    isButton,
    isHidden,
    activeModifiers,
    selectedDays,
    buttonProps,
    divProps
  };
  return dayRender;
}
function Day(props2) {
  var buttonRef = _2(null);
  var dayRender = useDayRender(props2.date, props2.displayMonth, buttonRef);
  if (dayRender.isHidden) {
    return Cn.createElement("div", { role: "gridcell" });
  }
  if (!dayRender.isButton) {
    return Cn.createElement("div", __assign({}, dayRender.divProps));
  }
  return Cn.createElement(Button, __assign({ name: "day", ref: buttonRef }, dayRender.buttonProps));
}
function WeekNumber(props2) {
  var weekNumber = props2.number, dates = props2.dates;
  var _a2 = useDayPicker(), onWeekNumberClick = _a2.onWeekNumberClick, styles2 = _a2.styles, classNames9 = _a2.classNames, locale2 = _a2.locale, labelWeekNumber2 = _a2.labels.labelWeekNumber, formatWeekNumber2 = _a2.formatters.formatWeekNumber;
  var content = formatWeekNumber2(Number(weekNumber), { locale: locale2 });
  if (!onWeekNumberClick) {
    return Cn.createElement("span", { className: classNames9.weeknumber, style: styles2.weeknumber }, content);
  }
  var label = labelWeekNumber2(Number(weekNumber), { locale: locale2 });
  var handleClick = function(e4) {
    onWeekNumberClick(weekNumber, dates, e4);
  };
  return Cn.createElement(Button, { name: "week-number", "aria-label": label, className: classNames9.weeknumber, style: styles2.weeknumber, onClick: handleClick }, content);
}
function Row(props2) {
  var _a2, _b2;
  var _c2 = useDayPicker(), styles2 = _c2.styles, classNames9 = _c2.classNames, showWeekNumber = _c2.showWeekNumber, components = _c2.components;
  var DayComponent = (_a2 = components === null || components === void 0 ? void 0 : components.Day) !== null && _a2 !== void 0 ? _a2 : Day;
  var WeeknumberComponent = (_b2 = components === null || components === void 0 ? void 0 : components.WeekNumber) !== null && _b2 !== void 0 ? _b2 : WeekNumber;
  var weekNumberCell;
  if (showWeekNumber) {
    weekNumberCell = Cn.createElement(
      "td",
      { className: classNames9.cell, style: styles2.cell },
      Cn.createElement(WeeknumberComponent, { number: props2.weekNumber, dates: props2.dates })
    );
  }
  return Cn.createElement(
    "tr",
    { className: classNames9.row, style: styles2.row },
    weekNumberCell,
    props2.dates.map(function(date) {
      return Cn.createElement(
        "td",
        { className: classNames9.cell, style: styles2.cell, key: getUnixTime(date), role: "presentation" },
        Cn.createElement(DayComponent, { displayMonth: props2.displayMonth, date })
      );
    })
  );
}
function daysToMonthWeeks(fromDate, toDate2, options) {
  var toWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? endOfISOWeek(toDate2) : endOfWeek(toDate2, options);
  var fromWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? startOfISOWeek(fromDate) : startOfWeek(fromDate, options);
  var nOfDays = differenceInCalendarDays(toWeek, fromWeek);
  var days = [];
  for (var i4 = 0; i4 <= nOfDays; i4++) {
    days.push(addDays(fromWeek, i4));
  }
  var weeksInMonth = days.reduce(function(result, date) {
    var weekNumber = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? getISOWeek(date) : getWeek(date, options);
    var existingWeek = result.find(function(value) {
      return value.weekNumber === weekNumber;
    });
    if (existingWeek) {
      existingWeek.dates.push(date);
      return result;
    }
    result.push({
      weekNumber,
      dates: [date]
    });
    return result;
  }, []);
  return weeksInMonth;
}
function getMonthWeeks(month, options) {
  var weeksInMonth = daysToMonthWeeks(startOfMonth(month), endOfMonth(month), options);
  if (options === null || options === void 0 ? void 0 : options.useFixedWeeks) {
    var nrOfMonthWeeks = getWeeksInMonth(month, options);
    if (nrOfMonthWeeks < 6) {
      var lastWeek = weeksInMonth[weeksInMonth.length - 1];
      var lastDate = lastWeek.dates[lastWeek.dates.length - 1];
      var toDate2 = addWeeks(lastDate, 6 - nrOfMonthWeeks);
      var extraWeeks = daysToMonthWeeks(addWeeks(lastDate, 1), toDate2, options);
      weeksInMonth.push.apply(weeksInMonth, extraWeeks);
    }
  }
  return weeksInMonth;
}
function Table(props2) {
  var _a2, _b2, _c2;
  var _d2 = useDayPicker(), locale2 = _d2.locale, classNames9 = _d2.classNames, styles2 = _d2.styles, hideHead = _d2.hideHead, fixedWeeks = _d2.fixedWeeks, components = _d2.components, weekStartsOn = _d2.weekStartsOn, firstWeekContainsDate = _d2.firstWeekContainsDate, ISOWeek = _d2.ISOWeek;
  var weeks = getMonthWeeks(props2.displayMonth, {
    useFixedWeeks: Boolean(fixedWeeks),
    ISOWeek,
    locale: locale2,
    weekStartsOn,
    firstWeekContainsDate
  });
  var HeadComponent = (_a2 = components === null || components === void 0 ? void 0 : components.Head) !== null && _a2 !== void 0 ? _a2 : Head;
  var RowComponent = (_b2 = components === null || components === void 0 ? void 0 : components.Row) !== null && _b2 !== void 0 ? _b2 : Row;
  var FooterComponent = (_c2 = components === null || components === void 0 ? void 0 : components.Footer) !== null && _c2 !== void 0 ? _c2 : Footer;
  return Cn.createElement(
    "table",
    { className: classNames9.table, style: styles2.table, role: "grid", "aria-labelledby": props2["aria-labelledby"] },
    !hideHead && Cn.createElement(HeadComponent, null),
    Cn.createElement("tbody", { className: classNames9.tbody, style: styles2.tbody, role: "rowgroup" }, weeks.map(function(week) {
      return Cn.createElement(RowComponent, { displayMonth: props2.displayMonth, key: week.weekNumber, dates: week.dates, weekNumber: week.weekNumber });
    })),
    Cn.createElement(FooterComponent, { displayMonth: props2.displayMonth })
  );
}
function canUseDOM2() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var useIsomorphicLayoutEffect2 = canUseDOM2() ? y2 : p2;
var serverHandoffComplete = false;
var id = 0;
function genId() {
  return "react-day-picker-".concat(++id);
}
function useId(providedId) {
  var _a2;
  var initialId = providedId !== null && providedId !== void 0 ? providedId : serverHandoffComplete ? genId() : null;
  var _b2 = h2(initialId), id2 = _b2[0], setId = _b2[1];
  useIsomorphicLayoutEffect2(function() {
    if (id2 === null) {
      setId(genId());
    }
  }, []);
  p2(function() {
    if (serverHandoffComplete === false) {
      serverHandoffComplete = true;
    }
  }, []);
  return (_a2 = providedId !== null && providedId !== void 0 ? providedId : id2) !== null && _a2 !== void 0 ? _a2 : void 0;
}
function Month(props2) {
  var _a2;
  var _b2;
  var dayPicker = useDayPicker();
  var dir = dayPicker.dir, classNames9 = dayPicker.classNames, styles2 = dayPicker.styles, components = dayPicker.components;
  var displayMonths = useNavigation().displayMonths;
  var captionId = useId(dayPicker.id ? "".concat(dayPicker.id, "-").concat(props2.displayIndex) : void 0);
  var className = [classNames9.month];
  var style = styles2.month;
  var isStart = props2.displayIndex === 0;
  var isEnd = props2.displayIndex === displayMonths.length - 1;
  var isCenter = !isStart && !isEnd;
  if (dir === "rtl") {
    _a2 = [isStart, isEnd], isEnd = _a2[0], isStart = _a2[1];
  }
  if (isStart) {
    className.push(classNames9.caption_start);
    style = __assign(__assign({}, style), styles2.caption_start);
  }
  if (isEnd) {
    className.push(classNames9.caption_end);
    style = __assign(__assign({}, style), styles2.caption_end);
  }
  if (isCenter) {
    className.push(classNames9.caption_between);
    style = __assign(__assign({}, style), styles2.caption_between);
  }
  var CaptionComponent = (_b2 = components === null || components === void 0 ? void 0 : components.Caption) !== null && _b2 !== void 0 ? _b2 : Caption;
  return Cn.createElement(
    "div",
    { key: props2.displayIndex, className: className.join(" "), style },
    Cn.createElement(CaptionComponent, { id: captionId, displayMonth: props2.displayMonth }),
    Cn.createElement(Table, { "aria-labelledby": captionId, displayMonth: props2.displayMonth })
  );
}
function Root() {
  var dayPicker = useDayPicker();
  var focusContext = useFocusContext();
  var navigation = useNavigation();
  var _a2 = h2(false), hasInitialFocus = _a2[0], setHasInitialFocus = _a2[1];
  p2(function() {
    if (!dayPicker.initialFocus)
      return;
    if (!focusContext.focusTarget)
      return;
    if (hasInitialFocus)
      return;
    focusContext.focus(focusContext.focusTarget);
    setHasInitialFocus(true);
  }, [
    dayPicker.initialFocus,
    hasInitialFocus,
    focusContext.focus,
    focusContext.focusTarget,
    focusContext
  ]);
  var classNames9 = [dayPicker.classNames.root, dayPicker.className];
  if (dayPicker.numberOfMonths > 1) {
    classNames9.push(dayPicker.classNames.multiple_months);
  }
  if (dayPicker.showWeekNumber) {
    classNames9.push(dayPicker.classNames.with_weeknumber);
  }
  var style = __assign(__assign({}, dayPicker.styles.root), dayPicker.style);
  return Cn.createElement(
    "div",
    { className: classNames9.join(" "), style, dir: dayPicker.dir },
    Cn.createElement("div", { className: dayPicker.classNames.months, style: dayPicker.styles.months }, navigation.displayMonths.map(function(month, i4) {
      return Cn.createElement(Month, { key: i4, displayIndex: i4, displayMonth: month });
    }))
  );
}
function RootProvider(props2) {
  var children = props2.children, initialProps = __rest(props2, ["children"]);
  return Cn.createElement(
    DayPickerProvider,
    { initialProps },
    Cn.createElement(
      NavigationProvider,
      null,
      Cn.createElement(
        SelectSingleProvider,
        { initialProps },
        Cn.createElement(
          SelectMultipleProvider,
          { initialProps },
          Cn.createElement(
            SelectRangeProvider,
            { initialProps },
            Cn.createElement(
              ModifiersProvider,
              null,
              Cn.createElement(FocusProvider, null, children)
            )
          )
        )
      )
    )
  );
}
function DayPicker(props2) {
  return Cn.createElement(
    RootProvider,
    __assign({}, props2),
    Cn.createElement(Root, null)
  );
}

// src/core/react/components/UI/Menus/properties/datePickerMenu.tsx
var showDatePickerMenu = (ui, point, value, setValue, format3) => {
  ui.openCustomMenu(point, (props2) => /* @__PURE__ */ Cn.createElement(DayPicker, {
    defaultMonth: value,
    mode: "single",
    selected: value,
    labels: {
      labelMonthDropdown: () => void 0,
      labelYearDropdown: () => void 0,
      labelNext: () => void 0,
      labelPrevious: () => void 0,
      labelDay: () => void 0,
      labelWeekday: () => void 0,
      labelWeekNumber: () => void 0
    },
    onSelect: (date) => {
      setValue(date);
      props2.hide();
    }
  }));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/DateCell.tsx
var DateCell = (props2) => {
  const [value, setValue] = h2(props2.initialValue);
  p2(() => {
    setValue(props2.initialValue);
  }, [props2.initialValue]);
  const date = F2(() => {
    const dateTime = Date.parse(value);
    return dateTime > 0 ? new Date(dateTime + new Date().getTimezoneOffset() * 60 * 1e3) : null;
  }, [value]);
  const saveValue = (date2) => {
    const newValue = formatDate(props2.superstate, date2, "yyyy-MM-dd");
    props2.saveValue(newValue);
    setValue(newValue);
    props2.setEditMode(null);
  };
  const menuRef = _2(null);
  const ref2 = _2(null);
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      if (ref2.current) {
        showPicker();
        ref2.current.focus();
      }
    }
  }, [props2.editMode]);
  const showPicker = T2(
    (e4) => {
      if (props2.editMode <= 0) {
        return;
      }
      const offset2 = e4 ? e4.target.getBoundingClientRect() : ref2.current.getBoundingClientRect();
      menuRef.current = showDatePickerMenu(
        props2.superstate.ui,
        { x: offset2.left - 4, y: offset2.bottom - 4 },
        date,
        saveValue
      );
    },
    [date]
  );
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter" || e4.key == "Escape") {
      e4.target.blur();
      saveValue(date);
      menuRef.current.hide();
    }
  };
  const format3 = F2(
    () => {
      var _a2;
      return (_a2 = safelyParseJSON(props2.propertyValue)) == null ? void 0 : _a2.format;
    },
    [props2.propertyValue]
  );
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-date",
    onClick: (e4) => !value && showPicker(e4)
  }, props2.editMode == 2 ? /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    ref: ref2,
    type: "text",
    value,
    onChange: (e4) => setValue(e4.target.value),
    onMouseDown: () => showPicker(),
    onKeyDown
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-date-value",
    onClick: (e4) => showPicker(e4)
  }, date ? formatDate(
    props2.superstate,
    date,
    (format3 == null ? void 0 : format3.length) > 0 ? format3 : null
  ) : value));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/LookUpCell.tsx
var humanFileSize = (bytes, si = false, dp = 1) => {
  const thresh = si ? 1e3 : 1024;
  if (Math.abs(bytes) < thresh) {
    return bytes + " B";
  }
  const units = si ? ["kB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"] : ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"];
  let u4 = -1;
  const r3 = 10 ** dp;
  do {
    bytes /= thresh;
    ++u4;
  } while (Math.round(Math.abs(bytes) * r3) / r3 >= thresh && u4 < units.length - 1);
  return bytes.toFixed(dp) + " " + units[u4];
};
var LookUpCell = (props2) => {
  const [cache, setCache] = h2(null);
  const initialValue = props2.initialValue;
  const { field, value } = parseFieldValue(props2.propertyValue, "fileprop");
  if (value == "folder") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop",
      onClick: () => {
        props2.superstate.ui.openPath(initialValue, false);
      }
    }, initialValue && folderPathToString(initialValue));
  }
  if (value == "extension") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, initialValue);
  } else if (value == "ctime" || value == "mtime") {
    const date = new Date(parseInt(initialValue)).getTime() ? new Date(parseInt(initialValue)) : null;
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, date && formatDistance3(new Date(date), new Date(), { addSuffix: true }));
  } else if (value == "size" || value == PathPropertyName + ".size") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, humanFileSize(parseInt(initialValue)));
  } else if (value == "sticker") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-icon",
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(initialValue)
      }
    }));
  }
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-fileprop"
  }, initialValue);
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/NumberCell.tsx
var NumberCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const ref2 = _2(null);
  const onBlur = () => {
    if (initialValue != value)
      saveValue(value);
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter") {
      e4.target.blur();
      props2.setEditMode(null);
    }
    if (e4.key == "Escape") {
      setValue(initialValue);
      e4.target.blur();
      props2.setEditMode(null);
    }
  };
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
    className: "mk-cell-text",
    type: "number",
    ref: ref2,
    value,
    onChange: (e4) => setValue(e4.target.value),
    onKeyDown,
    onBlur
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-number"
  }, value);
};

// src/core/react/components/UI/Modals/InputModal.tsx
var InputModal = (props2) => {
  const [value, setValue] = h2(props2.value);
  const save = () => {
    props2.saveValue(value);
    props2.hide();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-column mk-gap-8"
  }, /* @__PURE__ */ Cn.createElement("input", {
    value,
    type: "text",
    onChange: (e4) => setValue(e4.target.value),
    className: "mk-input mk-input-large",
    onKeyDown: (e4) => {
      if (e4.key === "Enter")
        save();
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-row mk-justify-end mk-gap-8"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => save()
  }, props2.saveLabel), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.hide()
  }, i18n_default.buttons.cancel)));
};

// src/utils/stickers.ts
var emojiFromString = (emoji) => {
  let html;
  try {
    html = unifiedToNative(emoji);
  } catch (e4) {
    html = emoji;
  }
  return html;
};
function parseStickerString(input) {
  if (!input) {
    return ["", ""];
  }
  const match2 = input.match(/^(.*?)\s*\/\/\s*(.*)$/);
  if (match2) {
    return [match2[1], match2[2]];
  } else {
    return ["", input];
  }
}
var unifiedToNative = (unified) => {
  const unicodes = unified.split("-");
  const codePoints = unicodes.map((u4) => `0x${u4}`);
  return String.fromCodePoint(...codePoints);
};

// src/core/react/components/UI/Modals/StickerModal.tsx
var StickerModal = (props2) => {
  const [query, setQuery] = h2("");
  const [allStickers, setAllStickers] = h2([]);
  const [stickers, setStickers] = h2([]);
  const [selectedSticker, setSelectedSticker] = h2(null);
  const htmlFromSticker = (sticker) => {
    if (sticker.type == "emoji") {
      return emojiFromString(sticker.html);
    }
    return sticker.html;
  };
  p2(() => {
    const _allImages = [];
    _allImages.push(...props2.ui.allStickers());
    setAllStickers(_allImages);
  }, []);
  const categories = F2(
    () => new Set(allStickers.map((f4) => f4.type)),
    [allStickers]
  );
  const [page, setPage] = h2(1);
  const loadNextPage = T2(() => {
    setPage((p3) => p3 + 1);
  }, [page]);
  const loaderRef = _2(null);
  p2(() => {
    const observer = new IntersectionObserver((entries) => {
      const target = entries[0];
      if (target.isIntersecting) {
        loadNextPage();
      }
    });
    if (loaderRef.current) {
      observer.observe(loaderRef.current);
    }
    return () => {
      if (loaderRef.current) {
        observer.unobserve(loaderRef.current);
      }
    };
  }, [loadNextPage]);
  const [selectedCategory, setSelectedCategory] = h2(null);
  p2(() => {
    setStickers(
      allStickers.filter(
        (f4) => f4.name.includes(query) && (selectedCategory == null || f4.type == selectedCategory)
      ).slice(0, page * 250)
    );
  }, [query, allStickers, page, selectedCategory]);
  const handleInputChange = (event) => {
    setQuery(event.target.value);
  };
  const handleKeyDown = (event) => {
    const currentIndex = selectedSticker;
    if (event.key === "ArrowUp" && currentIndex > 0) {
      setSelectedSticker(currentIndex - 1);
    } else if (event.key === "ArrowDown" && currentIndex < stickers.length - 1) {
      setSelectedSticker(currentIndex + 1);
    } else if (event.key === "Enter") {
      props2.selectedSticker(
        stickers[selectedSticker].type + "//" + stickers[selectedSticker].value
      );
      props2.hide();
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("input", {
    value: query,
    onChange: handleInputChange,
    onKeyDown: handleKeyDown,
    placeholder: i18n_default.labels.findStickers,
    className: "mk-input mk-input-large mk-border-bottom"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-options-menu-sections"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => setSelectedCategory(null),
    className: `${selectedCategory == null ? "is-active" : ""} mk-options-menu-section`
  }, "All"), [...categories].map((f4) => /* @__PURE__ */ Cn.createElement("div", {
    key: f4,
    onClick: () => setSelectedCategory(f4),
    className: `${selectedCategory == f4 ? "is-active" : ""} mk-options-menu-section`
  }, f4))), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-row mk-layout-wrap mk-gap-4 mk-padding-12 mk-layout-scroll"
  }, stickers.map((icon, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onClick: () => {
      props2.selectedSticker(
        stickers[i4].type + "//" + stickers[i4].value
      );
      props2.hide();
    },
    className: selectedSticker === i4 ? "selected mk-padding-4 mk-border-radius-4 mk-hover" : "mk-padding-4 mk-border-radius-4 mk-hover"
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: { __html: htmlFromSticker(icon) },
    className: "mk-sticker"
  }))), /* @__PURE__ */ Cn.createElement("div", {
    ref: loaderRef
  })));
};
var StickerModal_default = StickerModal;

// src/core/superstate/utils/label.ts
var savePathBanner = (superstate, path, banner) => {
  saveProperties(superstate, path, {
    [superstate.settings.fmKeyBanner]: banner
  });
};
var savePathColor = async (superstate, path, color) => {
  if (superstate.spacesIndex.has(path)) {
    saveSpaceProperties(superstate, path, { [superstate.settings.fmKeyColor]: color });
    return;
  }
  saveLabel(superstate, path, "color", color);
};
var savePathSticker = async (superstate, path, sticker) => {
  if (superstate.spacesIndex.has(path)) {
    saveSpaceProperties(superstate, path, { [superstate.settings.fmKeySticker]: sticker });
    return;
  }
  saveLabel(superstate, path, "sticker", sticker);
};
var updatePrimaryAlias = (superstate, path, aliases, value) => {
  const newValue = serializeMultiString([value, ...ensureArray(aliases).filter((f4) => f4 == value)]);
  saveProperties(superstate, path, { [superstate.settings.fmKeyAlias]: parseMDBValue("option-multi", newValue) });
};

// src/core/utils/dnd/dropPath.ts
var dropPathsInTree = async (superstate, paths, active, over, projected, flattenedTree, activeSpace, modifier) => {
  var _a2, _b2, _c2;
  if (paths.length == 1) {
    dropPathInTree(superstate, paths[0], active, over, projected, flattenedTree, activeSpace, modifier);
    return;
  }
  if (projected) {
    const overIndex = flattenedTree.findIndex(({ id: id2 }) => id2 === over);
    const overItem = flattenedTree[overIndex];
    const dropTarget = overItem.type == "file" ? overItem.depth == 0 ? activeSpace : (_a2 = flattenedTree.find((f4) => f4.id == overItem.parentId)) == null ? void 0 : _a2.item : overItem.item;
    const droppable = paths.filter(
      (f4) => !nodeIsAncestorOfTarget(f4, dropTarget.path)
    );
    const parentId = projected.insert ? over : projected.parentId;
    const newSpace = (_b2 = flattenedTree.find(({ id: id2 }) => id2 === parentId)) == null ? void 0 : _b2.item.path;
    const newRank = parentId == overItem.id ? -1 : (_c2 = overItem.rank) != null ? _c2 : -1;
    if (!newSpace)
      return;
    dropPathsInSpaceAtIndex(superstate, droppable, newSpace, projected.sortable && newRank, modifier);
  }
};
var dropPathInTree = async (superstate, path, active, over, projected, flattenedTree, activeSpace, modifier) => {
  var _a2, _b2, _c2;
  if (projected) {
    const clonedItems = flattenedTree;
    const overIndex = clonedItems.findIndex(({ id: id2 }) => id2 === over);
    const overItem = clonedItems[overIndex];
    const parentId = projected.insert ? over : projected.parentId;
    const newSpace = projected.depth == 0 && !projected.insert ? activeSpace.path : (_a2 = clonedItems.find(({ id: id2 }) => id2 === parentId)) == null ? void 0 : _a2.item.path;
    const newRank = parentId == overItem.id ? -1 : (_b2 = overItem.rank) != null ? _b2 : -1;
    if (!newSpace)
      return;
    if (!active) {
      dropPathInSpaceAtIndex(superstate, path, null, newSpace, projected.sortable && newRank, modifier);
      return;
    }
    const activeIndex = clonedItems.findIndex(({ id: id2 }) => id2 === active);
    const activeItem = clonedItems[activeIndex];
    const oldSpace = activeItem.parentId == activeSpace.path ? activeSpace.path : (_c2 = clonedItems.find(({ id: id2 }) => id2 === activeItem.parentId)) == null ? void 0 : _c2.item.path;
    dropPathInSpaceAtIndex(superstate, activeItem.item.path, oldSpace, newSpace, projected.sortable && newRank, modifier);
  }
};
var dropPathInSpaceAtIndex = async (superstate, path, oldSpacePath, newSpacePath, index, modifier) => {
  const cache = superstate.pathsIndex.get(path);
  if (!cache || !newSpacePath)
    return false;
  const newSpaceCache = superstate.spacesIndex.get(newSpacePath);
  if (oldSpacePath == newSpacePath) {
    updatePathRankInSpace(superstate, path, index, newSpacePath);
    return;
  }
  if (newSpaceCache.type == "folder" || newSpaceCache.type == "vault") {
    if (modifier == "link" || nodeIsAncestorOfTarget(path, newSpaceCache.path)) {
      pinPathToSpaceAtIndex(superstate, newSpaceCache, path, index);
    } else {
      movePathToNewSpaceAtIndex(superstate, superstate.pathsIndex.get(path), newSpaceCache.path, index, modifier == "copy");
    }
  }
  if (newSpaceCache.type == "tag") {
    addTagToPath(superstate, path, newSpaceCache.name);
  }
  if (oldSpacePath && oldSpacePath != newSpacePath) {
    removePathsFromSpace(superstate, oldSpacePath, [path]);
  }
};
var dropPathsInSpaceAtIndex = async (superstate, paths, newSpacePath, index, modifier) => {
  const newSpaceCache = superstate.spacesIndex.get(newSpacePath);
  if (!newSpaceCache)
    return;
  if (newSpaceCache.type == "folder" || newSpaceCache.type == "vault") {
    paths.forEach((path) => {
      if (modifier == "link" || nodeIsAncestorOfTarget(path, newSpaceCache.path)) {
        pinPathToSpaceAtIndex(superstate, newSpaceCache, path, index);
      } else {
        movePathToNewSpaceAtIndex(superstate, superstate.pathsIndex.get(path), newSpaceCache.path, index, modifier == "copy");
      }
    });
  }
  if (newSpaceCache.type == "tag") {
    paths.forEach((path) => addTagToPath(superstate, path, newSpaceCache.name));
  }
};

// src/core/utils/emoji.ts
var saveIconsForPaths = (superstate, paths, icon) => {
  paths.forEach((path) => {
    savePathSticker(superstate, path, icon);
  });
};
var saveColorForPaths = (superstate, paths, icon) => {
  paths.forEach((path) => {
    savePathColor(superstate, path, icon);
  });
};
var savePathIcon = (superstate, path, icon) => {
  savePathSticker(superstate, path, icon);
};
var removeIconsForPaths = (superstate, paths) => {
  paths.forEach((path) => {
    savePathSticker(superstate, path, "");
  });
};
var removePathIcon = (superstate, path) => {
  savePathSticker(superstate, path, "");
};

// src/schemas/color.ts
var colors = [
  ["Red", "#eb3b5a"],
  ["Orange", "#fa8231"],
  ["Yellow", "#f7b731"],
  ["Green", "#20bf6b"],
  ["Turquoise", "#0fb9b1"],
  ["Teal", "#2d98da"],
  ["Blue", "#3867d6"],
  ["Purple", "#8854d0"],
  ["Charcoal", "#4b6584"]
];

// src/core/react/components/UI/Modals/ConfirmationModal.tsx
var ConfirmationModal = (props2) => {
  const { hide, confirmAction, message, confirmLabel } = props2;
  const confirm = () => {
    confirmAction();
    hide();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-column mk-gap-16"
  }, /* @__PURE__ */ Cn.createElement("div", null, message), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-row mk-layout-justify-end mk-gap-16"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => confirm(),
    className: "mod-warning"
  }, confirmLabel), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => hide()
  }, i18n_default.buttons.cancel)));
};

// src/core/react/components/UI/Menus/properties/selectSpaceMenu.tsx
var showSpacesMenu = (e4, superstate, saveLink, includeDefaults, canAdd) => {
  const offset2 = e4.target.getBoundingClientRect();
  const options = [...superstate.allSpaces(true)].filter((f4) => includeDefaults || f4.type != "default").map((f4) => {
    var _a2, _b2;
    return {
      name: f4.name,
      value: f4.path,
      icon: (_b2 = (_a2 = superstate.pathsIndex.get(f4.path)) == null ? void 0 : _a2.label) == null ? void 0 : _b2.sticker,
      section: f4.type == "tag" ? "Tag" : f4.type == "folder" ? "Folder" : "",
      description: f4.type == "tag" ? f4.name : f4.type == "folder" ? f4.path : f4.name
    };
  });
  superstate.ui.openMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      ui: superstate.ui,
      multi: false,
      editable: canAdd,
      value: [],
      options,
      sections: ["Tag", "Folder"],
      saveOptions: (_11, value) => {
        saveLink(value[0], !options.some((f4) => f4.value == value[0]));
      },
      placeholder: i18n_default.labels.spaceSelectPlaceholder,
      detail: true,
      searchable: true,
      showSections: true,
      showAll: true
    }
  );
};

// src/core/react/components/UI/Menus/navigator/pathContextMenu.tsx
var triggerMultiPathMenu = (superstate, selectedPaths, e4) => {
  const paths = selectedPaths.map((s5) => s5.item.path);
  const menuOptions = [];
  menuOptions.push({
    name: i18n_default.menu.openFilePane,
    icon: "lucide//go-to-file",
    onClick: (e5) => {
      paths.forEach((path) => superstate.ui.openPath(path, true));
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.buttons.addToSpace,
    icon: "lucide//pin",
    onClick: (e5) => {
      showSpacesMenu(
        e5,
        superstate,
        (link) => {
          dropPathsInSpaceAtIndex(
            superstate,
            selectedPaths.map((f4) => f4.path),
            link,
            -1,
            "link"
          );
        },
        true
      );
    }
  });
  if (superstate.settings.spacesStickers) {
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.changeColor,
      icon: "lucide//palette",
      onClick: (e5) => {
        showDisclosureMenu(
          superstate.ui,
          e5,
          false,
          false,
          "",
          [
            { name: i18n_default.labels.none, value: "" },
            ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
          ],
          (_11, values) => {
            saveColorForPaths(superstate, paths, values[0]);
          }
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.changeIcon,
      icon: "lucide//sticker",
      onClick: (e5) => {
        superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
          ui: superstate.ui,
          hide: _props.hide,
          selectedSticker: (emoji) => saveIconsForPaths(superstate, paths, emoji)
        }));
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.removeIcon,
      icon: "lucide//file-minus",
      onClick: (e5) => {
        removeIconsForPaths(superstate, paths);
      }
    });
  }
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.moveFile,
    icon: "lucide//paper-plane",
    onClick: (e5) => {
      showSpacesMenu(e5, superstate, (link) => {
        paths.forEach((f4) => {
          movePathToSpace(superstate, f4, link);
        });
      });
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.hide,
    icon: "lucide//eye-off",
    onClick: (e5) => {
      hidePaths(superstate, paths);
    }
  });
  menuOptions.push({
    name: i18n_default.menu.delete,
    icon: "lucide//trash",
    onClick: (e5) => {
      superstate.ui.openModal(
        i18n_default.labels.deleteFiles,
        (_props) => /* @__PURE__ */ Cn.createElement(ConfirmationModal, {
          hide: _props.hide,
          confirmAction: () => {
            paths.forEach((f4) => {
              deletePath(superstate, f4);
            });
          },
          confirmLabel: i18n_default.buttons.delete,
          message: i18n_default.descriptions.deleteFiles.replace(
            "${1}",
            paths.length.toString()
          )
        })
      );
    }
  });
  superstate.ui.openMenu(
    isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    },
    defaultMenu(superstate.ui, menuOptions)
  );
  return false;
};
var showPathContextMenu = (superstate, path, space, e4) => {
  const cache = superstate.pathsIndex.get(path);
  const menuOptions = [];
  menuOptions.push({
    name: i18n_default.menu.openFilePane,
    icon: "lucide//go-to-file",
    onClick: (e5) => {
      superstate.ui.openPath(path, true);
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.buttons.addToSpace,
    icon: "lucide//pin",
    onClick: (e5) => {
      showSpacesMenu(
        e5,
        superstate,
        (link) => {
          dropPathsInSpaceAtIndex(superstate, [path], link, -1, "link");
        },
        true
      );
    }
  });
  if (cache.type == "file" && cache.subtype == "md")
    menuOptions.push({
      name: i18n_default.menu.changeToFolderNote,
      icon: "lucide//file-plus-2",
      onClick: (e5) => {
        convertPathToSpace(superstate, path, false);
      }
    });
  if (space && space != cache.parent) {
    const spaceCache = superstate.spacesIndex.get(space);
    if (spaceCache) {
      menuOptions.push({
        name: i18n_default.menu.removeFromSpace,
        icon: "lucide//pin-off",
        onClick: (e5) => {
          removePathsFromSpace(superstate, spaceCache.path, [path]);
        }
      });
    }
  }
  if (superstate.settings.spacesStickers) {
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.changeColor,
      icon: "lucide//palette",
      onClick: (e5) => {
        showDisclosureMenu(
          superstate.ui,
          e5,
          false,
          false,
          "",
          [
            { name: i18n_default.labels.none, value: "" },
            ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
          ],
          (_11, values) => {
            savePathColor(superstate, path, values[0]);
          }
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.changeIcon,
      icon: "lucide//sticker",
      onClick: (e5) => {
        superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
          ui: superstate.ui,
          hide: _props.hide,
          selectedSticker: (emoji) => savePathIcon(superstate, path, emoji)
        }));
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.removeIcon,
      icon: "lucide//file-minus",
      onClick: (e5) => {
        removePathIcon(superstate, path);
      }
    });
  }
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.rename,
    icon: "lucide//pencil",
    onClick: (e5) => {
      superstate.ui.openModal(
        i18n_default.labels.rename,
        (_props) => /* @__PURE__ */ Cn.createElement(InputModal, {
          saveLabel: i18n_default.buttons.rename,
          value: cache.name,
          hide: _props.hide,
          saveValue: (v3) => superstate.spaceManager.renamePath(
            path,
            renamePathWithExtension(path, v3)
          )
        })
      );
    }
  });
  menuOptions.push({
    name: i18n_default.menu.duplicate,
    icon: "lucide//documents",
    onClick: (e5) => {
      superstate.spaceManager.copyPath(
        path,
        `${cache.parent}/${cache.name} 1.${cache.type}`
      );
    }
  });
  menuOptions.push({
    name: i18n_default.menu.moveFile,
    icon: "lucide//paper-plane",
    onClick: (e5) => {
      showSpacesMenu(e5, superstate, (link) => {
        const item = superstate.pathsIndex.get(path);
        superstate.spaceManager.renamePath(path, link + "/" + item.label.name);
      });
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.revealInDefault,
    icon: "lucide//arrow-up-right",
    onClick: (e5) => {
      superstate.ui.openPath(path, "system");
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.hide,
    icon: "lucide//eye-off",
    onClick: (e5) => {
      hidePath(superstate, path);
    }
  });
  menuOptions.push({
    name: i18n_default.menu.delete,
    icon: "lucide//trash",
    onClick: (e5) => {
      deletePath(superstate, path);
    }
  });
  superstate.ui.openMenu(
    isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    },
    defaultMenu(superstate.ui, menuOptions)
  );
  return false;
};

// src/core/react/components/UI/Stickers/PathSticker/PathSticker.tsx
var PathStickerView = (props2) => {
  var _a2, _b2;
  const { pathState } = props2;
  const sticker = (_a2 = pathState == null ? void 0 : pathState.label) == null ? void 0 : _a2.sticker;
  const color = (_b2 = pathState == null ? void 0 : pathState.label) == null ? void 0 : _b2.color;
  const extension = pathState == null ? void 0 : pathState.type;
  const triggerStickerContextMenu = (e4) => {
    if (!pathState)
      return;
    e4.stopPropagation();
    e4.preventDefault();
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.buttons.changeIcon,
      icon: "lucide//sticker",
      onClick: () => {
        props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
          ui: props2.superstate.ui,
          hide: _props.hide,
          selectedSticker: (emoji) => savePathSticker(props2.superstate, pathState == null ? void 0 : pathState.path, emoji)
        }));
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.removeIcon,
      icon: "lucide//file-minus",
      onClick: () => {
        removeIconsForPaths(props2.superstate, [pathState.path]);
      }
    });
    props2.superstate.ui.openMenu(
      isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
    return false;
  };
  const triggerStickerMenu = (e4) => {
    e4.stopPropagation();
    if ((pathState == null ? void 0 : pathState.type) == "space") {
      props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
        ui: props2.superstate.ui,
        hide: _props.hide,
        selectedSticker: (emoji) => savePathSticker(props2.superstate, pathState.path, emoji)
      }));
      return;
    }
    props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
      ui: props2.superstate.ui,
      hide: _props.hide,
      selectedSticker: (emoji) => savePathSticker(props2.superstate, pathState.path, emoji)
    }));
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-path-icon ${sticker ? "" : "mk-path-icon-placeholder"}`
  }, /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": i18n_default.buttons.changeIcon,
    onContextMenu: triggerStickerContextMenu,
    style: (color == null ? void 0 : color.length) > 0 ? {
      "--label-color": `${color}`,
      "--icon-color": `#ffffff`
    } : {
      "--icon-color": `var(--text-muted)`
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(sticker)
    },
    onClick: (e4) => triggerStickerMenu(e4)
  }));
};
var PathStickerContainer = (props2) => {
  const [cache, setCache] = h2(null);
  const reloadCache = () => {
    setCache(props2.superstate.pathsIndex.get(props2.path));
  };
  const reloadIcon = (payload) => {
    if (payload.path == props2.path) {
      reloadCache();
    }
  };
  p2(() => {
    reloadCache();
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      reloadIcon
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        reloadIcon
      );
    };
  }, [props2.path]);
  return cache ? /* @__PURE__ */ Cn.createElement(PathStickerView, {
    superstate: props2.superstate,
    pathState: cache
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/PathCell.tsx
var PathCell = (props2) => {
  const fileOrCleanPath = (f4) => {
    if (!f4)
      return {
        path: ""
      };
    const pathState = props2.superstate.pathsIndex.get(f4);
    return pathState ? { path: f4, pathState } : { path: f4 };
  };
  const value = F2(
    () => {
      var _a2;
      return (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).map((f4) => fileOrCleanPath(f4));
    },
    [props2.initialValue]
  );
  const ref2 = _2(null);
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    e4.key == "Enter" && e4.target.blur();
  };
  const pathExists = async (name) => {
    if (!name)
      return false;
    return await props2.superstate.spaceManager.pathExists(name) ? true : false;
  };
  const onBlur = async () => {
    var _a2;
    if (!ref2.current)
      return;
    if (await pathExists((_a2 = ref2.current) == null ? void 0 : _a2.value)) {
      props2.superstate.ui.notify(i18n_default.notice.fileExists);
    } else {
      props2.saveValue(ref2.current.value);
      props2.setEditMode(null);
    }
  };
  const newPath = async (file) => {
    const pathName = file.path.replace(/\//g, "").replace(/\./g, "");
    const path = `${props2.folder}/${pathName}.md`;
    if (pathName.length == 0) {
      return;
    }
    if (await pathExists(path)) {
      props2.superstate.ui.notify(i18n_default.notice.fileExists);
    } else {
      await props2.superstate.spaceManager.createItemAtPath(
        props2.folder,
        "md",
        pathName
      );
    }
  };
  const deleteRow = () => {
    props2.deleteRow();
  };
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-file"
  }, value.map((v3, i4) => {
    if (props2.editMode == 0) {
      if (v3.pathState) {
        return /* @__PURE__ */ Cn.createElement("div", {
          key: i4,
          className: "mk-cell-file-title"
        }, v3 && v3.pathState ? v3.pathState.name : "", v3.pathState.type == "file" && v3.pathState.subtype != "md" && /* @__PURE__ */ Cn.createElement("span", {
          className: "nav-file-tag"
        }, v3.pathState.metadata.file.extension), /* @__PURE__ */ Cn.createElement("button", {
          "aria-label": i18n_default.buttons.toggleFlow,
          className: "mk-cell-file-flow mk-inline-button",
          dangerouslySetInnerHTML: {
            __html: props2.superstate.ui.getSticker(
              "ui//mk-ui-flow-hover"
            )
          },
          onClick: (e4) => {
            if (props2.openFlow) {
              props2.openFlow(e4);
              e4.stopPropagation();
            }
          }
        }));
      } else {
        return /* @__PURE__ */ Cn.createElement("div", {
          key: i4,
          className: "mk-cell-file-title"
        }, v3.path);
      }
    }
    if (v3.pathState) {
      return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-cell-file-item",
        onContextMenu: (e4) => showPathContextMenu(
          props2.superstate,
          v3.pathState.path,
          null,
          e4
        )
      }, /* @__PURE__ */ Cn.createElement(PathStickerView, {
        superstate: props2.superstate,
        pathState: v3.pathState
      }), /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-cell-file-name",
        onClick: (e4) => props2.superstate.ui.openPath(
          v3.pathState.path,
          e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
        )
      }, v3 && v3.pathState ? v3.pathState.name : "")));
    }
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-file-item"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-icon"
    }, /* @__PURE__ */ Cn.createElement("button", {
      onClick: (e4) => newPath(v3),
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-new-file")
      }
    })), props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
      className: "mk-cell-file-name",
      type: "text",
      placeholder: i18n_default.buttons.newNote,
      ref: ref2,
      value: v3.path,
      onKeyDown,
      onBlur
    }) : /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-file-name"
    }, v3.path)));
  }));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/TextCell.tsx
var TextCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const ref2 = _2(null);
  const onBlur = () => {
    if (initialValue != value)
      saveValue(value);
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter") {
      e4.target.blur();
      props2.setEditMode(null);
    }
    if (e4.key == "Escape") {
      setValue(initialValue);
      e4.target.blur();
      props2.setEditMode(null);
    }
  };
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    ref: ref2,
    type: "text",
    value,
    onChange: (e4) => setValue(e4.target.value),
    onKeyDown,
    onBlur
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-text"
  }, value);
};

// src/core/utils/properties/allProperties.ts
var allCacheTypesForPaths = (superstate, paths) => {
  var _a2;
  if (!superstate.settings.experimental)
    return [];
  ;
  const properties2 = {};
  for (const path of paths) {
    const f4 = (_a2 = superstate.pathsIndex.get(path)) == null ? void 0 : _a2.metadata;
    if (f4) {
      Object.keys(f4).forEach((k5) => {
        var _a3;
        const type = detectPropertyType(f4[k5], k5);
        if (type != "unknown" && type != "object")
          properties2[k5] = [...(_a3 = properties2[k5]) != null ? _a3 : [], type];
      });
    }
  }
  return Object.keys(properties2).reduce((p3, c4) => {
    return [...p3, { name: c4, type: properties2[c4][0] }];
  }, []);
};
var allPropertiesForPaths = (superstate, paths) => {
  var _a2, _b2;
  const properties2 = {};
  for (const path of paths) {
    const f4 = (_b2 = (_a2 = superstate.pathsIndex.get(path)) == null ? void 0 : _a2.metadata) == null ? void 0 : _b2.properties;
    if (f4) {
      Object.keys(f4).forEach((k5) => {
        var _a3;
        properties2[k5] = [...(_a3 = properties2[k5]) != null ? _a3 : [], detectPropertyType(f4[k5], k5)];
      });
    }
  }
  return Object.keys(properties2).reduce((p3, c4) => {
    return [...p3, { name: c4, type: properties2[c4][0] }];
  }, []);
};

// src/core/react/components/UI/Menus/contexts/PropertyValue.tsx
var PropertyValueComponent = (props2) => {
  var _a2;
  const showOptions = (e4, value, options, field, saveProperty) => {
    props2.superstate.ui.openMenu(
      e4.target.getBoundingClientRect(),
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: true,
        searchable: true,
        saveOptions: (_11, v3) => {
          if (saveProperty) {
            saveProperty(v3[0]);
          } else {
            saveParsedValue(field, v3[0]);
          }
        },
        placeholder: i18n_default.labels.propertyValueSpace,
        value: [value != null ? value : ""],
        options
      }
    );
  };
  const parsedValue = F2(
    () => parseFieldValue(props2.value, props2.fieldType),
    [props2.value, props2.fieldType]
  );
  const saveParsedValue = (field, value) => {
    props2.saveValue(JSON.stringify({ ...parsedValue, [field]: value }));
  };
  const saveSpaceProperty = (field) => {
    var _a3, _b2;
    const colExists = (_b2 = (_a3 = props2.superstate.contextsIndex.get(parsedValue.space)) == null ? void 0 : _a3.cols) == null ? void 0 : _b2.some((f4) => f4.name == field);
    if (!colExists) {
      props2.superstate.spaceManager.addSpaceProperty(parsedValue.space, {
        name: field,
        schemaId: defaultContextSchemaID,
        type: "context",
        value: props2.name
      });
    }
    saveParsedValue("field", field);
  };
  const selectContext = (e4) => {
    showOptions(
      e4,
      parsedValue.space,
      props2.superstate.allSpaces().filter((f4) => f4.type != "default").map((m5) => ({ name: m5.name, value: m5.path })),
      "space"
    );
  };
  const selectSpaceProperty = (e4) => {
    var _a3, _b2;
    showOptions(
      e4,
      parsedValue.property,
      (_b2 = (_a3 = props2.superstate.contextsIndex.get(parsedValue.space)) == null ? void 0 : _a3.cols.filter((f4) => {
        return f4.type.startsWith("context") && parseFieldValue(f4.value, f4.type)["space"] == props2.contextPath ? true : false;
      }).map((m5) => ({ name: m5.name, value: m5.name }))) != null ? _b2 : [],
      "field",
      saveSpaceProperty
    );
  };
  const selectProperty = (e4) => {
    var _a3, _b2;
    const properties2 = (_b2 = (_a3 = props2.superstate.contextsIndex.get(props2.contextPath)) == null ? void 0 : _a3.cols.filter(
      (f4) => f4.type == "file" || f4.type == "link" || f4.type == "context"
    ).map((f4) => ({
      name: f4.name,
      value: f4.name
    }))) != null ? _b2 : [];
    showOptions(e4, null, properties2, "field");
  };
  const selectPathProp = (e4) => {
    var _a3, _b2, _c2;
    const property = (_a3 = props2.superstate.contextsIndex.get(props2.contextPath)) == null ? void 0 : _a3.cols.find((f4) => f4.name == parsedValue.field);
    const allPaths = props2.superstate.spaceManager.allPaths();
    const fileProps = property ? property.type == "file" || property.type == "link" ? filePropTypes.map((f4) => ({
      name: f4.name,
      value: f4.value
    })) : (_c2 = (_b2 = props2.superstate.contextsIndex.get(parseFieldValue(property.value, "context").space)) == null ? void 0 : _b2.cols.filter((f4) => f4.hidden != "true").map((f4) => ({
      name: f4.name,
      value: f4.name
    }))) != null ? _c2 : [] : [];
    const cacheTypes = allCacheTypesForPaths(props2.superstate, allPaths).map(
      (f4) => ({ name: f4.name, value: f4.name })
    );
    showOptions(e4, null, [...fileProps, ...cacheTypes], "value");
  };
  const selectDateFormat = (e4) => {
    const formats = [
      {
        name: "2020-04-21",
        value: "yyyy-MM-dd"
      },
      {
        name: "Apr 21, 2020",
        value: "MMM d, yyyy"
      },
      {
        name: "Tue Apr 21, 2020",
        value: "EEE MMM d, yyyy"
      }
    ];
    showOptions(e4, null, formats, "format");
  };
  return props2.fieldType.startsWith("date") ? /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectDateFormat(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.dateFormat), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.format))) : props2.fieldType.startsWith("context") ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectContext(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyValueSpace), /* @__PURE__ */ Cn.createElement("span", null, spaceNameFromSpacePath(parsedValue.space, props2.superstate)))), ((_a2 = parsedValue.space) == null ? void 0 : _a2.length) > 0 && /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectSpaceProperty(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyValueProperty), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.field)))) : props2.fieldType == "fileprop" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectProperty(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyFileProp), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.field))), parsedValue.field && /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectPathProp(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyLookup), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.value)))) : props2.fieldType == "super" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, "Dynamic"), /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: parsedValue.dynamic == true,
    onChange: () => saveParsedValue("dynamic", !parsedValue.dynamic)
  }))), /* @__PURE__ */ Cn.createElement("li", null, !parsedValue.dynamic ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => showOptions(
      e4,
      parsedValue.field,
      [...props2.superstate.superProperties.keys()].map((f4) => ({
        value: f4,
        name: props2.superstate.superProperties.get(f4).name
      })),
      "field"
    )
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyValueProperty), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.field)) : /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectProperty(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyFileProp), /* @__PURE__ */ Cn.createElement("span", null, parsedValue.field)))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/UI/Menus/contexts/newSpacePropertyMenu.tsx
var NewPropertyMenuComponent = (props2) => {
  const [fieldName, setFieldName] = h2("");
  const [fieldSource, setFieldSource] = h2(
    props2.fileMetadata ? "fm" : ""
  );
  const spaceCaches = F2(
    () => props2.spaces.map((f4) => props2.superstate.spacesIndex.get(f4)).filter((f4) => f4),
    [props2.spaces]
  );
  const [fieldValue, setFieldValue] = h2("");
  const [fieldType, setFieldType] = h2("text");
  const options = F2(() => {
    const options2 = [];
    if (props2.fileMetadata) {
      options2.push({
        name: i18n_default.menu.setNone,
        value: "fm"
      });
    }
    if (props2.contextPath) {
      options2.push({
        name: folderPathToString(props2.contextPath),
        value: ""
      });
    }
    options2.push(
      ...(spaceCaches != null ? spaceCaches : []).map((f4) => ({
        name: f4.name,
        value: f4.path
      }))
    );
    return options2;
  }, [spaceCaches]);
  const selectedType = (_11, value) => {
    setFieldType(value[0]);
  };
  const selectedValue = (value) => {
    setFieldValue(value);
  };
  const selectedSource = (_11, value) => {
    setFieldSource(value[0]);
  };
  const toggleMulti = () => {
    const field = fieldTypes.find(
      (f4) => f4.type == fieldType || f4.multiType == fieldType
    );
    setFieldType(field.type == fieldType ? field.multiType : field.type);
  };
  const selectType = (e4) => {
    props2.superstate.ui.openMenu(
      e4.target.getBoundingClientRect(),
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        searchable: false,
        saveOptions: selectedType,
        value: [],
        showAll: true,
        options: fieldTypes.filter((f4) => fieldSource == "fm" ? f4.metadata : !f4.restricted).map((f4, i4) => ({
          id: i4 + 1,
          name: f4.label,
          value: f4.type,
          icon: ""
        }))
      }
    );
  };
  const selectedContext = (value) => {
    setFieldValue(value);
  };
  const type = F2(
    () => {
      var _a2;
      return (_a2 = fieldTypeForType(fieldType, fieldName)) != null ? _a2 : fieldTypes[0];
    },
    [fieldType, fieldName]
  );
  const selectSource = (e4) => {
    props2.superstate.ui.openMenu(
      e4.target.getBoundingClientRect(),
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        searchable: false,
        saveOptions: selectedSource,
        value: [],
        showAll: true,
        options
      }
    );
  };
  const saveField = () => {
    if (fieldName.length == 0) {
      props2.superstate.ui.notify(i18n_default.notice.noPropertyName);
      return;
    }
    props2.saveField(fieldSource, {
      name: fieldName,
      type: fieldType,
      value: fieldValue,
      schemaId: props2.schemaId
    });
    props2.hide();
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Enter") {
      saveField();
    }
  };
  p2(() => {
    setTimeout(() => {
      input.current.focus();
    }, 50);
  }, []);
  const input = _2(null);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, "Name"), /* @__PURE__ */ Cn.createElement("input", {
    type: "text",
    ref: input,
    onKeyDown,
    onChange: (e4) => setFieldName(e4.target.value),
    onMouseDown: (e4) => e4.stopPropagation(),
    value: fieldName
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), options.length > 1 && /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectSource(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, "Space"), /* @__PURE__ */ Cn.createElement("span", null, fieldSource == "fm" ? "None" : fieldSource == "" ? props2.contextPath : fieldSource)), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectType(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, "Type"), /* @__PURE__ */ Cn.createElement("span", null, type.label)), type.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.multiple), /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: fieldType == type.multiType,
    onChange: () => toggleMulti()
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), fieldSource != "fm" ? /* @__PURE__ */ Cn.createElement(PropertyValueComponent, {
    superstate: props2.superstate,
    table: fieldSource,
    fields: props2.fields,
    fieldType,
    value: fieldValue,
    contextPath: props2.contextPath,
    saveValue: selectedValue
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => saveField()
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.buttons.saveProperty)), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => props2.hide()
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.buttons.cancel)));
};
var showNewPropertyMenu = (superstate, position, spaces, fields, saveField, schemaId, contextPath, fileMetadata) => {
  superstate.ui.openCustomMenu(position, (props2) => /* @__PURE__ */ Cn.createElement(NewPropertyMenuComponent, {
    superstate,
    spaces,
    schemaId,
    contextPath,
    fields,
    hide: props2.hide,
    saveField,
    fileMetadata
  }));
};

// src/core/utils/contexts/predicate/sort.ts
var simpleSort = (a5, b4) => {
  if (a5 < b4)
    return -1;
  if (a5 > b4)
    return 1;
  return 0;
};
var stringSort = (value, filterValue) => simpleSort(value, filterValue);
var numSort = (value, filterValue) => simpleSort(parseFloat(value), parseFloat(filterValue));
var boolSort = (value, filterValue) => simpleSort(value == "true" ? 1 : 0, filterValue == "true" ? 1 : 0);
var countSort = (value, filterValue) => simpleSort(parseMultiString(value).length, parseMultiString(filterValue).length);
var normalizedSortForType = (type, desc) => {
  return Object.keys(sortFnTypes).find(
    (f4) => sortFnTypes[f4].type.some((g4) => g4 == type) && sortFnTypes[f4].desc == desc
  );
};
var sortFnTypes = {
  alphabetical: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: stringSort,
    label: i18n_default.sortTypes.alphaAsc,
    desc: false
  },
  reverseAlphabetical: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => stringSort(v3, f4) * -1,
    label: i18n_default.sortTypes.alphaDesc,
    desc: true
  },
  earliest: {
    type: ["date", "fileprop"],
    fn: stringSort,
    label: i18n_default.sortTypes.earliest,
    desc: false
  },
  latest: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => stringSort(v3, f4) * -1,
    label: i18n_default.sortTypes.latest,
    desc: true
  },
  boolean: {
    type: ["boolean"],
    fn: boolSort,
    label: i18n_default.sortTypes.checkAsc,
    desc: false
  },
  booleanReverse: {
    type: ["boolean"],
    fn: (v3, f4) => boolSort(v3, f4) * -1,
    label: i18n_default.sortTypes.checkDesc,
    desc: true
  },
  number: {
    type: ["number", "fileprop"],
    fn: numSort,
    label: "1 \u2192 9",
    desc: false
  },
  reverseNumber: {
    type: ["number", "fileprop"],
    fn: (v3, f4) => numSort(v3, f4) * -1,
    label: "9 \u2192 1",
    desc: true
  },
  count: {
    type: ["option-multi", "context-multi", "link-multi"],
    fn: countSort,
    label: i18n_default.sortTypes.itemsDesc,
    desc: true
  },
  reverseCount: {
    type: ["option-multi", "context-multi", "link-multi"],
    fn: (v3, f4) => countSort(v3, f4) * -1,
    label: i18n_default.sortTypes.itemsAsc,
    desc: false
  }
};
var sortReturnForCol = (col, sort, row, row2) => {
  if (!col)
    return 0;
  const sortType = sortFnTypes[sort.fn];
  if (sortType) {
    return sortType.fn(row[sort.field], row2[sort.field]);
  }
  return 0;
};

// src/core/react/components/UI/Menus/contexts/spacePropertyMenu.tsx
var selectPropertyTypeMenu = (e4, ui, selectedType) => {
  ui.openMenu(e4.target.getBoundingClientRect(), {
    ui,
    multi: false,
    editable: false,
    searchable: false,
    saveOptions: selectedType,
    value: [],
    showAll: true,
    options: fieldTypes.filter((f4) => !f4.restricted).map((f4, i4) => ({
      id: i4 + 1,
      name: f4.label,
      value: f4.type,
      icon: f4.icon
    }))
  });
};
var PropertyMenuComponent = (props2) => {
  var _a2;
  const [field, setField] = h2(props2.field);
  const selectedType = (_11, value) => {
    const newField = {
      ...field,
      type: value[0],
      value: JSON.stringify(getNewValueForType(field, value))
    };
    setField(newField);
    props2.saveField(newField);
  };
  const selectedValue = (value) => {
    const newField = { ...field, value };
    setField(newField);
    props2.saveField(newField);
  };
  const toggleMulti = () => {
    const newField = {
      ...field,
      type: field.type == fieldType.multiType ? fieldType.type : fieldType.multiType
    };
    setField(newField);
    props2.saveField(newField);
  };
  const fieldType = (_a2 = fieldTypeForType(field.type, field.name)) != null ? _a2 : fieldTypes[0];
  const getNewValueForType = (f4, value) => {
    if (value[0].startsWith("option")) {
      return JSON.stringify({
        options: props2.options.map((f5) => ({
          name: f5,
          value: f5
        }))
      });
    }
    return value[0] == fieldType.type || value[0] == fieldType.multiType ? f4.value : null;
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectPropertyTypeMenu(e4, props2.superstate.ui, selectedType)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyType), /* @__PURE__ */ Cn.createElement("span", null, fieldType.label))), fieldType.multi ? /* @__PURE__ */ Cn.createElement("li", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.multiple), /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: field.type == fieldType.multiType,
    onChange: () => toggleMulti()
  }))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), /* @__PURE__ */ Cn.createElement(PropertyValueComponent, {
    superstate: props2.superstate,
    name: field.name,
    table: field.table,
    fields: props2.fields,
    fieldType: fieldType.type,
    value: field.value,
    contextPath: props2.contextPath,
    saveValue: selectedValue
  }));
};
var showPropertyMenu = (props2) => {
  var _a2;
  const {
    superstate,
    position,
    editable,
    options,
    field,
    fields,
    contextPath,
    saveField,
    hide,
    deleteColumn,
    sortColumn,
    editCode,
    hidden
  } = props2;
  const menuOptions = [];
  if (editable) {
    menuOptions.push(
      menuInput(
        (_a2 = field == null ? void 0 : field.name) != null ? _a2 : "",
        (value) => saveField({ ...field, name: value })
      )
    );
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: "",
      type: 4 /* Custom */,
      fragment: () => /* @__PURE__ */ Cn.createElement(PropertyMenuComponent, {
        superstate,
        field,
        fields,
        contextPath,
        options,
        saveField
      })
    });
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.setIcon,
      icon: "lucide//gem",
      onClick: () => {
        superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
          ui: superstate.ui,
          hide: _props.hide,
          selectedSticker: (emoji) => saveField({ ...field, attrs: JSON.stringify({ icon: emoji }) })
        }));
      }
    });
    if (hide) {
      if (!hidden) {
        menuOptions.push({
          name: i18n_default.menu.hideProperty,
          icon: "lucide//eye-off",
          onClick: () => {
            hide(field, true);
          }
        });
      } else {
        menuOptions.push({
          name: i18n_default.menu.unhideProperty,
          icon: "lucide//eye",
          onClick: () => {
            hide(field, false);
          }
        });
      }
    }
    if (editCode) {
      menuOptions.push({
        name: i18n_default.menu.editCode,
        icon: "lucide//code",
        onClick: () => {
          editCode();
        }
      });
    }
    if (deleteColumn) {
      menuOptions.push({
        name: i18n_default.menu.deleteProperty,
        icon: "lucide//trash-2",
        onClick: () => {
          deleteColumn(field);
        }
      });
    }
    menuOptions.push(menuSeparator);
  }
  const sortableString = normalizedSortForType(field.type, false);
  if (sortableString && sortColumn) {
    menuOptions.push({
      name: i18n_default.menu.sortAscending,
      icon: "lucide//sort-asc",
      onClick: () => {
        sortColumn({
          field: field.name + field.table,
          fn: sortableString
        });
      }
    });
    menuOptions.push({
      name: i18n_default.menu.sortDescending,
      icon: "lucide//sort-desc",
      onClick: () => {
        sortColumn({
          field: field.name + field.table,
          fn: normalizedSortForType(field.type, true)
        });
      }
    });
  }
  const menu = superstate.ui.openMenu(
    position,
    defaultMenu(superstate.ui, menuOptions)
  );
  return menu;
};

// src/core/utils/contexts/lookup.ts
var appendPathsMetaData = (superstate, propType, pathsString) => {
  const paths = parseMultiString(pathsString).map((f4) => superstate.pathsIndex.get(f4)).filter((f4) => f4);
  return serializeMultiString(paths.map((f4) => appendPathMetaData(propType, f4)));
};
var appendPathMetaData = (propType, pathState) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l, _m;
  let value = "";
  if (pathState) {
    if (propType == "folder") {
      value = pathState.parent;
    } else if (propType == "name") {
      value = pathState.name;
    } else if (propType == "ctime") {
      value = (_d2 = (_c2 = (_b2 = (_a2 = pathState.metadata) == null ? void 0 : _a2.file) == null ? void 0 : _b2.stat) == null ? void 0 : _c2.ctime) == null ? void 0 : _d2.toString();
    } else if (propType == "mtime") {
      value = (_h = (_g = (_f = (_e2 = pathState.metadata) == null ? void 0 : _e2.file) == null ? void 0 : _f.stat) == null ? void 0 : _g.mtime) == null ? void 0 : _h.toString();
    } else if (propType == "extension") {
      value = pathState.metadata.extension;
    } else if (propType == "sticker") {
      value = pathState.label.sticker;
    } else if (propType == "size") {
      value = (_l = (_k = (_j = (_i = pathState.metadata) == null ? void 0 : _i.file) == null ? void 0 : _j.stat) == null ? void 0 : _k.size) == null ? void 0 : _l.toString();
    } else if (propType == "inlinks") {
      value = serializeMultiDisplayString(pathState.inlinks);
    } else if (propType == "outlinks") {
      value = serializeMultiDisplayString(pathState.outlinks);
    } else if (propType == "tags") {
      value = serializeMultiDisplayString(pathState.tags);
    } else if (propType == "spaces") {
      value = serializeMultiDisplayString(pathState.spaces);
    } else {
      value = parseProperty(null, (_m = pathState.metadata) == null ? void 0 : _m[propType]);
    }
  }
  return value;
};

// src/core/utils/contexts/linkContextRow.ts
var linkContextProp = (propType, rows, contextTableRows) => {
  const contextRows = contextTableRows.filter(
    (f4) => parseMultiString(rows).includes(f4[PathPropertyName])
  );
  return serializeMultiString(uniq(contextRows.map((f4) => f4[propType]).filter((f4) => f4)));
};
var linkContextRow = (superstate, row, fields) => {
  return {
    ...row,
    ...fields.filter((f4) => f4.type == "fileprop" || f4.name == "tags").reduce((p3, c4) => {
      var _a2;
      if (c4.name == "tags") {
        return { ...p3, "tags": serializeMultiString([...(_a2 = superstate.tagsMap.get(row[PathPropertyName])) != null ? _a2 : []]) };
      }
      const { field, value } = parseFieldValue(c4.value, c4.type);
      const col = fields.find((f4) => f4.name == field);
      if (!col || !value) {
        return p3;
      }
      if (col.type == "file" || col.type == "link") {
        return {
          ...p3,
          [c4.name]: appendPathsMetaData(superstate, value, row[col.name])
        };
      }
      if (col.type.includes("context")) {
        const context = col.value;
        const contextCache = superstate.contextsIndex.get(context);
        if (contextCache.tables[defaultContextSchemaID]) {
          return {
            ...p3,
            [c4.name]: linkContextProp(
              value,
              row[col.name],
              contextCache.tables[defaultContextSchemaID].rows
            )
          };
        }
      }
      return p3;
    }, {})
  };
};

// src/core/utils/contexts/predicate/filterFns/filterFnTypes.ts
var filterFnTypes = {
  isNotEmpty: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => !empty2(v3, ""),
    valueType: "none"
  },
  isEmpty: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => empty2(v3, ""),
    valueType: "none"
  },
  include: {
    fn: (v3, f4) => stringCompare(v3, f4),
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    valueType: "text"
  },
  notInclude: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => !stringCompare(v3, f4),
    valueType: "text"
  },
  is: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => stringEqual(v3, f4),
    valueType: "text"
  },
  isNot: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => !stringEqual(v3, f4),
    valueType: "text"
  },
  equal: {
    type: ["number"],
    fn: (v3, f4) => stringEqual(v3, f4),
    valueType: "number"
  },
  isGreatThan: {
    type: ["number"],
    fn: (v3, f4) => greaterThan(v3, f4),
    valueType: "number"
  },
  isLessThan: {
    type: ["number"],
    fn: (v3, f4) => lessThan(v3, f4),
    valueType: "number"
  },
  isLessThanOrEqual: {
    type: ["number"],
    fn: (v3, f4) => !greaterThan(v3, f4),
    valueType: "number"
  },
  isGreatThanOrEqual: {
    type: ["number"],
    fn: (v3, f4) => !lessThan(v3, f4),
    valueType: "number"
  },
  dateBefore: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => dateBefore(v3, f4),
    valueType: "date"
  },
  dateAfter: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => dateAfter(v3, f4),
    valueType: "date"
  },
  isSameDateAsToday: {
    type: ["date"],
    fn: (v3, f4) => isSameDayAsToday(v3, f4),
    valueType: "none"
  },
  isAnyInList: {
    type: ["option", "context", "option-multi", "context-multi", "tags-multi", "tags"],
    fn: (v3, f4) => listIncludes(v3, f4),
    valueType: "list"
  },
  isNoneInList: {
    type: ["option", "context", "option-multi", "context-multi", "tags-multi", "tags"],
    fn: (v3, f4) => !listIncludes(v3, f4),
    valueType: "list"
  },
  isTrue: {
    type: ["boolean"],
    fn: (v3, f4) => v3 == "true",
    valueType: "none"
  },
  isFalse: {
    type: ["boolean"],
    fn: (v3, f4) => v3 != "true",
    valueType: "none"
  }
};

// src/core/utils/contexts/predicate/filter.ts
var stringEqual = (value, filterValue) => {
  return value == filterValue;
};
var empty2 = (value, filterValue) => {
  return (value != null ? value : "").length == 0;
};
var stringCompare = (value, filterValue) => {
  return (value != null ? value : "").toLowerCase().includes((filterValue != null ? filterValue : "").toLowerCase());
};
var greaterThan = (value, filterValue) => {
  return parseFloat(value) > parseFloat(filterValue);
};
var lessThan = (value, filterValue) => {
  return parseInt(value) > parseInt(filterValue);
};
var dateAfter = (value, filterValue) => {
  const dateValue = isNaN(Date.parse(value)) ? new Date(parseInt(value)) : new Date(value);
  const dateFilterValue = isNaN(Date.parse(filterValue)) ? new Date(parseInt(filterValue)) : new Date(filterValue);
  return dateValue.valueOf() > dateFilterValue.valueOf();
};
var dateBefore = (value, filterValue) => {
  const dateValue = isNaN(Date.parse(value)) ? new Date(parseInt(value)) : new Date(value);
  const dateFilterValue = isNaN(Date.parse(filterValue)) ? new Date(parseInt(filterValue)) : new Date(filterValue);
  return dateValue.valueOf() < dateFilterValue.valueOf();
};
var listIncludes = (value, filterValue) => {
  const valueList = value ? parseMultiString(value) : [];
  const strings = filterValue ? parseMultiString(filterValue) : [];
  return strings.some((f4) => valueList.some((g4) => g4 == f4));
};
var isSameDayAsToday = (value) => {
  const inputDate = new Date(`${value}T00:00`);
  const currentDate = new Date();
  return inputDate.getMonth() === currentDate.getMonth() && inputDate.getDate() === currentDate.getDate();
};
var filterReturnForCol = (col, filter, row) => {
  if (!col)
    return true;
  const filterType = filterFnTypes[filter == null ? void 0 : filter.fn];
  let result = true;
  if (filterType && filterType.fn) {
    result = filterType.fn(row[filter.field], filter.value);
  }
  return result;
};

// src/core/react/context/ContextEditorContext.tsx
var import_lodash5 = __toESM(require_lodash());

// src/core/utils/contexts/predicate/predicate.tsx
var defaultPredicateFnForType = (type, types2) => {
  const fnType = Object.keys(types2).find(
    (f4) => types2[f4].type.find((g4) => g4 == type)
  );
  return fnType;
};
var predicateFnsForType = (type, types2) => {
  const fnTypes = Object.keys(types2).filter(
    (f4) => types2[f4].type.find((g4) => g4 == type)
  );
  return fnTypes;
};
var cleanPredicateType = (type, definedTypes) => {
  return type.filter((f4) => Object.keys(definedTypes).find((g4) => g4 == f4.fn));
};
var validatePredicate = (prevPredicate) => {
  if (!prevPredicate) {
    return defaultPredicate;
  }
  return {
    ...defaultPredicate,
    view: prevPredicate.view,
    frame: prevPredicate.frame,
    frameProps: prevPredicate.frameProps,
    frameGroup: prevPredicate.frameGroup,
    filters: Array.isArray(prevPredicate.filters) ? cleanPredicateType(prevPredicate.filters, filterFnTypes) : [],
    sort: Array.isArray(prevPredicate.sort) ? cleanPredicateType(prevPredicate.sort, sortFnTypes) : [],
    groupBy: Array.isArray(prevPredicate.groupBy) ? prevPredicate.groupBy : [],
    colsOrder: Array.isArray(prevPredicate.colsOrder) ? prevPredicate.colsOrder : [],
    colsHidden: Array.isArray(prevPredicate.colsHidden) ? prevPredicate.colsHidden : [],
    colsSize: prevPredicate.colsSize
  };
};
var defaultPredicate = {
  view: "list",
  filters: [],
  frame: "",
  frameProps: {},
  frameGroup: "",
  sort: [],
  groupBy: [],
  colsOrder: [],
  colsHidden: [],
  colsSize: {}
};
var defaultTablePredicate = {
  view: "table",
  filters: [],
  frame: "",
  frameProps: {},
  frameGroup: "",
  sort: [],
  groupBy: [],
  colsOrder: [],
  colsHidden: [],
  colsSize: {}
};

// src/core/react/context/FramesMDBContext.tsx
var FramesMDBContext = F({
  frameSchemas: [],
  frames: [],
  tableData: null,
  saveFrame: () => null,
  frameSchema: null,
  setFrameSchema: () => null,
  saveSchema: () => null,
  deleteSchema: () => null,
  getMDBData: () => null
});
var FramesMDBProvider = (props2) => {
  const [schemaTable, setSchemaTable] = h2(null);
  const schemas = F2(
    () => {
      var _a2, _b2;
      return (_b2 = ((_a2 = schemaTable == null ? void 0 : schemaTable.rows) != null ? _a2 : []).map(
        (f4) => mdbSchemaToFrameSchema(f4)
      )) != null ? _b2 : [];
    },
    [schemaTable]
  );
  const frames = schemas.filter((f4) => f4.type == "frame");
  const [frameData, setFrameData] = h2(null);
  const [frameSchema, setFrameSchema] = h2(null);
  const tableData = F2(() => {
    return frameData == null ? void 0 : frameData[frameSchema == null ? void 0 : frameSchema.id];
  }, [frameData, frameSchema]);
  const defaultSchema = defaultFramesTable;
  const { spaceInfo, readMode } = q2(SpaceContext);
  const { dbSchemas, setDBSchema, dbSchema } = q2(ContextMDBContext);
  const deleteSchema = async (table) => {
    if (table.primary)
      return;
    await props2.superstate.spaceManager.deleteFrame(spaceInfo.path, table.id);
    const newSchemaTable = {
      ...schemaTable,
      rows: schemaTable.rows.filter((f4) => f4.id != table.id)
    };
    setSchemaTable(newSchemaTable);
  };
  const saveSchema = async (table) => {
    const newSchema = schemaTable.rows.find((f4) => f4.id == table.id) ? true : false;
    const newSchemaTable = newSchema ? {
      ...schemaTable,
      rows: schemaTable.rows.map(
        (f4) => f4.id == table.id ? frameSchemaToMDBSchema(table) : f4
      )
    } : {
      ...schemaTable,
      rows: [...schemaTable.rows, frameSchemaToMDBSchema(table)]
    };
    if (!spaceInfo.readOnly) {
      await props2.superstate.spaceManager.saveFrameSchema(
        spaceInfo.path,
        table.id,
        () => frameSchemaToMDBSchema(table)
      );
    }
    if (table.id == (frameSchema == null ? void 0 : frameSchema.id)) {
      setFrameSchema(table);
      setFrameData((f4) => ({
        ...f4,
        [table.id]: {
          ...f4[table.id],
          schema: frameSchemaToMDBSchema(table)
        }
      }));
    }
    setSchemaTable(newSchemaTable);
  };
  p2(() => {
    if (schemaTable)
      getMDBData().then((f4) => {
        if (f4 && Object.keys(f4).length > 0) {
          setFrameData(f4);
        }
      });
  }, [schemaTable]);
  p2(() => {
    var _a2, _b2;
    if (schemaTable) {
      if (props2.schema) {
        if ((frameSchema == null ? void 0 : frameSchema.id) != props2.schema) {
          const preselectSchema = schemaTable.rows.find(
            (g4) => g4.id == props2.schema
          );
          if (preselectSchema) {
            if (preselectSchema.type == "frame" || preselectSchema.type == "listitem") {
              setFrameSchema(mdbSchemaToFrameSchema(preselectSchema));
              return;
            } else {
              if (dbSchemas) {
                const preselectDBSchema = dbSchemas.find(
                  (g4) => g4.id == preselectSchema.def
                );
                if (preselectDBSchema) {
                  setFrameSchema(mdbSchemaToFrameSchema(preselectSchema));
                  if (preselectDBSchema.id != dbSchema.id) {
                    setDBSchema(preselectDBSchema);
                  }
                  return;
                }
              }
            }
          } else {
            if (props2.schema == defaultFrameListViewSchema.id) {
              setFrameSchema(defaultFrameListViewSchema);
              return;
            }
            const newSchema = {
              id: uniqueNameFromString(
                sanitizeTableName(props2.schema),
                schemaTable.rows.map((g4) => g4.id)
              ),
              name: props2.schema,
              type: "frame"
            };
            setFrameSchema(newSchema);
          }
        }
      } else {
        if (!frameSchema) {
          setFrameSchema(
            mdbSchemaToFrameSchema(
              (_a2 = schemaTable.rows) == null ? void 0 : _a2.find(
                (g4) => g4.type == "frame"
              )
            )
          );
        } else {
          setFrameSchema(
            mdbSchemaToFrameSchema(
              (_b2 = schemaTable.rows) == null ? void 0 : _b2.find(
                (g4) => g4.id == frameSchema.id
              )
            )
          );
        }
      }
    }
  }, [schemaTable]);
  const loadTables = T2(async () => {
    if (!spaceInfo)
      return;
    props2.superstate.spaceManager.framesForSpace(spaceInfo.path).then((f4) => {
      if (f4)
        setSchemaTable((prev) => ({
          ...defaultSchema,
          rows: f4
        }));
    });
  }, [defaultSchema, props2.schema, spaceInfo]);
  const refreshSpace = T2(
    async (payload) => {
      if (payload.path == spaceInfo.path) {
        loadTables();
        return;
      }
    },
    [spaceInfo, loadTables]
  );
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "frameStateUpdated",
      refreshSpace
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "frameStateUpdated",
        refreshSpace
      );
    };
  }, [refreshSpace]);
  const getMDBData = async () => {
    return await props2.superstate.spaceManager.readAllFrames(spaceInfo.path);
  };
  p2(() => {
    loadTables();
  }, [spaceInfo, props2.schema]);
  const saveFrame = async (newTable) => {
    if (spaceInfo.readOnly)
      return;
    await props2.superstate.spaceManager.saveFrame(spaceInfo.path, newTable).then((f4) => {
      setFrameData((p3) => ({
        ...p3,
        [newTable.schema.id]: newTable
      }));
    });
  };
  return /* @__PURE__ */ Cn.createElement(FramesMDBContext.Provider, {
    value: {
      frames,
      tableData,
      saveFrame,
      frameSchemas: schemas,
      saveSchema,
      deleteSchema,
      frameSchema,
      setFrameSchema,
      getMDBData
    }
  }, props2.children);
};

// src/core/react/context/ContextEditorContext.tsx
var ContextEditorContext = F({
  cols: [],
  data: [],
  schema: null,
  views: [],
  setSchema: () => null,
  sortedColumns: [],
  filteredData: [],
  contextTable: {},
  editMode: 0,
  setEditMode: () => null,
  selectedRows: [],
  selectRows: () => null,
  setContextTable: () => null,
  predicate: defaultPredicate,
  savePredicate: () => null,
  hideColumn: () => null,
  saveColumn: () => false,
  newColumn: () => false,
  sortColumn: () => null,
  delColumn: () => null,
  searchString: "",
  setSearchString: () => null,
  updateValue: () => null,
  updateFieldValue: () => null
});
var ContextEditorProvider = (props2) => {
  var _a2;
  const { spaceInfo, spaceState: spaceCache } = q2(SpaceContext);
  const contexts = (_a2 = spaceCache == null ? void 0 : spaceCache.contexts) != null ? _a2 : [];
  const {
    dbSchema,
    saveDB,
    saveContextDB,
    tableData,
    contextTable,
    setContextTable
  } = q2(ContextMDBContext);
  const { frameSchemas, saveSchema } = q2(FramesMDBContext);
  const [schema, setSchema] = h2(defaultFrameListViewSchema);
  const [searchString, setSearchString] = h2(null);
  const [predicate, setPredicate] = h2(defaultPredicate);
  const [selectedRows, setSelectedRows] = h2([]);
  const [editMode, setEditMode] = h2(0);
  const views = F2(() => {
    const _views = frameSchemas.filter(
      (f4) => f4.type == "view" && f4.def.db == (dbSchema == null ? void 0 : dbSchema.id)
    );
    return _views.length > 0 ? _views : schema ? [schema] : [];
  }, [frameSchemas, schema]);
  const getSchema = (_schemaTable, _dbSchema, _currentSchema) => {
    var _a3, _b2;
    let _schema;
    if (props2.schema) {
      _schema = _schemaTable.find((f4) => f4.id == props2.schema);
    } else {
      _schema = ((_a3 = _currentSchema == null ? void 0 : _currentSchema.def) == null ? void 0 : _a3.db) == _dbSchema.id ? _schemaTable.find((f4) => f4.id == _currentSchema.id) : (_b2 = _schemaTable.find((f4) => {
        var _a4;
        return ((_a4 = f4.def) == null ? void 0 : _a4.db) == _dbSchema.id;
      })) != null ? _b2 : {
        ..._dbSchema,
        id: uniqueNameFromString(
          _dbSchema.id + "View",
          _schemaTable.map((f4) => f4.id)
        ),
        type: "view",
        def: { db: _dbSchema.id },
        predicate: JSON.stringify(
          _dbSchema.primary == "true" ? defaultPredicate : defaultTablePredicate
        )
      };
    }
    return _schema;
  };
  p2(() => {
    if (!dbSchema)
      return;
    const _schema = getSchema(frameSchemas, dbSchema, schema);
    if (_schema) {
      setSchema(_schema);
    }
  }, [dbSchema, frameSchemas, props2.schema]);
  const cols = F2(
    () => {
      var _a3;
      return tableData ? [
        ...(_a3 = tableData.cols.map((f4) => ({ ...f4, table: "" }))) != null ? _a3 : [],
        ...(dbSchema == null ? void 0 : dbSchema.primary) == "true" ? contexts.reduce(
          (p3, c4) => {
            var _a4, _b2;
            return [
              ...p3,
              ...(_b2 = (_a4 = contextTable[c4]) == null ? void 0 : _a4.cols.filter(
                (f4) => f4.name != PathPropertyName && f4.type != "fileprop"
              ).map((f4) => ({ ...f4, table: c4 }))) != null ? _b2 : []
            ];
          },
          []
        ) : []
      ] : [];
    },
    [tableData, contextTable, contexts]
  );
  const data2 = F2(
    () => {
      var _a3;
      return (_a3 = tableData == null ? void 0 : tableData.rows.map(
        (r3, index) => linkContextRow(
          props2.superstate,
          {
            _index: index.toString(),
            ...r3,
            ...contexts.reduce((p3, c4) => {
              var _a4, _b2, _c2, _d2;
              const contextRowIndexByPath = (_b2 = (_a4 = contextTable[c4]) == null ? void 0 : _a4.rows.findIndex(
                (f4) => f4[PathPropertyName] == r3[PathPropertyName]
              )) != null ? _b2 : -1;
              const contextRowsByPath = (_d2 = (_c2 = contextTable[c4]) == null ? void 0 : _c2.rows[contextRowIndexByPath]) != null ? _d2 : {};
              const contextRowsWithKeysAppended = Object.keys(
                contextRowsByPath
              ).reduce(
                (pa, ca) => ({ ...pa, [ca + c4]: contextRowsByPath[ca] }),
                {
                  ["_index" + c4]: contextRowIndexByPath.toString()
                }
              );
              return { ...p3, ...contextRowsWithKeysAppended };
            }, {})
          },
          cols
        )
      )) != null ? _a3 : [];
    },
    [tableData, schema, contextTable]
  );
  const sortedColumns = F2(() => {
    return cols.filter(
      (f4) => f4.hidden != "true" && !predicate.colsHidden.some((c4) => c4 == f4.name + f4.table)
    ).sort(
      (a5, b4) => predicate.colsOrder.findIndex((x5) => x5 == a5.name + a5.table) - predicate.colsOrder.findIndex((x5) => x5 == b4.name + b4.table)
    );
  }, [cols, predicate]);
  const filteredData = F2(
    () => data2.filter((f4) => {
      return predicate.filters.reduce((p3, c4) => {
        return p3 ? filterReturnForCol(
          cols.find((col) => col.name + col.table == c4.field),
          c4,
          f4
        ) : p3;
      }, true);
    }).filter(
      (f4) => (searchString == null ? void 0 : searchString.length) > 0 ? matchAny(searchString).test(
        Object.keys(f4).filter((g4) => g4.charAt(0) != "_").map((g4) => f4[g4]).join("|")
      ) : true
    ).sort((a5, b4) => {
      return predicate.sort.reduce((p3, c4) => {
        return p3 == 0 ? sortReturnForCol(
          cols.find((col) => col.name + col.table == c4.field),
          c4,
          a5,
          b4
        ) : p3;
      }, 0);
    }),
    [predicate, data2, cols, searchString]
  );
  const updateValue2 = (column, value, table, index, path) => {
    var _a3, _b2;
    const col = (_a3 = table == "" ? tableData : contextTable[table]) == null ? void 0 : _a3.cols.find(
      (f4) => f4.name == column
    );
    if (col)
      saveProperties(
        props2.superstate,
        path != null ? path : (_b2 = tableData.rows[index]) == null ? void 0 : _b2[PathPropertyName],
        { [column]: parseMDBValue(col.type, value) }
      );
    if (table == "") {
      saveDB({
        ...tableData,
        rows: tableData.rows.map(
          (r3, i4) => i4 == index ? {
            ...r3,
            [column]: value
          } : r3
        )
      });
    } else if (contextTable[table]) {
      const path2 = tableData.rows[index][PathPropertyName];
      saveContextDB(
        {
          ...contextTable[table],
          rows: contextTable[table].rows.map(
            (r3, i4) => r3[PathPropertyName] == path2 ? {
              ...r3,
              [column]: value
            } : r3
          )
        },
        table
      );
    }
  };
  const sortColumn = (sort) => {
    savePredicate({
      ...predicate,
      sort: [sort]
    });
  };
  const hideColumn = (col, hidden) => {
    savePredicate({
      ...predicate,
      colsHidden: hidden ? [
        ...predicate.colsHidden.filter((s5) => s5 != col.name + col.table),
        col.name + col.table
      ] : predicate.colsHidden.filter((s5) => s5 != col.name + col.table)
    });
  };
  const updateFieldValue = (column, fieldValue, value, table, index, path) => {
    var _a3;
    const col = tableData.cols.find((f4) => f4.name == column);
    saveProperties(
      props2.superstate,
      path != null ? path : (_a3 = tableData.rows[index]) == null ? void 0 : _a3[PathPropertyName],
      { [column]: parseMDBValue(col.type, value) }
    );
    if (table == "") {
      const newTable = {
        ...tableData,
        cols: tableData.cols.map(
          (m5) => m5.name == column ? {
            ...m5,
            value: fieldValue
          } : m5
        ),
        rows: tableData.rows.map(
          (r3, i4) => i4 == index ? {
            ...r3,
            [column]: value
          } : r3
        )
      };
      saveDB(newTable);
    } else if (contextTable[table]) {
      const path2 = tableData.rows[index][PathPropertyName];
      saveContextDB(
        {
          ...contextTable[table],
          cols: contextTable[table].cols.map(
            (m5) => m5.name == column ? {
              ...m5,
              value: fieldValue
            } : m5
          ),
          rows: contextTable[table].rows.map(
            (r3, i4) => path2 == r3[PathPropertyName] ? {
              ...r3,
              [column]: value
            } : r3
          )
        },
        table
      );
    }
  };
  const syncAllProperties = async (f4) => {
    const paths = f4.rows.map((f5) => f5[PathPropertyName]);
    const getPathProperties2 = async (paths2, fmKeys) => {
      let rows = { uniques: [], cols: fmKeys, rows: [] };
      for (const c4 of paths2) {
        const properties2 = await props2.superstate.spaceManager.readProperties(
          c4
        );
        rows = {
          uniques: [],
          cols: fmKeys,
          rows: [
            ...rows.rows,
            {
              [PathPropertyName]: c4,
              ...properties2 ? fmKeys.reduce((p3, c5) => {
                const value = parseProperty(c5, properties2[c5]);
                if ((value == null ? void 0 : value.length) > 0)
                  return { ...p3, [c5]: value };
                return p3;
              }, {}) : {}
            }
          ]
        };
      }
      return rows;
    };
    const pathPropertiesTable = await getPathProperties2(
      paths,
      f4.cols.filter((f5) => !f5.type.includes("file")).map((f5) => f5.name)
    );
    const newRows = f4.rows.map((r3) => {
      const fmRow = pathPropertiesTable.rows.find(
        (f5) => f5[PathPropertyName] == r3[PathPropertyName]
      );
      if (fmRow) {
        return {
          ...r3,
          ...fmRow
        };
      }
      return r3;
    });
    const rowsChanged = !import_lodash5.default.isEqual(newRows, tableData == null ? void 0 : tableData.rows);
    const colsChanged = !import_lodash5.default.isEqual(tableData == null ? void 0 : tableData.cols, f4.cols);
    if (rowsChanged || colsChanged) {
      saveDB({
        ...f4,
        rows: newRows
      });
    }
  };
  p2(() => {
    if (schema) {
      parsePredicate(schema.predicate);
    }
  }, [schema]);
  const selectRows = (lastSelected, rows) => {
    setSelectedRows(rows);
    if (!((dbSchema == null ? void 0 : dbSchema.primary) == "true"))
      return;
    if (lastSelected) {
      const path = tableData.rows[parseInt(lastSelected)][PathPropertyName];
      props2.superstate.ui.setActivePath(path);
    } else {
      props2.superstate.ui.setActivePath(spaceInfo.path);
    }
  };
  const savePredicate = (newPredicate) => {
    const cleanedPredicate = validatePredicate(newPredicate);
    saveSchema({
      ...schema,
      predicate: JSON.stringify(cleanedPredicate)
    });
    setPredicate(cleanedPredicate);
  };
  p2(() => {
    setPredicate((p3) => ({
      ...p3,
      colsOrder: uniq([
        ...p3.colsOrder,
        ...cols.filter((f4) => f4.hidden != "true").map((c4) => c4.name + c4.table)
      ])
    }));
  }, [cols]);
  const parsePredicate = (predicateStr) => {
    const newPredicate = safelyParseJSON(predicateStr);
    setPredicate(validatePredicate(newPredicate));
  };
  const delColumn = (column) => {
    let mdbtable;
    const table = column.table;
    if (table == "") {
      mdbtable = tableData;
    } else if (contextTable[table]) {
      mdbtable = contextTable[table];
    }
    const newFields = mdbtable.cols.filter(
      (f4, i4) => f4.name != column.name
    );
    const newTable = {
      ...mdbtable,
      cols: newFields,
      rows: mdbtable.rows.map((r3) => {
        const { [column.name]: val, ...rest } = r3;
        return rest;
      })
    };
    if (table == "") {
      saveDB(newTable);
    } else if (contextTable[table]) {
      saveContextDB(newTable, table);
    }
  };
  const newColumn = (col) => {
    return saveColumn(col);
  };
  const saveColumn = (newColumn2, oldColumn) => {
    let mdbtable;
    const column = {
      ...newColumn2,
      name: sanitizeColumnName(newColumn2.name)
    };
    const table = column.table;
    if (table == "") {
      mdbtable = tableData;
    } else if (contextTable[table]) {
      mdbtable = contextTable[table];
    }
    if (column.name == "") {
      props2.superstate.ui.notify(i18n_default.notice.noPropertyName);
      return false;
    }
    if (!oldColumn && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    ) || oldColumn && oldColumn.name != column.name && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    )) {
      props2.superstate.ui.notify(i18n_default.notice.duplicatePropertyName);
      return false;
    }
    const oldFieldIndex = oldColumn ? mdbtable.cols.findIndex((f4) => f4.name == oldColumn.name) : -1;
    const newFields = oldFieldIndex == -1 ? [...mdbtable.cols, column] : mdbtable.cols.map((f4, i4) => i4 == oldFieldIndex ? column : f4);
    const newTable = {
      ...mdbtable,
      cols: newFields,
      rows: mdbtable.rows.map(
        (f4) => oldColumn ? {
          ...f4,
          [column.name]: f4[oldColumn.name],
          oldColumn: void 0
        } : f4
      )
    };
    if (oldColumn)
      savePredicate({
        view: predicate.view,
        frame: predicate.frame,
        frameProps: predicate.frameProps,
        frameGroup: predicate.frameGroup,
        filters: predicate.filters.map(
          (f4) => f4.field == oldColumn.name + oldColumn.table ? { ...f4, field: column.name + column.table } : f4
        ),
        sort: predicate.sort.map(
          (f4) => f4.field == oldColumn.name + oldColumn.table ? { ...f4, field: column.name + column.table } : f4
        ),
        groupBy: predicate.groupBy.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsHidden: predicate.colsHidden.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsOrder: predicate.colsOrder.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsSize: {
          ...predicate.colsSize,
          [column.name + column.table]: predicate.colsSize[oldColumn.name + oldColumn.table],
          [oldColumn.name + oldColumn.table]: void 0
        }
      });
    if (table == "") {
      syncAllProperties(newTable);
    } else if (contextTable[table]) {
      saveContextDB(newTable, table);
    }
    return true;
  };
  return /* @__PURE__ */ Cn.createElement(ContextEditorContext.Provider, {
    value: {
      cols,
      data: data2,
      views,
      schema,
      setSchema,
      filteredData,
      selectedRows,
      selectRows,
      sortedColumns,
      contextTable,
      setContextTable,
      predicate,
      savePredicate,
      saveColumn,
      hideColumn,
      sortColumn,
      delColumn,
      newColumn,
      searchString,
      setSearchString,
      updateValue: updateValue2,
      updateFieldValue,
      editMode,
      setEditMode
    }
  }, props2.children);
};

// src/core/react/hooks/useCombinedRef.tsx
function useCombinedRefs2(...refs) {
  return F2(
    () => (node) => {
      refs.forEach((ref2) => ref2(node));
    },
    refs
  );
}

// src/core/react/components/SpaceView/Contexts/TableView/ColumnHeader.tsx
var filePropTypes = [
  {
    name: i18n_default.properties.fileProperty.name,
    value: "name"
  },
  {
    name: i18n_default.properties.fileProperty.createdTime,
    value: "ctime"
  },
  {
    name: i18n_default.properties.fileProperty.modifiedTime,
    value: "mtime"
  },
  {
    name: i18n_default.properties.fileProperty.sticker,
    value: "sticker"
  },
  {
    name: i18n_default.properties.fileProperty.extension,
    value: "extension"
  },
  {
    name: i18n_default.properties.fileProperty.size,
    value: "size"
  },
  {
    name: i18n_default.properties.fileProperty.parentFolder,
    value: "folder"
  },
  {
    name: "Links",
    value: "inlinks"
  },
  {
    name: "Tags",
    value: "tags"
  },
  {
    name: "Spaces",
    value: "spaces"
  }
];
var ColumnHeader = (props2) => {
  const [field, setField] = h2(props2.column);
  const menuRef = _2(null);
  const { spaceInfo, spaceState: spaceCache } = q2(SpaceContext);
  const { tableData, contextTable } = q2(ContextMDBContext);
  const {
    predicate,
    cols,
    newColumn,
    saveColumn,
    hideColumn,
    sortColumn,
    delColumn
  } = q2(ContextEditorContext);
  p2(() => {
    setField(props2.column);
  }, [props2.column]);
  const {
    attributes,
    listeners,
    setNodeRef: setDraggableNodeRef,
    transform
  } = useDraggable({
    id: field.name + field.table,
    data: { name: field.name }
  });
  const { setNodeRef: setDroppableNodeRef } = useDroppable({
    id: field.name + field.table,
    data: { name: field.name }
  });
  const saveField = (field2) => {
    if (field2.name.length > 0) {
      if (field2.name != props2.column.name || field2.type != props2.column.type || field2.value != props2.column.value || field2.attrs != props2.column.attrs) {
        const saveResult = saveColumn(field2, props2.column);
        if (saveResult) {
          if (props2.isNew) {
            setField(props2.column);
          }
        }
      }
    }
  };
  const showNewMenu = (e4) => {
    var _a2;
    const offset2 = ref2.current.getBoundingClientRect();
    showNewPropertyMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      (_a2 = spaceCache == null ? void 0 : spaceCache.contexts) != null ? _a2 : [],
      cols,
      (source, field2) => newColumn({ ...field2, table: source }),
      tableData.schema.id,
      spaceInfo.path,
      false
    );
  };
  const toggleMenu = (e4) => {
    if (props2.isNew) {
      showNewMenu(e4);
    } else {
      const offset2 = e4.target.getBoundingClientRect();
      const options = optionValuesForColumn(
        field.name,
        field.table == "" ? tableData : contextTable[field.table]
      );
      showPropertyMenu({
        superstate: props2.superstate,
        position: { x: offset2.left, y: offset2.top + 30 },
        editable: props2.editable,
        options,
        field,
        fields: cols,
        contextPath: spaceInfo.path,
        saveField,
        hide: hideColumn,
        deleteColumn: delColumn,
        sortColumn,
        hidden: predicate.colsHidden.includes(field.name + field.table)
      });
    }
  };
  const ref2 = _2(null);
  const setNodeRef = useCombinedRefs2(setDroppableNodeRef, setDraggableNodeRef);
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: setNodeRef,
    ...listeners,
    ...attributes,
    className: "mk-col-header",
    onClick: (e4) => {
      toggleMenu(e4);
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, props2.column.name.length > 0 ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        stickerForField(props2.column)
      )
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-key"
  }, field.name)) : "+", /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-col-header-context",
    "aria-label": props2.column.table.length > 0 ? props2.column.table : ""
  }, props2.column.table.length > 0 ? "#" : "")));
};

// src/core/utils/ui/selection.ts
var selectNextIndex = (currIndex, array) => {
  if (!currIndex && array.length > 0)
    return array[0];
  const pos = array.indexOf(currIndex);
  if (pos < array.length - 1)
    return array[pos + 1];
  return currIndex;
};
var selectPrevIndex = (currIndex, array) => {
  const pos = array.indexOf(currIndex);
  if (pos > 0)
    return array[pos - 1];
  return array[0];
};
var selectRange = (currSel, newSel, array) => {
  const lastIndex = array.findIndex((f4) => f4 == currSel);
  const newIndex = array.findIndex((f4) => f4 == newSel);
  if (lastIndex < newIndex) {
    return array.filter((f4, i4) => i4 > lastIndex && i4 <= newIndex);
  }
  return array.filter((f4, i4) => i4 < lastIndex && i4 >= newIndex);
};

// src/core/react/components/SpaceView/Contexts/TableView/TableView.tsx
var import_lodash6 = __toESM(require_lodash());

// src/utils/regex.ts
var urlRegex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/gi;

// src/core/react/components/UI/Modals/ImageModal.tsx
var ImageModal = (props2) => {
  const [query, setQuery] = h2("");
  const [allImages, setAllImages] = h2([]);
  const [images, setImages] = h2([]);
  const [selectedImage, setSelectedImage] = h2(null);
  p2(() => {
    const _allImages = [];
    _allImages.push(
      ...props2.superstate.spaceManager.allPaths(["png", "jpg", "jpeg", "webp"])
    );
    setAllImages(_allImages);
    setImages(_allImages);
  }, []);
  p2(() => {
    query.match(urlRegex) ? setImages([query]) : setImages(allImages.filter((f4) => f4.includes(query)).slice(0, 30));
  }, [query, allImages]);
  const handleInputChange = (event) => {
    setQuery(event.target.value);
  };
  const handleKeyDown = (event) => {
    const currentIndex = images.indexOf(selectedImage);
    if (event.key === "ArrowUp" && currentIndex > 0) {
      setSelectedImage(images[currentIndex - 1]);
    } else if (event.key === "ArrowDown" && currentIndex < images.length - 1) {
      setSelectedImage(images[currentIndex + 1]);
    } else if (event.key === "Enter") {
      props2.selectedPath(selectedImage);
      props2.hide();
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("input", {
    onKeyDown: handleKeyDown,
    value: query,
    onChange: handleInputChange,
    className: "mk-input mk-input-large mk-border-bottom"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-masonry mk-padding-12 mk-layout-scroll"
  }, images.map((image) => /* @__PURE__ */ Cn.createElement("img", {
    key: image,
    src: props2.superstate.ui.getUIPath(image),
    className: selectedImage === image ? "mk-selected" : "",
    onClick: () => {
      props2.selectedPath(image);
      props2.hide();
    }
  }))));
};
var ImageModal_default = ImageModal;

// src/core/react/components/SpaceView/Contexts/DataTypeView/ImageCell.tsx
var ImageCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const menuRef = _2(null);
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      if (!menuRef.current)
        showModal();
    }
  }, []);
  const sourcePath = F2(() => {
    return props2.superstate.ui.getUIPath(value);
  }, [value]);
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  const showModal = () => {
    props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(ImageModal_default, {
      superstate: props2.superstate,
      hide: _props.hide,
      selectedPath: (image) => saveValue(image)
    }));
    props2.setEditMode(null);
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-image"
  }, /* @__PURE__ */ Cn.createElement("img", {
    src: sourcePath
  }), props2.editMode > 0 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-image-selector"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: showModal,
    className: "mk-hover-button mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-edit")
    }
  }), (value == null ? void 0 : value.length) > 0 && /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveValue(""),
    className: "mk-hover-button mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/LinkCell.tsx
var LinkCell = (props2) => {
  var _a2;
  const initialValue = (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).filter((f4) => f4);
  const stringValueToLink = (strings) => strings.map((f4) => {
    var _a3;
    const pathState = props2.superstate.pathsIndex.get(f4);
    if (pathState) {
      return {
        label: pathState.name,
        sticker: (_a3 = pathState.label) == null ? void 0 : _a3.sticker,
        value: f4
      };
    }
    return {
      label: parseLinkDisplayString(f4),
      value: parseLinkString(f4)
    };
  });
  p2(() => {
    var _a3;
    setValue(
      resolveLinks(
        stringValueToLink(
          props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]
        )
      )
    );
  }, [props2.initialValue]);
  const resolveLinks = (links) => links.map((f4) => ({
    value: f4.value,
    label: pathToString(f4.value)
  }));
  const ref2 = _2(null);
  const [value, setValue] = h2(
    resolveLinks(stringValueToLink(initialValue))
  );
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4.value != v3.value);
    setValue(newValues);
    props2.saveValue(serializeMultiString(newValues.map((f4) => f4.value)));
  };
  const saveOptions = (_11, _value) => {
    if (!props2.multi) {
      setValue(resolveLinks(stringValueToLink(_value)));
      props2.saveValue(serializeMultiString(_value));
    } else {
      const newValue = _value[0];
      if (newValue) {
        const newValues = uniq([...value.map((f4) => f4.value), newValue]);
        setValue(resolveLinks(stringValueToLink(newValues)));
        props2.saveValue(serializeMultiString(newValues));
      }
    }
  };
  const menuProps = () => {
    const options = props2.superstate.spaceManager.allPaths().map((f4) => ({
      name: parseLinkDisplayString(f4),
      value: f4,
      description: f4
    }));
    const _options = !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options;
    return {
      ui: props2.superstate.ui,
      multi: false,
      editable: true,
      value: value.map((f4) => f4.value),
      options: _options,
      saveOptions,
      placeholder: i18n_default.labels.linkItemSelectPlaceholder,
      detail: true,
      searchable: true
    };
  };
  const openLink = async (o3) => {
    const pathExists = await props2.superstate.spaceManager.pathExists(o3.value);
    if (pathExists) {
      props2.superstate.ui.openPath(o3.value, false);
    } else {
      await props2.superstate.spaceManager.createItemAtPath("/", "md", o3.value);
      props2.superstate.ui.openPath(o3.value, false);
    }
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    superstate: props2.superstate,
    baseClass: "mk-cell-link",
    menuProps,
    getLabelString: (o3) => o3.label,
    valueClass: (o3) => o3.file ? "mk-cell-link-item" : "mk-cell-link-unresolved",
    openItem: openLink,
    value,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/ObjectCell.tsx
var ObjectEditor = (props2) => {
  const { value, type, saveValue, saveType } = props2;
  const saveKey = (key2, newKey) => {
    if (key2 != newKey)
      saveValue({
        ...value,
        [newKey]: value[key2],
        [key2]: void 0
      });
  };
  const saveVal = (key2, val) => {
    saveValue({
      ...value,
      [key2]: val
    });
  };
  const selectType = (e4, key2) => {
    props2.superstate.ui.openMenu(
      e4.target.getBoundingClientRect(),
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        searchable: false,
        saveOptions: (_11, values) => {
          var _a2;
          return saveType({
            ...type != null ? type : {},
            [key2]: { ...(_a2 = type == null ? void 0 : type[key2]) != null ? _a2 : {}, type: values[0] }
          });
        },
        value: [],
        showAll: true,
        options: fieldTypes.map((f4, i4) => ({
          id: i4 + 1,
          name: f4.label,
          value: f4.type,
          icon: ""
        }))
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, Object.keys(value).map((f4, i4) => {
    var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j;
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-cell-object-row"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field-icon",
      onClick: (e4) => selectType(e4, f4),
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(
          (_b2 = fieldTypeForType((_a2 = type == null ? void 0 : type[f4]) == null ? void 0 : _a2.type)) == null ? void 0 : _b2.icon
        )
      }
    }), /* @__PURE__ */ Cn.createElement("input", {
      onClick: (e4) => e4.stopPropagation(),
      className: "mk-path-context-field-key",
      type: "text",
      value: f4,
      onBlur: (e4) => saveKey(f4, e4.target.value)
    })), !((_c2 = type == null ? void 0 : type[f4]) == null ? void 0 : _c2.type) || !type[f4].type.startsWith("object") && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-value"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      initialValue: value[f4],
      superstate: props2.superstate,
      row: value,
      column: {
        name: f4,
        schemaId: "",
        table: "",
        type: (_e2 = (_d2 = type == null ? void 0 : type[f4]) == null ? void 0 : _d2.type) != null ? _e2 : "text",
        value: (_f = type == null ? void 0 : type[f4]) == null ? void 0 : _f.value
      },
      editable: true,
      updateValue: (value2) => saveVal(f4, value2),
      updateFieldValue: (fieldValue, value2) => {
        var _a3, _b3, _c3;
        return saveType({
          ...type != null ? type : {},
          [f4]: {
            ...(_a3 = type == null ? void 0 : type[f4]) != null ? _a3 : {},
            type: (_c3 = (_b3 = type == null ? void 0 : type[f4]) == null ? void 0 : _b3.type) != null ? _c3 : "text",
            value: fieldValue
          }
        });
      }
    }))), ((_g = type == null ? void 0 : type[f4]) == null ? void 0 : _g.type) && type[f4].type.startsWith("object") && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-value"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      initialValue: value[f4],
      superstate: props2.superstate,
      row: value,
      column: {
        name: f4,
        schemaId: "",
        table: "",
        type: (_i = (_h = type == null ? void 0 : type[f4]) == null ? void 0 : _h.type) != null ? _i : "text",
        value: (_j = type == null ? void 0 : type[f4]) == null ? void 0 : _j.value
      },
      editable: true,
      updateValue: (value2) => saveVal(f4, value2),
      updateFieldValue: (fieldValue, value2) => {
        var _a3, _b3, _c3;
        return saveType({
          ...type != null ? type : {},
          [f4]: {
            ...(_a3 = type == null ? void 0 : type[f4]) != null ? _a3 : {},
            type: (_c3 = (_b3 = type == null ? void 0 : type[f4]) == null ? void 0 : _b3.type) != null ? _c3 : "text",
            value: fieldValue
          }
        });
      }
    })));
  }));
};
var ObjectCell = (props2) => {
  var _a2;
  const parsedValue = parseFieldValue(props2.propertyValue, "object");
  const type = parsedValue.type;
  const { initialValue, superstate } = props2;
  const [value, setValue] = Cn.useState(
    props2.multi ? ensureArray(safelyParseJSON(initialValue)) : (_a2 = safelyParseJSON(initialValue)) != null ? _a2 : {}
  );
  const saveType = (newType) => {
    props2.savePropValue(
      JSON.stringify({ ...parsedValue, type: newType }),
      JSON.stringify(value)
    );
  };
  const saveValue = (newValue) => {
    props2.saveValue(JSON.stringify(newValue));
  };
  const saveMultiValue = (newValue, index) => {
    props2.saveValue(
      JSON.stringify(
        value.map(
          (f4, i4) => i4 == index ? newValue : f4
        )
      )
    );
  };
  const newKey = (key2) => {
    if (key2)
      saveValue({
        ...value,
        [key2]: ""
      });
  };
  Cn.useEffect(() => {
    var _a3;
    props2.multi ? ensureArray(safelyParseJSON(initialValue)) : (_a3 = safelyParseJSON(initialValue)) != null ? _a3 : {};
  }, [initialValue, props2.multi]);
  return props2.editMode <= 1 /* EditModeView */ ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-object"
  }, props2.multi ? value.map((f4, i4) => /* @__PURE__ */ Cn.createElement(ObjectEditor, {
    saveType,
    value: f4,
    type,
    superstate,
    key: i4,
    saveValue: (val) => saveMultiValue(val, i4)
  })) : /* @__PURE__ */ Cn.createElement(ObjectEditor, {
    superstate,
    value,
    type,
    saveValue,
    saveType
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field"
  }, /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    type: "text",
    placeholder: i18n_default.labels.newProperty,
    value: "",
    onBlur: (e4) => newKey(e4.target.value)
  })));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/SuperCell.tsx
var SuperCell = (props2) => {
  const superProperty = F2(() => {
    var _a2;
    const parsedValue = parseFieldValue(props2.propertyValue, "super");
    const superPropertyName = parsedValue.dynamic ? (_a2 = props2.row) == null ? void 0 : _a2[parsedValue.field] : parsedValue.field;
    const property = props2.superstate.superProperties.get(superPropertyName);
    return property ? {
      ...property,
      value: JSON.stringify(
        props2.superstate.valueForSuperproperty(superPropertyName, property)
      )
    } : null;
  }, [props2.propertyValue]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, superProperty && /* @__PURE__ */ Cn.createElement(DataTypeView, {
    ...props2,
    updateFieldValue: (_11, f4) => props2.saveValue(f4),
    updateValue: props2.saveValue,
    column: { ...superProperty, table: "" },
    editable: true
  }));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/TagCell.tsx
var TagCell = (props2) => {
  const value = F2(
    () => parseMultiString(props2.initialValue),
    [props2.initialValue]
  );
  const removeValue = (v3) => {
    deleteTagFromPath(props2.superstate, props2.row[PathPropertyName], v3);
  };
  const saveOptions = (_options, _value) => {
    const newValue = _value[0];
    addTagToPath(props2.superstate, props2.row[PathPropertyName], newValue);
  };
  const menuProps = () => {
    const options = props2.superstate.spaceManager.readTags().map((f4) => ({
      name: f4,
      value: f4
    }));
    return {
      ui: props2.superstate.ui,
      multi: false,
      editable: true,
      value,
      options,
      saveOptions,
      placeholder: i18n_default.labels.tagItemSelectPlaceholder,
      searchable: true,
      showAll: true,
      onHide: () => props2.setEditMode(null)
    };
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    superstate: props2.superstate,
    baseClass: "mk-cell-tags",
    menuProps,
    value,
    multi: true,
    editMode: props2.editMode,
    removeValue
  });
};

// src/core/react/components/SpaceView/Contexts/TableView/TableView.tsx
var TableView = (props2) => {
  const {
    spaceInfo,
    readMode,
    spaceState: spaceCache
  } = q2(SpaceContext);
  const {
    tableData,
    dbSchema,
    contextTable,
    saveDB
  } = q2(ContextMDBContext);
  const {
    selectedRows,
    selectRows,
    sortedColumns: cols,
    filteredData: data2,
    predicate,
    savePredicate,
    updateFieldValue,
    updateValue: updateValue2
  } = q2(ContextEditorContext);
  const [activeId, setActiveId] = h2(null);
  const [lastSelectedIndex, setLastSelectedIndex] = h2(null);
  const [selectedColumn, setSelectedColumn] = h2(null);
  const [currentEdit, setCurrentEdit] = h2(null);
  const [overId, setOverId] = h2(null);
  const [openFlows, setOpenFlows] = h2([]);
  const [colsSize, setColsSize] = h2({});
  const ref2 = _2(null);
  p2(() => {
    setColsSize({ ...predicate.colsSize, "+": 30 });
  }, [predicate]);
  p2(() => {
    setCurrentEdit(null);
  }, [selectedColumn, lastSelectedIndex]);
  p2(() => {
    if (currentEdit == null) {
      ref2.current.focus();
    }
  }, [currentEdit]);
  const saveColsSize = (colSize) => {
    const newColSize = colSize(colsSize);
    setColsSize(newColSize);
    debouncedSavePredicate(newColSize);
  };
  const debouncedSavePredicate = T2(
    (0, import_lodash6.debounce)(
      (nextValue) => savePredicate({
        ...predicate,
        colsSize: nextValue
      }),
      1e3
    ),
    [predicate]
  );
  const newRow = (index, data3) => {
    if ((dbSchema == null ? void 0 : dbSchema.id) == defaultContextSchemaID) {
      newPathInSpace(props2.superstate, spaceCache, "md", null, true);
    } else {
      saveDB(
        createNewRow(
          tableData,
          { [PathPropertyName]: "", ...data3 != null ? data3 : {} },
          index
        )
      );
    }
  };
  const deleteRow = (rowIndex) => {
    const row = tableData.rows.find((f4, i4) => i4 == rowIndex);
    deletePath(props2.superstate, row[PathPropertyName]);
    if (row) {
      saveDB({
        ...tableData,
        rows: tableData.rows.filter((f4, i4) => i4 != rowIndex)
      });
    }
  };
  const toggleFlow = (path) => {
    setOpenFlows(
      (f4) => f4.find((p3) => p3 == path) ? f4.filter((p3) => p3 != path) : uniq([...f4, path])
    );
  };
  const selectItem = (modifier, index) => {
    if (modifier == 3) {
      props2.superstate.ui.openPath(
        tableData.rows[parseInt(index)][PathPropertyName],
        false
      );
      return;
    }
    if (modifier == 2) {
      selectedRows.some((f4) => f4 == index) ? selectRows(
        null,
        selectedRows.filter((f4) => f4 != index)
      ) : selectRows(index, uniq([...selectedRows, index]));
    } else if (modifier == 1) {
      selectRows(
        index,
        uniq([
          ...selectedRows,
          ...selectRange(
            lastSelectedIndex,
            index,
            data2.map((f4) => f4._index)
          )
        ])
      );
    } else {
      selectRows(index, [index]);
    }
    setLastSelectedIndex(index);
  };
  const onKeyDown = (e4) => {
    const setCellValue = (value) => {
      var _a2;
      const columnTuple = selectedColumn.split("#");
      updateValue2(
        columnTuple[0],
        value,
        (_a2 = columnTuple[1]) != null ? _a2 : "",
        parseInt(lastSelectedIndex),
        ""
      );
    };
    const clearCell = () => {
      setCellValue("");
    };
    const copyCell = () => {
      navigator.clipboard.writeText(
        tableData.rows[parseInt(lastSelectedIndex)][selectedColumn]
      );
    };
    const nextRow = () => {
      const newIndex = selectNextIndex(
        lastSelectedIndex,
        data2.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    };
    const lastRow = () => {
      const newIndex = selectPrevIndex(
        lastSelectedIndex,
        data2.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    };
    if (e4.key == "c" && e4.metaKey) {
      copyCell();
    }
    if (e4.key == "x" && e4.metaKey) {
      copyCell();
      clearCell();
    }
    if (e4.key == "v" && e4.metaKey) {
      navigator.clipboard.readText().then((f4) => setCellValue(f4));
    }
    if (e4.key == "Escape") {
      selectRows(null, []);
      setLastSelectedIndex(null);
    }
    if (e4.key == "Backspace" || e4.key == "Delete") {
      clearCell();
    }
    if (e4.key == "Enter") {
      if (selectedColumn && lastSelectedIndex) {
        if (e4.shiftKey) {
          newRow(parseInt(lastSelectedIndex) + 1);
          nextRow();
        } else {
          setCurrentEdit([selectedColumn, lastSelectedIndex]);
        }
      }
      return;
    }
    if (e4.key == "ArrowDown") {
      nextRow();
      e4.preventDefault();
    }
    if (e4.key == "ArrowUp") {
      lastRow();
      e4.preventDefault();
    }
    if (e4.key == "ArrowLeft") {
      const newIndex = selectPrevIndex(
        selectedColumn,
        columns.map((f4) => f4.accessorKey).filter((f4) => f4 != "+")
      );
      setSelectedColumn(newIndex);
    }
    if (e4.key == "ArrowRight") {
      const newIndex = selectNextIndex(
        selectedColumn,
        columns.map((f4) => f4.accessorKey).filter((f4) => f4 != "+")
      );
      setSelectedColumn(newIndex);
    }
  };
  const columns = F2(
    () => {
      var _a2;
      return [
        ...(_a2 = cols.map((f4) => {
          return {
            header: f4.name,
            accessorKey: f4.name + f4.table,
            meta: {
              table: f4.table,
              editable: f4.name != PathPropertyName,
              schemaId: dbSchema == null ? void 0 : dbSchema.id
            },
            cell: ({
              getValue,
              row: { index },
              column: { colId },
              cell,
              table: table2
            }) => {
              const initialValue = getValue();
              const rowIndex = parseInt(data2[index]["_index"]);
              const tableIndex = parseInt(data2[index]["_index"]);
              const saveValue = (value2) => {
                var _a3;
                setCurrentEdit(null);
                if (initialValue != value2)
                  (_a3 = table2.options.meta) == null ? void 0 : _a3.updateData(
                    f4.name,
                    value2,
                    f4.table,
                    rowIndex
                  );
              };
              const saveFieldValue = (fieldValue, value2) => {
                var _a3;
                (_a3 = table2.options.meta) == null ? void 0 : _a3.updateFieldValue(
                  f4.name,
                  fieldValue,
                  value2,
                  f4.table,
                  rowIndex
                );
              };
              const editMode = readMode ? -1 /* EditModeReadOnly */ : !cell.getIsGrouped() ? props2.superstate.ui.getScreenType() == "mobile" ? 3 /* EditModeAlways */ : currentEdit && currentEdit[0] == f4.name + f4.table && currentEdit[1] == tableIndex.toString() ? 2 /* EditModeActive */ : 1 /* EditModeView */ : -1 /* EditModeReadOnly */;
              const cellProps = {
                initialValue,
                saveValue,
                superstate: props2.superstate,
                setEditMode: setCurrentEdit,
                editMode,
                propertyValue: f4.value
              };
              const value = parseFieldValue(f4.value, f4.type);
              const fieldType = fieldTypeForType(f4.type, f4.name);
              if (!fieldType) {
                return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, initialValue);
              }
              if (fieldType.type == "file") {
                return /* @__PURE__ */ Cn.createElement(PathCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  folder: spaceInfo.path,
                  openFlow: () => toggleFlow(initialValue),
                  deleteRow: () => deleteRow(index)
                });
              } else if (fieldType.type == "boolean") {
                return /* @__PURE__ */ Cn.createElement(BooleanCell, {
                  ...cellProps,
                  column: f4
                });
              } else if (fieldType.type == "option") {
                return /* @__PURE__ */ Cn.createElement(OptionCell, {
                  ...cellProps,
                  options: f4.value,
                  multi: fieldType.multiType == f4.type,
                  saveOptions: saveFieldValue
                });
              } else if (fieldType.type == "date") {
                return /* @__PURE__ */ Cn.createElement(DateCell, {
                  ...cellProps
                });
              } else if (fieldType.type == "context") {
                return /* @__PURE__ */ Cn.createElement(ContextCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  space: value.space,
                  spaceField: value.field,
                  path: data2[index][PathPropertyName]
                });
              } else if (fieldType.type == "fileprop") {
                return /* @__PURE__ */ Cn.createElement(LookUpCell, {
                  ...cellProps,
                  path: data2[index][PathPropertyName]
                });
              } else if (fieldType.type == "tags") {
                return /* @__PURE__ */ Cn.createElement(TagCell, {
                  ...cellProps,
                  row: data2[index]
                });
              } else if (fieldType.type == "number") {
                return /* @__PURE__ */ Cn.createElement(NumberCell, {
                  ...cellProps
                });
              } else if (fieldType.type == "link") {
                return /* @__PURE__ */ Cn.createElement(LinkCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  path: data2[index][PathPropertyName]
                });
              } else if (fieldType.type == "image") {
                return /* @__PURE__ */ Cn.createElement(ImageCell, {
                  ...cellProps
                });
              } else if (fieldType.type == "object") {
                return /* @__PURE__ */ Cn.createElement(ObjectCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  savePropValue: saveFieldValue
                });
              } else if (fieldType.type == "super") {
                return /* @__PURE__ */ Cn.createElement(SuperCell, {
                  ...cellProps,
                  row: data2[index]
                });
              } else {
                return /* @__PURE__ */ Cn.createElement(TextCell, {
                  ...cellProps
                });
              }
            }
          };
        })) != null ? _a2 : [],
        ...readMode ? [] : [
          {
            header: "+",
            meta: { schemaId: dbSchema == null ? void 0 : dbSchema.id },
            accessorKey: "+",
            size: 20,
            cell: () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)
          }
        ]
      ];
    },
    [cols, currentEdit, predicate, contextTable, toggleFlow, openFlows]
  );
  const groupBy2 = F2(
    () => {
      var _a2;
      return ((_a2 = predicate.groupBy) == null ? void 0 : _a2.length) > 0 && cols.find((f4) => f4.name + f4.table == predicate.groupBy[0]) ? predicate.groupBy : [];
    },
    [predicate, cols]
  );
  const table = useReactTable({
    data: data2,
    columns,
    columnResizeMode: "onChange",
    state: {
      columnVisibility: predicate.colsHidden.reduce(
        (p3, c4) => ({ ...p3, [c4]: false }),
        {}
      ),
      columnOrder: predicate.colsOrder,
      columnSizing: {
        ...columns.reduce((p3, c4) => ({ ...p3, [c4.accessorKey]: 150 }), {}),
        ...colsSize
      },
      grouping: groupBy2,
      expanded: true
    },
    onColumnSizingChange: saveColsSize,
    getCoreRowModel: getCoreRowModel(),
    getExpandedRowModel: getExpandedRowModel(),
    getGroupedRowModel: getGroupedRowModel(),
    meta: {
      updateData: updateValue2,
      updateFieldValue
    }
  });
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    })
  );
  const measuring = {
    droppable: {
      strategy: MeasuringStrategy.Always
    }
  };
  function handleDragStart(event) {
    const {
      active: { id: activeId2 }
    } = event;
    setActiveId(activeId2);
    setOverId(overId);
    document.body.style.setProperty("cursor", "grabbing");
  }
  function handleDragOver({ over }) {
    var _a2;
    const overId2 = over == null ? void 0 : over.id;
    if (overId2) {
      setOverId((_a2 = over == null ? void 0 : over.id) != null ? _a2 : null);
    }
  }
  const saveFilter = (filter) => {
    savePredicate({
      ...predicate,
      filters: [
        ...predicate.filters.filter((s5) => s5.field != filter.field),
        filter
      ]
    });
  };
  const selectCell = (e4, index, column) => {
    if (props2.superstate.ui.getScreenType() == "mobile" || column == "+")
      return;
    selectItem(0, data2[index]["_index"]);
    setSelectedColumn(column);
    if (e4.detail === 1) {
    } else if (e4.detail === 2) {
      setCurrentEdit([column, data2[index]["_index"]]);
    }
  };
  const showContextMenu = (e4, index) => {
    e4.preventDefault();
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.menu.deleteRow,
      icon: "lucide//trash",
      onClick: (e5) => {
        deleteRow(index);
      }
    });
    props2.superstate.ui.openMenu(
      isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  function handleDragEnd({ active, over }) {
    resetState();
    savePredicate({
      ...predicate,
      colsOrder: arrayMove(
        predicate.colsOrder,
        predicate.colsOrder.findIndex((f4) => f4 == activeId),
        predicate.colsOrder.findIndex((f4) => f4 == overId)
      )
    });
  }
  function handleDragCancel() {
    resetState();
  }
  function resetState() {
    setOverId(null);
    setActiveId(null);
    document.body.style.setProperty("cursor", "");
  }
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring,
    onDragStart: handleDragStart,
    onDragOver: handleDragOver,
    onDragEnd: handleDragEnd,
    onDragCancel: handleDragCancel
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-table",
    ref: ref2,
    tabIndex: 1,
    onKeyDown
  }, /* @__PURE__ */ Cn.createElement("table", {
    ...{}
  }, /* @__PURE__ */ Cn.createElement("thead", null, table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ Cn.createElement("tr", {
    key: headerGroup.id
  }, /* @__PURE__ */ Cn.createElement("th", null), headerGroup.headers.map((header) => {
    var _a2, _b2;
    return /* @__PURE__ */ Cn.createElement("th", {
      className: "mk-th",
      key: header.id,
      style: {
        minWidth: header.column.getIsGrouped() ? "0px" : (_a2 = colsSize[header.column.columnDef.accessorKey]) != null ? _a2 : "150px",
        maxWidth: header.column.getIsGrouped() ? "0px" : (_b2 = colsSize[header.column.columnDef.accessorKey]) != null ? _b2 : "150px"
      }
    }, header.isPlaceholder ? null : header.column.columnDef.header != "+" ? header.column.getIsGrouped() ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null) : /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      superstate: props2.superstate,
      editable: header.column.columnDef.meta.editable,
      column: cols.find(
        (f4) => f4.name == header.column.columnDef.header && f4.table == header.column.columnDef.meta.table
      )
    }) : /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      superstate: props2.superstate,
      isNew: true,
      editable: true,
      column: {
        name: "",
        schemaId: header.column.columnDef.meta.schemaId,
        type: "text",
        table: ""
      }
    }), /* @__PURE__ */ Cn.createElement("div", {
      ...{
        onMouseDown: header.getResizeHandler(),
        onTouchStart: header.getResizeHandler(),
        className: `mk-resizer ${header.column.getIsResizing() ? "isResizing" : ""}`
      }
    }));
  })))), /* @__PURE__ */ Cn.createElement("tbody", null, table.getRowModel().rows.map((row) => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("tr", {
    className: (selectedRows == null ? void 0 : selectedRows.some(
      (f4) => f4 == data2[row.index]["_index"]
    )) && "mk-is-active",
    onContextMenu: (e4) => {
      const rowIndex = parseInt(
        data2[row.index]["_index"]
      );
      showContextMenu(e4, rowIndex);
    },
    key: row.id
  }, /* @__PURE__ */ Cn.createElement("td", null), row.getVisibleCells().map(
    (cell, i4) => {
      var _a2, _b2;
      return cell.getIsGrouped() ? /* @__PURE__ */ Cn.createElement("td", {
        key: i4,
        className: "mk-td-group",
        colSpan: cols.length + (readMode ? 0 : 1)
      }, /* @__PURE__ */ Cn.createElement("div", {
        ...{
          onClick: row.getToggleExpandedHandler(),
          style: {
            display: "flex",
            alignItems: "center",
            cursor: "normal"
          }
        }
      }, flexRender(
        cell.column.columnDef.cell,
        cell.getContext()
      ), " ", "(", row.subRows.length, ")")) : cell.getIsAggregated() ? flexRender(
        (_a2 = cell.column.columnDef.aggregatedCell) != null ? _a2 : cell.column.columnDef.cell,
        cell.getContext()
      ) : /* @__PURE__ */ Cn.createElement("td", {
        onClick: (e4) => selectCell(
          e4,
          cell.row.index,
          cell.column.columnDef.accessorKey
        ),
        className: `${cell.column.columnDef.accessorKey == selectedColumn ? "mk-selected-cell  " : ""} mk-td ${cell.getIsPlaceholder() ? "mk-td-empty" : ""}`,
        key: cell.id,
        style: {
          minWidth: cell.getIsPlaceholder() ? "0px" : (_b2 = colsSize[cell.column.columnDef.accessorKey]) != null ? _b2 : "50px"
        }
      }, cell.getIsPlaceholder() ? null : flexRender(
        cell.column.columnDef.cell,
        cell.getContext()
      ));
    }
  ))))), /* @__PURE__ */ Cn.createElement("tfoot", null, !readMode ? /* @__PURE__ */ Cn.createElement("tr", null, /* @__PURE__ */ Cn.createElement("th", {
    className: "mk-row-new",
    colSpan: cols.length + (readMode ? 1 : 2),
    onClick: () => {
      newRow();
    }
  }, "+ New")) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null))), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      zIndex: 1600
    }, activeId ? /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      superstate: props2.superstate,
      editable: false,
      column: {
        name: activeId,
        schemaId: tableData.schema.id,
        type: "text",
        table: ""
      }
    }) : null),
    document.body
  )));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/BooleanCell.tsx
var BooleanCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue == "true");
  const onChange = () => {
    if (props2.editMode == -1 /* EditModeReadOnly */) {
      return;
    }
    setValue(!value);
    saveValue(!value ? "true" : "false");
  };
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      setValue(!value);
      saveValue(!value ? "true" : "false");
      props2.setEditMode(null);
    }
  }, [props2.editMode]);
  Cn.useEffect(() => {
    setValue(initialValue == "true");
  }, [initialValue]);
  if (props2.editMode < 1 /* EditModeView */) {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-boolean"
    }, /* @__PURE__ */ Cn.createElement("input", {
      type: "checkbox",
      checked: value,
      onChange
    }));
  }
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-boolean"
  }, /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: value,
    onChange
  }));
};

// src/core/react/components/UI/Menus/properties/colorPickerMenu.tsx
var ColorPicker = (props2) => {
  const [value, setValue] = h2(props2.color);
  return /* @__PURE__ */ Cn.createElement("div", null, colors.map((c4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onMouseDown: () => {
      setValue(c4[1]);
      props2.saveValue(c4[1]);
      props2.hide();
    },
    className: "mk-color",
    style: { background: c4[1] }
  })));
};
var showColorPickerMenu = (superstate, point, value, setValue) => {
  superstate.ui.openCustomMenu(point, (props2) => /* @__PURE__ */ Cn.createElement(ColorPicker, {
    color: value,
    saveValue: setValue,
    hide: () => props2.hide()
  }));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/ColorCell.tsx
var ColorCell = (props2) => {
  const showMenu = (e4) => {
    const handleChangeComplete = (color) => {
      props2.saveValue(color);
    };
    const offset2 = e4.target.getBoundingClientRect();
    showColorPickerMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      props2.initialValue,
      handleChangeComplete
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-setter-color",
    onClick: (e4) => showMenu(e4),
    style: {
      backgroundColor: props2.initialValue,
      width: 30,
      height: 30
    }
  }));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/IconCell.tsx
var IconCell = (props2) => {
  const value = F2(
    () => {
      var _a2;
      return props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue];
    },
    [props2.initialValue]
  );
  const ref2 = _2(null);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  const triggerStickerMenu = (e4) => {
    e4.stopPropagation();
    props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
      ui: props2.superstate.ui,
      hide: _props.hide,
      selectedSticker: (emoji) => props2.saveValue(emoji)
    }));
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-icon"
  }, value.map((v3, i4) => /* @__PURE__ */ Cn.createElement("button", {
    key: i4,
    "aria-label": i18n_default.buttons.changeIcon,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(v3)
    },
    onClick: (e4) => triggerStickerMenu(e4)
  })));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/SpaceCell.tsx
var SpaceCell = (props2) => {
  const openLink = async () => {
    props2.superstate.ui.openPath(props2.initialValue, false);
  };
  const menuRef = _2(null);
  const ref2 = _2(null);
  const menuProps = () => ({
    multi: false,
    ui: props2.superstate.ui,
    editable: true,
    value: [props2.initialValue],
    options: props2.superstate.allSpaces().map((f4) => ({
      name: f4.name,
      value: f4.name,
      description: f4.name
    })),
    saveOptions: (_11, value) => props2.saveValue(value[0]),
    removeOption: () => {
    },
    placeholder: i18n_default.labels.optionItemSelectPlaceholder,
    searchable: true,
    showAll: true,
    onHide: () => props2.setEditMode(null)
  });
  const showMenu = () => {
    const offset2 = ref2.current.getBoundingClientRect();
    menuRef.current = props2.superstate.ui.openMenu(
      { x: offset2.left - 4, y: offset2.bottom - 4 },
      menuProps()
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => openLink()
  }, props2.initialValue), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => showMenu(),
    className: "mk-cell-option-select mk-icon-xxsmall mk-icon-rotated",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse-sm")
    }
  })));
};

// src/core/react/components/SpaceView/Contexts/DataTypeView/DataTypeView.tsx
var DataTypeView = (props2) => {
  const { initialValue, column, row } = props2;
  const saveValue = (value2) => {
    props2.updateValue(value2);
  };
  const saveFieldValue = (fieldValue, value2) => {
    props2.updateFieldValue(fieldValue, value2);
  };
  const viewProps = {
    initialValue,
    saveValue,
    editMode: props2.editable == true ? 3 : 0,
    setEditMode: () => {
    },
    superstate: props2.superstate,
    propertyValue: column.value
  };
  const fieldType = fieldTypeForType(column.type, column.name);
  const value = parseFieldValue(column.value, column.type);
  if (!fieldType) {
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
  }
  if (fieldType.type == "file") {
    return /* @__PURE__ */ Cn.createElement(PathCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      openFlow: props2.openFlow
    });
  } else if (fieldType.type == "icon") {
    return /* @__PURE__ */ Cn.createElement(IconCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type
    });
  } else if (fieldType.type == "boolean") {
    return /* @__PURE__ */ Cn.createElement(BooleanCell, {
      ...viewProps,
      column
    });
  } else if (fieldType.type == "option") {
    return /* @__PURE__ */ Cn.createElement(OptionCell, {
      ...viewProps,
      options: column.value,
      multi: fieldType.multiType == column.type,
      saveOptions: saveFieldValue
    });
  } else if (fieldType.type == "date") {
    return /* @__PURE__ */ Cn.createElement(DateCell, {
      ...viewProps
    });
  } else if (fieldType.type == "context") {
    return /* @__PURE__ */ Cn.createElement(ContextCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      space: value.space,
      spaceField: value.field,
      path: row == null ? void 0 : row[PathPropertyName]
    });
  } else if (fieldType.type == "fileprop") {
    return /* @__PURE__ */ Cn.createElement(LookUpCell, {
      ...viewProps,
      path: row == null ? void 0 : row[PathPropertyName]
    });
  } else if (fieldType.type == "number") {
    return /* @__PURE__ */ Cn.createElement(NumberCell, {
      ...viewProps
    });
  } else if (fieldType.type == "link") {
    return /* @__PURE__ */ Cn.createElement(LinkCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      path: row == null ? void 0 : row[PathPropertyName]
    });
  } else if (fieldType.type == "tags") {
    return /* @__PURE__ */ Cn.createElement(TagCell, {
      ...viewProps,
      row
    });
  } else if (fieldType.type == "image") {
    return /* @__PURE__ */ Cn.createElement(ImageCell, {
      ...viewProps
    });
  } else if (fieldType.type == "object") {
    return /* @__PURE__ */ Cn.createElement(ObjectCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      savePropValue: saveFieldValue
    });
  } else if (fieldType.type == "color") {
    return /* @__PURE__ */ Cn.createElement(ColorCell, {
      ...viewProps
    });
  } else if (fieldType.type == "space") {
    return /* @__PURE__ */ Cn.createElement(SpaceCell, {
      ...viewProps
    });
  } else if (fieldType.type == "super") {
    return /* @__PURE__ */ Cn.createElement(SuperCell, {
      ...viewProps,
      row
    });
  }
  return /* @__PURE__ */ Cn.createElement(TextCell, {
    ...viewProps
  });
};

// src/core/react/components/UI/Menus/properties/propertiesMenu.tsx
var showPropertiesMenu = (superstate, position, property, deleteProperty, syncProperty, renameProperty, changeType) => {
  var _a2;
  const menuOptions = [];
  menuOptions.push(
    menuInput(
      (_a2 = property == null ? void 0 : property.name) != null ? _a2 : "",
      (value) => renameProperty(property.name, value)
    )
  );
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.changePropertyType,
    icon: "lucide//list",
    onClick: (e4) => {
      changeType(position, property.name);
    }
  });
  if (property.type != "object")
    menuOptions.push({
      name: i18n_default.menu.syncToContext,
      icon: "lucide//sync",
      onClick: (e4) => {
        syncProperty(property);
      }
    });
  menuOptions.push({
    name: i18n_default.menu.deleteProperty,
    icon: "lucide//trash-2",
    onClick: (e4) => {
      deleteProperty(property);
    }
  });
  superstate.ui.openMenu(position, defaultMenu(superstate.ui, menuOptions));
};

// src/core/react/components/Explorer/PropertiesView.tsx
var PropertiesView = (props2) => {
  const { path } = props2;
  const [values, setValues] = h2({});
  const [cols, setCols] = h2([]);
  const [excludeKeys, setExcludeKeys] = h2([]);
  const refreshData = async () => {
    var _a2, _b2, _c2, _d2, _e2;
    const pathContexts = (_a2 = props2.superstate.spacesMap.get(path)) != null ? _a2 : /* @__PURE__ */ new Set();
    const columns = [...pathContexts].map(
      (f4) => {
        var _a3, _b3, _c3, _d3;
        return (_d3 = (_c3 = (_b3 = (_a3 = props2.superstate.contextsIndex.get(f4)) == null ? void 0 : _a3.tables) == null ? void 0 : _b3[defaultContextSchemaID]) == null ? void 0 : _c3.cols) != null ? _d3 : [];
      }
    ).reduce((p3, c4) => [...p3, ...c4], []);
    const newCols = [];
    const newValues = {};
    const properties2 = (_d2 = (_c2 = (_b2 = props2.superstate.pathsIndex.get(path)) == null ? void 0 : _b2.metadata) == null ? void 0 : _c2.property) != null ? _d2 : {};
    const fmKeys = uniqCaseInsensitive(Object.keys(properties2)).filter(
      (f4) => !columns.some((g4) => g4.name == f4)
    );
    const cols2 = fmKeys.map((f4) => ({
      table: "",
      name: f4,
      schemaId: "",
      type: detectPropertyType(properties2[f4], f4)
    }));
    if (properties2) {
      newCols.push(...cols2);
      fmKeys.forEach((c4) => {
        newValues[c4] = parseProperty(c4, properties2[c4]);
      });
    }
    setCols(
      newCols.filter((f4) => {
        var _a3;
        return !((_a3 = props2.excludeKeys) == null ? void 0 : _a3.some((g4) => g4 == f4.name));
      })
    );
    setExcludeKeys([
      ...columns.map((f4) => f4.name),
      ...(_e2 = props2.excludeKeys) != null ? _e2 : []
    ]);
    setValues(newValues);
  };
  const mdbChanged = (payload) => {
    if (props2.spaces.find((f4) => f4 == payload.path)) {
      refreshData();
    }
  };
  const fileChanged = (payload) => {
    if (payload.path == path) {
      refreshData();
    }
  };
  p2(() => {
    refreshData();
    props2.superstate.eventsDispatcher.addListener(
      "contextStateUpdated",
      mdbChanged
    );
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      fileChanged
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "contextStateUpdated",
        mdbChanged
      );
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        fileChanged
      );
    };
  }, [path, props2.spaces]);
  const savePropertyValue = (value, f4) => {
    saveProperties(props2.superstate, path, {
      [f4.name]: value
    });
  };
  const deletePropertyValue = (property) => {
    props2.superstate.spaceManager.deleteProperty(path, property.name);
  };
  const saveMetadata = async (property, space) => {
    var _a2;
    const field = {
      ...property,
      schemaId: defaultContextSchemaID
    };
    const spaceInfo = (_a2 = props2.superstate.spacesIndex.get(space)) == null ? void 0 : _a2.space;
    if (!spaceInfo)
      return;
    await props2.superstate.spaceManager.addSpaceProperty(space, field);
    await updateContextValue(
      props2.superstate.spaceManager,
      spaceInfo,
      path,
      field.name,
      values[field.name]
    );
  };
  const syncFMValue = (e4, property) => {
    showSpacesMenu(
      e4,
      props2.superstate,
      (space) => saveMetadata(property, space)
    );
  };
  const renameFMKey = (key2, name) => {
    props2.superstate.spaceManager.renameProperty(path, key2, name);
  };
  const selectedType = (value, key2) => {
    saveProperties(props2.superstate, path, {
      [key2]: defaultValueForType(value[0])
    });
  };
  const selectType = (p3, key2) => {
    props2.superstate.ui.openMenu(p3, {
      ui: props2.superstate.ui,
      multi: false,
      editable: false,
      searchable: false,
      saveOptions: (_11, v3) => selectedType(v3, key2),
      value: [],
      showAll: true,
      options: fieldTypes.filter((f4) => f4.metadata).map((f4, i4) => ({
        id: i4 + 1,
        name: f4.label,
        value: f4.type,
        icon: f4.icon
      }))
    });
  };
  const showMenu = (e4, property) => {
    const offset2 = e4.target.getBoundingClientRect();
    showPropertiesMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      property,
      deletePropertyValue,
      () => syncFMValue(e4, property),
      renameFMKey,
      selectType
    );
  };
  const propertiessuperstate = props2.superstate.settings.hideFrontmatter;
  return !propertiessuperstate || props2.force ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, cols.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-path-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field",
    onClick: (e4) => showMenu(e4, f4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(stickerForField(f4))
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-key"
  }, f4.name)), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-value"
  }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
    superstate: props2.superstate,
    initialValue: values[f4.name],
    row: { [PathPropertyName]: path },
    column: { ...f4, table: "" },
    editable: props2.editable,
    updateValue: (value) => savePropertyValue(value, f4),
    updateFieldValue: (fieldValue, value) => savePropertyValue(value, f4),
    contextTable: {}
  }))))) : excludeKeys.length > 0 ? /* @__PURE__ */ Cn.createElement("style", null, `${excludeKeys.map((f4) => `.metadata-property[data-property-key="${f4}"]`).join(", ")}
      {
         display: none;
      }`) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/Explorer/ContextPropertiesView.tsx
var ContextPropertiesView = (props2) => {
  var _a2;
  const spaces = F2(
    () => props2.spacePaths.map((f4) => {
      var _a3;
      return (_a3 = props2.superstate.spacesIndex.get(f4)) == null ? void 0 : _a3.space;
    }).filter((f4) => f4),
    [props2.spacePaths]
  );
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-properties"
  }, spaces.map((space, i4) => /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    key: i4,
    superstate: props2.superstate,
    space
  }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
    key: i4,
    superstate: props2.superstate,
    path: props2.path
  }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
    superstate: props2.superstate
  }, /* @__PURE__ */ Cn.createElement(PathContextList, {
    superstate: props2.superstate,
    path: props2.path,
    color: "var(--tag-background)"
  }))))), props2.path ? /* @__PURE__ */ Cn.createElement(PropertiesView, {
    superstate: props2.superstate,
    path: props2.path,
    spaces: spaces.map((f4) => f4.path),
    force: props2.showMetadata,
    excludeKeys: (_a2 = props2.hiddenFields) != null ? _a2 : [],
    editable: props2.editable
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};
var PathContextList = (props2) => {
  const { path } = props2;
  const {
    spaceInfo,
    spaceState: spaceCache,
    pathState
  } = q2(SpaceContext);
  const { tableData, dbSchema } = q2(ContextMDBContext);
  const {
    newColumn,
    data: data2,
    cols,
    saveColumn,
    hideColumn,
    delColumn,
    sortColumn,
    updateFieldValue,
    updateValue: updateValue2,
    predicate
  } = q2(ContextEditorContext);
  const pathContext = F2(() => {
    return data2 && tableData ? {
      cols: tableData.cols.filter(
        (f4) => f4.primary != "true" && f4.hidden != "true"
      ),
      data: data2.find((r3) => r3[PathPropertyName] == path),
      dataIndex: data2.findIndex((r3) => r3[PathPropertyName] == path)
    } : null;
  }, [tableData, path, data2]);
  const saveField = (field, oldField) => {
    if (field.name.length > 0) {
      if (field.name != oldField.name || field.type != oldField.type || field.value != oldField.value || field.attrs != oldField.attrs) {
        const saveResult = saveColumn(field, oldField);
      }
    }
  };
  const showMenu = (e4, field) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = optionValuesForColumn(field.name, tableData);
    showPropertyMenu({
      superstate: props2.superstate,
      position: { x: offset2.left, y: offset2.top + 30 },
      editable: true,
      options,
      field,
      fields: cols,
      contextPath: spaceInfo.path,
      saveField: (newField) => saveField(newField, field),
      hide: hideColumn,
      deleteColumn: delColumn,
      hidden: predicate.colsHidden.includes(field.name + field.table)
    });
  };
  return pathContext && pathContext.cols.length > 0 && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, pathContext.cols.map((f4, i4) => {
    var _a2, _b2, _c2, _d2, _e2;
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-path-context-row"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field",
      onClick: (e4) => showMenu(e4, { ...f4, table: "" })
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field-icon",
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(stickerForField(f4))
      }
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field-key"
    }, f4.name), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-field-space  mk-icon-xsmall",
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(
          (_a2 = pathState.label) == null ? void 0 : _a2.sticker
        )
      }
    })), !f4.type.startsWith("object") && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-value"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      superstate: props2.superstate,
      initialValue: (_b2 = pathContext.data) == null ? void 0 : _b2[f4.name],
      row: (_c2 = pathContext.data) != null ? _c2 : {},
      column: { ...f4, table: "" },
      editable: !spaceInfo.readOnly,
      updateValue: (v3) => {
        var _a3;
        return updateValue2(
          f4.name,
          v3,
          "",
          pathContext.dataIndex,
          (_a3 = pathContext.data) == null ? void 0 : _a3[PathPropertyName]
        );
      },
      updateFieldValue: (fv, v3) => {
        var _a3;
        return updateFieldValue(
          f4.name,
          fv,
          v3,
          "",
          pathContext.dataIndex,
          (_a3 = pathContext.data) == null ? void 0 : _a3[PathPropertyName]
        );
      },
      contextTable: {}
    }))), f4.type.startsWith("object") && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-path-context-row"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      superstate: props2.superstate,
      initialValue: (_d2 = pathContext.data) == null ? void 0 : _d2[f4.name],
      row: (_e2 = pathContext.data) != null ? _e2 : {},
      column: { ...f4, table: "" },
      editable: !spaceInfo.readOnly,
      updateValue: (v3) => {
        var _a3;
        return updateValue2(
          f4.name,
          v3,
          "",
          pathContext.dataIndex,
          (_a3 = pathContext.data) == null ? void 0 : _a3[PathPropertyName]
        );
      },
      updateFieldValue: (fv, v3) => {
        var _a3;
        return updateFieldValue(
          f4.name,
          fv,
          v3,
          "",
          pathContext.dataIndex,
          (_a3 = pathContext.data) == null ? void 0 : _a3[PathPropertyName]
        );
      },
      contextTable: {}
    })));
  }));
};

// src/core/react/components/Explorer/Explorer.tsx
var isLeafNode = (node) => {
  if (node.type == "metadata" && (node.subType == "properties" || node.subType == "flow"))
    return true;
  return false;
};
var childrenForNode = (superstate, node, index, depth) => {
  var _a2, _b2;
  let i4 = index;
  const items = [];
  if (node.type == "path") {
    const metadataTypes = [];
    metadataTypes.push({
      type: "properties",
      label: i18n_default.labels.properties,
      sticker: "ui//mk-ui-note"
    });
    if (depth != 0) {
      metadataTypes.push({
        type: "flow",
        label: i18n_default.labels.content,
        sticker: "ui//mk-ui-note"
      });
    }
    metadataTypes.push(
      ...[
        {
          type: "spaces",
          label: i18n_default.labels.spaces,
          sticker: "ui//mk-ui-note"
        },
        {
          type: "inlinks",
          label: i18n_default.labels.backlinks,
          sticker: "lucide//links-coming-in"
        },
        {
          type: "outlinks",
          label: i18n_default.labels.outgoingLinks,
          sticker: "lucide//links-going-out"
        }
      ]
    );
    items.push(
      ...metadataTypes.map((f4, k5) => ({
        id: node.id + "/" + f4.type,
        parentId: node.id,
        type: "metadata",
        subType: f4.type,
        index: i4 + k5,
        path: node.path,
        label: f4.label,
        sticker: f4.sticker,
        value: f4.type,
        depth,
        parentPath: node.parentPath
      }))
    );
  } else if (node.type == "metadata") {
    if (node.subType == "tables") {
      items.push(
        ...[
          ...((_b2 = (_a2 = superstate.contextsIndex.get(node.path)) == null ? void 0 : _a2.schemas) != null ? _b2 : []).filter(
            (f4) => f4.name != defaultContextSchemaID
          )
        ].map((f4, k5) => ({
          id: node.id + "/" + f4.id,
          parentId: node.id,
          type: "schema",
          path: node.path,
          index: i4 + k5,
          sticker: "",
          label: f4.name,
          value: f4.id,
          depth,
          parentPath: node.path
        }))
      );
    }
    let paths = [];
    if (node.subType == "inlinks") {
      paths = [...superstate.linksMap.getInverse(node.path)];
    } else if (node.subType == "outlinks") {
      paths = [...superstate.linksMap.get(node.path)];
    }
    items.push(
      ...paths.map((f4) => superstate.pathsIndex.get(f4)).filter((f4) => f4).map((f4, k5) => ({
        id: node.id + "/" + node.value,
        parentId: node.id,
        type: "path",
        path: f4.path,
        index: i4 + k5,
        sticker: f4.label.sticker,
        label: f4.name,
        value: f4.path,
        depth,
        parentPath: node.path
      }))
    );
  }
  i4 += items.length;
  return items;
};
var flattenTree = (superstate, node, openNodes, depth, index) => {
  const items = [];
  let i4 = index;
  const leafNode = isLeafNode(node);
  if (!leafNode) {
    const children = childrenForNode(superstate, node, i4, depth);
    const newItems = [];
    if (openNodes.some((f4) => f4 == node.id)) {
      children.forEach((f4) => {
        i4 = i4 + 1;
        newItems.push(...flattenTree(superstate, f4, openNodes, depth + 1, i4));
      });
    }
    if (node.type != "metadata" || children.length != 0)
      items.push({ ...node, children: children.length, isLeafNode: leafNode });
    items.push(...newItems);
  } else {
    items.push({ ...node, isLeafNode: leafNode });
  }
  return items;
};
var PathContextView = (props2) => {
  const [selectedPath, setSelectedPath] = h2(null);
  const [selectedRoot, setSelectedRoot] = h2(null);
  const [openNodes, setOpenNodes] = h2([]);
  const [filters, setFilters] = h2([]);
  const rootCache = F2(
    () => props2.superstate.pathsIndex.get(selectedPath),
    [selectedRoot]
  );
  const flattenedTree = F2(
    () => rootCache ? flattenTree(
      props2.superstate,
      {
        id: rootCache.path,
        parentId: null,
        type: "path",
        path: rootCache.path,
        index: 0,
        depth: 0,
        sticker: rootCache.label.sticker,
        label: rootCache.name,
        value: rootCache.path
      },
      openNodes,
      0,
      0
    ) : [],
    [rootCache, openNodes]
  );
  p2(() => {
    rootCache && setOpenNodes([rootCache.path]);
  }, [rootCache]);
  const changeSelectedPath = (path) => {
    setSelectedPath(path);
  };
  p2(() => {
    props2.superstate.ui.eventsDispatch.addListener(
      "activePathChanged",
      changeSelectedPath
    );
    return () => {
      props2.superstate.ui.eventsDispatch.removeListener(
        "activePathChanged",
        changeSelectedPath
      );
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context"
  }, rootCache ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, flattenedTree.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: f4.id,
    className: "mk-tree-wrapper",
    style: { marginLeft: f4.depth * 8 }
  }, !f4.isLeafNode ? /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${!openNodes.some((g4) => g4 == f4.id) ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
    },
    onClick: () => setOpenNodes(
      (p3) => p3.some((g4) => g4 == f4.id) ? p3.filter((o3) => o3 != f4.id) : [...p3, f4.id]
    )
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall`
  }), f4.type == "metadata" ? f4.subType == "flow" ? /* @__PURE__ */ Cn.createElement(ExplorerFlowRow, {
    path: f4.path,
    source: f4.parentPath,
    superstate: props2.superstate
  }) : f4.subType == "properties" ? /* @__PURE__ */ Cn.createElement(ExplorerContextRow, {
    superstate: props2.superstate,
    node: f4
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(f4.sticker)
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-key"
  }, f4.label))) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(f4.sticker)
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-key"
  }, f4.label)))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};
var ExplorerFlowRow = (props2) => {
  var _a2;
  const path = F2(() => {
    const spaceCache = props2.superstate.spacesIndex.get(props2.path);
    if (spaceCache)
      return spaceCache.space.defPath;
    return props2.path;
  }, [props2.path]);
  const [block, setBlock] = h2([null, null]);
  const refreshBlock = (path2) => {
    var _a3, _b2;
    const fCache = props2.superstate.pathsIndex.get(path2);
    const link = [
      ...(_a3 = fCache == null ? void 0 : fCache.metadata.links) != null ? _a3 : [],
      ...(_b2 = fCache == null ? void 0 : fCache.metadata.embeds) != null ? _b2 : []
    ].find((f4) => props2.source && props2.source.includes(f4.displayText));
    if (link) {
      const block2 = fCache.metadata.sections.find(
        (f4) => f4.position.start.offset <= link.position.start.offset && f4.position.end.offset >= link.position.end.offset
      );
      if (!block2)
        setBlock([null, null]);
      setBlock([block2.position.start, block2.position.end]);
    } else {
      if (fCache.metadata.frontmatterPosition) {
        setBlock([
          fCache.metadata.frontmatterPosition.end,
          fCache.metadata.sections.last().position.end
        ]);
      } else {
        setBlock([
          fCache.metadata.sections.first().position.start,
          fCache.metadata.sections.last().position.end
        ]);
      }
    }
  };
  p2(() => {
    refreshBlock(path);
  }, []);
  p2(() => {
    refreshBlock(path);
  }, [path]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-backlink"
  }, /* @__PURE__ */ Cn.createElement(PathView, {
    superstate: props2.superstate,
    load: true,
    path,
    properties: {
      from: (_a2 = block[0]) == null ? void 0 : _a2.line,
      to: block[1] ? block[1].line + 1 : null
    },
    classname: "mk-path-context-flow"
  })));
};
var ExplorerContextRow = (props2) => {
  const { node, superstate } = props2;
  const [spaceCache, setSpaceCache] = h2(
    superstate.spacesIndex.get(node.path)
  );
  const spaces = [...superstate.spacesMap.get(node.path)];
  return /* @__PURE__ */ Cn.createElement(ContextPropertiesView, {
    superstate: props2.superstate,
    spacePaths: spaces,
    path: node.path,
    showMetadata: true,
    hiddenFields: [
      ...FMMetadataKeys(superstate.settings),
      ...FMSpaceKeys(superstate.settings)
    ],
    editable: true
  });
};

// src/core/react/components/SpaceView/Contexts/CardsView/CardsView.tsx
var import_classnames4 = __toESM(require_classnames());

// src/core/react/components/SpaceView/Contexts/CardsView/CardColumnView.tsx
var import_classnames = __toESM(require_classnames());
var CardColumnView = k3(
  ({
    id: id2,
    children,
    columns = 1,
    handleProps,
    horizontal,
    hover,
    onClick,
    onRemove,
    superstate,
    field,
    label,
    path,
    placeholder,
    style,
    scrollable,
    shadow,
    unstyled,
    renderItem,
    ...props2
  }, ref2) => {
    const Component3 = "div";
    const { updateValue: updateValue2, updateFieldValue, contextTable } = q2(ContextEditorContext);
    return renderItem ? renderItem({
      children,
      value: { name: field == null ? void 0 : field.name, value: label }
    }) : /* @__PURE__ */ Cn.createElement(Component3, {
      ...props2,
      ref: ref2,
      style: {
        ...style,
        "--columns": columns
      },
      className: (0, import_classnames.default)(
        "mk-list-group",
        unstyled && "unstyled",
        horizontal && "horizontal",
        hover && "hover",
        placeholder && "placeholder",
        scrollable && "scrollable",
        shadow && "shadow"
      ),
      onClick,
      tabIndex: onClick ? 0 : void 0
    }, label != null && field ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-list-group-header"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      initialValue: label,
      superstate,
      row: { [PathPropertyName]: path },
      column: field,
      editable: false,
      updateValue: (value) => updateValue2(
        field.name,
        value,
        field.table,
        parseInt(id2) * -1,
        path
      ),
      updateFieldValue: (value, fieldValue) => updateFieldValue(
        field.name,
        fieldValue,
        value,
        field.table,
        parseInt(id2) * -1,
        path
      ),
      contextTable
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: "Actions",
      ...handleProps
    })) : null, placeholder ? children : /* @__PURE__ */ Cn.createElement("ul", null, children));
  }
);
CardColumnView.displayName = "CardColumnView";
var CardColumnView_default = CardColumnView;

// src/core/utils/frames/runner.ts
function extractDependencies(code) {
  const dependencies = [];
  function visit(node, parts = []) {
    if (node.type === "Identifier") {
      parts.push(node.name);
      return parts;
    } else if (node.type === "MemberExpression") {
      const objectParts = visit(node.object, parts);
      if (objectParts && node.computed) {
        if (node.property.type === "Literal") {
          objectParts.push(String(node.property.value));
          return objectParts;
        } else {
          return null;
        }
      } else if (objectParts) {
        return visit(node.property, objectParts);
      }
    } else if (node.type === "Literal") {
      parts.push(String(node.value));
      return parts;
    }
    return null;
  }
  function explore(node) {
    if (node.type === "MemberExpression") {
      const parts = visit(node);
      if (parts) {
        dependencies.push(parts);
      }
      return;
    }
    for (const key2 in node) {
      if (typeof node[key2] === "object" && node[key2] !== null) {
        explore(node[key2]);
      }
    }
  }
  try {
    const ast = parse3(code.replace("return ", ""), { ecmaVersion: 2020 });
    explore(ast);
  } catch (e4) {
    return [];
  }
  return dependencies;
}
function sortKeysByDependencies(codeBlockStore, identifier) {
  const graph = /* @__PURE__ */ new Map();
  const dependencies = /* @__PURE__ */ new Map();
  const allDependencies = /* @__PURE__ */ new Map();
  for (const key2 in codeBlockStore) {
    const code = codeBlockStore[key2];
    const extractedDependencies = extractDependencies(code);
    const localDependencies = extractedDependencies.filter((dep) => {
      return dep.slice(0, -1).join(".") === identifier;
    });
    dependencies.set(key2, localDependencies);
    allDependencies.set(key2, extractedDependencies);
    if (!graph.has(key2)) {
      graph.set(key2, /* @__PURE__ */ new Set());
    }
    for (const dep of localDependencies) {
      const depStr = dep[dep.length - 1];
      if (depStr === key2)
        continue;
      graph.get(key2).add(depStr);
    }
  }
  const visited = /* @__PURE__ */ new Set();
  const result = [];
  const temp = /* @__PURE__ */ new Set();
  const visit = (key2) => {
    if (temp.has(key2))
      throw new Error("Circular dependency detected");
    if (!visited.has(key2)) {
      temp.add(key2);
      const edges = graph.get(key2) || /* @__PURE__ */ new Set();
      for (const dep of edges) {
        visit(dep);
      }
      visited.add(key2);
      temp.delete(key2);
      result.push(key2);
    }
  };
  for (const key2 in codeBlockStore) {
    if (!visited.has(key2)) {
      visit(key2);
    }
  }
  return { sortedKeys: result, dependencies: allDependencies };
}
var executeTreeNode = async (_treeNode, state, api, saveState, root, runID, newState) => {
  var _a2, _b2, _c2;
  const treeNode = _treeNode;
  let execState = await executeNode(treeNode.node, { state, newState }, api);
  if (treeNode.node.type == "list") {
    let uid = 0;
    treeNode.children = parseMultiString(execState.state[treeNode.id].props.value).flatMap((f4, i4) => treeNode.children.map((n2) => {
      const [tree, m5] = linkTreeNodes({ ...n2, node: { ...n2.node, props: { ...n2.node.props, value: wrapQuotes(f4) } } }, uid);
      uid = m5;
      return tree;
    }));
  }
  if (typeof ((_b2 = (_a2 = execState.state[treeNode.id]) == null ? void 0 : _a2.actions) == null ? void 0 : _b2.onRun) == "function") {
    (_c2 = execState.state[treeNode.id].actions) == null ? void 0 : _c2.onRun(
      execState,
      (s5) => {
        saveState(s5, { state: execState.state, root, id: runID });
      },
      api
    );
  }
  for (let i4 = 0; i4 < treeNode.children.length; i4++) {
    const [newState2, newNode] = await executeTreeNode(treeNode.children[i4], execState.state, api, saveState, root, runID, execState.newState).then((f4) => [{ state: f4.state, newState: f4.newState }, f4.root]);
    execState = newState2;
    treeNode.children[i4] = newNode;
  }
  return { id: runID, root: treeNode, state: execState.state, newState: execState.newState };
};
var executeNode = async (node, results, api) => {
  const propResults = await executePropsCodeBlocks(node, results, api);
  const stylesResults = executeCodeBlocks(node, "styles", propResults);
  const actions = executeCodeBlocks(node, "actions", stylesResults);
  return actions;
};
var executePropsCodeBlocks = async (node, results, api) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k;
  const { type, props: props2, id: id2 } = node;
  const codeBlockStore = props2 != null ? props2 : {};
  const { sortedKeys, dependencies } = sortKeysByDependencies(codeBlockStore, `${node.id}.props`);
  const runKeys = results.newState ? sortedKeys.filter((f4) => {
    var _a3, _b3, _c3, _d3, _e3, _f2;
    const deps = dependencies.get(f4);
    if (f4 in ((_c3 = (_b3 = (_a3 = results.newState) == null ? void 0 : _a3[node.id]) == null ? void 0 : _b3["props"]) != null ? _c3 : {})) {
      return true;
    }
    for (const dep of deps) {
      if (dep[0] == "api")
        return true;
      if ((_f2 = (_e3 = (_d3 = results.newState) == null ? void 0 : _d3[dep[0]]) == null ? void 0 : _e3[dep[1]]) == null ? void 0 : _f2[dep[2]]) {
        return true;
      }
    }
    return false;
  }) : sortedKeys.filter((f4) => {
    var _a3;
    return ((_a3 = codeBlockStore[f4]) == null ? void 0 : _a3.length) > 0;
  });
  const environment = results.state;
  environment[id2] = {
    props: (_b2 = (_a2 = results.state[id2]) == null ? void 0 : _a2.props) != null ? _b2 : {},
    actions: (_d2 = (_c2 = results.state[id2]) == null ? void 0 : _c2.actions) != null ? _d2 : {},
    styles: (_f = (_e2 = results.state[id2]) == null ? void 0 : _e2.styles) != null ? _f : {},
    contexts: (_h = (_g = results.state[id2]) == null ? void 0 : _g.contexts) != null ? _h : {}
  };
  environment.api = api;
  for (const key2 of runKeys) {
    try {
      let result;
      if (key2 in (((_j = (_i = results.newState) == null ? void 0 : _i[node.id]) == null ? void 0 : _j["props"]) || {})) {
        result = results.newState[node.id]["props"][key2];
      } else {
        const isMultiLine = codeBlockStore[key2].includes("\n");
        const func = isMultiLine ? new Function(`with(this) { ${codeBlockStore[key2]} }`) : new Function(`with(this) { return ${codeBlockStore[key2]}; }`);
        result = func.call(environment);
        if (result instanceof Promise) {
          result = await result;
        }
      }
      environment[id2]["props"][key2] = result;
      results.state[id2]["props"][key2] = result;
      if (results.newState) {
        results.newState[id2] = (_k = results.newState[id2]) != null ? _k : { props: {}, styles: {}, actions: {}, contexts: {} };
        results.newState[id2]["props"][key2] = result;
      }
    } catch (error) {
      console.log(error);
    }
  }
  return results;
};
function executeCodeBlocks(node, type, results) {
  var _a2;
  const codeBlockStore = (_a2 = node[type]) != null ? _a2 : {};
  for (const key2 of Object.keys(codeBlockStore)) {
    try {
      const isMultiLine = typeof codeBlockStore[key2] === "string" || codeBlockStore[key2] instanceof String ? codeBlockStore[key2].includes("\n") : false;
      const func = isMultiLine && !(type == "actions") ? new Function(`with(this) { ${codeBlockStore[key2]} }`) : new Function(`with(this) { return ${codeBlockStore[key2]}; }`);
      const result = func.call(results.state);
      results.state[node.id][type][key2] = result;
    } catch (error) {
      console.log(error);
    }
  }
  return results;
}

// src/core/react/components/SpaceView/Frames/ViewNodes/FrameRoot.tsx
var import_lodash9 = __toESM(require_lodash());

// src/core/utils/frames/renderer.ts
var parseStylesToClass = (styles2) => {
  const classes = [];
  if (styles2.class) {
    classes.push(`${styles2.class}`);
  }
  if (styles2.layout) {
    classes.push(`mk-layout-${styles2.layout}`);
  }
  if (styles2.layoutAlign) {
    classes.push(`mk-layout-align-${styles2.layoutAlign}`);
  }
  if (styles2.layoutWrap) {
    classes.push(`mk-layout-wrap-${styles2.layoutWrap}`);
  }
  if (styles2.iconSize) {
    classes.push(`mk-icon-size-${styles2.iconSize}`);
  }
  if (styles2.imageSize) {
    classes.push(`mk-image-size-${styles2.imageSize}`);
  }
  return classes.join(" ");
};

// src/core/react/components/SpaceView/Frames/EditorNodes/ContentNodeView.tsx
var ContentNodeView = (props2) => {
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.children);
};

// src/core/react/components/UI/Menus/properties/linkMenu.tsx
var showLinkMenu = (e4, superstate, saveLink, placeholder) => {
  const offset2 = e4.target.getBoundingClientRect();
  const options = [...superstate.pathsIndex.values()].filter((f4) => !f4.hidden).map((f4) => {
    var _a2;
    return {
      name: f4.displayName,
      value: f4.path,
      description: f4.path,
      icon: (_a2 = f4.label) == null ? void 0 : _a2.sticker
    };
  });
  superstate.ui.openMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      ui: superstate.ui,
      multi: false,
      editable: true,
      value: [],
      options,
      saveOptions: (_11, value) => {
        saveLink(value[0]);
      },
      placeholder: placeholder != null ? placeholder : i18n_default.labels.linkItemSelectPlaceholder,
      detail: true,
      searchable: true,
      showAll: true
    }
  );
};

// src/core/utils/frames/frames.ts
var propFieldFromString = (str, schemaProps) => {
  return schemaProps.find((f4) => str == `${f4.schemaId}.props.${f4.name}`);
};
var nameForField = (field) => {
  var _a2;
  if (!field)
    return null;
  const parsedValue = parseFieldValue(field.value, field.type);
  return (_a2 = parsedValue.alias) != null ? _a2 : field.name;
};
var stringIsConst = (str) => {
  const hasQuotesAtStartEndOnly = /^["'][^"']*["'](?:;)?$/.test(str);
  const isNumber2 = !isNaN(parseFloat(str)) && isFinite(str);
  return hasQuotesAtStartEndOnly || isNumber2 || str == null || str == "";
};
var newUniqueNode = (node, parent, otherNodes, schemaId) => {
  const id2 = uniqueNameFromString(
    node.node.id,
    otherNodes.map((f4) => f4.id)
  );
  return {
    ...node.node,
    id: id2,
    schemaId,
    parentId: parent
  };
};

// src/core/react/context/FrameEditorContext.tsx
var import_lodash7 = __toESM(require_lodash());
var FramesEditorContext = F({
  root: null,
  runRoot: () => null,
  instance: { state: {}, id: null, root: null },
  saveState: () => null,
  fastSaveState: () => null,
  nodes: [],
  properties: [],
  dragNode: null,
  setDragNode: () => null,
  hoverNode: null,
  selectableNodeBounds: null,
  setHoverNode: () => null,
  selectedNodes: [],
  selectNodes: () => null,
  saveProperty: () => false,
  newProperty: () => false,
  delProperty: () => null,
  groupNodes: () => null,
  ungroupNode: () => null,
  renameNode: () => null,
  addNode: () => null,
  deleteNode: () => null,
  saveNodes: () => null,
  moveUp: () => null,
  moveDown: () => null,
  moveToRank: () => null,
  moveNodeFromSchema: () => null
});
var FramesEditorProvider = (props2) => {
  var _a2;
  const { spaceInfo } = q2(SpaceContext);
  const editorProps = { editMode: props2.editMode };
  const {
    frameSchema,
    setFrameSchema: setDBSchema,
    saveFrame,
    frameSchemas: schemas,
    tableData,
    getMDBData
  } = q2(FramesMDBContext);
  const [hoverNode, setHoverNode] = h2(null);
  const [dragNode, setDragNode] = h2(null);
  const [selectedNodes, setSelectedNodes] = h2([]);
  const nodes = F2(() => {
    var _a3;
    if (!frameSchema)
      return [];
    const frames = (_a3 = tableData == null ? void 0 : tableData.rows.map(
      (f4) => f4.id == frameSchema.id ? {
        ...frameToNode(f4),
        types: tableData.cols.reduce(
          (p3, c4) => ({ ...p3, [c4.name]: c4.type }),
          {}
        ),
        propsValue: tableData.cols.reduce(
          (p3, c4) => ({ ...p3, [c4.name]: c4.value }),
          {}
        )
      } : frameToNode(f4)
    )) != null ? _a3 : [];
    const _root = schemaToRoot(frameSchema);
    if (frames.some((f4) => f4.id == _root.id)) {
      return frames;
    }
    return [...frames, _root];
  }, [tableData, frameSchema]);
  const [root, setRoot] = h2(null);
  const [instance, setInstance] = h2({
    state: {},
    id: null,
    root: null
  });
  const activeRunID = _2(null);
  const saveState = (newState, instance2) => {
    const { root: _root, id: runID, state } = instance2;
    if (activeRunID.current != runID)
      return;
    executeTreeNode(
      applyPropsToRoot(_root, props2.props),
      state,
      props2.superstate.api,
      saveState,
      _root,
      runID,
      newState
    ).then(
      (s5) => setInstance((p3) => {
        return s5;
      })
    );
  };
  const selectableNodeBounds = _2({});
  const fastSaveState = (newState) => {
    setInstance((p3) => {
      return { ...p3, state: newState };
    });
  };
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const runRoot = () => {
    var _a3;
    if ((frameSchema == null ? void 0 : frameSchema.type) == "frame" || (frameSchema == null ? void 0 : frameSchema.type) == "listitem") {
      const _newRoot = buildRoot(
        frameSchema,
        (_a3 = tableData == null ? void 0 : tableData.cols) != null ? _a3 : [],
        nodes,
        props2.superstate,
        editorProps
      );
      setRoot(_newRoot);
      if (_newRoot) {
        const newRoot = import_lodash7.default.cloneDeep(_newRoot);
        const runID = (0, import_lodash7.uniqueId)();
        activeRunID.current = runID;
        executeTreeNode(
          applyPropsToRoot(newRoot, props2.props),
          {},
          props2.superstate.api,
          saveState,
          newRoot,
          runID
        ).then((s5) => {
          setInstance((p3) => {
            return s5;
          });
          activeRunID.current = s5.id;
        });
        if (selectedNodes.length == 0) {
        } else {
          setSelectedNodes(
            nodes.filter((f4) => selectedNodes.find((g4) => g4.id == f4.id))
          );
        }
      }
    }
  };
  const refreshFrame = (payload) => {
    if (payload.path == spaceInfo.path) {
      runRoot();
    }
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "frameStateUpdated",
      refreshFrame
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "frameStateUpdated",
        refreshFrame
      );
    };
  }, [spaceInfo]);
  p2(() => {
    runRoot();
  }, [frameSchema, nodes, tableData, props2.props]);
  const moveUp = (node) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex <= 0) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    const swappedItem = items[itemIndex - 1];
    [item.rank, swappedItem.rank] = [swappedItem.rank, item.rank];
    saveNodes(items);
  };
  const moveDown = (node) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex < 0 || itemIndex >= items.length - 1) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    const swappedItem = items[itemIndex + 1];
    [item.rank, swappedItem.rank] = [swappedItem.rank, item.rank];
    saveNodes(items.sort((a5, b4) => a5.rank - b4.rank));
  };
  const ungroupNode = (node) => {
    const children = nodes.filter((f4) => f4.parentId == node.id);
    const newRank = node.rank;
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank);
    const newItems = insertMulti(
      items,
      newRank,
      children.map((f4) => ({ ...f4, parentId: node.parentId }))
    ).filter((f4) => f4.id != node.id).map((f4, i4) => ({ ...f4, rank: i4 }));
    return saveNodes(newItems, [node]);
  };
  const moveToRank = (node, newRank) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex < 0 || newRank < 0 || newRank >= items.length) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    item.rank = newRank;
    const newItems = arrayMove(items, itemIndex, newRank).map((f4, i4) => ({
      ...f4,
      rank: i4
    }));
    saveNodes(newItems);
  };
  const groupNodes = (treeNodes, style) => {
    const parentId = treeNodes[0].id == frameSchema.id ? "" : treeNodes[0].parentId;
    const group = {
      ...newUniqueNode(groupNode, parentId, nodes, frameSchema.id)
    };
    const newNodes = treeNodes.map((f4) => {
      const node = import_lodash7.default.cloneDeep(f4);
      node.parentId = group.id;
      return node;
    });
    saveNodes([
      { ...group, styles: { ...group.styles, ...style } },
      ...newNodes
    ]);
  };
  const addNode = (treeNode, target) => {
    const id2 = uniqueNameFromString(
      treeNode.id,
      nodes.map((f4) => f4.id)
    );
    let parent = target ? target : selectedNodes.length > 0 ? selectedNodes[0] : root.node;
    let rank = target ? target.rank + 1 : parent.rank;
    if (!groupableTypes.some((f4) => parent.type == f4)) {
      parent = findParent(root, parent.id).node;
    } else {
      rank = nodes.filter((f4) => f4.parentId == parent.id).length;
    }
    const newTreeNode = {
      ...treeNode,
      id: id2,
      schemaId: frameSchema.id,
      parentId: parent.id
    };
    const newNodes = insert(
      nodes.filter((f4) => f4.parentId == parent.id).sort((a5, b4) => a5.rank - b4.rank),
      rank,
      newTreeNode
    ).map((f4, i4) => ({ ...f4, rank: i4 }));
    saveNodes(newNodes).then((f4) => selectNodes([newTreeNode]));
  };
  const saveNodes = async (treeNodes, deleteNodes) => {
    var _a3, _b2, _c2;
    if (!tableData) {
      return;
    }
    const newRows = ((_a3 = tableData == null ? void 0 : tableData.rows) == null ? void 0 : _a3.some((f4) => f4.id == root.id)) ? tableData.rows : [...(_b2 = tableData == null ? void 0 : tableData.rows) != null ? _b2 : [], nodeToFrame(root.node)];
    const insertRows = treeNodes.filter((f4) => !newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
    const modRows = treeNodes.filter((f4) => newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
    const newTable = {
      ...tableData,
      cols: (_c2 = tableData.cols) != null ? _c2 : [],
      rows: [
        ...newRows.map((f4) => {
          var _a4;
          return (_a4 = modRows.find((g4) => g4.id == f4.id)) != null ? _a4 : f4;
        }),
        ...insertRows
      ].filter(
        (f4) => deleteNodes ? !deleteNodes.some((g4) => g4.id == f4.id) : f4
      )
    };
    await saveFrame(newTable);
  };
  const moveNodeFromSchema = async (nodeId, schemaId, newParentId, styles2) => {
    const oldTable = await getMDBData();
    if (!oldTable[schemaId])
      return;
    const tableNodes = oldTable[schemaId].rows.map(
      (g4) => frameToNode(g4)
    );
    const oldSchema = schemas.find((f4) => f4.id == schemaId);
    const treeNode = tableNodes.find((f4) => f4.id == nodeId);
    if (!oldSchema || !treeNode)
      return;
    const tree = buildFrameTree(
      treeNode,
      tableNodes,
      props2.superstate,
      0,
      false,
      editorProps
    )[0];
    const deleteNodes = flattenToFrameNodes(tree);
    const newTreeNodes = deleteNodes.map((f4) => ({
      ...f4,
      schemaId: frameSchema.id,
      styles: f4.id == nodeId && styles2 ? {
        ...f4.styles,
        ...styles2
      } : f4.styles,
      parentId: f4.id == nodeId ? newParentId : f4.parentId
    }));
    await saveFrame({
      ...oldTable[frameSchema.id],
      rows: oldTable[frameSchema.id].rows.filter(
        (f4) => !deleteNodes.some((g4) => f4.schemaId == g4.schemaId && f4.id == g4.id)
      )
    });
    await saveFrame({
      ...tableData,
      rows: [
        ...tableData.rows,
        ...newTreeNodes.map((f4) => nodeToFrame(f4))
      ]
    });
  };
  const deleteNode = (treeNode) => {
    const tree = buildFrameTree(
      treeNode,
      nodes,
      props2.superstate,
      0,
      false,
      editorProps
    )[0];
    const parent = findParent(root, treeNode.id);
    const deleteNodes = flattenToFrameNodes(tree);
    if (parent) {
      if (parent.children.length == 1 && parent.node.type == "column")
        deleteNodes.push(parent.node);
      const grandParent = findParent(root, parent.id);
      if ((grandParent == null ? void 0 : grandParent.children.length) == 1 && grandParent.node.type == "container") {
        deleteNodes.push(grandParent.node);
      }
    }
    saveFrame({
      ...tableData,
      rows: tableData.rows.filter(
        (f4) => !deleteNodes.some((g4) => f4.schemaId == g4.schemaId && f4.id == g4.id)
      )
    });
  };
  const properties2 = (_a2 = tableData == null ? void 0 : tableData.cols) != null ? _a2 : [];
  const selectNodes = (frames) => {
    setSelectedNodes(frames);
  };
  const delProperty = (column) => {
    const mdbtable = tableData;
    const newFields = mdbtable.cols.filter(
      (f4, i4) => f4.name != column.name
    );
    const newTable = {
      ...mdbtable,
      cols: newFields != null ? newFields : []
    };
    saveFrame(newTable);
  };
  const newProperty = (col) => {
    return saveProperty(col);
  };
  const renameNode = (node, newName) => {
  };
  const saveProperty = (newColumn, oldColumn) => {
    const column = {
      ...newColumn,
      name: sanitizeColumnName(newColumn.name)
    };
    const mdbtable = tableData;
    if (column.name == "") {
      props2.superstate.ui.notify(i18n_default.notice.noPropertyName);
      return false;
    }
    if (!oldColumn && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    ) || oldColumn && oldColumn.name != column.name && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    )) {
      props2.superstate.ui.notify(i18n_default.notice.duplicatePropertyName);
      return false;
    }
    const oldFieldIndex = oldColumn ? mdbtable.cols.findIndex((f4) => f4.name == oldColumn.name) : -1;
    const newFields = oldFieldIndex == -1 ? [...mdbtable.cols, column] : mdbtable.cols.map((f4, i4) => i4 == oldFieldIndex ? column : f4);
    const newTable = {
      ...mdbtable,
      cols: newFields != null ? newFields : []
    };
    saveFrame(newTable);
    return true;
  };
  return /* @__PURE__ */ Cn.createElement(FramesEditorContext.Provider, {
    value: {
      root,
      runRoot,
      instance,
      dragNode,
      fastSaveState,
      setDragNode,
      hoverNode,
      setHoverNode,
      saveState,
      nodes,
      properties: properties2,
      addNode,
      deleteNode,
      selectedNodes,
      selectNodes,
      saveProperty,
      newProperty,
      selectableNodeBounds,
      renameNode,
      delProperty,
      saveNodes,
      ungroupNode,
      moveUp,
      moveDown,
      moveToRank,
      moveNodeFromSchema,
      groupNodes
    }
  }, props2.children);
};

// src/core/react/components/SpaceView/Frames/EditorNodes/FlowNodeView.tsx
function parseContent(input) {
  const regex1 = /!\[!\[(.*?)\]\]/;
  const regex2 = /!!\[\[(.*?)\]\]/;
  const match1 = input.match(regex1);
  const match2 = input.match(regex2);
  return match1 ? match1[1] : match2 ? match2[1] : input;
}
var FlowNodeView = (props2) => {
  var _a2, _b2;
  const fullPath = (_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.props) == null ? void 0 : _b2.value;
  const path = fullPath ? parseContent(fullPath) : null;
  const { saveNodes } = q2(FramesEditorContext);
  const selectLink = (e4) => {
    showLinkMenu(
      e4,
      props2.superstate,
      (link) => saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(link) }
        }
      ])
    );
  };
  return props2.instance.state[props2.treeNode.id] && path ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(PathView, {
    source: props2.source,
    superstate: props2.superstate,
    path,
    load: true,
    classname: "mk-flow-node",
    ref: props2.menuRef
  })) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-placeholder",
    onClick: (e4) => selectLink(e4)
  }, i18n_default.labels.selectNote);
};

// src/core/react/components/SpaceView/Frames/EditorNodes/FrameNodeView.tsx
var import_classnames2 = __toESM(require_classnames());

// src/core/types/types.ts
var eventTypes = {
  frameSelected: "mkmd-active-frame",
  frameLayerSelected: "mkmd-frame-layer",
  refreshView: "mkmd-refresh-view",
  revealPath: "mkmd-reveal-file",
  collapseFolders: "mkmd-collapse-folders",
  toggleBacklinks: "mkmd-toggle-backlinks",
  metadataChange: "mkmd-tags-change",
  vaultChange: "mkmd-vault-change",
  mdbChange: "mkmd-mdb-change",
  spacesChange: "mkmd-spaces-change",
  frameChange: "mkmd-frame-change",
  updateSections: "mkmd-update-sections",
  settingsChanged: "mkmd-settings-changed"
};

// node_modules/re-resizable/lib/resizer.js
var __extends = function() {
  var extendStatics = function(d5, b4) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b5) {
      d6.__proto__ = b5;
    } || function(d6, b5) {
      for (var p3 in b5)
        if (Object.prototype.hasOwnProperty.call(b5, p3))
          d6[p3] = b5[p3];
    };
    return extendStatics(d5, b4);
  };
  return function(d5, b4) {
    extendStatics(d5, b4);
    function __() {
      this.constructor = d5;
    }
    d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  };
}();
var __assign2 = function() {
  __assign2 = Object.assign || function(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign2.apply(this, arguments);
};
var rowSizeBase = {
  width: "100%",
  height: "10px",
  top: "0px",
  left: "0px",
  cursor: "row-resize"
};
var colSizeBase = {
  width: "10px",
  height: "100%",
  top: "0px",
  left: "0px",
  cursor: "col-resize"
};
var edgeBase = {
  width: "20px",
  height: "20px",
  position: "absolute"
};
var styles = {
  top: __assign2(__assign2({}, rowSizeBase), { top: "-5px" }),
  right: __assign2(__assign2({}, colSizeBase), { left: void 0, right: "-5px" }),
  bottom: __assign2(__assign2({}, rowSizeBase), { top: void 0, bottom: "-5px" }),
  left: __assign2(__assign2({}, colSizeBase), { left: "-5px" }),
  topRight: __assign2(__assign2({}, edgeBase), { right: "-10px", top: "-10px", cursor: "ne-resize" }),
  bottomRight: __assign2(__assign2({}, edgeBase), { right: "-10px", bottom: "-10px", cursor: "se-resize" }),
  bottomLeft: __assign2(__assign2({}, edgeBase), { left: "-10px", bottom: "-10px", cursor: "sw-resize" }),
  topLeft: __assign2(__assign2({}, edgeBase), { left: "-10px", top: "-10px", cursor: "nw-resize" })
};
var Resizer = function(_super) {
  __extends(Resizer2, _super);
  function Resizer2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.onMouseDown = function(e4) {
      _this.props.onResizeStart(e4, _this.props.direction);
    };
    _this.onTouchStart = function(e4) {
      _this.props.onResizeStart(e4, _this.props.direction);
    };
    return _this;
  }
  Resizer2.prototype.render = function() {
    return y("div", { className: this.props.className || "", style: __assign2(__assign2({ position: "absolute", userSelect: "none" }, styles[this.props.direction]), this.props.replaceStyles || {}), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children);
  };
  return Resizer2;
}(w3);

// node_modules/re-resizable/lib/index.js
var __extends2 = function() {
  var extendStatics = function(d5, b4) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b5) {
      d6.__proto__ = b5;
    } || function(d6, b5) {
      for (var p3 in b5)
        if (Object.prototype.hasOwnProperty.call(b5, p3))
          d6[p3] = b5[p3];
    };
    return extendStatics(d5, b4);
  };
  return function(d5, b4) {
    extendStatics(d5, b4);
    function __() {
      this.constructor = d5;
    }
    d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  };
}();
var __assign3 = function() {
  __assign3 = Object.assign || function(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign3.apply(this, arguments);
};
var DEFAULT_SIZE = {
  width: "auto",
  height: "auto"
};
var clamp = function(n2, min3, max3) {
  return Math.max(Math.min(n2, max3), min3);
};
var snap = function(n2, size) {
  return Math.round(n2 / size) * size;
};
var hasDirection = function(dir, target) {
  return new RegExp(dir, "i").test(target);
};
var isTouchEvent2 = function(event) {
  return Boolean(event.touches && event.touches.length);
};
var isMouseEvent2 = function(event) {
  return Boolean((event.clientX || event.clientX === 0) && (event.clientY || event.clientY === 0));
};
var findClosestSnap = function(n2, snapArray, snapGap) {
  if (snapGap === void 0) {
    snapGap = 0;
  }
  var closestGapIndex = snapArray.reduce(function(prev, curr, index) {
    return Math.abs(curr - n2) < Math.abs(snapArray[prev] - n2) ? index : prev;
  }, 0);
  var gap = Math.abs(snapArray[closestGapIndex] - n2);
  return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n2;
};
var getStringSize = function(n2) {
  n2 = n2.toString();
  if (n2 === "auto") {
    return n2;
  }
  if (n2.endsWith("px")) {
    return n2;
  }
  if (n2.endsWith("%")) {
    return n2;
  }
  if (n2.endsWith("vh")) {
    return n2;
  }
  if (n2.endsWith("vw")) {
    return n2;
  }
  if (n2.endsWith("vmax")) {
    return n2;
  }
  if (n2.endsWith("vmin")) {
    return n2;
  }
  return n2 + "px";
};
var getPixelSize = function(size, parentSize, innerWidth2, innerHeight2) {
  if (size && typeof size === "string") {
    if (size.endsWith("px")) {
      return Number(size.replace("px", ""));
    }
    if (size.endsWith("%")) {
      var ratio = Number(size.replace("%", "")) / 100;
      return parentSize * ratio;
    }
    if (size.endsWith("vw")) {
      var ratio = Number(size.replace("vw", "")) / 100;
      return innerWidth2 * ratio;
    }
    if (size.endsWith("vh")) {
      var ratio = Number(size.replace("vh", "")) / 100;
      return innerHeight2 * ratio;
    }
  }
  return size;
};
var calculateNewMax = function(parentSize, innerWidth2, innerHeight2, maxWidth, maxHeight, minWidth, minHeight) {
  maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth2, innerHeight2);
  maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth2, innerHeight2);
  minWidth = getPixelSize(minWidth, parentSize.width, innerWidth2, innerHeight2);
  minHeight = getPixelSize(minHeight, parentSize.height, innerWidth2, innerHeight2);
  return {
    maxWidth: typeof maxWidth === "undefined" ? void 0 : Number(maxWidth),
    maxHeight: typeof maxHeight === "undefined" ? void 0 : Number(maxHeight),
    minWidth: typeof minWidth === "undefined" ? void 0 : Number(minWidth),
    minHeight: typeof minHeight === "undefined" ? void 0 : Number(minHeight)
  };
};
var definedProps = [
  "as",
  "style",
  "className",
  "grid",
  "snap",
  "bounds",
  "boundsByDirection",
  "size",
  "defaultSize",
  "minWidth",
  "minHeight",
  "maxWidth",
  "maxHeight",
  "lockAspectRatio",
  "lockAspectRatioExtraWidth",
  "lockAspectRatioExtraHeight",
  "enable",
  "handleStyles",
  "handleClasses",
  "handleWrapperStyle",
  "handleWrapperClass",
  "children",
  "onResizeStart",
  "onResize",
  "onResizeStop",
  "handleComponent",
  "scale",
  "resizeRatio",
  "snapGap"
];
var baseClassName = "__resizable_base__";
var Resizable = function(_super) {
  __extends2(Resizable2, _super);
  function Resizable2(props2) {
    var _this = _super.call(this, props2) || this;
    _this.ratio = 1;
    _this.resizable = null;
    _this.parentLeft = 0;
    _this.parentTop = 0;
    _this.resizableLeft = 0;
    _this.resizableRight = 0;
    _this.resizableTop = 0;
    _this.resizableBottom = 0;
    _this.targetLeft = 0;
    _this.targetTop = 0;
    _this.appendBase = function() {
      if (!_this.resizable || !_this.window) {
        return null;
      }
      var parent = _this.parentNode;
      if (!parent) {
        return null;
      }
      var element = _this.window.document.createElement("div");
      element.style.width = "100%";
      element.style.height = "100%";
      element.style.position = "absolute";
      element.style.transform = "scale(0, 0)";
      element.style.left = "0";
      element.style.flex = "0 0 100%";
      if (element.classList) {
        element.classList.add(baseClassName);
      } else {
        element.className += baseClassName;
      }
      parent.appendChild(element);
      return element;
    };
    _this.removeBase = function(base2) {
      var parent = _this.parentNode;
      if (!parent) {
        return;
      }
      parent.removeChild(base2);
    };
    _this.ref = function(c4) {
      if (c4) {
        _this.resizable = c4;
      }
    };
    _this.state = {
      isResizing: false,
      width: typeof (_this.propsSize && _this.propsSize.width) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.width,
      height: typeof (_this.propsSize && _this.propsSize.height) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.height,
      direction: "right",
      original: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      backgroundStyle: {
        height: "100%",
        width: "100%",
        backgroundColor: "rgba(0,0,0,0)",
        cursor: "auto",
        opacity: 0,
        position: "fixed",
        zIndex: 9999,
        top: "0",
        left: "0",
        bottom: "0",
        right: "0"
      },
      flexBasis: void 0
    };
    _this.onResizeStart = _this.onResizeStart.bind(_this);
    _this.onMouseMove = _this.onMouseMove.bind(_this);
    _this.onMouseUp = _this.onMouseUp.bind(_this);
    return _this;
  }
  Object.defineProperty(Resizable2.prototype, "parentNode", {
    get: function() {
      if (!this.resizable) {
        return null;
      }
      return this.resizable.parentNode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "window", {
    get: function() {
      if (!this.resizable) {
        return null;
      }
      if (!this.resizable.ownerDocument) {
        return null;
      }
      return this.resizable.ownerDocument.defaultView;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "propsSize", {
    get: function() {
      return this.props.size || this.props.defaultSize || DEFAULT_SIZE;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "size", {
    get: function() {
      var width = 0;
      var height = 0;
      if (this.resizable && this.window) {
        var orgWidth = this.resizable.offsetWidth;
        var orgHeight = this.resizable.offsetHeight;
        var orgPosition = this.resizable.style.position;
        if (orgPosition !== "relative") {
          this.resizable.style.position = "relative";
        }
        width = this.resizable.style.width !== "auto" ? this.resizable.offsetWidth : orgWidth;
        height = this.resizable.style.height !== "auto" ? this.resizable.offsetHeight : orgHeight;
        this.resizable.style.position = orgPosition;
      }
      return { width, height };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "sizeStyle", {
    get: function() {
      var _this = this;
      var size = this.props.size;
      var getSize = function(key2) {
        if (typeof _this.state[key2] === "undefined" || _this.state[key2] === "auto") {
          return "auto";
        }
        if (_this.propsSize && _this.propsSize[key2] && _this.propsSize[key2].toString().endsWith("%")) {
          if (_this.state[key2].toString().endsWith("%")) {
            return _this.state[key2].toString();
          }
          var parentSize = _this.getParentSize();
          var value = Number(_this.state[key2].toString().replace("px", ""));
          var percent = value / parentSize[key2] * 100;
          return percent + "%";
        }
        return getStringSize(_this.state[key2]);
      };
      var width = size && typeof size.width !== "undefined" && !this.state.isResizing ? getStringSize(size.width) : getSize("width");
      var height = size && typeof size.height !== "undefined" && !this.state.isResizing ? getStringSize(size.height) : getSize("height");
      return { width, height };
    },
    enumerable: false,
    configurable: true
  });
  Resizable2.prototype.getParentSize = function() {
    if (!this.parentNode) {
      if (!this.window) {
        return { width: 0, height: 0 };
      }
      return { width: this.window.innerWidth, height: this.window.innerHeight };
    }
    var base2 = this.appendBase();
    if (!base2) {
      return { width: 0, height: 0 };
    }
    var wrapChanged = false;
    var wrap = this.parentNode.style.flexWrap;
    if (wrap !== "wrap") {
      wrapChanged = true;
      this.parentNode.style.flexWrap = "wrap";
    }
    base2.style.position = "relative";
    base2.style.minWidth = "100%";
    base2.style.minHeight = "100%";
    var size = {
      width: base2.offsetWidth,
      height: base2.offsetHeight
    };
    if (wrapChanged) {
      this.parentNode.style.flexWrap = wrap;
    }
    this.removeBase(base2);
    return size;
  };
  Resizable2.prototype.bindEvents = function() {
    if (this.window) {
      this.window.addEventListener("mouseup", this.onMouseUp);
      this.window.addEventListener("mousemove", this.onMouseMove);
      this.window.addEventListener("mouseleave", this.onMouseUp);
      this.window.addEventListener("touchmove", this.onMouseMove, {
        capture: true,
        passive: false
      });
      this.window.addEventListener("touchend", this.onMouseUp);
    }
  };
  Resizable2.prototype.unbindEvents = function() {
    if (this.window) {
      this.window.removeEventListener("mouseup", this.onMouseUp);
      this.window.removeEventListener("mousemove", this.onMouseMove);
      this.window.removeEventListener("mouseleave", this.onMouseUp);
      this.window.removeEventListener("touchmove", this.onMouseMove, true);
      this.window.removeEventListener("touchend", this.onMouseUp);
    }
  };
  Resizable2.prototype.componentDidMount = function() {
    if (!this.resizable || !this.window) {
      return;
    }
    var computedStyle = this.window.getComputedStyle(this.resizable);
    this.setState({
      width: this.state.width || this.size.width,
      height: this.state.height || this.size.height,
      flexBasis: computedStyle.flexBasis !== "auto" ? computedStyle.flexBasis : void 0
    });
  };
  Resizable2.prototype.componentWillUnmount = function() {
    if (this.window) {
      this.unbindEvents();
    }
  };
  Resizable2.prototype.createSizeForCssProperty = function(newSize, kind) {
    var propsSize = this.propsSize && this.propsSize[kind];
    return this.state[kind] === "auto" && this.state.original[kind] === newSize && (typeof propsSize === "undefined" || propsSize === "auto") ? "auto" : newSize;
  };
  Resizable2.prototype.calculateNewMaxFromBoundary = function(maxWidth, maxHeight) {
    var boundsByDirection = this.props.boundsByDirection;
    var direction = this.state.direction;
    var widthByDirection = boundsByDirection && hasDirection("left", direction);
    var heightByDirection = boundsByDirection && hasDirection("top", direction);
    var boundWidth;
    var boundHeight;
    if (this.props.bounds === "parent") {
      var parent_1 = this.parentNode;
      if (parent_1) {
        boundWidth = widthByDirection ? this.resizableRight - this.parentLeft : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);
        boundHeight = heightByDirection ? this.resizableBottom - this.parentTop : parent_1.offsetHeight + (this.parentTop - this.resizableTop);
      }
    } else if (this.props.bounds === "window") {
      if (this.window) {
        boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;
        boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;
      }
    } else if (this.props.bounds) {
      boundWidth = widthByDirection ? this.resizableRight - this.targetLeft : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);
      boundHeight = heightByDirection ? this.resizableBottom - this.targetTop : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);
    }
    if (boundWidth && Number.isFinite(boundWidth)) {
      maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;
    }
    if (boundHeight && Number.isFinite(boundHeight)) {
      maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;
    }
    return { maxWidth, maxHeight };
  };
  Resizable2.prototype.calculateNewSizeFromDirection = function(clientX, clientY) {
    var scale = this.props.scale || 1;
    var resizeRatio = this.props.resizeRatio || 1;
    var _a2 = this.state, direction = _a2.direction, original = _a2.original;
    var _b2 = this.props, lockAspectRatio = _b2.lockAspectRatio, lockAspectRatioExtraHeight = _b2.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b2.lockAspectRatioExtraWidth;
    var newWidth = original.width;
    var newHeight = original.height;
    var extraHeight = lockAspectRatioExtraHeight || 0;
    var extraWidth = lockAspectRatioExtraWidth || 0;
    if (hasDirection("right", direction)) {
      newWidth = original.width + (clientX - original.x) * resizeRatio / scale;
      if (lockAspectRatio) {
        newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
      }
    }
    if (hasDirection("left", direction)) {
      newWidth = original.width - (clientX - original.x) * resizeRatio / scale;
      if (lockAspectRatio) {
        newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
      }
    }
    if (hasDirection("bottom", direction)) {
      newHeight = original.height + (clientY - original.y) * resizeRatio / scale;
      if (lockAspectRatio) {
        newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
      }
    }
    if (hasDirection("top", direction)) {
      newHeight = original.height - (clientY - original.y) * resizeRatio / scale;
      if (lockAspectRatio) {
        newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
      }
    }
    return { newWidth, newHeight };
  };
  Resizable2.prototype.calculateNewSizeFromAspectRatio = function(newWidth, newHeight, max3, min3) {
    var _a2 = this.props, lockAspectRatio = _a2.lockAspectRatio, lockAspectRatioExtraHeight = _a2.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a2.lockAspectRatioExtraWidth;
    var computedMinWidth = typeof min3.width === "undefined" ? 10 : min3.width;
    var computedMaxWidth = typeof max3.width === "undefined" || max3.width < 0 ? newWidth : max3.width;
    var computedMinHeight = typeof min3.height === "undefined" ? 10 : min3.height;
    var computedMaxHeight = typeof max3.height === "undefined" || max3.height < 0 ? newHeight : max3.height;
    var extraHeight = lockAspectRatioExtraHeight || 0;
    var extraWidth = lockAspectRatioExtraWidth || 0;
    if (lockAspectRatio) {
      var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;
      var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;
      var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;
      var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;
      var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);
      var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);
      var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);
      var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);
      newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);
      newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);
    } else {
      newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);
      newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);
    }
    return { newWidth, newHeight };
  };
  Resizable2.prototype.setBoundingClientRect = function() {
    if (this.props.bounds === "parent") {
      var parent_2 = this.parentNode;
      if (parent_2) {
        var parentRect = parent_2.getBoundingClientRect();
        this.parentLeft = parentRect.left;
        this.parentTop = parentRect.top;
      }
    }
    if (this.props.bounds && typeof this.props.bounds !== "string") {
      var targetRect = this.props.bounds.getBoundingClientRect();
      this.targetLeft = targetRect.left;
      this.targetTop = targetRect.top;
    }
    if (this.resizable) {
      var _a2 = this.resizable.getBoundingClientRect(), left = _a2.left, top_1 = _a2.top, right = _a2.right, bottom = _a2.bottom;
      this.resizableLeft = left;
      this.resizableRight = right;
      this.resizableTop = top_1;
      this.resizableBottom = bottom;
    }
  };
  Resizable2.prototype.onResizeStart = function(event, direction) {
    if (!this.resizable || !this.window) {
      return;
    }
    var clientX = 0;
    var clientY = 0;
    if (event.nativeEvent && isMouseEvent2(event.nativeEvent)) {
      clientX = event.nativeEvent.clientX;
      clientY = event.nativeEvent.clientY;
    } else if (event.nativeEvent && isTouchEvent2(event.nativeEvent)) {
      clientX = event.nativeEvent.touches[0].clientX;
      clientY = event.nativeEvent.touches[0].clientY;
    }
    if (this.props.onResizeStart) {
      if (this.resizable) {
        var startResize = this.props.onResizeStart(event, direction, this.resizable);
        if (startResize === false) {
          return;
        }
      }
    }
    if (this.props.size) {
      if (typeof this.props.size.height !== "undefined" && this.props.size.height !== this.state.height) {
        this.setState({ height: this.props.size.height });
      }
      if (typeof this.props.size.width !== "undefined" && this.props.size.width !== this.state.width) {
        this.setState({ width: this.props.size.width });
      }
    }
    this.ratio = typeof this.props.lockAspectRatio === "number" ? this.props.lockAspectRatio : this.size.width / this.size.height;
    var flexBasis;
    var computedStyle = this.window.getComputedStyle(this.resizable);
    if (computedStyle.flexBasis !== "auto") {
      var parent_3 = this.parentNode;
      if (parent_3) {
        var dir = this.window.getComputedStyle(parent_3).flexDirection;
        this.flexDir = dir.startsWith("row") ? "row" : "column";
        flexBasis = computedStyle.flexBasis;
      }
    }
    this.setBoundingClientRect();
    this.bindEvents();
    var state = {
      original: {
        x: clientX,
        y: clientY,
        width: this.size.width,
        height: this.size.height
      },
      isResizing: true,
      backgroundStyle: __assign3(__assign3({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || "auto" }),
      direction,
      flexBasis
    };
    this.setState(state);
  };
  Resizable2.prototype.onMouseMove = function(event) {
    var _this = this;
    if (!this.state.isResizing || !this.resizable || !this.window) {
      return;
    }
    if (this.window.TouchEvent && isTouchEvent2(event)) {
      try {
        event.preventDefault();
        event.stopPropagation();
      } catch (e4) {
      }
    }
    var _a2 = this.props, maxWidth = _a2.maxWidth, maxHeight = _a2.maxHeight, minWidth = _a2.minWidth, minHeight = _a2.minHeight;
    var clientX = isTouchEvent2(event) ? event.touches[0].clientX : event.clientX;
    var clientY = isTouchEvent2(event) ? event.touches[0].clientY : event.clientY;
    var _b2 = this.state, direction = _b2.direction, original = _b2.original, width = _b2.width, height = _b2.height;
    var parentSize = this.getParentSize();
    var max3 = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);
    maxWidth = max3.maxWidth;
    maxHeight = max3.maxHeight;
    minWidth = max3.minWidth;
    minHeight = max3.minHeight;
    var _c2 = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c2.newHeight, newWidth = _c2.newWidth;
    var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);
    if (this.props.snap && this.props.snap.x) {
      newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);
    }
    if (this.props.snap && this.props.snap.y) {
      newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);
    }
    var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });
    newWidth = newSize.newWidth;
    newHeight = newSize.newHeight;
    if (this.props.grid) {
      var newGridWidth = snap(newWidth, this.props.grid[0]);
      var newGridHeight = snap(newHeight, this.props.grid[1]);
      var gap = this.props.snapGap || 0;
      newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;
      newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;
    }
    var delta = {
      width: newWidth - original.width,
      height: newHeight - original.height
    };
    if (width && typeof width === "string") {
      if (width.endsWith("%")) {
        var percent = newWidth / parentSize.width * 100;
        newWidth = percent + "%";
      } else if (width.endsWith("vw")) {
        var vw = newWidth / this.window.innerWidth * 100;
        newWidth = vw + "vw";
      } else if (width.endsWith("vh")) {
        var vh = newWidth / this.window.innerHeight * 100;
        newWidth = vh + "vh";
      }
    }
    if (height && typeof height === "string") {
      if (height.endsWith("%")) {
        var percent = newHeight / parentSize.height * 100;
        newHeight = percent + "%";
      } else if (height.endsWith("vw")) {
        var vw = newHeight / this.window.innerWidth * 100;
        newHeight = vw + "vw";
      } else if (height.endsWith("vh")) {
        var vh = newHeight / this.window.innerHeight * 100;
        newHeight = vh + "vh";
      }
    }
    var newState = {
      width: this.createSizeForCssProperty(newWidth, "width"),
      height: this.createSizeForCssProperty(newHeight, "height")
    };
    if (this.flexDir === "row") {
      newState.flexBasis = newState.width;
    } else if (this.flexDir === "column") {
      newState.flexBasis = newState.height;
    }
    pn(function() {
      _this.setState(newState);
    });
    if (this.props.onResize) {
      this.props.onResize(event, direction, this.resizable, delta);
    }
  };
  Resizable2.prototype.onMouseUp = function(event) {
    var _a2 = this.state, isResizing = _a2.isResizing, direction = _a2.direction, original = _a2.original;
    if (!isResizing || !this.resizable) {
      return;
    }
    var delta = {
      width: this.size.width - original.width,
      height: this.size.height - original.height
    };
    if (this.props.onResizeStop) {
      this.props.onResizeStop(event, direction, this.resizable, delta);
    }
    if (this.props.size) {
      this.setState(this.props.size);
    }
    this.unbindEvents();
    this.setState({
      isResizing: false,
      backgroundStyle: __assign3(__assign3({}, this.state.backgroundStyle), { cursor: "auto" })
    });
  };
  Resizable2.prototype.updateSize = function(size) {
    this.setState({ width: size.width, height: size.height });
  };
  Resizable2.prototype.renderResizer = function() {
    var _this = this;
    var _a2 = this.props, enable = _a2.enable, handleStyles = _a2.handleStyles, handleClasses = _a2.handleClasses, handleWrapperStyle = _a2.handleWrapperStyle, handleWrapperClass = _a2.handleWrapperClass, handleComponent = _a2.handleComponent;
    if (!enable) {
      return null;
    }
    var resizers = Object.keys(enable).map(function(dir) {
      if (enable[dir] !== false) {
        return y(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null);
      }
      return null;
    });
    return y("div", { className: handleWrapperClass, style: handleWrapperStyle }, resizers);
  };
  Resizable2.prototype.render = function() {
    var _this = this;
    var extendsProps = Object.keys(this.props).reduce(function(acc, key2) {
      if (definedProps.indexOf(key2) !== -1) {
        return acc;
      }
      acc[key2] = _this.props[key2];
      return acc;
    }, {});
    var style = __assign3(__assign3(__assign3({ position: "relative", userSelect: this.state.isResizing ? "none" : "auto" }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: "border-box", flexShrink: 0 });
    if (this.state.flexBasis) {
      style.flexBasis = this.state.flexBasis;
    }
    var Wrapper = this.props.as || "div";
    return y(
      Wrapper,
      __assign3({ ref: this.ref, style, className: this.props.className }, extendsProps),
      this.state.isResizing && y("div", { style: this.state.backgroundStyle }),
      this.props.children,
      this.renderResizer()
    );
  };
  Resizable2.defaultProps = {
    as: "div",
    onResizeStart: function() {
    },
    onResize: function() {
    },
    onResizeStop: function() {
    },
    enable: {
      top: true,
      right: true,
      bottom: true,
      left: true,
      topRight: true,
      bottomRight: true,
      bottomLeft: true,
      topLeft: true
    },
    style: {},
    grid: [1, 1],
    lockAspectRatio: false,
    lockAspectRatioExtraWidth: 0,
    lockAspectRatioExtraHeight: 0,
    scale: 1,
    resizeRatio: 1,
    snapGap: 0
  };
  return Resizable2;
}(w3);

// src/core/utils/contexts/inlineTable.ts
var createInlineTable = async (superstate, path) => {
  const schemas = await superstate.spaceManager.tablesForSpace(path);
  if (schemas)
    return uniqueNameFromString(
      "Table",
      schemas.map((f4) => f4.id)
    );
  return "Table";
};

// src/core/react/components/UI/Menus/frames/newFrameMenu.tsx
var showNewFrameMenu = (e4, superstate, space, addNode) => {
  const offset2 = e4.target.getBoundingClientRect();
  const kits = superstate.settings.quickFrames.flatMap((s5) => {
    var _a2, _b2;
    const frameSchemas = (_b2 = (_a2 = superstate.framesIndex.get(s5)) == null ? void 0 : _a2.schemas) != null ? _b2 : [];
    return frameSchemas.map((f4) => mdbSchemaToFrameSchema(f4)).map((f4) => ({
      id: `${s5}#*${f4.id}`,
      def: f4.def,
      node: {
        ...schemaToFrame(f4),
        ref: `${s5}#*${f4.id}`
      }
    }));
  });
  const presets = [
    {
      name: i18n_default.commands.newNote,
      value: { type: "preset", value: "note" },
      section: "default",
      icon: "ui//mk-make-flow"
    },
    {
      name: i18n_default.commands.table,
      value: { type: "preset", value: "table" },
      section: "default",
      icon: "ui//mk-make-table"
    }
  ];
  const defaultElements = [
    flowNode,
    spaceNode,
    textNode,
    imageNode,
    dividerNode,
    iconNode
  ];
  const defaultFrames = [
    buttonNode,
    linkNode,
    cardNode,
    progressNode
  ];
  const options = [
    ...presets,
    ...defaultElements.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "element", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    }),
    ...defaultFrames.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "default", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    }),
    ...kits.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "kit", value: f4.node },
        section: "kit",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    })
  ];
  const insertNode = async (item) => {
    if (item.type == "preset") {
      if (item.value == "note") {
        const _space = superstate.spacesIndex.get(space.path);
        if (_space) {
          const newPath = await newPathInSpace(
            superstate,
            _space,
            "md",
            null,
            true
          );
          addNode({
            ...flowNode.node,
            props: { value: `'${newPath}'` }
          });
        }
      } else if (item.value == "table") {
        const table = await createInlineTable(superstate, space.path);
        addNode({
          ...spaceNode.node,
          props: { value: `'${space.path}/#^${table}'` }
        });
      } else if (item.value == "link") {
      }
    } else if (item.type == "default") {
      addNode({
        ...item.value.node,
        type: "frame",
        ref: "spaces://$kit/#*" + item.value.node.id
      });
    } else if (item.type == "element") {
      addNode({
        ...item.value.node
      });
    }
  };
  superstate.ui.openMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      ui: superstate.ui,
      multi: false,
      editable: false,
      value: [],
      options,
      saveOptions: (_11, value) => insertNode(value[0]),
      searchable: true,
      showAll: true
    }
  );
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/FrameHoverMenu.tsx
var FrameHoverMenu = (props2) => {
  var _a2, _b2;
  const { spaceInfo } = q2(SpaceContext);
  const { addNode, selectNodes, selectedNodes } = q2(FramesEditorContext);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-hover-menu-container"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-hover-menu"
  }, props2.dragRef && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small mk-hover-button",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-handle")
    },
    ref: props2.dragRef,
    onClick: (e4) => {
      e4.stopPropagation();
      if (selectedNodes.length == 1 && selectedNodes[0].id == props2.node.id) {
        selectNodes([]);
        return;
      }
      if (e4.shiftKey) {
        selectNodes(
          [...selectedNodes, props2.node].sort(
            (a5, b4) => a5.rank - b4.rank
          )
        );
      } else {
        selectNodes([props2.node]);
      }
    },
    ...(_a2 = props2.listeners) != null ? _a2 : {},
    ...(_b2 = props2.attributes) != null ? _b2 : {}
  }), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => showNewFrameMenu(
      e4,
      props2.superstate,
      spaceInfo,
      (newNode) => addNode(newNode, props2.node)
    ),
    className: "mk-icon-small mk-hover-button",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-plus")
    }
  }))));
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/HoverMultiMenu.tsx
var HoverMultiMenu = (props2) => {
  const { selectedNodes, groupNodes, selectNodes, saveNodes } = q2(FramesEditorContext);
  const showSelectNodeMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = selectedNodes.map((f4) => ({
      name: f4.name,
      value: f4.id
    }));
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options,
        saveOptions: (_11, value) => {
          selectNodes(selectedNodes.filter((f4) => f4.id == value[0]));
        },
        placeholder: i18n_default.labels.linkItemSelectPlaceholder,
        detail: true,
        searchable: false,
        showAll: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-props-editor menu",
    onClick: (e4) => e4.stopPropagation()
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => showSelectNodeMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//copy-check")
    }
  }), i18n_default.labels.itemsSelected.replace(
    "${1}",
    selectedNodes.length.toString()
  )), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Create Vertical Section",
    className: "mk-mark",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-rows")
    },
    onClick: () => groupNodes(selectedNodes, {
      layoutAlign: `'left'`,
      gap: `'8px'`
    })
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Create Horizontal Section",
    className: "mk-mark",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//columns")
    },
    onClick: () => groupNodes(selectedNodes, { layout: `'row'`, gap: `'8px'` })
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Delete",
    onClick: () => saveNodes([], selectedNodes),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//trash")
    }
  }));
};

// src/core/react/components/SpaceView/Frames/Setters/StepSetter.tsx
var import_lodash8 = __toESM(require_lodash());
function countDecimals(value) {
  if (Math.floor(value) === value)
    return 0;
  const valueAsString = value.toString();
  return valueAsString.split(".")[1].length || valueAsString.split(",")[1].length || 0;
}
function InputDrag({
  style: _style = {},
  modifiers: _modifiers = {},
  onChange,
  onInput,
  ...props2
}) {
  const [value, setValue] = h2(props2.value);
  const [modifier, setModifier] = h2("");
  const startValue = _2(0);
  const inputRef = _2(null);
  const step = props2.step ? +props2.step : 1;
  const modifiers = F2(
    () => ({
      shiftKey: 0.1,
      ..._modifiers
    }),
    [_modifiers]
  );
  const [, setStartPos] = h2([0, 0]);
  const style = { cursor: "ew-resize", ..._style };
  const handleChange = (e4) => {
    const newValue = e4.target.value;
    if (isNaN(+newValue)) {
      return;
    }
    setValue(+newValue);
    onChange == null ? void 0 : onChange(+newValue, inputRef.current);
  };
  const handleDragEnd = (0, import_lodash8.debounce)((newValue) => {
    onChange == null ? void 0 : onChange(newValue, inputRef.current);
  }, 200);
  const handleInput = T2(
    (newValue) => {
      requestAnimationFrame(() => {
        onInput == null ? void 0 : onInput(newValue, inputRef.current);
      });
      handleDragEnd(newValue);
    },
    [handleDragEnd, onInput]
  );
  const handleMove = T2(
    (e4) => {
      setStartPos((pos) => {
        const { clientX: x22, clientY: y22 } = e4;
        const [x1, y1] = pos;
        const a5 = x1 - x22;
        const b4 = y1 - y22;
        let mod = 1;
        if (modifier) {
          mod = modifiers[modifier] || 1;
        }
        const stepModifer = step * mod;
        const decimals = countDecimals(stepModifer);
        let delta = Math.sqrt(a5 * a5 + b4 * b4) * stepModifer;
        if (x22 < x1)
          delta = -delta;
        let newValue = startValue.current + delta;
        if (props2.min)
          newValue = Math.max(newValue, +props2.min);
        if (props2.max)
          newValue = Math.min(newValue, +props2.max);
        newValue = +newValue.toFixed(decimals);
        setValue(newValue);
        handleInput(newValue);
        return pos;
      });
    },
    [modifier, props2.max, props2.min, step, handleInput, modifiers]
  );
  const handleMoveEnd = T2(() => {
    document.removeEventListener("mousemove", handleMove);
    document.removeEventListener("mouseup", handleMoveEnd);
  }, [handleMove]);
  const handleDown = T2(
    (e4) => {
      let _startValue = +value;
      if (isNaN(_startValue)) {
        _startValue = +(props2.defaultValue || props2.min || 0);
      }
      startValue.current = _startValue;
      setStartPos([e4.clientX, e4.clientY]);
      document.addEventListener("mousemove", handleMove);
      document.addEventListener("mouseup", handleMoveEnd);
    },
    [handleMove, handleMoveEnd, value, props2.min, props2.defaultValue]
  );
  const handleKeyDown = (e4) => {
    if (e4.metaKey) {
      setModifier("metaKey");
    } else if (e4.ctrlKey) {
      setModifier("ctrlKey");
    } else if (e4.altKey) {
      setModifier("altKey");
    } else if (e4.shiftKey) {
      setModifier("shiftKey");
    }
  };
  const handleKeyUp = () => {
    setModifier("");
  };
  p2(() => {
    if (props2.value !== value && typeof props2.value === "number")
      setValue(props2.value);
  }, [props2.value]);
  p2(() => {
    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("keyup", handleKeyUp);
    return () => {
      document.removeEventListener("mousemove", handleMove);
      document.removeEventListener("mouseup", handleMoveEnd);
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement("input", {
    placeholder: "auto",
    type: "number",
    ...props2,
    value,
    style,
    onMouseDown: handleDown,
    onChange: handleChange,
    ref: inputRef
  });
}
var StepSetter = (props2) => {
  const match2 = props2.value && stringIsConst(props2.value) ? removeQuotes(props2.value).match(/^(\d+(?:\.\d+)?)\s?([a-zA-Z%]+)$/) : null;
  const numericValue = match2 ? parseInt(match2[1]) : null;
  const unit = match2 && match2[2] ? match2[2] : props2.units[0];
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-setter-step"
  }, /* @__PURE__ */ Cn.createElement("span", null, props2.name), /* @__PURE__ */ Cn.createElement(InputDrag, {
    value: numericValue,
    onChange: (value) => props2.setValue(`'${value.toString() + unit}'`)
  }, props2.name), /* @__PURE__ */ Cn.createElement("span", null, unit));
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/Submenus/LayoutSubmenu.tsx
var LayoutSubmenu = (props2) => {
  var _a2;
  const { selectedNode, saveStyleValue } = props2;
  const showLayoutMenu = (e4) => {
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.commands.rows,
      icon: "lucide//layout",
      onClick: () => {
        saveStyleValue("layout", `'row'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.columns,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("layout", `'column'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.masonry,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("layout", `'masonry'`);
      }
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const setLayoutAlign = (e4, value) => {
    e4.stopPropagation();
    e4.preventDefault();
    saveStyleValue("layoutAlign", `'${value}'`);
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      props2.exitMenu();
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => showLayoutMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//case-sensitive")
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      saveStyleValue(
        "flexWrap",
        `${removeQuotes(selectedNode.styles.flexWrap) == "wrap" ? "" : `"wrap"`}`
      );
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//wrap-text")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setLayoutAlign(e4, "left"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-left")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setLayoutAlign(e4, "center"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-center")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setLayoutAlign(e4, "right"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-right")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Gap",
    value: (_a2 = selectedNode.styles) == null ? void 0 : _a2["gap"],
    setValue: (value) => saveStyleValue("gap", value),
    units: ["px"]
  }));
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/Submenus/SizeSubmenu.tsx
var SizeSubmenu = (props2) => {
  var _a2, _b2;
  const { selectedNode, saveStyleValue } = props2;
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      props2.exitMenu();
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Width",
    value: (_a2 = selectedNode.styles) == null ? void 0 : _a2["width"],
    setValue: (value) => saveStyleValue("width", value),
    units: ["px", "%", "em"]
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Height",
    value: (_b2 = selectedNode.styles) == null ? void 0 : _b2["height"],
    setValue: (value) => saveStyleValue("height", value),
    units: ["px", "%", "em"]
  }));
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/Submenus/SpacingSubmenu.tsx
var SpacingSubmenu = (props2) => {
  var _a2, _b2;
  const { selectedNode, saveStyleValue } = props2;
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      props2.exitMenu();
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Margin",
    value: (_a2 = selectedNode.styles) == null ? void 0 : _a2["margin"],
    setValue: (value) => saveStyleValue("margin", value),
    units: ["px", "em"]
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Padding",
    value: (_b2 = selectedNode.styles) == null ? void 0 : _b2["padding"],
    setValue: (value) => saveStyleValue("padding", value),
    units: ["px", "em"]
  }));
};

// src/core/utils/fonts.ts
function listFonts() {
  const { fonts } = document;
  const it = fonts.entries();
  const arr = [];
  let done = false;
  while (!done) {
    const font = it.next();
    if (!font.done) {
      arr.push(font.value[0].family);
    } else {
      done = font.done;
    }
  }
  return Array.from(new Set(arr));
}

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/Submenus/TextSubmenu.tsx
var TextSubmenu = (props2) => {
  var _a2, _b2, _c2;
  const { selectedNode, saveStyleValue } = props2;
  const showTypographyMenu = (e4) => {
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.commands.h1,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h1'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.h2,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h2'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.h3,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h3'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.h4,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h4'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.h5,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h5'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.h6,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-h6'`);
      }
    });
    menuOptions.push({
      name: i18n_default.commands.paragraph,
      icon: "lucide//type",
      onClick: () => {
        saveStyleValue("class", `'mk-t-p'`);
      }
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const showFontMenu = (e4) => {
    var _a3, _b3;
    const options = listFonts().map((f4) => ({ name: f4, value: f4 }));
    props2.superstate.ui.openMenu(
      e4.target.getBoundingClientRect(),
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        searchable: true,
        saveOptions: (_11, v3) => {
          saveStyleValue("--font-text", `'${v3[0]}'`);
        },
        value: [(_b3 = (_a3 = selectedNode.styles) == null ? void 0 : _a3["--font-text"]) != null ? _b3 : ""],
        options
      }
    );
  };
  const setAlign = (e4, value) => {
    e4.stopPropagation();
    e4.preventDefault();
    saveStyleValue("textAlign", `'${value}'`);
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      props2.exitMenu();
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => showTypographyMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//case-sensitive")
    }
  }), "Type"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => showFontMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//type")
    }
  }), "Font"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Line Count",
    value: (_a2 = selectedNode.styles) == null ? void 0 : _a2["--line-count"],
    setValue: (value) => saveStyleValue("--line-count", value),
    units: [""]
  }), /* @__PURE__ */ Cn.createElement(StepSetter, {
    superstate: props2.superstate,
    name: "Size",
    value: (_b2 = selectedNode.styles) == null ? void 0 : _b2["--font-text-size"],
    setValue: (value) => saveStyleValue("--font-text-size", value),
    units: ["px", "em"]
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setAlign(e4, "left"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-left")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setAlign(e4, "center"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-center")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => setAlign(e4, "right"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//align-right")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-color",
    style: { background: removeQuotes((_c2 = selectedNode.styles) == null ? void 0 : _c2["color"]) }
  }));
};

// src/core/react/components/SpaceView/Frames/FrameHoverMenu/HoverPropsMenu.tsx
var HoverPropsMenu = (props2) => {
  const { deleteFrame, duplicateFrame } = props2;
  const { ungroupNode, nodes, saveNodes, moveUp, moveDown } = q2(FramesEditorContext);
  const saveNodeValue = (values, node) => {
    const newNodes = {
      ...node,
      props: {
        ...node.props,
        ...values
      }
    };
    saveNodes([newNodes]);
  };
  const saveStyleValue = (prop, value) => {
    const newNodes = {
      ...selectedNode,
      styles: {
        ...selectedNode.styles,
        ...{ [prop]: value }
      }
    };
    saveNodes([newNodes]);
  };
  const [editMode, setEditMode] = h2(0 /* EditModeDefault */);
  const [frameProps, setFrameProps] = h2(props2.node.props);
  const [selectedNode, setSelectedNode] = h2(props2.node);
  const fields = F2(() => {
    return Object.keys(selectedNode.types).map((f4) => {
      var _a2, _b2;
      return {
        type: selectedNode.types[f4],
        name: f4,
        attrs: (_a2 = selectedNode.propsAttrs) == null ? void 0 : _a2[f4],
        schemaId: selectedNode.schemaId,
        value: (_b2 = selectedNode.propsValue) == null ? void 0 : _b2[f4]
      };
    });
  }, [selectedNode]);
  const showSelectNodeMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = nodes.filter((f4) => f4.parentId == selectedNode.id).map((f4) => ({
      name: f4.name,
      value: f4.id
    }));
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options,
        saveOptions: (_11, value) => {
          setSelectedNode(nodes.find((f4) => f4.id == value[0]));
        },
        placeholder: i18n_default.labels.linkItemSelectPlaceholder,
        detail: true,
        searchable: false,
        showAll: true
      }
    );
  };
  p2(() => {
    if (props2.node.type == "group") {
      if (selectedNode.parentId == props2.node.id)
        return;
    }
    setSelectedNode(props2.node);
  }, [props2.node]);
  p2(() => {
    setFrameProps(selectedNode.props);
  }, [selectedNode]);
  const savePropValue = (prop, value) => {
    setFrameProps((p3) => ({ ...p3, [prop]: value }));
    saveNodeValue({ [prop]: value }, selectedNode);
  };
  const showPropsMenu = (e4, field) => {
    e4.stopPropagation();
    e4.preventDefault();
    const menuOptions = [];
    props2.schemaProps.forEach((f4) => {
      menuOptions.push({
        name: f4.name,
        icon: "lucide//type",
        onClick: () => {
          savePropValue(field.name, `${f4.schemaId}.props['${f4.name}']`);
        }
      });
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const showValueMenu = (e4, field) => {
    var _a2, _b2;
    e4.stopPropagation();
    e4.preventDefault();
    const currentValue = removeQuotes(frameProps[field.name]);
    switch (field.type) {
      case "space":
        {
          showSpacesMenu(
            e4,
            props2.superstate,
            (link) => savePropValue(
              field.name,
              wrapQuotes(link + "#^" + defaultContextSchemaID)
            )
          );
        }
        break;
      case "option":
        {
          const parsedValue = parseFieldValue(field.value, field.type);
          const options = (_a2 = parsedValue.options) != null ? _a2 : [];
          props2.superstate.ui.openMenu(
            e4.target.getBoundingClientRect(),
            {
              ui: props2.superstate.ui,
              multi: false,
              editable: false,
              searchable: true,
              saveOptions: (_11, v3) => {
                savePropValue(field.name, `'${v3[0]}'`);
              },
              value: [currentValue != null ? currentValue : ""],
              options
            }
          );
        }
        break;
      case "link":
        {
          showLinkMenu(
            e4,
            props2.superstate,
            (link) => savePropValue(field.name, wrapQuotes(link))
          );
        }
        break;
      case "icon":
        {
          props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
            ui: props2.superstate.ui,
            hide: _props.hide,
            selectedSticker: (emoji) => savePropValue(field.name, wrapQuotes(emoji))
          }));
        }
        break;
      case "image":
        {
          props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(ImageModal_default, {
            superstate: props2.superstate,
            hide: _props.hide,
            selectedPath: (image) => savePropValue(field.name, wrapQuotes(image))
          }));
        }
        break;
      case "text":
      case "number":
        {
          const menuOptions = [];
          menuOptions.push(
            menuInput(
              currentValue,
              (value) => savePropValue(field.name, wrapQuotes(value))
            )
          );
          const offset2 = e4.target.getBoundingClientRect();
          props2.superstate.ui.openMenu(
            { x: offset2.left, y: offset2.top + 30 },
            defaultMenu(props2.superstate.ui, menuOptions)
          );
        }
        break;
      case "date": {
        const offset2 = e4.target.getBoundingClientRect();
        const date = new Date(currentValue);
        showDatePickerMenu(
          props2.superstate.ui,
          { x: offset2.left, y: offset2.top + 30 },
          date.getTime() ? date : null,
          (date2) => savePropValue(field.name, date2.valueOf().toString())
        );
        break;
      }
      case "super":
        {
          const parsedValue = parseFieldValue(field.value, field.type);
          const superPropertyName = parsedValue.dynamic ? removeQuotes(frameProps[(_b2 = parsedValue.field) != null ? _b2 : ""]) : parsedValue.field;
          if (superPropertyName) {
            const property = props2.superstate.superProperties.get(superPropertyName);
            const superProperty = property ? {
              ...property,
              name: field.name,
              value: JSON.stringify(
                props2.superstate.valueForSuperproperty(
                  superPropertyName,
                  property
                )
              )
            } : null;
            if (superProperty)
              showValueMenu(e4, superProperty);
          }
          break;
        }
        break;
    }
  };
  const showImageSizeMenu = (e4, type) => {
    const prop = type == "icon" ? "iconSize" : "imageSize";
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.labels.styleSmall,
      icon: "type",
      onClick: () => {
        saveStyleValue(prop, `'s'`);
      }
    });
    menuOptions.push({
      name: i18n_default.labels.styleMedium,
      icon: "type",
      onClick: () => {
        saveStyleValue(prop, `'m'`);
      }
    });
    menuOptions.push({
      name: i18n_default.labels.styleLarge,
      icon: "type",
      onClick: () => {
        saveStyleValue(prop, `'l'`);
      }
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const submenuProps = {
    superstate: props2.superstate,
    exitMenu: () => setEditMode(0),
    saveStyleValue,
    selectedNode
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-props-editor menu",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
    }
  }, editMode == 0 /* EditModeDefault */ ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fields.map((f4, i4) => {
    var _a2, _b2;
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-mark",
      key: i4,
      onClick: (e4) => showValueMenu(e4, f4)
    }, /* @__PURE__ */ Cn.createElement("div", {
      "aria-label": (_b2 = (_a2 = safelyParseJSON(f4.attrs)) == null ? void 0 : _a2.name) != null ? _b2 : f4.name,
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(stickerForField(f4))
      }
    }), !stringIsConst(frameProps == null ? void 0 : frameProps[f4.name]) ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-mark-prop"
    }, nameForField(
      propFieldFromString(
        frameProps == null ? void 0 : frameProps[f4.name],
        props2.schemaProps
      )
    )) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), f4.type == "icon" && /* @__PURE__ */ Cn.createElement("div", {
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker(
          removeQuotes(frameProps == null ? void 0 : frameProps[f4.name])
        )
      }
    }), (f4.type == "text" || f4.type == "number") && stringIsConst(frameProps == null ? void 0 : frameProps[f4.name]) && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-menu-input"
    }, /* @__PURE__ */ Cn.createElement("input", {
      value: removeQuotes(frameProps == null ? void 0 : frameProps[f4.name]),
      onClick: (e4) => e4.stopPropagation(),
      onKeyDown: (e4) => {
        if (e4.key == "Enter")
          e4.target.blur();
      },
      onBlur: (e4) => {
        savePropValue(f4.name, wrapQuotes(e4.target.value));
      }
    }))), selectedNode.type == "flow" && /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-mark",
      onClick: (e4) => {
        e4.preventDefault();
        e4.stopPropagation();
        props2.triggerMenu && props2.triggerMenu(e4);
      },
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-options")
      }
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-mark-option",
      key: i4,
      onClick: (e4) => showPropsMenu(e4, f4)
    }, /* @__PURE__ */ Cn.createElement("div", {
      "aria-label": "Select Property",
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-props")
      }
    })), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-divider"
    }));
  }), selectedNode.type == "space" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Toggle Filter Bar",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      savePropValue(
        "minMode",
        `${selectedNode.props.minMode == "true" ? "false" : "true"}`
      );
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//minimize-2")
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), selectedNode.type == "text" || selectedNode.type == "flow" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Text Style",
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      setEditMode(1 /* EditModeText */);
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//type")
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), selectedNode.type == "content" || selectedNode.type == "group" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Layers",
    onClick: (e4) => showSelectNodeMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//layers")
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      setEditMode(2 /* EditModeLayout */);
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//layout")
    }
  }))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      setEditMode(4 /* EditModeSpacing */);
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//fullscreen")
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Resize",
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      setEditMode(3 /* EditModeSize */);
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//scaling")
    }
  })), selectedNode.type == "image" || selectedNode.type == "icon" ? /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Image Size",
    className: "mk-mark",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      showImageSizeMenu(e4, selectedNode.type);
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//type")
    }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Page Width",
    onClick: (e4) => {
      e4.preventDefault();
      e4.stopPropagation();
      saveStyleValue(
        "maxWidth",
        `${removeQuotes(selectedNode.styles.maxWidth) == `100%` ? "" : `"100%"`}`
      );
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-full-width")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Move Up",
    onClick: () => moveUp(selectedNode),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//arrow-up")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Move Down",
    onClick: () => moveDown(selectedNode),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//arrow-down")
    }
  }), selectedNode.type == "group" || selectedNode.type == "container" ? /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": "Ungroup",
    className: "mk-mark",
    onClick: () => ungroupNode(selectedNode),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//copy-x")
    }
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Duplicate",
    onClick: () => duplicateFrame(),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//copy")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    "aria-label": "Delete",
    onClick: () => deleteFrame(),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//trash")
    }
  })) : editMode == 1 /* EditModeText */ ? /* @__PURE__ */ Cn.createElement(TextSubmenu, {
    ...submenuProps
  }) : editMode == 2 /* EditModeLayout */ ? /* @__PURE__ */ Cn.createElement(LayoutSubmenu, {
    ...submenuProps
  }) : editMode == 3 /* EditModeSize */ ? /* @__PURE__ */ Cn.createElement(SizeSubmenu, {
    ...submenuProps
  }) : editMode == 4 /* EditModeSpacing */ ? /* @__PURE__ */ Cn.createElement(SpacingSubmenu, {
    ...submenuProps
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/core/react/components/SpaceView/Frames/Placeholders/ColumnPlaceholder.tsx
var FrameEditorDropZone = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const { setNodeRef } = useDroppable({
    id: props2.id,
    data: {
      id: props2.id,
      type: "item",
      parent: props2.parentId,
      frame: frameSchema.id
    }
  });
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-drop-placeholder`,
    style: { width: props2.width, height: props2.height }
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `${props2.insertRow ? "mk-indicator-bottom" : ""}`,
    style: { width: props2.width, height: props2.height },
    ref: props2.mode != 3 /* DropModeColumnOnly */ && props2.dropRef
  }), props2.mode != 2 /* DropModeRowOnly */ && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-column-placeholder ${props2.columnInsert && "mk-indicator-right"}`,
    style: { height: props2.height },
    ref: setNodeRef
  }));
};

// src/core/react/components/SpaceView/Frames/Placeholders/RowPlaceholder.tsx
var RowPlaceholder = (props2) => {
  const { hoverNode, root, deleteNode, nodes } = q2(FramesEditorContext);
  const { setNodeRef } = useDroppable({
    id: props2.id,
    data: {
      id: props2.id,
      type: "item",
      parent: props2.parentId
    }
  });
  const presets = [
    {
      name: "New Note",
      value: { type: "preset", value: "note" },
      section: "default",
      icon: "ui//mk-make-flow"
    },
    {
      name: "Table",
      value: { type: "preset", value: "table" },
      section: "default",
      icon: "ui//mk-make-table"
    }
  ];
  const defaultElements = [
    flowNode,
    spaceNode,
    textNode,
    imageNode,
    iconNode
  ];
  const defaultFrames = [
    buttonNode,
    linkNode,
    cardNode,
    progressNode
  ];
  const [queryStr, setQueryStr] = h2("");
  const allOptions = [
    ...presets,
    ...defaultElements.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "element", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    }),
    ...defaultFrames.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "default", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    })
  ];
  const { spaceInfo } = q2(SpaceContext);
  const { addNode, selectNodes, selectedNodes } = q2(FramesEditorContext);
  const options = F2(() => {
    return queryStr.length == 0 ? allOptions : allOptions.filter((f4) => matchAny(queryStr).test(f4.name));
  }, [queryStr]);
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Backspace" && e4.target.textContent.length == 0) {
      if (props2.id)
        deleteNode(nodes.find((f4) => f4.id == props2.id));
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-f"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-row-placeholder ${hoverNode == props2.id && "mk-indicator-bottom"}`,
    ref: setNodeRef
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => showNewFrameMenu(e4, props2.superstate, spaceInfo, addNode)
  })), /* @__PURE__ */ Cn.createElement(FrameHoverMenu, {
    superstate: props2.superstate,
    node: root.node,
    listeners: null,
    dragRef: null
  }));
};

// src/core/react/components/SpaceView/Frames/EditorNodes/IconNodeView.tsx
var IconNodeView = (props2) => {
  var _a2, _b2, _c2;
  const { saveNodes } = q2(FramesEditorContext);
  const selectIcon = () => {
    props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
      ui: props2.superstate.ui,
      hide: _props.hide,
      selectedSticker: (emoji) => saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(emoji) }
        }
      ])
    }));
  };
  return props2.instance.state[props2.treeNode.id] && (((_b2 = (_a2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a2.value) == null ? void 0 : _b2.length) > 0 ? /* @__PURE__ */ Cn.createElement(Sticker, {
    sticker: (_c2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _c2.value,
    ui: props2.superstate.ui
  }) : props2.editable ? /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => selectIcon(),
    className: "mk-frame-placeholder"
  }, i18n_default.labels.selectIcon) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/core/react/components/SpaceView/Frames/EditorNodes/ImageNodeView.tsx
var ImageNodeView = (props2) => {
  var _a2, _b2;
  const value = props2.instance.state[props2.treeNode.id].props.value;
  const sourcePath = F2(() => {
    return props2.superstate.ui.getUIPath(value);
  }, [value]);
  return props2.instance.state[props2.treeNode.id] && /* @__PURE__ */ Cn.createElement("img", {
    className: "mk-image-node",
    style: {
      width: (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles.width,
      height: (_b2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _b2.styles.height
    },
    src: sourcePath
  });
};

// src/core/react/components/SpaceView/Editor/EmbedView/EmbedContextViewComponent.tsx
var EmbedFrameView = (props2) => {
  var _a2, _b2, _c2;
  const getPathState = (path) => {
    if (!path || path == "/")
      return null;
    const cache = props2.superstate.pathsIndex.get(path);
    return cache;
  };
  const [pathState, setFileCache] = h2(
    getPathState(props2.source)
  );
  const refreshFile = () => {
    return;
  };
  const cacheChanged = (payload) => {
    if (payload.path == props2.source) {
      refreshFile();
    }
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      cacheChanged
    );
    refreshFile();
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        cacheChanged
      );
    };
  }, [props2.source]);
  const mdbFrame = (_a2 = props2.superstate.framesIndex.get(props2.path.path)) == null ? void 0 : _a2.frames[props2.path.ref];
  const root = mdbFrame ? buildRootFromMDBFrame(props2.superstate, mdbFrame) : null;
  return root && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.path.fullPath, /* @__PURE__ */ Cn.createElement(FrameRootView, {
    root,
    superstate: props2.superstate,
    props: (_c2 = (_b2 = props2.path.query) != null ? _b2 : pathState == null ? void 0 : pathState.properties) != null ? _c2 : {},
    contexts: {},
    source: props2.source
  }));
};
var EmbedContextView = (props2) => {
  var _a2;
  const context = (_a2 = props2.superstate.spacesIndex.get(props2.path)) == null ? void 0 : _a2.space;
  return context && /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    superstate: props2.superstate,
    space: context
  }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
    superstate: props2.superstate,
    schema: props2.schema
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate,
    schema: props2.viewSchema
  }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
    superstate: props2.superstate
  }, /* @__PURE__ */ Cn.createElement(ContextListView, {
    superstate: props2.superstate,
    minMode: props2.minMode
  })))));
};
var EmbedViewComponent = (props2) => {
  const path = F2(
    () => props2.superstate.spaceManager.uriByString(props2.path),
    [props2.path]
  );
  const [embedType, setEmbedType] = h2(null);
  p2(() => {
    var _a2;
    if (path.refType == "context") {
      setEmbedType({
        type: "context",
        path: path.basePath,
        contextSchema: path.ref
      });
    } else if (path.refType == "frame") {
      let schema = (_a2 = props2.superstate.framesIndex.get(path.basePath)) == null ? void 0 : _a2.schemas.find((f4) => f4.id == path.ref);
      if (!schema && path.ref == defaultFrameListViewSchema.id) {
        schema = frameSchemaToMDBSchema(defaultFrameListViewSchema);
        setEmbedType({
          type: "context",
          path: path.basePath,
          frameSchema: schema.id
        });
      }
      if ((schema == null ? void 0 : schema.type) == "view") {
        setEmbedType({
          type: "context",
          path: path.basePath,
          frameSchema: path.ref
        });
      } else {
        setEmbedType({
          type: "frame",
          path: path.basePath,
          contextSchema: path.ref
        });
      }
    } else {
      setEmbedType(null);
    }
  }, [path]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, (embedType == null ? void 0 : embedType.path) && ((embedType == null ? void 0 : embedType.type) == "context" ? /* @__PURE__ */ Cn.createElement(EmbedContextView, {
    superstate: props2.superstate,
    path: embedType.path,
    schema: embedType.contextSchema,
    viewSchema: embedType.frameSchema,
    minMode: props2.minMode
  }) : (embedType == null ? void 0 : embedType.type) == "frame" ? /* @__PURE__ */ Cn.createElement(EmbedFrameView, {
    superstate: props2.superstate,
    path,
    source: props2.source
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)));
};

// src/core/react/components/SpaceView/Frames/EditorNodes/SpaceNodeView.tsx
var SpaceNodeView = (props2) => {
  var _a2, _b2, _c2, _d2;
  const fullPath = (_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.props) == null ? void 0 : _b2.value;
  const { saveNodes } = q2(FramesEditorContext);
  const selectLink = (e4) => {
    showSpacesMenu(
      e4,
      props2.superstate,
      (link) => saveNodes([
        {
          ...props2.treeNode.node,
          props: {
            ...props2.treeNode.node.props,
            value: wrapQuotes(link + "#^" + defaultContextSchemaID)
          }
        }
      ])
    );
  };
  return props2.instance.state[props2.treeNode.id] && fullPath ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(EmbedViewComponent, {
    superstate: props2.superstate,
    path: fullPath,
    minMode: (_d2 = (_c2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _c2.props) == null ? void 0 : _d2.minMode
  })) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-placeholder",
    onClick: (e4) => selectLink(e4)
  }, i18n_default.labels.selectSpace);
};

// src/core/react/components/SpaceView/Frames/EditorNodes/TextNodeView.tsx
var TextNodeView = (props2) => {
  var _a2, _b2;
  const fileNameRef = _2(null);
  const { saveNodes } = q2(FramesEditorContext);
  const onBlur = (e4) => {
    var _a3;
    const newValue = e4.target.innerHTML;
    if (newValue != ((_a3 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a3.value)) {
      saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(newValue) }
        }
      ]);
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      e4.preventDefault();
    }
  };
  return props2.instance.state[props2.treeNode.id] && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-text`,
    placeholder: props2.editable && i18n_default.labels.textPlaceholder,
    dangerouslySetInnerHTML: {
      __html: (_a2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a2.value
    },
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    ref: fileNameRef,
    contentEditable: props2.editable,
    style: {
      ...(_b2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _b2.styles
    }
  });
};

// src/core/react/components/SpaceView/Frames/EditorNodes/FrameNodeView.tsx
var defaultFrameStyles = {
  position: "relative"
};
var FrameEditorNodeView = (props2) => {
  var _a2, _b2;
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(Resizable, {
    className: (0, import_classnames2.default)(
      props2.column ? "mk-frame-column" : "mk-frame-bounds"
    ),
    enable: props2.column ? { right: true } : {
      top: true,
      right: true,
      bottom: true,
      left: true,
      topRight: true,
      bottomRight: true,
      bottomLeft: true,
      topLeft: true
    },
    onResizeStop: (e4, direction, ref2, d5) => {
      props2.resize({
        width: ref2.clientWidth,
        height: props2.column ? "" : ref2.clientHeight
      });
    },
    onResizeStart: (e4) => {
      e4.stopPropagation();
    },
    size: {
      width: (_a2 = props2.size.width) != null ? _a2 : "100%",
      height: (_b2 = props2.size.height) != null ? _b2 : "100%"
    },
    ...props2.listeners
  }));
};
var FrameNodeView = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l, _m, _n2, _o, _p, _q;
  const {
    selectedNodes,
    saveState,
    hoverNode,
    saveNodes,
    addNode,
    deleteNode,
    dragNode
  } = q2(FramesEditorContext);
  const { frameSchema } = q2(FramesMDBContext);
  const {
    attributes,
    listeners,
    setNodeRef: setDraggableNodeRef,
    transform
  } = useDraggable({
    id: frameSchema.id + props2.treeNode.id,
    data: {
      id: props2.treeNode.id,
      type: "item",
      parent: props2.treeNode.node.parentId,
      frame: frameSchema.id
    },
    disabled: props2.treeNode.editorProps.dragMode == 0
  });
  const { setNodeRef } = useDroppable({
    id: frameSchema.id + props2.treeNode.id,
    data: {
      id: props2.treeNode.id,
      type: "item",
      parent: props2.treeNode.node.parentId,
      frame: frameSchema.id
    },
    disabled: props2.treeNode.editorProps.dropMode == 0
  });
  const menuRef = _2(null);
  const ref2 = _2(null);
  const isSelected = selectedNodes.some((f4) => props2.treeNode.id == f4.id);
  const innerComponents = props2.treeNode.node.type == "text" ? /* @__PURE__ */ Cn.createElement(TextNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: props2.editMode > 0 && !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "icon" ? /* @__PURE__ */ Cn.createElement(IconNodeView, {
    superstate: props2.superstate,
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "image" ? /* @__PURE__ */ Cn.createElement(ImageNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: !props2.treeNode.isRef,
    superstate: props2.superstate
  }) : props2.treeNode.node.type == "space" ? /* @__PURE__ */ Cn.createElement(SpaceNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    superstate: props2.superstate,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "flow" ? /* @__PURE__ */ Cn.createElement(FlowNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    superstate: props2.superstate,
    editable: !props2.treeNode.isRef,
    menuRef
  }) : props2.treeNode.node.type == "content" ? /* @__PURE__ */ Cn.createElement(ContentNodeView, {
    editable: !props2.treeNode.isRef
  }, props2.children) : (props2.treeNode.node.type == "column" || props2.treeNode.node.type == "container") && props2.treeNode.children.length == 0 ? /* @__PURE__ */ Cn.createElement(RowPlaceholder, {
    superstate: props2.superstate,
    id: props2.treeNode.id,
    parentId: props2.treeNode.node.parentId
  }) : props2.treeNode.children.map((c4, i4) => /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: props2.editMode,
    superstate: props2.superstate,
    key: i4,
    treeNode: c4,
    instance: props2.instance
  }, props2.children));
  const parseAs = (role) => role == "checkbox" || role == "text" || role == "range" || role == "number" ? "input" : role;
  const tag = (_c2 = parseAs((_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles) == null ? void 0 : _b2.as)) != null ? _c2 : "div";
  const type = tag == "input" ? (_e2 = (_d2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _d2.styles) == null ? void 0 : _e2.as : null;
  const onResize = (size) => {
    saveNodes([
      {
        ...props2.treeNode.node,
        styles: { ...props2.treeNode.node.styles, ...size }
      }
    ]);
  };
  const selectNode = (nodes) => {
    const evt = new CustomEvent(eventTypes.frameLayerSelected, {
      detail: { selection: nodes.map((f4) => f4.id) }
    });
    window.dispatchEvent(evt);
  };
  const onClick = (e4) => {
    var _a3, _b3;
    if (isSelected)
      return;
    if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onClick) == "function") {
      (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onClick(
        e4,
        props2.instance.state,
        (s5) => saveState(s5, props2.instance),
        props2.superstate.api
      );
      e4.stopPropagation();
    } else if (props2.editMode > 1) {
      if (e4.shiftKey) {
        selectNode([
          ...selectedNodes.filter((f4) => f4.id != props2.treeNode.node.id),
          props2.treeNode.node
        ]);
      } else {
        selectNode([props2.treeNode.node]);
      }
      e4.stopPropagation();
    }
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Backspace" || e4.key == "Delete") {
      deleteNode(props2.treeNode.node);
    }
  };
  const canResize = isSelected && props2.treeNode.editorProps.resizeMode == 1 || props2.treeNode.editorProps.resizeMode == 2;
  const dropMode = props2.treeNode.editorProps.dropMode;
  const inner = tag == "input" ? /* @__PURE__ */ Cn.createElement("input", {
    "data-path": props2.treeNode.id,
    type,
    onChange: (e4) => {
      var _a3, _b3;
      if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onChange) == "function") {
        (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onChange(
          e4.target.value,
          props2.instance.state,
          (s5) => saveState(s5, props2.instance),
          props2.superstate.api
        );
      }
    },
    style: {
      "--translate-x": `${(_f = transform == null ? void 0 : transform.x) != null ? _f : 0}px`,
      "--translate-y": `${(_g = transform == null ? void 0 : transform.y) != null ? _g : 0}px`,
      ...(_h = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _h.styles
    }
  }) : Cn.createElement(
    tag,
    {
      type,
      ref: (el) => {
        ref2.current = el;
      },
      className: `mk-frame-edit ${parseStylesToClass(
        (_i = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _i.styles
      )}`,
      "data-path": props2.treeNode.id,
      "data-type": props2.treeNode.node.type,
      onClick,
      style: {
        ...defaultFrameStyles,
        ...(_j = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _j.styles,
        "--translate-x": `${(_k = transform == null ? void 0 : transform.x) != null ? _k : 0}px`,
        "--translate-y": `${(_l = transform == null ? void 0 : transform.y) != null ? _l : 0}px`,
        ...props2.editMode == -1 && props2.treeNode.node.parentId == props2.instance.root.id ? { left: 0, top: 0 } : {}
      }
    },
    [
      ...[
        dragNode && props2.editMode > 0 && dropMode > 0 /* DropModeNone */ && /* @__PURE__ */ Cn.createElement(FrameEditorDropZone, {
          parentId: props2.treeNode.node.parentId,
          key: `|${props2.treeNode.node.id}`,
          insertRow: hoverNode == props2.treeNode.id,
          columnInsert: hoverNode == `|${props2.treeNode.node.id}`,
          superstate: props2.superstate,
          height: `100%`,
          width: `${dropMode != 3 /* DropModeColumnOnly */ ? (_m = ref2.current) == null ? void 0 : _m.parentElement.clientWidth : (_n2 = ref2.current) == null ? void 0 : _n2.clientWidth}px`,
          id: `|${props2.treeNode.node.id}`,
          mode: dropMode,
          dropRef: setNodeRef
        })
      ],
      ...props2.editMode > 0 && canResize ? [
        /* @__PURE__ */ Cn.createElement(FrameEditorNodeView, {
          key: props2.treeNode.id,
          size: (_o = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _o.styles,
          column: props2.treeNode.node.type == "column",
          resize: onResize
        })
      ] : [],
      ...props2.editMode > 0 && props2.treeNode.editorProps.dragMode == 2 && !isSelected ? [
        /* @__PURE__ */ Cn.createElement("div", {
          key: props2.treeNode.id,
          tabIndex: -1,
          className: (0, import_classnames2.default)(
            "mk-frame-bounds",
            dragNode == props2.treeNode.id ? "is-selected" : ""
          ),
          onKeyDown,
          ...listeners
        })
      ] : [],
      innerComponents
    ]
  );
  return props2.instance.state[props2.treeNode.id] && (props2.editMode != 0 && props2.treeNode.editorProps.dragMode == 1 ? /* @__PURE__ */ Cn.createElement(SelectableFrameNode, {
    node: props2.treeNode.id,
    maxWidth: (_q = (_p = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _p.styles) == null ? void 0 : _q.maxWidth,
    selected: selectedNodes.some((f4) => props2.treeNode.id == f4.id),
    ...props2.superstate.ui.getScreenType() == "mobile" ? {
      dragRef: setDraggableNodeRef,
      listeners,
      attributes
    } : {}
  }, selectedNodes.length == 1 && selectedNodes[0].id == props2.treeNode.id ? /* @__PURE__ */ Cn.createElement(HoverPropsMenu, {
    superstate: props2.superstate,
    node: props2.treeNode.node,
    triggerMenu: (e4) => {
      var _a3;
      return (_a3 = menuRef == null ? void 0 : menuRef.current) == null ? void 0 : _a3.triggerMenu(e4);
    },
    duplicateFrame: () => {
      addNode(props2.treeNode.node, props2.treeNode.node);
    },
    deleteFrame: () => deleteNode(props2.treeNode.node),
    fields: propertiesForNode(props2.treeNode.node),
    schemaProps: Object.keys(props2.instance.root.node.props).map(
      (f4) => ({
        name: f4,
        schemaId: props2.instance.root.id,
        type: props2.instance.root.node.types[f4],
        value: props2.instance.root.node.propsValue[f4]
      })
    )
  }) : selectedNodes.length > 1 && selectedNodes[0].id == props2.treeNode.id && /* @__PURE__ */ Cn.createElement(HoverMultiMenu, {
    superstate: props2.superstate
  }), inner, props2.superstate.ui.getScreenType() != "mobile" && /* @__PURE__ */ Cn.createElement(FrameHoverMenu, {
    superstate: props2.superstate,
    node: props2.treeNode.node,
    dragRef: setDraggableNodeRef,
    attributes,
    listeners
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, inner));
};
var SelectableFrameNode = (props2) => {
  var _a2, _b2;
  const ref2 = _2(null);
  const { selectableNodeBounds, selectNodes } = q2(FramesEditorContext);
  const resetSize = () => {
    if (ref2.current) {
      const { left, top, width, height } = ref2.current.getBoundingClientRect();
      selectableNodeBounds.current[props2.node] = {
        left,
        top,
        width,
        height
      };
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-f ${props2.selected ? "is-selected" : ""}`,
    onClick: () => !props2.selected && selectNodes([]),
    ...(_a2 = props2.listeners) != null ? _a2 : {},
    ...(_b2 = props2.attributes) != null ? _b2 : {},
    style: {
      ...props2.maxWidth ? { maxWidth: props2.maxWidth } : {}
    }
  }, props2.children);
};

// src/core/react/components/SpaceView/Frames/ViewNodes/FrameView.tsx
var FrameView = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g;
  const innerComponents = props2.treeNode.node.type == "text" ? /* @__PURE__ */ Cn.createElement(TextNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "icon" ? /* @__PURE__ */ Cn.createElement(IconNodeView, {
    superstate: props2.superstate,
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "image" ? /* @__PURE__ */ Cn.createElement(ImageNodeView, {
    superstate: props2.superstate,
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "space" ? /* @__PURE__ */ Cn.createElement(SpaceNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    superstate: props2.superstate,
    editable: false
  }) : props2.treeNode.node.type == "content" ? /* @__PURE__ */ Cn.createElement(ContentNodeView, null, props2.children) : props2.treeNode.node.type == "flow" ? /* @__PURE__ */ Cn.createElement(FlowNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    superstate: props2.superstate,
    source: props2.source,
    editable: false
  }) : props2.treeNode.children.map((c4, i4) => /* @__PURE__ */ Cn.createElement(FrameView, {
    superstate: props2.superstate,
    key: i4,
    treeNode: c4,
    instance: props2.instance,
    saveState: props2.saveState,
    source: props2.source
  }, props2.children));
  const parseAs = (role) => role == "checkbox" || role == "text" || role == "range" || role == "number" ? "input" : role;
  const tag = (_c2 = parseAs((_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles) == null ? void 0 : _b2.as)) != null ? _c2 : "div";
  const type = tag == "input" ? (_e2 = (_d2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _d2.styles) == null ? void 0 : _e2.as : null;
  return props2.instance.state[props2.treeNode.id] && Cn.createElement(
    tag,
    {
      className: `mk-frame ${parseStylesToClass(
        (_f = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _f.styles
      )}`,
      type,
      onClick: (e4) => {
        var _a3, _b3;
        if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onClick) == "function") {
          (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onClick(
            e4,
            props2.instance.state,
            (s5) => props2.saveState(s5, props2.instance),
            props2.superstate.api
          );
          e4.stopPropagation();
        }
      },
      style: {
        ...defaultFrameStyles,
        ...(_g = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _g.styles
      }
    },
    [innerComponents]
  );
};

// src/core/react/components/SpaceView/Frames/ViewNodes/FrameRoot.tsx
var FrameRootView = (props2) => {
  const [instance, setInstance] = h2({
    state: {},
    id: null,
    root: null
  });
  const activeRunID = _2(null);
  const runRoot = () => {
    if (props2.root) {
      const root = import_lodash9.default.cloneDeep(props2.root);
      const runID = (0, import_lodash9.uniqueId)();
      activeRunID.current = runID;
      executeTreeNode(
        applyPropsToRoot(root, props2.props),
        {},
        props2.superstate.api,
        saveState,
        root,
        runID
      ).then((s5) => {
        setInstance((p3) => s5);
        activeRunID.current = s5.id;
      });
    }
  };
  p2(() => {
    runRoot();
  }, [props2.root]);
  p2(() => runRoot(), []);
  const saveState = (state, instance2) => {
    const { root, state: prevState, id: runID } = instance2;
    if (runID != activeRunID.current)
      return;
    executeTreeNode(
      applyPropsToRoot(root, props2.props),
      prevState,
      props2.superstate.api,
      saveState,
      root,
      runID,
      state
    ).then(
      (s5) => setInstance((p3) => ({
        ...s5,
        root: replaceSubtree(p3.root, s5.root)
      }))
    );
  };
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  return instance.root && /* @__PURE__ */ Cn.createElement(FrameView, {
    superstate: props2.superstate,
    treeNode: instance.root,
    instance,
    saveState,
    source: props2.source
  }, props2.children);
};

// src/core/react/components/SpaceView/Contexts/CardsView/CardFrame.tsx
var CardFrame = (props2) => {
  const newProps = props2.value;
  return /* @__PURE__ */ Cn.createElement(FrameRootView, {
    root: props2.root,
    superstate: props2.superstate,
    props: newProps,
    contexts: {}
  }, props2.children);
};
CardFrame.displayName = "CardFrame";

// src/core/react/components/SpaceView/Contexts/CardsView/CardView.tsx
var import_classnames3 = __toESM(require_classnames());

// src/core/react/components/SpaceView/Contexts/DataTypeView/PreviewCell.tsx
var PreviewCell = (props2) => {
  var _a2;
  const [vaultItem, setVaultItem] = h2(null);
  const previewImage = F2(() => {
    var _a3, _b2;
    if ((_b2 = (_a3 = vaultItem == null ? void 0 : vaultItem.metadata) == null ? void 0 : _a3.property) == null ? void 0 : _b2[props2.superstate.settings.fmKeyBanner])
      return vaultItem.metadata.property[props2.superstate.settings.fmKeyBanner];
    if (props2.initialValue)
      return props2.initialValue;
    if (!props2.row || !props2.columns)
      return null;
    const imageCol = props2.columns.find((f4) => f4.type == "image");
    if (!imageCol)
      return null;
    return props2.row[imageCol.name + imageCol.table];
  }, [props2.row, props2.columns, vaultItem]);
  const loadIcon = (payload) => {
    if (payload.path == props2.path)
      setVaultItem(props2.superstate.pathsIndex.get(props2.path));
  };
  p2(() => {
    loadIcon({ path: props2.path });
    props2.superstate.eventsDispatcher.addListener("pathStateUpdated", loadIcon);
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        loadIcon
      );
    };
  }, [props2.path]);
  return previewImage ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-preview",
    style: {
      backgroundSize: "cover",
      backgroundPositionY: "50%",
      backgroundImage: `url(${props2.superstate.ui.getUIPath(previewImage)})`
    }
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-preview",
    style: ((_a2 = vaultItem == null ? void 0 : vaultItem.label.color) == null ? void 0 : _a2.length) > 0 ? {
      "--label-color": `${vaultItem.label.color}`,
      "--icon-color": `#ffffff`
    } : {
      "--label-color": `var(--background-secondary-alt)`,
      "--icon-color": `var(--text-muted)`
    }
  }, vaultItem && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(vaultItem.label.sticker)
    }
  }));
};

// src/core/react/components/SpaceView/Contexts/CardsView/CardView.tsx
var CardView = Cn.memo(
  Cn.forwardRef(
    ({
      color,
      dragOverlay,
      dragging,
      disabled,
      fadeIn,
      handle,
      height,
      index,
      listeners,
      selected,
      onSelect,
      onRemove,
      renderItem,
      superstate,
      id: id2,
      sorting,
      style,
      transition,
      transform,
      value,
      cols,
      wrapperStyle,
      ...props2
    }, ref2) => {
      const onClickHandler = (e4) => {
        if (!onSelect) {
          return;
        }
        if (e4.detail === 1) {
          onSelect(
            {
              metaKey: e4.metaKey,
              ctrlKey: e4.ctrlKey,
              altKey: e4.altKey,
              shiftKey: e4.shiftKey
            },
            value["_index"]
          );
        } else if (e4.detail === 2) {
          onSelect(
            {
              doubleClick: true,
              metaKey: e4.metaKey,
              ctrlKey: e4.ctrlKey,
              altKey: e4.altKey
            },
            value["_index"]
          );
        }
      };
      const { updateValue: updateValue2, updateFieldValue, contextTable, predicate } = q2(ContextEditorContext);
      p2(() => {
        if (!dragOverlay) {
          return;
        }
        document.body.style.cursor = "grabbing";
        return () => {
          document.body.style.cursor = "";
        };
      }, [dragOverlay]);
      const [openFlow, setOpenFlow] = h2(false);
      return renderItem ? renderItem({
        dragOverlay: Boolean(dragOverlay),
        dragging: Boolean(dragging),
        sorting: Boolean(sorting),
        index,
        fadeIn: Boolean(fadeIn),
        listeners,
        ref: ref2,
        style,
        transform,
        transition,
        value,
        predicate
      }) : /* @__PURE__ */ Cn.createElement("li", {
        className: (0, import_classnames3.default)(
          "mk-list-item",
          fadeIn && "fadeIn",
          sorting && "sorting",
          dragOverlay && "dragOverlay",
          selected && "mk-is-active"
        ),
        onClick: onClickHandler,
        style: {
          ...wrapperStyle,
          transition,
          "--translate-x": transform ? `${Math.round(transform.x)}px` : void 0,
          "--translate-y": transform ? `${Math.round(transform.y)}px` : void 0,
          "--scale-x": (transform == null ? void 0 : transform.scaleX) ? `${transform.scaleX}` : void 0,
          "--scale-y": (transform == null ? void 0 : transform.scaleY) ? `${transform.scaleY}` : void 0,
          "--index": index,
          "--color": color
        },
        ref: ref2
      }, value && /* @__PURE__ */ Cn.createElement(PreviewCell, {
        row: value,
        columns: cols,
        superstate,
        initialValue: "",
        saveValue: () => {
        },
        path: value[PathPropertyName]
      }), /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-list-content"
      }, /* @__PURE__ */ Cn.createElement("div", {
        className: (0, import_classnames3.default)(
          "mk-list-fields",
          dragging && "dragging",
          handle && "withHandle",
          dragOverlay && "dragOverlay",
          disabled && "disabled",
          color && "color"
        ),
        style,
        "data-cypress": "draggable-item",
        ...listeners,
        ...props2,
        tabIndex: !handle ? 0 : void 0
      }, value && cols.map((f4) => {
        var _a2;
        return ((_a2 = value[f4.name + f4.table]) == null ? void 0 : _a2.length) > 0 ? /* @__PURE__ */ Cn.createElement(DataTypeView, {
          openFlow: () => setOpenFlow((o3) => !o3),
          superstate,
          initialValue: value[f4.name + f4.table],
          column: f4,
          row: value,
          editable: false,
          updateValue: (v3) => updateValue2(
            f4.name,
            v3,
            f4.table,
            parseInt(id2),
            value[PathPropertyName]
          ),
          updateFieldValue: (v3, fv) => updateFieldValue(
            f4.name,
            fv,
            v3,
            f4.table,
            parseInt(id2),
            value[PathPropertyName]
          ),
          contextTable
        }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
      })), /* @__PURE__ */ Cn.createElement(PathView, {
        superstate,
        path: value[PathPropertyName],
        load: openFlow
      })));
    }
  )
);

// src/core/react/components/SpaceView/Contexts/CardsView/CardsView.tsx
var animateLayoutChanges = (args) => args.isSorting || args.wasDragging ? defaultAnimateLayoutChanges(args) : true;
function DroppableContainer({
  children,
  columns = 1,
  disabled,
  id: id2,
  items,
  style,
  ...props2
}) {
  var _a2;
  const {
    active,
    attributes,
    isDragging,
    listeners,
    over,
    setNodeRef,
    transition,
    transform
  } = useSortable({
    id: id2,
    data: {
      type: "container"
    },
    animateLayoutChanges
  });
  const isOverContainer = over ? id2 === over.id && ((_a2 = active == null ? void 0 : active.data.current) == null ? void 0 : _a2.type) !== "container" || items.includes(over.id) : false;
  return /* @__PURE__ */ Cn.createElement(CardColumnView_default, {
    id: id2,
    ref: disabled ? void 0 : setNodeRef,
    style: {
      ...style,
      transition,
      transform: CSS.Translate.toString(transform),
      opacity: isDragging ? 0.5 : void 0
    },
    hover: isOverContainer,
    handleProps: {
      ...attributes,
      ...listeners
    },
    columns,
    ...props2
  }, children);
}
var PLACEHOLDER_ID = "placeholder";
var CardsView = ({
  adjustScale: adjustScale2 = false,
  itemCount = 3,
  cancelDrop,
  columns,
  handle = false,
  items: initialItems,
  containerStyle,
  getItemStyles = () => ({}),
  wrapperStyle = () => ({}),
  minimal = false,
  modifiers,
  strategy = verticalListSortingStrategy,
  vertical = false,
  scrollable,
  superstate
}) => {
  var _a2, _b2;
  const { tableData } = q2(ContextMDBContext);
  const {
    filteredData,
    selectedRows,
    schema,
    selectRows,
    sortedColumns: cols,
    predicate,
    updateValue: updateValue2,
    contextTable
  } = q2(ContextEditorContext);
  const getFrameListItemsByPath = (ref2) => {
    const path = superstate.spaceManager.uriByString(ref2);
    const context = superstate.framesIndex.get(path.basePath);
    return context == null ? void 0 : context.listitems[path.ref];
  };
  const frame = F2(() => {
    return (predicate == null ? void 0 : predicate.frame) ? getFrameListItemsByPath(predicate.frame) : null;
  }, [predicate]);
  const frameRoot = F2(() => {
    if (frame) {
      return buildRootFromMDBFrame(superstate, frame);
    }
    return null;
  }, [frame]);
  const renderItem = F2(() => {
    const frame2 = (predicate == null ? void 0 : predicate.frame) ? getFrameListItemsByPath(predicate.frame) : null;
    if (!frame2)
      return null;
    const frameRoot2 = buildRootFromMDBFrame(superstate, frame2);
    if (!frameRoot2)
      return null;
    const frameComponent = (props2) => /* @__PURE__ */ Cn.createElement(CardFrame, {
      superstate,
      root: frameRoot2,
      value: props2.value
    });
    return frameComponent;
  }, [predicate]);
  const renderGroup = F2(() => {
    const frame2 = (predicate == null ? void 0 : predicate.frameGroup) ? getFrameListItemsByPath(predicate.frameGroup) : null;
    if (!frame2)
      return null;
    const frameRoot2 = buildRootFromMDBFrame(superstate, frame2);
    if (!frameRoot2)
      return null;
    const groupFrameComponent = (props2) => /* @__PURE__ */ Cn.createElement(CardFrame, {
      superstate,
      root: frameRoot2,
      value: props2.value
    }, props2.children);
    return groupFrameComponent;
  }, [predicate]);
  const groupBy2 = ((_a2 = predicate.groupBy) == null ? void 0 : _a2.length) > 0 ? cols.find((f4) => f4.name + f4.table == predicate.groupBy[0]) : null;
  const displayCols = (_b2 = cols == null ? void 0 : cols.filter(
    (f4) => !(f4.name == (groupBy2 == null ? void 0 : groupBy2.name) && f4.table == groupBy2.table)
  )) != null ? _b2 : [];
  const viewType = predicate.view;
  const items = F2(() => {
    var _a3, _b3, _c2;
    if (groupBy2) {
      const options = uniq([
        "",
        ...((_b3 = (_a3 = parseFieldValue(groupBy2.value, groupBy2.type)) == null ? void 0 : _a3.options) != null ? _b3 : []).map(
          (f4) => f4.value
        ),
        ...filteredData.reduce(
          (p3, c4) => {
            var _a4;
            return [...p3, (_a4 = c4[groupBy2.name + groupBy2.table]) != null ? _a4 : ""];
          },
          []
        )
      ]);
      return options.reduce((p3, c4) => {
        const newItems = filteredData.filter((r3) => r3[groupBy2.name + groupBy2.table] == c4).map((r3) => r3._index);
        return newItems.length > 0 ? {
          ...p3,
          [c4]: newItems
        } : p3;
      }, {});
    }
    return {
      "": (_c2 = filteredData == null ? void 0 : filteredData.map((r3) => r3._index)) != null ? _c2 : []
    };
  }, [filteredData, predicate]);
  const containers = F2(
    () => Object.keys(items).filter((f4) => items[f4].length > 0).map((f4, i4) => "-" + i4.toString()),
    [items]
  );
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const recentlyMovedToNewContainer = _2(false);
  const isSortingContainer = activeId ? containers.includes(activeId) : false;
  const [lastSelectedIndex, setLastSelectedIndex] = h2(null);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const findContainer = (id2) => {
    if (id2.charAt(0) == "-") {
      return id2;
    }
    return "-" + Object.keys(items).findIndex((key2) => items[key2].includes(id2)).toString();
  };
  const getIndex = (id2) => {
    const container = findContainer(id2);
    if (!container) {
      return -1;
    }
    const index = items[Object.keys(items)[parseInt(container) * -1]].indexOf(id2);
    return index;
  };
  const resetState = () => {
    setActiveId(null);
    setOverId(null);
  };
  const onDragCancel = () => {
    resetState();
  };
  p2(() => {
    requestAnimationFrame(() => {
      recentlyMovedToNewContainer.current = false;
    });
  }, [items]);
  const selectItem = (modifier, index) => {
    if (superstate.ui.getScreenType() == "mobile") {
      superstate.ui.openPath(
        tableData.rows[parseInt(index)][PathPropertyName],
        false
      );
      return;
    }
    if (modifier.doubleClick) {
      superstate.ui.openPath(
        tableData.rows[parseInt(index)][PathPropertyName],
        modifier.ctrlKey || modifier.metaKey ? modifier.altKey ? "split" : "tab" : false
      );
      return;
    } else if (modifier.shiftKey) {
      selectedRows.some((f4) => f4 == index) ? selectRows(
        null,
        selectedRows.filter((f4) => f4 != index)
      ) : selectRows(index, uniq([...selectedRows, index]));
    } else if (modifier.metaKey) {
      selectRows(
        index,
        uniq([
          ...selectedRows,
          ...selectRange(
            lastSelectedIndex,
            index,
            filteredData.map((f4) => f4._index)
          )
        ])
      );
    } else {
      selectRows(index, [index]);
    }
    setLastSelectedIndex(index);
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Escape") {
      selectRows(null, []);
      setLastSelectedIndex(null);
    }
    if (e4.key == "Enter") {
      superstate.ui.openPath(
        tableData.rows[parseInt(lastSelectedIndex)][PathPropertyName],
        false
      );
      return;
    }
    if (e4.key == "ArrowDown") {
      const newIndex = selectNextIndex(
        lastSelectedIndex,
        filteredData.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    }
    if (e4.key == "ArrowUp") {
      const newIndex = selectPrevIndex(
        lastSelectedIndex,
        filteredData.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    }
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    },
    onDragStart: ({ active }) => {
      setActiveId(active.id);
    },
    onDragOver: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (overId2)
        setOverId(overId2);
    },
    onDragEnd: ({ active, over }) => {
      if (active.id in items && (over == null ? void 0 : over.id)) {
        return;
      }
      const activeContainer = findContainer(active.id);
      if (!activeContainer) {
        resetState();
        return;
      }
      const overId2 = over == null ? void 0 : over.id;
      if (!overId2) {
        resetState();
        return;
      }
      if (overId2 === PLACEHOLDER_ID) {
        return;
      }
      const overContainer = findContainer(overId2);
      if (overContainer) {
        const activeIndex = items[Object.keys(items)[parseInt(activeContainer) * -1]].indexOf(active.id);
        const overIndex = items[Object.keys(items)[parseInt(overContainer) * -1]].indexOf(overId2);
        if (activeContainer != overContainer) {
          updateValue2(
            groupBy2.name,
            Object.keys(items)[parseInt(overContainer) * -1],
            groupBy2.table,
            groupBy2.table == "" ? parseInt(activeId) : parseInt(
              filteredData.find((f4) => f4._index == activeId)["_index" + groupBy2.table]
            ),
            ""
          );
        }
      }
      resetState();
    },
    cancelDrop,
    onDragCancel,
    modifiers
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames4.default)(
      viewType == "card" ? "mk-cards-container" : "mk-list-container",
      viewType == "card" && containers.length == 1 && "mk-cards-grid"
    ),
    onKeyDown
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-list-view"
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items: [...containers, PLACEHOLDER_ID],
    strategy: vertical ? verticalListSortingStrategy : horizontalListSortingStrategy
  }, containers.map((containerId) => /* @__PURE__ */ Cn.createElement(DroppableContainer, {
    key: containerId,
    id: containerId,
    superstate,
    label: minimal ? void 0 : `${Object.keys(items)[parseInt(containerId) * -1]}`,
    field: groupBy2,
    columns,
    items: items[Object.keys(items)[parseInt(containerId) * -1]],
    scrollable,
    style: containerStyle,
    unstyled: minimal,
    renderItem: renderGroup
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items: items[Object.keys(items)[parseInt(containerId) * -1]],
    strategy
  }, items[Object.keys(items)[parseInt(containerId) * -1]].map(
    (value, index) => {
      return /* @__PURE__ */ Cn.createElement(SortableItem, {
        disabled: isSortingContainer,
        key: value,
        id: value,
        superstate,
        value: filteredData.find((f4) => f4._index == value),
        cols: displayCols,
        index,
        handle,
        style: getItemStyles,
        wrapperStyle,
        renderItem,
        onSelect: selectItem,
        selected: selectedRows == null ? void 0 : selectedRows.some((f4) => f4 == value),
        containerId,
        getIndex
      });
    }
  ))))))), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      adjustScale: adjustScale2
    }, activeId ? containers.includes(activeId) ? renderContainerDragOverlay(activeId) : renderSortableItemDragOverlay(activeId) : null),
    document.body
  ));
  function renderSortableItemDragOverlay(id2) {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: viewType == "card" ? "mk-cards-container" : "mk-list-container"
    }, /* @__PURE__ */ Cn.createElement(CardView, {
      superstate,
      value: filteredData.find((f4) => f4._index == id2),
      handle,
      id: id2,
      cols: displayCols,
      style: getItemStyles({
        containerId: findContainer(id2),
        overIndex: -1,
        index: getIndex(id2),
        value: id2,
        isSorting: true,
        isDragging: true,
        isDragOverlay: true
      }),
      color: getColor(id2),
      wrapperStyle: wrapperStyle({ index: 0 }),
      renderItem,
      dragOverlay: true
    }));
  }
  function renderContainerDragOverlay(containerId) {
    return /* @__PURE__ */ Cn.createElement(CardColumnView_default, {
      id: containerId,
      superstate,
      label: `Column ${containerId}`,
      field: groupBy2,
      columns,
      style: {
        height: "100%"
      },
      shadow: true,
      unstyled: false
    }, items[Object.keys(items)[parseInt(containerId) * -1]].map(
      (item, index) => /* @__PURE__ */ Cn.createElement(CardView, {
        key: item,
        id: item,
        superstate,
        value: filteredData.find((f4) => f4._index == item),
        cols: displayCols,
        handle,
        style: getItemStyles({
          containerId,
          overIndex: -1,
          index: getIndex(item),
          value: item,
          isDragging: false,
          isSorting: false,
          isDragOverlay: false
        }),
        color: getColor(item),
        selected: selectedRows.some((f4) => f4 == item),
        onSelect: selectItem,
        wrapperStyle: wrapperStyle({ index }),
        renderItem
      })
    ));
  }
  function getNextContainerId() {
    const containeIds = Object.keys(items);
    const lastContaineId = containeIds[containeIds.length - 1];
    return String.fromCharCode(lastContaineId.charCodeAt(0) + 1);
  }
};
function getColor(id2) {
  switch (id2[0]) {
    case "A":
      return "#7193f1";
    case "B":
      return "#ffda6c";
    case "C":
      return "#00bcd4";
    case "D":
      return "#ef769f";
  }
  return void 0;
}
function SortableItem({
  disabled,
  id: id2,
  superstate,
  index,
  handle,
  renderItem,
  style,
  containerId,
  onSelect,
  selected,
  getIndex,
  cols,
  value,
  wrapperStyle
}) {
  const {
    setNodeRef,
    listeners,
    isDragging,
    isSorting,
    over,
    overIndex,
    transform,
    transition
  } = useSortable({
    id: id2
  });
  const mounted = useMountStatus();
  const mountedWhileDragging = isDragging && !mounted;
  return /* @__PURE__ */ Cn.createElement(CardView, {
    ref: disabled ? void 0 : setNodeRef,
    value,
    superstate,
    id: id2,
    cols,
    dragging: isDragging,
    sorting: isSorting,
    handle,
    index,
    wrapperStyle: wrapperStyle({ index }),
    style: style({
      index,
      value: id2,
      isDragging,
      isSorting,
      overIndex: over ? getIndex(over.id) : overIndex,
      containerId
    }),
    onSelect,
    selected,
    color: getColor(id2),
    transition,
    transform,
    fadeIn: mountedWhileDragging,
    listeners,
    renderItem
  });
}
function useMountStatus() {
  const [isMounted, setIsMounted] = h2(false);
  p2(() => {
    const timeout = setTimeout(() => setIsMounted(true), 500);
    return () => clearTimeout(timeout);
  }, []);
  return isMounted;
}

// src/core/react/components/SpaceView/Contexts/ContextBuilder/ContextFrameView.tsx
var PLACEHOLDER_ID2 = "_placeholder";
var ContextFrameView = (props2) => {
  const [selectedType, setSelectedType] = h2(
    "frame"
  );
  const { predicate, savePredicate, cols, data: data2, setEditMode } = q2(ContextEditorContext);
  const { frameSchemas, saveSchema } = q2(FramesMDBContext);
  const { spaceInfo } = q2(SpaceContext);
  const selectedGroup = F2(
    () => predicate && predicate["frameGroup"] ? props2.superstate.spaceManager.uriByString(predicate["frameGroup"]).ref : null,
    [predicate]
  );
  const selectedFrame = F2(
    () => predicate && predicate["frame"] ? props2.superstate.spaceManager.uriByString(predicate["frame"]).ref : null,
    [predicate]
  );
  const selectFrame = (frameRef, type) => {
    savePredicate({ ...predicate, view: "frame", [type]: frameRef });
  };
  const setFrameProps = (frameProps) => {
    savePredicate({ ...predicate, frameProps });
  };
  const newSchema = async (schema, type) => {
    selectFrame(`${spaceInfo.path}/#*${schema.id}`, type);
    await saveSchema(schema);
    return schema;
  };
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const selectFrameMenu = (e4, frame) => {
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: true,
        value: [],
        options: frameSchemas.filter((f4) => f4.type == "listitem").map((f4) => ({ name: f4.name, value: f4.id })),
        saveOptions: (_11, value, isNew) => {
          if (!frameSchemas.some((f4) => f4.id == value[0])) {
            newSchema(
              { name: value[0], type: "listitem", id: value[0] },
              frame
            ).then(
              (f4) => addNodeToMFrame(
                props2.superstate,
                spaceInfo,
                f4.id,
                contentNode.node
              )
            );
          } else {
            selectFrame(`${spaceInfo.path}/#*${value[0]}`, frame);
          }
        },
        placeholder: "Select/Create List Item Frame",
        detail: true,
        searchable: false,
        showAll: true
      }
    );
  };
  const saveViewType = (type) => {
    savePredicate({
      ...predicate,
      view: type,
      frame: ""
    });
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-view-editor"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-view-menu"
  }, /* @__PURE__ */ Cn.createElement("div", null, "Edit Mode"), /* @__PURE__ */ Cn.createElement("div", {
    className: `${selectedType == "frameGroup" ? "mk-is-active" : ""}`,
    onClick: () => setSelectedType("frameGroup")
  }, "Group"), /* @__PURE__ */ Cn.createElement("div", {
    className: `${selectedType == "frame" ? "mk-is-active" : ""}`,
    onClick: () => setSelectedType("frame")
  }, "Item"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", null, "Group"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-button",
    onClick: (e4) => selectFrameMenu(e4, "frameGroup")
  }, selectedGroup != null ? selectedGroup : "New Group View"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", null, "Item"), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-button",
    onClick: (e4) => selectFrameMenu(e4, "frame")
  }, selectedFrame != null ? selectedFrame : "New Item View"), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => setEditMode(0),
    className: "mk-button mk-cta"
  }, i18n_default.labels.done)), selectedGroup ? /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate,
    schema: selectedGroup
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    superstate: props2.superstate,
    editMode: selectedType == "frameGroup" ? 2 : 0
  }, /* @__PURE__ */ Cn.createElement(FrameListView, {
    superstate: props2.superstate,
    cols: ["name", "value"],
    editMode: selectedType == "frameGroup" ? 2 : 0
  }, selectedFrame ? data2.map((f4, i4) => /* @__PURE__ */ Cn.createElement(DndContext, {
    key: i4,
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate,
    schema: selectedFrame
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    superstate: props2.superstate,
    props: f4,
    editMode: selectedType == "frame" ? 2 : 0
  }, /* @__PURE__ */ Cn.createElement(FrameListView, {
    superstate: props2.superstate,
    cols: cols.map((f5) => f5.name + f5.table),
    editMode: selectedType == "frame" ? 2 : 0
  }))))) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-content-placeholder"
  }))))) : selectedFrame ? /* @__PURE__ */ Cn.createElement("div", null, data2.map((f4, i4) => /* @__PURE__ */ Cn.createElement(DndContext, {
    key: i4,
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate,
    schema: selectedFrame
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    superstate: props2.superstate,
    props: f4,
    editMode: 1
  }, /* @__PURE__ */ Cn.createElement(FrameListView, {
    superstate: props2.superstate,
    cols: cols.map((f5) => f5.name + f5.table),
    editMode: selectedType == "frame" ? 2 : 0
  })))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)));
};
var FrameListView = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const {
    instance,
    root,
    saveState,
    hoverNode,
    setHoverNode,
    dragNode,
    moveToRank,
    nodes,
    setDragNode,
    addNode,
    saveNodes,
    moveNodeFromSchema
  } = q2(FramesEditorContext);
  const _instance = F2(() => {
    return instance ? {
      ...instance,
      root: instance.root ? {
        ...instance.root,
        node: {
          ...instance.root.node,
          props: props2.cols.reduce(
            (p3, c4) => ({
              ...p3,
              [c4]: ""
            }),
            {}
          )
        }
      } : null
    } : null;
  }, [props2.cols, instance]);
  const activeRunID = _2(null);
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const resetState = () => {
    setHoverNode(null);
    setDragNode(null);
  };
  const getDragLayer = () => {
    var _a2;
    if (dragNode === null) {
      return null;
    }
    const node = (_a2 = findParent(instance.root, dragNode)) == null ? void 0 : _a2.children.find(
      (f4) => f4.id == dragNode
    );
    if (!node)
      return null;
    return /* @__PURE__ */ Cn.createElement(FrameNodeView, {
      editMode: props2.editMode,
      superstate: props2.superstate,
      treeNode: node,
      instance
    }, props2.children);
  };
  useDndMonitor({
    onDragStart({ active }) {
      if (active.data.current.frame == frameSchema.id)
        setDragNode(active.data.current.id);
    },
    onDragOver({ active, over }) {
      const overId = over == null ? void 0 : over.data.current.id;
      if ((over == null ? void 0 : over.data.current.frame) == frameSchema.id) {
        if (overId)
          setHoverNode(overId);
      }
    },
    onDragCancel() {
      resetState();
    },
    onDragEnd({ active, over }) {
      if (!active) {
        resetState();
        return;
      }
      let overId = hoverNode;
      let overNewColumn = false;
      if ((overId == null ? void 0 : overId.charAt(0)) == "|") {
        overId = overId.substring(1);
        overNewColumn = true;
      }
      if (overId == active.data.current.id) {
        resetState();
        return;
      }
      const overParentNode = findParent(instance.root, overId);
      const overNode = overParentNode == null ? void 0 : overParentNode.children.find(
        (f4) => f4.id == overId
      );
      const activeParentNode = findParent(
        instance.root,
        active.data.current.id
      );
      const activeNode = activeParentNode == null ? void 0 : activeParentNode.children.find(
        (f4) => f4.id == active.data.current.id
      );
      if (overNewColumn) {
        if (overNode.node.type == "column") {
          const column = {
            ...newUniqueNode(columnNode, overParentNode.id, [], frameSchema.id),
            rank: overNode.node.rank > activeNode.node.rank ? overNode.node.rank : overNode.node.rank + 1
          };
          const nodes2 = [column, { ...activeNode.node, parentId: column.id }];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes([column]).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes(nodes2);
          }
        } else {
          const newColumns = newUniqueNode(
            columnsNode,
            overParentNode.id,
            nodes,
            frameSchema.id
          );
          const column1 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns],
            frameSchema.id
          );
          const column2 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns, column1],
            frameSchema.id
          );
          const newNodes = [
            newColumns,
            column1,
            column2,
            { ...overNode.node, parentId: column1.id }
          ];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes(newNodes).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column2.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes([
              ...newNodes,
              { ...activeNode.node, parentId: column2.id }
            ]);
          }
        }
        resetState();
        return;
      }
      if (active.data.current.frame != frameSchema.id) {
        moveNodeFromSchema(
          active.data.current.id,
          active.data.current.frame,
          overNode.node.parentId,
          {
            position: `'relative'`,
            left: "0",
            top: "0"
          }
        );
        resetState();
        return;
      }
      if ((overParentNode == null ? void 0 : overParentNode.id) == (activeParentNode == null ? void 0 : activeParentNode.id)) {
        console.group("same parent", overNode);
        if (overNode)
          moveToRank(activeNode.node, overNode.node.rank);
      } else {
        if (overNode)
          saveNodes([{ ...activeNode.node, parentId: overNode.node.parentId }]);
      }
      if (!overId) {
        resetState();
        return;
      }
      if (overId === PLACEHOLDER_ID2) {
        saveNodes([{ ...activeNode.node, parentId: overNode.node.id }]);
        resetState();
        return;
      }
      resetState();
    }
  });
  return (_instance == null ? void 0 : _instance.root) && /* @__PURE__ */ Cn.createElement("div", {
    className: props2.editMode == 2 ? "mk-f-edit" : ""
  }, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: props2.editMode,
    superstate: props2.superstate,
    treeNode: _instance.root,
    instance: _instance
  }, props2.children), props2.editMode > 0 && /* @__PURE__ */ Cn.createElement(RowPlaceholder, {
    superstate: props2.superstate,
    id: PLACEHOLDER_ID2,
    parentId: frameSchema.id
  }), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, null, getDragLayer()),
    document.body
  ));
};

// src/core/types/metadata.ts
var pathProperties = {
  "name": {
    label: i18n_default.metadataTypes.fileName,
    field: "name",
    vType: "text",
    type: "fileprop"
  },
  "path": {
    label: i18n_default.metadataTypes.path,
    field: "path",
    vType: "text",
    type: "fileprop"
  },
  "parent": {
    label: i18n_default.metadataTypes.folder,
    field: "parent",
    vType: "text",
    type: "fileprop"
  },
  "sticker": {
    label: i18n_default.metadataTypes.sticker,
    field: "sticker",
    vType: "text",
    type: "fileprop"
  },
  "color": {
    label: i18n_default.metadataTypes.color,
    field: "color",
    vType: "text",
    type: "fileprop"
  },
  "ctime": {
    label: i18n_default.metadataTypes.created,
    field: "ctime",
    vType: "date",
    type: "fileprop"
  },
  "mtime": {
    label: i18n_default.metadataTypes.lastModified,
    field: "mtime",
    vType: "date",
    type: "fileprop"
  },
  "extension": {
    label: i18n_default.metadataTypes.extension,
    field: "extension",
    vType: "text",
    type: "fileprop"
  },
  "size": {
    label: i18n_default.metadataTypes.size,
    field: "size",
    vType: "number",
    type: "fileprop"
  }
};
var pathCacheMetadata = {
  "tags": {
    label: i18n_default.metadataTypes.tags,
    field: "tags",
    vType: "tags-multi",
    type: "filemeta"
  },
  "inlinks": {
    label: i18n_default.metadataTypes.inlinks,
    field: "inlinks",
    vType: "link-multi",
    type: "filemeta"
  },
  "outlinks": {
    label: i18n_default.metadataTypes.outlinks,
    field: "outlinks",
    vType: "link-multi",
    type: "filemeta"
  }
};

// src/core/utils/contexts/predicate/filterFns/filterFnLabels.ts
var filterFnLabels = {
  isEmpty: i18n_default.filterTypes.isEmpty,
  isNotEmpty: i18n_default.filterTypes.isNotEmpty,
  include: i18n_default.filterTypes.contains,
  notInclude: i18n_default.filterTypes.notContains,
  is: i18n_default.filterTypes.is,
  isNot: i18n_default.filterTypes.isNot,
  equal: "=",
  isGreatThan: ">",
  isLessThan: "<",
  isLessThanOrEqual: "\u2264",
  isGreatThanOrEqual: "\u2265",
  dateBefore: i18n_default.filterTypes.before,
  dateAfter: i18n_default.filterTypes.after,
  isSameDateAsToday: "today",
  isAnyInList: i18n_default.filterTypes.anyOf,
  isNoneInList: i18n_default.filterTypes.noneOf,
  isTrue: i18n_default.filterTypes.checked,
  isFalse: i18n_default.filterTypes.unchecked
};

// src/core/react/components/Navigator/SpaceQuery.tsx
var SpaceQuery = (props2) => {
  const { filters, setFilters } = props2;
  const selectFilterValue = (e4, filter, i4, k5) => {
    var _a2;
    const saveFilterValue = (value) => {
      setDefFilterValue(value, i4, k5);
    };
    switch ((_a2 = filterFnTypes[filter.fn]) == null ? void 0 : _a2.valueType) {
      case "text":
      case "number":
        {
          const menuOptions = [];
          menuOptions.push(menuInput(filter.value, saveFilterValue));
          const offset2 = e4.target.getBoundingClientRect();
          props2.superstate.ui.openMenu(
            { x: offset2.left, y: offset2.top + 30 },
            defaultMenu(props2.superstate.ui, menuOptions)
          );
        }
        break;
      case "date": {
        const saveValue = (date2) => {
          saveFilterValue(format(date2, "yyyy-MM-dd"));
        };
        const offset2 = e4.target.getBoundingClientRect();
        const date = new Date(filter.value);
        showDatePickerMenu(
          props2.superstate.ui,
          { x: offset2.left, y: offset2.top + 30 },
          date.getTime() ? date : null,
          saveValue
        );
        break;
      }
      case "list":
        {
          const fieldType = filter.fType;
          const saveOptions = (options2, values) => {
            saveFilterValue(serializeMultiString(values));
          };
          let options = [];
          if (fieldType.startsWith("option")) {
            options = parseMultiString(filter.value).map((f4) => ({
              name: f4,
              value: f4
            }));
          } else if (fieldType.startsWith("tags")) {
            options = props2.superstate.spaceManager.readTags().map((f4) => ({
              value: f4,
              name: f4
            }));
          } else if (fieldType.startsWith("links")) {
            options = props2.superstate.spaceManager.allPaths().map((f4) => ({
              name: pathNameToString(f4),
              value: f4,
              description: f4
            }));
          }
          const offset2 = e4.target.getBoundingClientRect();
          props2.superstate.ui.openMenu(
            { x: offset2.left, y: offset2.top + 30 },
            {
              ui: props2.superstate.ui,
              multi: true,
              editable: true,
              value: parseMultiString(filter.value),
              options,
              saveOptions,
              placeholder: i18n_default.labels.optionItemSelectPlaceholder,
              searchable: false,
              showAll: true
            }
          );
        }
        break;
    }
  };
  const addDefGroup = () => {
    setFilters((p3) => [
      ...p3,
      {
        type: "any",
        trueFalse: true,
        filters: []
      }
    ]);
  };
  const removeDefGroup = (groupIndex) => {
    setFilters(filters.filter((f4, i4) => i4 == groupIndex ? false : true));
  };
  const typeForField = (type, field) => {
    if (type == "frontmatter") {
      return "text";
    }
    if (type == "filemeta") {
      return pathCacheMetadata[field].vType;
    }
    if (type == "fileprop") {
      return pathProperties[field].vType;
    }
    return "text";
  };
  const setDefFilter = (filter, groupIndex, filterIndex) => {
    var _a2;
    let field;
    let fType;
    const filterTuple = filter.split(".");
    const type = filterTuple[0];
    if (type == "frontmatter") {
      fType = filterTuple[1];
      field = filterTuple[2];
    } else {
      field = filterTuple[1];
      fType = typeForField(type, field);
    }
    if (filters.length == 0) {
      setFilters([
        {
          type: "any",
          trueFalse: true,
          filters: [
            {
              type,
              field,
              fType,
              fn: "",
              value: ""
            }
          ]
        }
      ]);
      return;
    }
    if (((_a2 = filters[groupIndex]) == null ? void 0 : _a2.filters.length) == 0) {
      setFilters(
        filters.map(
          (f4, i4) => i4 == groupIndex ? {
            ...f4,
            filters: [
              {
                type,
                field,
                fType,
                fn: "",
                value: ""
              }
            ]
          } : f4
        )
      );
      return;
    }
    setFilters(
      filters.map(
        (f4, i4) => {
          var _a3;
          return i4 == groupIndex ? {
            ...f4,
            filters: !f4.filters || filterIndex == f4.filters.length ? [
              ...(_a3 = f4.filters) != null ? _a3 : [],
              {
                type,
                fType,
                field,
                fn: "",
                value: ""
              }
            ] : f4.filters.map(
              (g4, k5) => k5 == filterIndex ? {
                ...g4,
                type,
                fType,
                field
              } : g4
            )
          } : f4;
        }
      )
    );
  };
  const setDefFilterFn = (fn2, groupIndex, filterIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.map(
            (g4, k5) => k5 == filterIndex ? {
              ...g4,
              fn: fn2
            } : g4
          )
        } : f4
      )
    );
  };
  const setDefFilterValue = (value, groupIndex, filterIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.map(
            (g4, k5) => k5 == filterIndex ? {
              ...g4,
              value
            } : g4
          )
        } : f4
      )
    );
  };
  const removeDefFilter = (filterIndex, groupIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.filter(
            (g4, k5) => k5 == filterIndex ? false : true
          )
        } : f4
      )
    );
  };
  const setGroupType = (groupIndex, type) => {
    if (groupIndex == 0 && filters.length == 0) {
      setFilters([
        {
          type,
          trueFalse: true,
          filters: []
        }
      ]);
    } else {
      setFilters(
        filters.map(
          (f4, i4) => i4 == groupIndex ? {
            ...f4,
            type
          } : f4
        )
      );
    }
  };
  const selectGroupType = (e4, i4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const filters2 = ["any", "all"];
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: filters2.map((f4) => ({ name: f4, value: f4 })),
        saveOptions: (_11, value) => setGroupType(i4, value[0]),
        searchable: false,
        showAll: true
      }
    );
  };
  const selectFilter = (e4, i4, k5) => {
    const offset2 = e4.target.getBoundingClientRect();
    const { type, field, fType } = filters[i4].filters[k5];
    const _filters = predicateFnsForType(fType, filterFnTypes);
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: true,
        value: [],
        options: _filters.map((f4) => ({ name: filterFnLabels[f4], value: f4 })),
        saveOptions: (_11, value) => setDefFilterFn(value[0], i4, k5),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  const selectField = async (e4, i4, k5) => {
    const offset2 = e4.target.getBoundingClientRect();
    const allPaths = props2.superstate.spaceManager.allPaths();
    const properties2 = allPropertiesForPaths(props2.superstate, allPaths);
    const f4 = [
      ...Object.keys(pathCacheMetadata).map((f5) => ({
        name: pathCacheMetadata[f5].label,
        value: "filemeta." + f5
      })),
      ...Object.keys(pathProperties).map((f5) => ({
        name: pathProperties[f5].label,
        value: "fileprop." + f5
      })),
      ...properties2.map((f5) => ({
        name: f5.name,
        value: "frontmatter." + f5.type + "." + f5.name
      }))
    ];
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: f4,
        saveOptions: (_11, value) => setDefFilter(value[0], i4, k5),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query"
  }, filters.length == 0 ? /* @__PURE__ */ Cn.createElement(DefFilterGroup, {
    superstate: props2.superstate,
    selectGroupType,
    group: null,
    addDefGroup,
    selectField,
    i: 0,
    removeDefGroup
  }) : filters.map((f4, i4) => /* @__PURE__ */ Cn.createElement(DefFilterGroup, {
    superstate: props2.superstate,
    key: i4,
    group: f4,
    selectGroupType,
    addDefGroup,
    selectField,
    i: i4,
    removeDefGroup
  }, f4.filters.map((filter, k5) => /* @__PURE__ */ Cn.createElement(DefFilter, {
    superstate: props2.superstate,
    key: k5,
    filter,
    i: i4,
    k: k5,
    selectField,
    selectFilter,
    selectFilterValue,
    removeDefFilter
  })))));
};
var DefFilter = (props2) => {
  var _a2;
  const {
    filter,
    selectField,
    selectFilter,
    selectFilterValue,
    removeDefFilter,
    i: i4,
    k: k5
  } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectField(e4, i4, k5)
  }, filter.field.length == 0 ? i18n_default.labels.select : filter.field), filter.field.length > 0 && /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectFilter(e4, i4, k5)
  }, !filterFnLabels[filter.fn] ? i18n_default.labels.select : filterFnLabels[filter.fn]), filter.field.length > 0 && filterFnLabels[filter.fn] && ((_a2 = filterFnTypes[filter.fn]) == null ? void 0 : _a2.valueType) != "none" && /* @__PURE__ */ Cn.createElement("span", null, /* @__PURE__ */ Cn.createElement(FilterValueSpan, {
    fieldType: filter.fType,
    filter,
    selectFilterValue: (e4, h5) => selectFilterValue(e4, h5, i4, k5)
  })), /* @__PURE__ */ Cn.createElement("span", {
    onClick: () => removeDefFilter(k5, i4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  })));
};
var DefFilterGroup = (props2) => {
  var _a2;
  const {
    group,
    selectGroupType,
    addDefGroup,
    selectField,
    i: i4,
    removeDefGroup
  } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query-group"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query-group-type"
  }, /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectGroupType(e4, i4),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        `ui//mk-ui-${(_a2 = group == null ? void 0 : group.type) != null ? _a2 : "any"}`
      )
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter-bar mk-query-filters"
  }, props2.children, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter",
    onClick: (e4) => {
      var _a3;
      return selectField(e4, i4, (_a3 = group == null ? void 0 : group.filters.length) != null ? _a3 : 0);
    }
  }, /* @__PURE__ */ Cn.createElement("span", null, /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-plus")
    }
  }), "Filter"))), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    },
    onClick: (e4) => {
      removeDefGroup(i4);
    }
  }));
};

// src/core/react/components/Navigator/SpaceEditor.tsx
var SpaceEditor = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f;
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter") {
      saveSpace();
      e4.preventDefault();
    }
  };
  const ref2 = _2(null);
  const [metadata, setMetadata] = h2(
    (_a2 = props2.metadata) != null ? _a2 : {}
  );
  const [predicate, setPredicate] = h2(defaultPredicate);
  const [name, setName] = h2((_c2 = (_b2 = props2.space) == null ? void 0 : _b2.name) != null ? _c2 : "");
  const saveMetadata = (metadata2) => {
    setMetadata(metadata2);
  };
  const saveQuery = (q5) => {
    saveMetadata({
      ...metadata,
      filters: q5
    });
  };
  const linkCaches = F2(
    () => {
      var _a3;
      return ((_a3 = metadata == null ? void 0 : metadata.links) != null ? _a3 : []).map((f4) => props2.superstate.pathsIndex.get(f4)).filter((f4) => f4);
    },
    [metadata]
  );
  const saveSpace = async () => {
    var _a3, _b3;
    let pathState = props2.superstate.pathsIndex.get((_a3 = props2.space) == null ? void 0 : _a3.path);
    if (!pathState) {
      pathState = props2.superstate.pathsIndex.get("/");
    }
    const newName = name.replace(/\//g, "");
    const parentPath = pathState.parent ? pathState.parent : ((_b3 = props2.parent) == null ? void 0 : _b3.type) == "folder" ? props2.parent.path : "/";
    const newPath = !parentPath || parentPath == "/" ? newName : parentPath + "/" + newName;
    if (newName.length == 0) {
      props2.superstate.ui.notify(i18n_default.notice.newSpaceName);
      return;
    }
    if (props2.superstate.spacesIndex.has(newPath) && (!props2.space || newPath != props2.space.path)) {
      props2.superstate.ui.notify(i18n_default.notice.duplicateSpaceName);
      return;
    }
    props2.close();
    if (props2.space) {
      saveSpaceCache(props2.superstate, props2.space.space, metadata).then(
        (f4) => {
          if (newName != props2.space.name)
            props2.superstate.spaceManager.renameSpace(
              props2.space.path,
              newName
            );
        }
      );
    } else {
      await props2.superstate.spaceManager.createSpace(
        newName,
        parentPath,
        metadata
      );
      if (!props2.dontOpen)
        props2.superstate.ui.openPath(newPath, false);
    }
  };
  p2(() => {
    if (ref2.current && name.length == 0) {
      ref2.current.focus();
    }
  }, []);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-editor"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-editor-appearance"
  }, /* @__PURE__ */ Cn.createElement("input", {
    type: "text",
    ref: ref2,
    className: "mk-input mk-input-large",
    placeholder: "Space Name",
    value: name,
    onKeyDown: (e4) => onKeyDown(e4),
    onChange: (e4) => setName(e4.target.value)
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-editor-section"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-editor-title"
  }, i18n_default.labels.pinnedItems, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": "Add Smart Search",
    onClick: (e4) => {
      var _a3;
      return saveMetadata({
        ...metadata,
        filters: [
          ...(_a3 = metadata.filters) != null ? _a3 : [],
          {
            type: "any",
            trueFalse: true,
            filters: []
          }
        ]
      });
    }
  }, i18n_default.buttons.addSmartSearch), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showLinkMenu(
      e4,
      props2.superstate,
      (link) => {
        var _a3;
        return saveMetadata({
          ...metadata,
          links: [...(_a3 = metadata.links) != null ? _a3 : [], link]
        });
      }
    )
  }, i18n_default.buttons.addItem)), ((_d2 = props2.space) == null ? void 0 : _d2.type) == "tag" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-editor-contents"
  }, linkCaches.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-space-editor-link"
  }, /* @__PURE__ */ Cn.createElement(PathStickerView, {
    superstate: props2.superstate,
    pathState: f4
  }), f4.name, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    },
    onClick: (e4) => {
      var _a3;
      saveMetadata({
        ...metadata,
        links: [
          ...((_a3 = metadata.links) != null ? _a3 : []).filter((g4) => g4 != f4.path)
        ]
      });
    }
  }))), ((_e2 = metadata == null ? void 0 : metadata.filters) == null ? void 0 : _e2.length) > 0 && /* @__PURE__ */ Cn.createElement(SpaceQuery, {
    superstate: props2.superstate,
    filters: (_f = metadata.filters) != null ? _f : [],
    setFilters: saveQuery
  })))), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-row mk-layout-justify-end mk-gap-16"
  }, /* @__PURE__ */ Cn.createElement("button", {
    className: "mod-cta",
    onClick: () => {
      saveSpace();
    }
  }, i18n_default.buttons.saveSpace), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.close()
  }, i18n_default.buttons.cancel)));
};
var SpaceEditor_default = SpaceEditor;

// src/core/react/components/UI/Menus/navigator/showSpaceAddMenu.tsx
var showSpaceAddMenu = (superstate, e4, space, dontOpen) => {
  const menuOptions = [];
  menuOptions.push({
    name: i18n_default.labels.createNote,
    icon: "lucide//edit",
    onClick: (e5) => {
      newPathInSpace(superstate, space, "md", null, dontOpen);
    }
  });
  menuOptions.push({
    name: i18n_default.buttons.createCanvas,
    icon: "lucide//layout-dashboard",
    onClick: (e5) => {
      newPathInSpace(superstate, space, "canvas", null, dontOpen);
    }
  });
  menuOptions.push({
    name: i18n_default.labels.createSection,
    icon: "lucide//folder-plus",
    onClick: (e5) => {
      superstate.ui.openModal(
        i18n_default.labels.createSection,
        (props2) => /* @__PURE__ */ Cn.createElement(SpaceEditor_default, {
          superstate,
          space: null,
          parent: space,
          metadata: null,
          close: props2.hide,
          dontOpen
        })
      );
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.buttons.addIntoSpace,
    icon: "lucide//pin",
    onClick: (e5) => {
      showLinkMenu(e5, superstate, (link) => {
        pinPathToSpaceAtIndex(superstate, space, link);
      });
    }
  });
  superstate.ui.openMenu(
    isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    },
    defaultMenu(superstate.ui, menuOptions)
  );
  return false;
};

// src/core/react/components/SpaceView/Contexts/ContextBuilder/SpacePropertyEditor.tsx
var SpacePropertyEditor = (props2) => {
  const [activeId, setActiveId] = h2("");
  const items = props2.columns.map((f4) => ({ ...f4, table: "", id: f4.name }));
  const [openNodes, setOpenNodes] = h2([]);
  const [overId, setOverId] = h2("");
  const contextProperties = F2(() => {
    return props2.contexts.reduce((p3, c4) => {
      var _a2, _b2;
      return {
        ...p3,
        [c4]: {
          space: props2.superstate.spacesIndex.get(tagSpacePathFromTag(c4)),
          cols: (_b2 = (_a2 = props2.superstate.contextsIndex.get(tagSpacePathFromTag(c4))) == null ? void 0 : _a2.cols) != null ? _b2 : [].map((f4) => ({ ...f4, table: c4 }))
        }
      };
    }, {});
  }, [props2.contexts]);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const resetState = () => {
    setActiveId(null);
    setOverId(null);
  };
  const saveNewField = (source, field) => {
    props2.saveColumn({ ...field, table: "" });
  };
  const newProperty = (e4) => {
    var _a2;
    const offset2 = e4.target.getBoundingClientRect();
    showNewPropertyMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      (_a2 = props2.contexts) != null ? _a2 : [],
      [],
      saveNewField,
      defaultContextSchemaID,
      null,
      false
    );
  };
  const newContexts = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const f4 = props2.superstate.spaceManager.readTags();
    const addTag2 = async (tag) => {
      const newTag = ensureTag(tag);
      props2.saveContexts([
        ...props2.contexts.filter((f5) => f5 != newTag),
        newTag
      ]);
    };
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: true,
        value: [],
        options: f4.map((m5) => ({ name: m5, value: m5 })),
        saveOptions: (_11, value) => addTag2(value[0]),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    },
    onDragStart: ({ active }) => {
      setActiveId(active.id);
    },
    onDragOver: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (overId2)
        setOverId(overId2);
    },
    onDragEnd: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (!overId2) {
        resetState();
        return;
      }
      props2.setColumnOrder(
        arrayMove(
          props2.colsOrder,
          props2.colsOrder.findIndex((f4) => f4 == activeId),
          props2.colsOrder.findIndex((f4) => f4 == overId2)
        )
      );
      resetState();
    },
    onDragCancel: resetState
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor-context"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor-context-title"
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.descriptions.spaceProperties), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => newProperty(e4)
  }, i18n_default.buttons.addProperty)), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor-context-list"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor-list"
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items,
    strategy: verticalListSortingStrategy
  }, items.map((value, index) => {
    return /* @__PURE__ */ Cn.createElement(SortableItem2, {
      key: index,
      id: value.id,
      field: value,
      superstate: props2.superstate,
      saveColumn: (field) => props2.saveColumn(field, value),
      cols: items,
      colsHidden: props2.colsHidden,
      hideColumn: props2.hideColumn,
      delColumn: props2.delColumn
    });
  }))))), props2.contexts.map((f4, i4) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-property-editor-context"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-property-editor-context-title"
    }, f4, /* @__PURE__ */ Cn.createElement("button", {
      className: `mk-collapse mk-inline-button mk-icon-xsmall ${!openNodes.some((g4) => g4 == f4) ? "mk-collapsed" : ""}`,
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
      },
      onClick: () => setOpenNodes(
        (p3) => p3.some((g4) => g4 == f4) ? p3.filter((o3) => o3 != f4) : [...p3, f4]
      )
    }), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-icon-small",
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
      },
      onClick: (e4) => {
        props2.saveContexts(props2.contexts.filter((g4) => g4 != f4));
      }
    }))), openNodes.some((g4) => g4 == f4) ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-property-editor-list"
    }, (_a2 = contextProperties[f4]) == null ? void 0 : _a2.cols.filter((f5) => f5.primary != "true").map((g4, h5) => /* @__PURE__ */ Cn.createElement(SortableItem2, {
      key: h5,
      id: g4.name + "#" + f4,
      field: g4,
      superstate: props2.superstate,
      saveColumn: (field) => props2.saveColumn(field, g4),
      cols: contextProperties[f4].cols,
      colsHidden: props2.colsHidden,
      hideColumn: props2.hideColumn,
      delColumn: props2.delColumn
    }))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
  }), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => newContexts(e4),
    className: "mk-property-editor-new"
  }, "+ ", i18n_default.buttons.addContext, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.descriptions.addContext))), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      adjustScale: false
    }, activeId ? /* @__PURE__ */ Cn.createElement(SortableItem2, {
      id: items.find((f4) => f4.id == activeId).id,
      field: items.find((f4) => f4.id == activeId),
      superstate: props2.superstate,
      cols: items,
      colsHidden: props2.colsHidden
    }) : null),
    document.body
  ));
};
function SortableItem2(props2) {
  const { spaceInfo } = q2(SpaceContext);
  const { field } = props2;
  const saveField = (field2, oldField) => {
    if (field2.name.length > 0) {
      if (field2.name != oldField.name || field2.type != oldField.type || field2.value != oldField.value || field2.attrs != oldField.attrs) {
        const saveResult = props2.saveColumn(field2, oldField);
      }
    }
  };
  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: props2.id });
  const style = {
    transform: CSS.Transform.toString(transform),
    transition
  };
  const icon = stickerForField(props2.field);
  const selectedType = (_11, value) => {
    const newField = {
      ...props2.field,
      type: value[0]
    };
    props2.saveColumn(newField);
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-property-editor-property",
    ref: setNodeRef,
    style,
    ...attributes,
    ...listeners
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(icon)
    },
    onClick: (e4) => {
      selectPropertyTypeMenu(e4, props2.superstate.ui, selectedType);
    }
  }), props2.field.name, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-options")
    },
    onClick: (e4) => {
      const offset2 = e4.target.getBoundingClientRect();
      showPropertyMenu({
        superstate: props2.superstate,
        position: { x: offset2.left, y: offset2.top + 30 },
        editable: true,
        options: [],
        field,
        fields: props2.cols,
        contextPath: spaceInfo == null ? void 0 : spaceInfo.path,
        saveField: (newField) => saveField(newField, field),
        hide: props2.hideColumn,
        deleteColumn: props2.delColumn,
        hidden: props2.colsHidden.includes(field.name + field.table)
      });
    }
  }));
}

// src/core/react/components/UI/Modals/ContextEditor.tsx
var openContextEditorModal = (superstate, space, db, view, type) => {
  superstate.ui.openModal(
    type == 0 ? i18n_default.labels.properties : i18n_default.labels.view,
    (props2) => /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
      superstate,
      space
    }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
      superstate,
      schema: db
    }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
      superstate
    }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
      superstate,
      schema: view
    }, type == 0 ? /* @__PURE__ */ Cn.createElement(SpacePropertyEditorContext, {
      superstate
    }) : /* @__PURE__ */ Cn.createElement(ContextFrameView, {
      superstate
    })))))
  );
};
var SpacePropertyEditorContext = (props2) => {
  var _a2;
  const { spaceState: spaceCache } = q2(SpaceContext);
  const {
    predicate,
    savePredicate,
    sortedColumns,
    hideColumn,
    delColumn,
    saveColumn
  } = q2(ContextEditorContext);
  const { tableData } = q2(ContextMDBContext);
  const columns = F2(() => {
    var _a3;
    return ((_a3 = tableData == null ? void 0 : tableData.cols) != null ? _a3 : []).sort(
      (a5, b4) => predicate.colsOrder.findIndex((x5) => x5 == a5.name) - predicate.colsOrder.findIndex((x5) => x5 == b4.name)
    );
  }, [tableData, predicate]);
  const saveContexts = (contexts) => {
    saveSpaceMetadataValue(
      props2.superstate,
      spaceCache.path,
      "contexts",
      contexts
    );
  };
  return /* @__PURE__ */ Cn.createElement(SpacePropertyEditor, {
    superstate: props2.superstate,
    colsOrder: predicate.colsOrder,
    setColumnOrder: (cols) => savePredicate({ ...predicate, colsOrder: cols }),
    colsHidden: predicate.colsHidden,
    columns,
    contexts: (_a2 = spaceCache == null ? void 0 : spaceCache.contexts) != null ? _a2 : [],
    saveContexts,
    hideColumn,
    delColumn,
    saveColumn
  });
};

// src/core/utils/contexts/embed.ts
var contextViewEmbedStringFromContext = (space, schema) => {
  if (space.type == "folder") {
    return `![![${space.path}/#*${schema}]]`;
  }
  if (space.type == "vault") {
    return `![![/#*${schema}]]`;
  }
  return `![![${space.path}/#*${schema}]]`;
};
var contextEmbedStringFromContext = (space, schema) => {
  if (space.type == "folder") {
    return `![![${space.path}/#^${schema}]]`;
  }
  if (space.type == "vault") {
    return `![![/#^${schema}]]`;
  }
  return `![![${space.path}/#^${schema}]]`;
};

// src/core/react/components/SpaceView/Contexts/FilterBar/SearchBar.tsx
var SearchBar = (props2) => {
  const clearSearch = () => {
    props2.setSearchString("");
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-search"
  }, /* @__PURE__ */ Cn.createElement("button", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-search")
    }
  }), /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("input", {
    onChange: (e4) => props2.setSearchString(e4.target.value),
    placeholder: i18n_default.labels.searchPlaceholder,
    className: "mk-search-bar"
  }), /* @__PURE__ */ Cn.createElement("button", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-clear")
    },
    onClick: () => clearSearch()
  })));
};

// src/core/react/components/SpaceView/Contexts/FilterBar/FilterBar.tsx
var FilterBar = (props2) => {
  const ctxRef = _2(null);
  const { spaceInfo, spaceState: spaceCache } = q2(SpaceContext);
  const {
    dbSchemas: schemas,
    setDBSchema,
    dbSchema,
    contextTable,
    tableData
  } = q2(ContextMDBContext);
  const {
    cols,
    schema,
    setSchema,
    setSearchString,
    setEditMode,
    predicate,
    savePredicate,
    hideColumn,
    saveColumn,
    sortColumn,
    delColumn,
    views
  } = q2(ContextEditorContext);
  const { saveSchema, frameSchemas, deleteSchema } = q2(FramesMDBContext);
  const filteredCols = cols.filter((f4) => f4.hidden != "true");
  const saveViewType = (type) => {
    savePredicate({
      ...predicate,
      view: type
    });
  };
  const selectView = (_dbschema, value) => {
    setDBSchema(_dbschema);
    value && setSchema(views.find((f4) => f4.id == value));
  };
  const openView = (e4, view) => {
    const dbSchema2 = schemas.find((f4) => f4.type == "db" && f4.id == view.def.db);
    if (dbSchema2) {
      selectView(dbSchema2, view.id);
      return;
    }
    return;
  };
  const clearFilters = () => {
    savePredicate({
      ...predicate,
      filters: [],
      sort: []
    });
  };
  const clearHiddenCols = () => {
    savePredicate({
      ...predicate,
      colsHidden: []
    });
  };
  const removeFilter = (filter) => {
    const newFilters = [
      ...predicate.filters.filter((f4) => f4.field != filter.field)
    ];
    savePredicate({
      ...predicate,
      filters: newFilters
    });
  };
  const viewContextMenu = (e4, _schema) => {
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.menu.copyEmbedLink,
      icon: "lucide//link",
      onClick: (e5) => {
        navigator.clipboard.writeText(
          contextViewEmbedStringFromContext(spaceCache, _schema.id)
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.renameView,
      icon: "lucide//edit",
      onClick: (e5) => {
        props2.superstate.ui.openModal(
          i18n_default.labels.renameView,
          (props3) => /* @__PURE__ */ Cn.createElement(InputModal, {
            value: _schema.name,
            saveLabel: i18n_default.labels.renameView,
            hide: props3.hide,
            saveValue: (value) => saveSchema({
              ..._schema,
              name: value
            })
          })
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.delete,
      icon: "lucide//trash",
      onClick: (e5) => {
        deleteSchema(_schema);
      }
    });
    props2.superstate.ui.openMenu(
      { x: e4.pageX, y: e4.pageY },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const showFilterMenu = (e4) => {
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.menu.tableView,
      icon: "lucide//table-2",
      onClick: (e5) => {
        saveViewType("table");
      }
    });
    menuOptions.push({
      name: i18n_default.menu.cardView,
      icon: "lucide//layout-grid",
      onClick: (e5) => {
        saveViewType("card");
      }
    });
    menuOptions.push({
      name: i18n_default.menu.listView,
      icon: "lucide//layout-list",
      onClick: (e5) => {
        saveViewType("list");
      }
    });
    if (dbSchema == null ? void 0 : dbSchema.primary) {
      menuOptions.push({
        name: i18n_default.menu.flowView,
        icon: "lucide//infinity",
        onClick: (e5) => {
          saveViewType("flow");
        }
      });
    }
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.groupBy,
      icon: "lucide//columns",
      onClick: (e5) => {
        showGroupByMenu(e5);
      }
    });
    menuOptions.push({
      name: i18n_default.menu.sortBy,
      icon: "lucide//sort-desc",
      onClick: (e5) => {
        showSortMenu(e5);
      }
    });
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.newFilter,
      icon: "lucide//filter",
      onClick: (e5) => {
        showAddFilterMenu(e5);
      }
    });
    menuOptions.push({
      name: i18n_default.menu.clearFilters,
      icon: "lucide//x-square",
      onClick: (e5) => {
        clearFilters();
      }
    });
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.menu.unhideFields,
      icon: "lucide//eye",
      onClick: (e5) => {
        clearHiddenCols();
      }
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const addSort = (_11, sort) => {
    var _a2;
    const field = sort[0];
    const fieldType = (_a2 = filteredCols.find((f4) => f4.name + f4.table == field)) == null ? void 0 : _a2.type;
    if (fieldType) {
      const type = defaultPredicateFnForType(fieldType, sortFnTypes);
      const newSort = {
        field,
        fn: type
      };
      savePredicate({
        ...predicate,
        sort: [
          ...predicate.sort.filter((s5) => s5.field != newSort.field),
          newSort
        ]
      });
    }
  };
  const saveGroupBy = (_11, groupBy2) => {
    savePredicate({
      ...predicate,
      groupBy: groupBy2
    });
  };
  const removeSort = (sort) => {
    const newSort = [...predicate.sort.filter((f4) => f4.field != sort.field)];
    savePredicate({
      ...predicate,
      sort: newSort
    });
  };
  const addFilter = (_11, filter) => {
    var _a2;
    const field = filter[0];
    const fieldType = (_a2 = filteredCols.find((f4) => f4.name + f4.table == field)) == null ? void 0 : _a2.type;
    if (fieldType) {
      const type = defaultPredicateFnForType(fieldType, filterFnTypes);
      const newFilter = fieldType == "boolean" ? {
        field,
        fn: type,
        value: "true"
      } : {
        field,
        fn: type,
        value: ""
      };
      savePredicate({
        ...predicate,
        filters: [
          ...predicate.filters.filter((s5) => s5.field != newFilter.field),
          newFilter
        ]
      });
    }
  };
  const changeSortMenu = (e4, sort) => {
    var _a2;
    const offset2 = e4.target.getBoundingClientRect();
    const saveSort = (_11, newType) => {
      const type = newType[0];
      const newSort = {
        ...sort,
        fn: type
      };
      savePredicate({
        ...predicate,
        sort: [
          ...predicate.sort.filter((s5) => s5.field != newSort.field),
          newSort
        ]
      });
    };
    const fieldType = (_a2 = filteredCols.find(
      (f4) => f4.name + f4.table == sort.field
    )) == null ? void 0 : _a2.type;
    const sortsForType = predicateFnsForType(fieldType, sortFnTypes);
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: sortsForType.map((f4) => ({
          name: sortFnTypes[f4].label,
          value: f4
        })),
        saveOptions: saveSort,
        placeholder: i18n_default.labels.sortItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showViewsMenu = (e4) => {
    openContextEditorModal(
      props2.superstate,
      spaceInfo,
      dbSchema == null ? void 0 : dbSchema.id,
      schema == null ? void 0 : schema.id,
      1
    );
  };
  const showColsMenu = (e4) => {
    openContextEditorModal(
      props2.superstate,
      spaceInfo,
      dbSchema == null ? void 0 : dbSchema.id,
      schema == null ? void 0 : schema.id,
      0
    );
  };
  const saveField = (field, oldField) => {
    if (field.name.length > 0) {
      if (field.name != oldField.name || field.type != oldField.type || field.value != oldField.value || field.attrs != oldField.attrs) {
        const saveResult = saveColumn(field, oldField);
      }
    }
  };
  const showMenu = (e4, field) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = optionValuesForColumn(
      field.name,
      field.table == "" ? tableData : contextTable[field.table]
    );
    showPropertyMenu({
      superstate: props2.superstate,
      position: { x: offset2.left, y: offset2.top + 30 },
      editable: true,
      options,
      field,
      fields: cols,
      contextPath: spaceInfo.path,
      saveField: (newField) => saveField(newField, field),
      hide: hideColumn,
      deleteColumn: delColumn,
      sortColumn,
      hidden: predicate.colsHidden.includes(field.name + field.table)
    });
  };
  const changeFilterMenu = (e4, filter) => {
    var _a2;
    const offset2 = e4.target.getBoundingClientRect();
    const saveFilter = (_11, newType) => {
      const type = newType[0];
      const newFilter = {
        ...filter,
        fn: type
      };
      savePredicate({
        ...predicate,
        filters: [
          ...predicate.filters.filter((s5) => s5.field != newFilter.field),
          newFilter
        ]
      });
    };
    const fieldType = (_a2 = filteredCols.find(
      (f4) => f4.name + f4.table == filter.field
    )) == null ? void 0 : _a2.type;
    const filtersForType = predicateFnsForType(fieldType, filterFnTypes);
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: filtersForType.map((f4) => ({
          name: filterFnLabels[f4],
          value: f4
        })),
        saveOptions: saveFilter,
        placeholder: i18n_default.labels.filterItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showAddFilterMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.filter((f4) => predicateFnsForType(f4.type, filterFnTypes).length > 0).map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: addFilter,
        placeholder: i18n_default.labels.propertyItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showSortMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: addSort,
        placeholder: i18n_default.labels.sortItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showGroupByMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.filter((f4) => f4.name != PathPropertyName).map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: saveGroupBy,
        placeholder: i18n_default.labels.propertyItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showSaveViewModal = () => {
    props2.superstate.ui.openModal(
      i18n_default.labels.saveView,
      (props3) => /* @__PURE__ */ Cn.createElement(InputModal, {
        value: "",
        saveLabel: i18n_default.labels.saveView,
        hide: props3.hide,
        saveValue: (value) => saveSchema({
          ...schema,
          id: value.replace(/ /g, "_"),
          name: value
        })
      })
    );
  };
  const selectFilterValue = (e4, filter) => {
    var _a2, _b2, _c2;
    switch (filterFnTypes[filter.fn].valueType) {
      case "text":
      case "number":
        {
          const saveFilterValue = (value) => {
            const newFilter = {
              ...filter,
              value
            };
            savePredicate({
              ...predicate,
              filters: [
                ...predicate.filters.filter((s5) => s5.field != newFilter.field),
                newFilter
              ]
            });
          };
          const menuOptions = [];
          menuOptions.push(
            menuInput(filter.value, (value) => {
              const newFilter = {
                ...filter,
                value
              };
              savePredicate({
                ...predicate,
                filters: [
                  ...predicate.filters.filter(
                    (s5) => s5.field != newFilter.field
                  ),
                  newFilter
                ]
              });
            })
          );
          const offset2 = e4.target.getBoundingClientRect();
          props2.superstate.ui.openMenu(
            { x: offset2.left, y: offset2.top + 30 },
            defaultMenu(props2.superstate.ui, menuOptions)
          );
        }
        break;
      case "date": {
        const saveValue = (date2) => {
          const newFilter = {
            ...filter,
            value: date2 ? format(date2, "yyyy-MM-dd") : ""
          };
          savePredicate({
            ...predicate,
            filters: [
              ...predicate.filters.filter((s5) => s5.field != newFilter.field),
              newFilter
            ]
          });
        };
        const offset2 = e4.target.getBoundingClientRect();
        const date = new Date(filter.value);
        showDatePickerMenu(
          props2.superstate.ui,
          { x: offset2.left, y: offset2.top + 30 },
          date.getTime() ? date : null,
          saveValue
        );
        break;
      }
      case "list":
        {
          const col = cols.find((f4) => f4.name + f4.table == filter.field);
          const saveOptions = (options, values) => {
            const newFilter = {
              ...filter,
              value: serializeMultiString(values)
            };
            savePredicate({
              ...predicate,
              filters: [
                ...predicate.filters.filter((s5) => s5.field != newFilter.field),
                newFilter
              ]
            });
          };
          if (col.type.startsWith("option")) {
            const offset2 = e4.target.getBoundingClientRect();
            props2.superstate.ui.openMenu(
              { x: offset2.left, y: offset2.top + 30 },
              {
                ui: props2.superstate.ui,
                multi: true,
                editable: false,
                value: parseMultiString(filter.value),
                options: parseMultiString(col.value).map((f4) => ({
                  name: f4,
                  value: f4
                })),
                saveOptions,
                placeholder: i18n_default.labels.optionItemSelectPlaceholder,
                searchable: true,
                showAll: true
              }
            );
          } else if (col.type.startsWith("context")) {
            const contextData = (_b2 = (_a2 = contextTable[col.table]) == null ? void 0 : _a2.rows) != null ? _b2 : [];
            const offset2 = e4.target.getBoundingClientRect();
            props2.superstate.ui.openMenu(
              { x: offset2.left, y: offset2.top + 30 },
              {
                ui: props2.superstate.ui,
                multi: true,
                editable: false,
                value: parseMultiString(filter.value),
                options: (_c2 = contextData.map((f4) => ({
                  name: pathToString(f4[PathPropertyName]),
                  value: f4[PathPropertyName]
                }))) != null ? _c2 : [],
                saveOptions,
                placeholder: i18n_default.labels.optionItemSelectPlaceholder,
                searchable: true,
                showAll: true
              }
            );
          }
        }
        break;
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-config"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-selector"
  }, views.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: `${(schema == null ? void 0 : schema.id) == f4.id ? "mk-is-active" : ""}`,
    onContextMenu: (e4) => viewContextMenu(e4, f4)
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => openView(e4, f4)
  }, f4.name))), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showSaveViewModal()
  }, "+")), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-options"
  }, /* @__PURE__ */ Cn.createElement(SearchBar, {
    superstate: props2.superstate,
    setSearchString
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showFilterMenu(e4),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        "ui//mk-ui-view-options"
      )
    }
  }), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showColsMenu(e4),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-list")
    }
  })), (dbSchema == null ? void 0 : dbSchema.id) == defaultContextSchemaID && /* @__PURE__ */ Cn.createElement("button", {
    className: "mk-button-new",
    onClick: (e4) => showSpaceAddMenu(props2.superstate, e4, spaceCache, true),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-plus")
    }
  }))), (predicate.filters.length > 0 || predicate.sort.length > 0 || predicate.groupBy.length > 0) && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter-bar"
  }, predicate.groupBy.length > 0 && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", null, "Group By"), /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => showGroupByMenu(e4)
  }, predicate.groupBy[0]), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveGroupBy(null, []),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  })), predicate.sort.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", null, f4.field), /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => changeSortMenu(e4, f4)
  }, sortFnTypes[f4.fn].label), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => removeSort(f4),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    }
  }))), predicate.filters.map((f4, i4) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-filter"
    }, /* @__PURE__ */ Cn.createElement("span", null, f4.field), /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => changeFilterMenu(e4, f4)
    }, filterFnLabels[f4.fn]), /* @__PURE__ */ Cn.createElement(FilterValueSpan, {
      fieldType: (_a2 = cols.find((c4) => c4.name + c4.table == f4.field)) == null ? void 0 : _a2.type,
      filter: f4,
      selectFilterValue
    }), /* @__PURE__ */ Cn.createElement("div", {
      onClick: () => removeFilter(f4),
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
      }
    }));
  }), /* @__PURE__ */ Cn.createElement("span", null)));
};
var FilterValueSpan = (props2) => {
  const { filter, selectFilterValue, fieldType } = props2;
  const fnType = filterFnTypes[filter.fn];
  if (!fieldType || !fnType || fnType.valueType == "none") {
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
  } else if (!filter.value || filter.value.length == 0) {
    return /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => selectFilterValue(e4, filter)
    }, "Select");
  } else if (fieldType.startsWith("option") || fieldType.startsWith("context")) {
    const options = parseMultiString(filter.value);
    return /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => selectFilterValue(e4, filter)
    }, " ", options.map((f4, i4) => /* @__PURE__ */ Cn.createElement("span", {
      key: i4
    }, f4)));
  }
  return /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectFilterValue(e4, filter)
  }, filter.value);
};

// src/core/react/components/SpaceView/Contexts/FlowListView/FlowListView.tsx
var FlowListView = (props2) => {
  const { filteredData: data2 } = q2(ContextEditorContext);
  const flowItems = F2(() => {
    return data2.map((f4) => f4[PathPropertyName]);
  }, [data2]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flow-container"
  }, flowItems.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4
  }, /* @__PURE__ */ Cn.createElement("span", {
    onClick: () => props2.superstate.ui.openPath(f4, false)
  }, /* @__PURE__ */ Cn.createElement(PathStickerContainer, {
    superstate: props2.superstate,
    path: f4
  }), pathNameToString(f4)), /* @__PURE__ */ Cn.createElement(PathView, {
    superstate: props2.superstate,
    path: f4,
    load: true
  }))));
};

// src/core/react/components/SpaceView/Contexts/ContextListView.tsx
var ContextListView = (props2) => {
  const { predicate, editMode } = q2(ContextEditorContext);
  const { dbSchema } = q2(ContextMDBContext);
  const [error, resetError] = P2();
  if (error)
    console.log(error);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, !props2.minMode && /* @__PURE__ */ Cn.createElement(FilterBar, {
    superstate: props2.superstate
  }), editMode == 1 ? /* @__PURE__ */ Cn.createElement(ContextFrameView, {
    superstate: props2.superstate
  }) : predicate ? predicate.view == "flow" ? /* @__PURE__ */ Cn.createElement(FlowListView, {
    superstate: props2.superstate
  }) : predicate.view == "table" || predicate.view == "db" ? /* @__PURE__ */ Cn.createElement(TableView, {
    superstate: props2.superstate
  }) : /* @__PURE__ */ Cn.createElement(CardsView, {
    superstate: props2.superstate
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), " ");
};

// src/core/react/components/MDBView/MDBViewer.tsx
var MDBViewer = (props2) => {
  return /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    superstate: props2.superstate,
    space: props2.space
  }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
    superstate: props2.superstate,
    schema: props2.schema
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate
  }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
    superstate: props2.superstate
  }, /* @__PURE__ */ Cn.createElement(ContextListView, {
    superstate: props2.superstate
  })))));
};

// src/core/react/components/MarkdownEditor/Backlinks.tsx
var BacklinkItem = (props2) => {
  const [block, setBlock] = h2([null, null]);
  const refreshBlock = (path) => {
    var _a2, _b2;
    const fCache = props2.superstate.pathsIndex.get(path);
    const link = [
      ...(_a2 = fCache.metadata.links) != null ? _a2 : [],
      ...(_b2 = fCache.metadata.embeds) != null ? _b2 : []
    ].find((f4) => props2.source.includes(f4.displayText));
    if (link) {
      const block2 = fCache.metadata.sections.find(
        (f4) => f4.position.start.offset <= link.position.start.offset && f4.position.end.offset >= link.position.end.offset
      );
      setBlock([
        Math.max(1, block2.position.start.line),
        Math.max(block2.position.start.line + 1, block2.position.end.line + 1)
      ]);
    } else {
      setBlock([null, null]);
    }
  };
  p2(() => {
    refreshBlock(props2.path);
  }, []);
  p2(() => {
    refreshBlock(props2.path);
  }, [props2.path]);
  const [collapsed, setCollapsed] = h2(false);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-title"
  }, /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      props2.superstate.ui.openPath(props2.path, false);
      e4.stopPropagation();
    }
  }, pathNameToString(props2.path))), !collapsed ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-backlink"
  }, /* @__PURE__ */ Cn.createElement(PathView, {
    superstate: props2.superstate,
    load: true,
    path: props2.path,
    properties: { from: block[0], to: block[1] },
    classname: "mk-path-context-flow"
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};
var Backlinks = (props2) => {
  const [collapsed, setCollapsed] = h2(
    !props2.superstate.settings.inlineBacklinksExpanded
  );
  const [backlinks, setBacklinks] = h2([]);
  p2(() => {
    if (!props2.path)
      return;
    Promise.all(
      uniq([...props2.superstate.linksMap.getInverse(props2.path)]).map(
        (f4) => props2.superstate.spaceManager.pathExists(f4) ? f4 : null
      )
    ).then((bls) => setBacklinks(bls.filter((f4) => f4)));
  }, [props2.path]);
  p2(() => {
    props2.superstate.settings.inlineBacklinksExpanded = !collapsed;
    props2.superstate.saveSettings();
  }, [collapsed]);
  const toggleBacklinks = () => {
    setCollapsed(!collapsed);
  };
  p2(() => {
    window.addEventListener(eventTypes.toggleBacklinks, toggleBacklinks);
    return () => {
      window.removeEventListener(eventTypes.toggleBacklinks, toggleBacklinks);
    };
  }, [collapsed]);
  return backlinks.length > 0 && props2.path ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-component mk-note-footer"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-section"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    },
    className: "mk-path-context-title"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-icon-xsmall`,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-backlink")
    }
  }), i18n_default.labels.backlinks, /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse-sm")
    }
  })), /* @__PURE__ */ Cn.createElement("div", null, !collapsed && backlinks.map((f4, i4) => /* @__PURE__ */ Cn.createElement(BacklinkItem, {
    path: f4,
    key: i4,
    superstate: props2.superstate,
    source: props2.path
  }))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/SpaceView/Contexts/TagsView/NoteSpacesBar.tsx
var NoteSpacesBar = (props2) => {
  const showContextMenu = (e4, path) => {
    const space = props2.superstate.spacesIndex.get(path);
    if (!space)
      return;
    e4.stopPropagation();
    e4.preventDefault();
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.menu.openSpace,
      icon: "lucide//layout-grid",
      onClick: (e5) => {
        props2.superstate.ui.openPath(space.path, e5.metaKey);
      }
    });
    menuOptions.push({
      name: i18n_default.labels.newProperty,
      icon: "lucide//plus",
      onClick: (e5) => {
        newProperty(e5, space.path);
      }
    });
    if (props2.removeSpace)
      menuOptions.push({
        name: i18n_default.menu.removeFromSpace,
        icon: "lucide//trash",
        onClick: (e5) => {
          props2.removeSpace(space.path);
        }
      });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  const spacesFromPath = (path) => {
    return [...props2.superstate.spacesMap.get(path)].map((f4) => props2.superstate.spacesIndex.get(f4)).filter((f4) => f4 && f4.type != "default" && f4.path != "/").map((f4) => props2.superstate.pathsIndex.get(f4.path)).sort(
      (f4, k5) => path.startsWith(f4.path) ? -1 : path.startsWith(k5.path) ? 1 : 0
    ).filter((f4) => f4);
  };
  const [spaces, setSpaces] = h2(spacesFromPath(props2.path));
  const saveField = (source, field) => {
    if (source == "fm") {
      props2.superstate.spaceManager.addProperty(props2.path, field);
      return;
    }
    props2.superstate.spaceManager.addSpaceProperty(source, field);
  };
  const newProperty = (e4, space) => {
    const offset2 = e4.target.getBoundingClientRect();
    showNewPropertyMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      [],
      [],
      saveField,
      defaultContextSchemaID,
      space
    );
  };
  p2(() => {
    const pathStateUpdated = (payload) => {
      if (payload.path == props2.path) {
        setSpaces(spacesFromPath(props2.path));
      }
    };
    setSpaces(spacesFromPath(props2.path));
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      pathStateUpdated
    );
    props2.superstate.eventsDispatcher.addListener(
      "spaceDeleted",
      pathStateUpdated
    );
    props2.superstate.eventsDispatcher.addListener(
      "spaceChanged",
      pathStateUpdated
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        pathStateUpdated
      );
      props2.superstate.eventsDispatcher.removeListener(
        "spaceDeleted",
        pathStateUpdated
      );
      props2.superstate.eventsDispatcher.removeListener(
        "spaceChanged",
        pathStateUpdated
      );
    };
  }, [props2.path, setSpaces]);
  return spaces.length > 0 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-tag-selector"
  }, spaces.map((f4, i4) => {
    var _a2, _b2, _c2, _d2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      onContextMenu: (e4) => showContextMenu(e4, f4.path),
      onClick: (e4) => props2.superstate.ui.openPath(
        f4.path,
        e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
      ),
      style: ((_b2 = (_a2 = f4.label) == null ? void 0 : _a2.color) == null ? void 0 : _b2.length) > 0 ? {
        "--tag-background": (_c2 = f4.label) == null ? void 0 : _c2.color,
        "--tag-color": "var(--color-white)"
      } : {}
    }, /* @__PURE__ */ Cn.createElement("span", {
      className: "cm-hashtag cm-hashtag-begin mk-space-icon"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: `mk-icon-xsmall`,
      dangerouslySetInnerHTML: {
        __html: props2.superstate.ui.getSticker((_d2 = f4.label) == null ? void 0 : _d2.sticker)
      }
    })), /* @__PURE__ */ Cn.createElement("span", {
      className: "cm-hashtag cm-hashtag-end"
    }, f4.name));
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/MarkdownEditor/MarkdownHeaderView.tsx
var import_he = __toESM(require_he());

// src/utils/dom.ts
function selectElementContents(el) {
  if (!el)
    return;
  const range = document.createRange();
  range.selectNodeContents(el);
  const sel = window.getSelection();
  sel.removeAllRanges();
  sel.addRange(range);
}

// src/core/react/components/UI/Menus/navigator/spaceContextMenu.tsx
var triggerSpaceMenu = (superstate, path, e4, activePath, parentSpace) => {
  const space = superstate.spacesIndex.get(path.path);
  if (!space)
    return;
  const menuOptions = [];
  menuOptions.push({
    name: i18n_default.buttons.createNote,
    icon: "lucide//edit",
    onClick: (e5) => {
      newPathInSpace(superstate, space, "md", null);
    }
  });
  menuOptions.push({
    name: i18n_default.buttons.createCanvas,
    icon: "lucide//layout-dashboard",
    onClick: (e5) => {
      newPathInSpace(superstate, space, "canvas", null);
    }
  });
  menuOptions.push({
    name: i18n_default.buttons.createFolder,
    icon: "lucide//folder-plus",
    onClick: (e5) => {
      superstate.ui.openModal(
        i18n_default.labels.createSection,
        (props2) => /* @__PURE__ */ Cn.createElement(SpaceEditor_default, {
          superstate,
          space: null,
          parent: space,
          metadata: null,
          close: props2.hide
        })
      );
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.buttons.addIntoSpace,
    icon: "lucide//pin",
    onClick: (e5) => {
      showLinkMenu(e5, superstate, (link) => {
        pinPathToSpaceAtIndex(superstate, space, link);
      });
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.revealInDefault,
    icon: "lucide//arrow-up-right",
    onClick: (e5) => {
      superstate.ui.openPath(
        space.type == "folder" ? space.path : `${superstate.settings.spacesFolder}/${space.name}`,
        "system"
      );
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.buttons.addToSpace,
    icon: "lucide//pin",
    onClick: (e5) => {
      showSpacesMenu(
        e5,
        superstate,
        (link) => {
          addPathToSpaceAtIndex(superstate, space, link, -1);
        },
        true
      );
    }
  });
  if (parentSpace && parentSpace != path.parent) {
    const spaceCache = superstate.spacesIndex.get(parentSpace);
    if (spaceCache) {
      menuOptions.push({
        name: i18n_default.menu.removeFromSpace,
        icon: "lucide//pin-off",
        onClick: (e5) => {
          removePathsFromSpace(superstate, spaceCache.path, [space.path]);
        }
      });
    }
  }
  if (parentSpace == "spaces://$waypoints") {
    menuOptions.push({
      name: i18n_default.menu.removeFromWaypoints,
      icon: "lucide//pin-off",
      onClick: (e5) => {
        toggleWaypoint(superstate, space.path, true);
      }
    });
  }
  menuOptions.push(menuSeparator);
  if (superstate.settings.spacesStickers) {
    menuOptions.push({
      name: i18n_default.menu.changeColor,
      icon: "lucide//palette",
      onClick: (e5) => {
        showDisclosureMenu(
          superstate.ui,
          e5,
          false,
          false,
          "",
          [
            { name: i18n_default.labels.none, value: "" },
            ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
          ],
          (_11, values) => {
            savePathColor(superstate, space.path, values[0]);
          }
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.changeIcon,
      icon: "lucide//sticker",
      onClick: (e5) => {
        superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
          ui: superstate.ui,
          hide: _props.hide,
          selectedSticker: (emoji) => savePathSticker(superstate, space.path, emoji)
        }));
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.removeIcon,
      icon: "lucide//file-minus",
      onClick: (e5) => {
        removePathIcon(superstate, space.path);
      }
    });
  }
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.sortBy,
    icon: "lucide//sort-desc",
    onClick: (e5) => {
      const sortOptions = [];
      sortOptions.push({
        name: i18n_default.menu.groupSpaces,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.group == true,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, {
            field: space.metadata.sort.field,
            asc: space.metadata.sort.asc,
            group: !space.metadata.sort.group
          });
        }
      });
      sortOptions.push(menuSeparator);
      const rankSortOption = {
        field: "rank",
        asc: true,
        group: space.metadata.sort.group
      };
      sortOptions.push({
        name: i18n_default.menu.customSort,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.field == rankSortOption.field && space.metadata.sort.asc == rankSortOption.asc,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, rankSortOption);
        }
      });
      const nameSortOption = {
        field: "name",
        asc: true,
        group: space.metadata.sort.group
      };
      sortOptions.push({
        name: i18n_default.menu.fileNameSortAlphaAsc,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.field == nameSortOption.field && space.metadata.sort.asc == nameSortOption.asc,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, nameSortOption);
        }
      });
      const nameSortOptionDesc = {
        field: "name",
        asc: false,
        group: space.metadata.sort.group
      };
      sortOptions.push({
        name: i18n_default.menu.fileNameSortAlphaDesc,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.field == nameSortOptionDesc.field && space.metadata.sort.asc == nameSortOptionDesc.asc,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, nameSortOptionDesc);
        }
      });
      sortOptions.push(menuSeparator);
      const createdTimeSortOption = {
        field: "ctime",
        asc: false,
        group: space.metadata.sort.group
      };
      sortOptions.push({
        name: i18n_default.menu.createdTimeSortAsc,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.field == createdTimeSortOption.field && space.metadata.sort.asc == createdTimeSortOption.asc,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, createdTimeSortOption);
        }
      });
      const createdTimeSortOptionDesc = {
        field: "ctime",
        asc: true,
        group: space.metadata.sort.group
      };
      sortOptions.push({
        name: i18n_default.menu.createdTimeSortDesc,
        icon: "lucide//arrow-up-down",
        value: space.metadata.sort.field == createdTimeSortOptionDesc.field && space.metadata.sort.asc == createdTimeSortOptionDesc.asc,
        type: 3 /* Radio */,
        onClick: (e6) => {
          updateSpaceSort(superstate, space.path, createdTimeSortOptionDesc);
        }
      });
      const offset2 = e5.target.getBoundingClientRect();
      superstate.ui.openMenu(
        { x: offset2.left, y: offset2.top + 30 },
        defaultMenu(superstate.ui, sortOptions)
      );
    }
  });
  menuOptions.push(menuSeparator);
  if (space.type == "folder") {
    menuOptions.push({
      name: i18n_default.menu.edit,
      icon: "lucide//pencil",
      onClick: (e5) => {
        superstate.ui.openModal(
          i18n_default.labels.renameSection,
          (props2) => /* @__PURE__ */ Cn.createElement(SpaceEditor_default, {
            superstate,
            space,
            metadata: space.metadata,
            close: props2.hide
          })
        );
      }
    });
  } else if (space.type == "tag") {
    menuOptions.push({
      name: i18n_default.menu.rename,
      icon: "lucide//pencil",
      onClick: (e5) => {
        superstate.ui.openModal(
          i18n_default.labels.rename,
          (_props) => /* @__PURE__ */ Cn.createElement(InputModal, {
            saveLabel: i18n_default.buttons.rename,
            value: space.name,
            hide: _props.hide,
            saveValue: (v3) => renameTag(superstate, space.name, v3)
          })
        );
      }
    });
  }
  if (space.type == "folder") {
    menuOptions.push({
      name: i18n_default.menu.hide,
      icon: "lucide//eye-off",
      onClick: (e5) => {
        hidePath(superstate, space.path);
      }
    });
  }
  if (parentSpace && parentSpace != path.parent) {
  } else if (space.type == "folder" || space.type == "tag")
    menuOptions.push({
      name: i18n_default.menu.delete,
      icon: "lucide//trash",
      onClick: (e5) => {
        superstate.ui.openModal(
          i18n_default.labels.deleteSpace,
          (_props) => /* @__PURE__ */ Cn.createElement(ConfirmationModal, {
            hide: _props.hide,
            confirmAction: () => removeSpace(superstate, space.path),
            confirmLabel: i18n_default.buttons.delete,
            message: i18n_default.descriptions.deleteSpace
          })
        );
      }
    });
  superstate.ui.openMenu(
    isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    },
    defaultMenu(superstate.ui, menuOptions)
  );
  return false;
};

// src/core/react/components/MarkdownEditor/BannerView.tsx
var BannerView = (props2) => {
  const [banner, setBanner] = h2(null);
  p2(() => {
    if (props2.bannerPath) {
      const path = props2.superstate.spaceManager.uriByString(props2.bannerPath);
      setBanner(path);
    } else {
      setBanner(null);
    }
  }, [props2.bannerPath]);
  const triggerBannerContextMenu = (e4) => {
    if (!props2.itemPath)
      return;
    e4.preventDefault();
    const menuOptions = [
      {
        name: i18n_default.buttons.changeBanner,
        value: "change",
        icon: "lucide//image",
        onClick: (ev) => {
          props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(ImageModal_default, {
            superstate: props2.superstate,
            hide: _props.hide,
            selectedPath: (image) => savePathBanner(props2.superstate, props2.itemPath, image)
          }));
        }
      },
      {
        name: i18n_default.buttons.removeBanner,
        value: "remove",
        icon: "lucide//file-minus",
        onClick: (ev) => {
          props2.superstate.spaceManager.deleteProperty(
            props2.itemPath,
            props2.superstate.settings.fmKeyBanner
          );
        }
      }
    ];
    props2.superstate.ui.openMenu(
      isMouseEvent(e4) ? { x: e4.pageX, y: e4.pageY } : {
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
    return false;
  };
  return banner ? /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-note-header`,
    onContextMenu: triggerBannerContextMenu
  }, !banner.refType ? /* @__PURE__ */ Cn.createElement("img", {
    src: props2.superstate.ui.getUIPath(banner.basePath)
  }) : banner.refType == "frame" ? /* @__PURE__ */ Cn.createElement(EmbedFrameView, {
    source: props2.itemPath,
    superstate: props2.superstate,
    path: banner
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/core/react/components/MarkdownEditor/MarkdownHeaderView.tsx
var MarkdownHeaderView = (props2) => {
  var _a2;
  const [cache, setCache] = h2(
    props2.superstate.pathsIndex.get(props2.path)
  );
  const showHeader = props2.showHeader;
  const [collapsed, setCollapsed] = h2(
    !showHeader ? false : !props2.superstate.settings.inlineContextExpanded
  );
  const spaces = F2(
    () => cache ? [...props2.superstate.spacesMap.get(cache.path)].map((f4) => props2.superstate.spacesIndex.get(f4)).filter((f4) => f4).map((f4) => f4.path) : [],
    [cache]
  );
  const banner = (_a2 = cache == null ? void 0 : cache.metadata.property) == null ? void 0 : _a2[props2.superstate.settings.fmKeyBanner];
  p2(() => {
    props2.superstate.settings.inlineContextExpanded = !collapsed;
    props2.superstate.saveSettings();
  }, [collapsed]);
  const fileNameRef = _2(null);
  const refreshFile = () => {
    if (!props2.path) {
      return;
    }
    setCache(props2.superstate.pathsIndex.get(props2.path));
  };
  const spaceStateUpdated = (payload) => {
    if (spaces.some((f4) => f4 == payload.path)) {
      refreshFile();
    }
  };
  const pathStateUpdated = (payload) => {
    if (payload.path == props2.path) {
      refreshFile();
    }
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      spaceStateUpdated
    );
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      pathStateUpdated
    );
    refreshFile();
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        spaceStateUpdated
      );
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        pathStateUpdated
      );
    };
  }, [props2.path]);
  const addToSpace = async (spacePath) => {
    const spaceCache = props2.superstate.spacesIndex.get(spacePath);
    if (spaceCache) {
      addPathToSpaceAtIndex(props2.superstate, spaceCache, props2.path, -1);
    }
  };
  const removeFromSpace = (spacePath) => {
    removePathsFromSpace(props2.superstate, spacePath, [props2.path]);
  };
  const fileName = F2(() => {
    var _a3;
    return (_a3 = cache == null ? void 0 : cache.displayName) != null ? _a3 : "";
  }, [cache]);
  const newProperty = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showNewPropertyMenu(
      props2.superstate,
      { x: offset2.left, y: offset2.top + 30 },
      spaces,
      [],
      saveField,
      defaultContextSchemaID,
      null,
      true
    );
  };
  const onBlur = (e4) => {
    const newValue = import_he.default.decode(e4.target.innerHTML);
    if (newValue != fileName) {
      if (props2.superstate.settings.spacesUseAlias) {
        updatePrimaryAlias(
          props2.superstate,
          cache.path,
          cache.metadata.aliases,
          newValue.trim()
        );
      } else {
        props2.superstate.spaceManager.renamePath(
          props2.path,
          renamePathWithExtension(props2.path, newValue)
        );
      }
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    var _a3, _b2;
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      (_a3 = props2.editorView) == null ? void 0 : _a3.focus();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      (_b2 = props2.editorView) == null ? void 0 : _b2.focus();
      e4.preventDefault();
    }
  };
  y2(() => {
    var _a3;
    (_a3 = props2.editorView) == null ? void 0 : _a3.requestMeasure();
  }, []);
  const changeCover = (e4) => {
    props2.superstate.ui.openPalette((_props) => /* @__PURE__ */ Cn.createElement(ImageModal_default, {
      superstate: props2.superstate,
      hide: _props.hide,
      selectedPath: (image) => {
        savePathBanner(props2.superstate, cache.path, image);
      }
    }));
  };
  const showAddMenu = (e4) => {
    showSpacesMenu(
      e4,
      props2.superstate,
      (link, isNew) => {
        if (isNew) {
          if (link.charAt(0) == "#") {
            addTagToPath(props2.superstate, props2.path, link);
          } else {
            createSpace(props2.superstate, link, { links: [props2.path] });
          }
        } else {
          addToSpace(link);
        }
      },
      false,
      true
    );
  };
  const saveField = (source, field) => {
    if (source == "fm") {
      saveProperties(props2.superstate, cache.path, {
        [field.name]: defaultValueForType(field.type)
      });
      return;
    }
    props2.superstate.spaceManager.addSpaceProperty(source, field);
  };
  const showContextMenu = (e4) => {
    triggerSpaceMenu(props2.superstate, cache, e4, null, null);
  };
  p2(() => {
    var _a3;
    if ((fileName == null ? void 0 : fileName.startsWith(props2.superstate.settings.newNotePlaceholder)) || (fileName == null ? void 0 : fileName.startsWith("Untitled"))) {
      selectElementContents(fileNameRef.current);
    }
    const pasteEvent = (e4) => {
      e4.preventDefault();
      const text2 = e4.clipboardData.getData("text/plain");
      document.execCommand("insertText", false, text2);
    };
    (_a3 = fileNameRef.current) == null ? void 0 : _a3.addEventListener("paste", pasteEvent);
    return () => {
      var _a4;
      (_a4 = fileNameRef.current) == null ? void 0 : _a4.removeEventListener("paste", pasteEvent);
    };
  }, [fileNameRef, fileName]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.showBanner && banner && /* @__PURE__ */ Cn.createElement(BannerView, {
    superstate: props2.superstate,
    bannerPath: banner,
    itemPath: props2.path
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-component"
  }, props2.showBanner && banner && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-spacer`,
    style: {
      "--mk-header-height": ((props2.superstate.ui.getScreenType() == "mobile" ? 1 : 0) * 26 + 138 + (!props2.superstate.settings.spacesStickers || props2.superstate.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px"
    },
    onContextMenu: (e4) => e4.preventDefault()
  }), showHeader && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-path-context-file ${props2.superstate.settings.inlineContextNameLayout == "horizontal" ? "mk-path-context-file-horizontal" : ""}`
  }, props2.superstate.settings.spacesStickers && cache ? /* @__PURE__ */ Cn.createElement(PathStickerView, {
    superstate: props2.superstate,
    pathState: cache
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title",
    ref: fileNameRef,
    contentEditable: props2.editable,
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    dangerouslySetInnerHTML: {
      __html: fileName
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-collapse mk-icon-xsmall mk-fold ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
    },
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    }
  })), !collapsed && props2.editable ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field-new"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => newProperty(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-plus")
    }
  }), props2.superstate.ui.getScreenType() == "mobile" ? i18n_default.labels.newPropertyShort : i18n_default.labels.newProperty), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showAddMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//pin")
    }
  }), props2.superstate.ui.getScreenType() == "mobile" ? i18n_default.buttons.addToSpaceShort : i18n_default.buttons.addToSpace), cache && /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => changeCover(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-make-image")
    }
  }), props2.superstate.ui.getScreenType() == "mobile" ? i18n_default.buttons.changeBannerShort : i18n_default.buttons.changeBanner), (cache == null ? void 0 : cache.type) == "space" && /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": i18n_default.buttons.moreOptions,
    className: "mk-icon-xsmall mk-inline-button",
    onClick: (e4) => {
      showContextMenu(e4);
    },
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-options")
    }
  })), cache && /* @__PURE__ */ Cn.createElement(NoteSpacesBar, {
    path: cache == null ? void 0 : cache.path,
    superstate: props2.superstate,
    removeSpace: removeFromSpace,
    addSpace: addToSpace
  })) : /* @__PURE__ */ Cn.createElement("div", {
    style: { height: 16 }
  })), !collapsed ? /* @__PURE__ */ Cn.createElement(ContextPropertiesView, {
    superstate: props2.superstate,
    spacePaths: spaces,
    path: props2.path,
    showMetadata: props2.showMetadata,
    hiddenFields: props2.hiddenFields,
    editable: props2.editable
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/core/utils/spaces/query.ts
var filterPathsForAny = (paths, filters) => {
  const newArray = filters.reduce((p3, c4) => {
    const [result, remaining] = p3;
    const filteredPaths = c4.type == "fileprop" ? filterPathProperties(remaining, c4) : c4.type == "filemeta" ? filterPathCache(remaining, c4) : c4.type == "frontmatter" ? filterFM(remaining, c4) : [];
    const diffArray = remaining.filter((x5) => !filteredPaths.includes(x5));
    return [[...result, ...filteredPaths], diffArray];
  }, [[], paths]);
  return newArray[0];
};
var filterPathsForAll = (paths, filters) => {
  return filters.reduce((p3, c4) => {
    return c4.type == "fileprop" ? filterPathProperties(p3, c4) : c4.type == "filemeta" ? filterPathCache(p3, c4) : c4.type == "frontmatter" ? filterFM(p3, c4) : [];
  }, paths);
};
var filterFM = (paths, def) => {
  return paths.filter((f4) => {
    var _a2;
    const fm = (_a2 = f4.metadata) == null ? void 0 : _a2.property;
    if (!fm || !fm[def.field]) {
      return false;
    }
    const filterFn = filterFnTypes[def.fn];
    let result = true;
    if (filterFn) {
      result = filterFn.fn(parseProperty(def.field, fm[def.field]), def.value);
    }
    return result;
  });
};
var filterPathCache = (paths, def) => {
  return paths.filter((f4) => {
    let value = "";
    if (def.field == "outlinks") {
      value = serializeMultiString(f4.outlinks);
    } else if (def.field == "inlinks") {
      value = serializeMultiString(f4.inlinks);
    } else if (def.field == "tags") {
      value = serializeMultiString(f4.tags);
    }
    const filterFn = filterFnTypes[def.fn];
    let result = true;
    if (filterFn) {
      result = filterFn.fn(value, def.value);
    }
    return result;
  });
};
var filterPathProperties = (paths, def) => {
  return paths.filter((f4) => {
    var _a2, _b2, _c2, _d2, _e2, _f, _g;
    const vaultItemFields = ["name", "path", "parent"];
    const file = ["isFolder", "extension"];
    const label = ["color", "sticker"];
    const stats = ["ctime", "mtime", "size"];
    if (vaultItemFields.includes(def.field)) {
      const filterFn = filterFnTypes[def.fn];
      let result = true;
      if (filterFn) {
        result = filterFn.fn(f4[def.field], def.value);
      }
      return result;
    } else if (file.includes(def.field)) {
      const filterFn = filterFnTypes[def.fn];
      let result = true;
      if (filterFn) {
        result = filterFn.fn((_b2 = (_a2 = f4.metadata) == null ? void 0 : _a2.file) == null ? void 0 : _b2[def.field], def.value);
      }
      return result;
    } else if (label.includes(def.field)) {
      const filterFn = filterFnTypes[def.fn];
      let result = true;
      if (filterFn) {
        result = filterFn.fn((_d2 = (_c2 = f4.metadata) == null ? void 0 : _c2.label) == null ? void 0 : _d2[def.field], def.value);
      }
      return result;
    } else if (stats.includes(def.field)) {
      const filterFn = filterFnTypes[def.fn];
      let result = true;
      if (filterFn) {
        result = filterFn.fn((_g = (_f = (_e2 = f4.metadata) == null ? void 0 : _e2.file) == null ? void 0 : _f.stats) == null ? void 0 : _g[def.field], def.value);
      }
      return result;
    }
    return true;
  });
};
var pathByDef = (filters, path) => {
  const pathInFilter = filters.reduce((p3, c4) => {
    if (!p3 || c4.filters.length == 0)
      return p3;
    const result = c4.type == "any" ? filterPathsForAny([path], c4.filters).length > 0 : filterPathsForAll([path], c4.filters).length > 0;
    return result;
  }, true);
  return pathInFilter;
};

// src/core/react/context/SidebarContext.tsx
var import_lodash10 = __toESM(require_lodash());
var NavigatorContext = F({
  dragPaths: [],
  setDragPaths: import_lodash10.default.noop,
  selectedPaths: [],
  setSelectedPaths: import_lodash10.default.noop,
  activePath: null,
  setActivePath: import_lodash10.default.noop,
  activeViewSpace: null,
  waypoints: [],
  setWaypoints: import_lodash10.default.noop,
  saveActiveSpace: import_lodash10.default.noop,
  activeQuery: [],
  setActiveQuery: import_lodash10.default.noop,
  queryResults: [],
  queryMode: false,
  setQueryMode: import_lodash10.default.noop,
  modifier: null,
  setModifier: import_lodash10.default.noop
});
var SidebarProvider = (props2) => {
  const [modifier, setModifier] = h2(null);
  const [dragPaths, setDragPaths] = h2([]);
  const [selectedPaths, setSelectedPaths] = h2([]);
  const [activePath, setActivePath] = h2(null);
  const [activeQuery, setActiveQuery] = h2([]);
  const [queryMode, setQueryMode] = h2(false);
  const [waypoints, setWaypoints] = h2([]);
  const queryResults = F2(() => {
    const paths = [];
    props2.superstate.pathsIndex.forEach((f4) => {
      if (!f4.hidden && pathByDef(activeQuery, f4)) {
        paths.push(f4.path);
      }
    });
    return paths;
  }, [activeQuery]);
  const [activeViewSpace, setActiveViewSpace] = h2();
  const setActiveViewSpaceByPath = (path) => {
    setQueryMode(false);
    props2.superstate.settings.activeView = path;
    props2.superstate.saveSettings();
  };
  const saveWaypoints = (paths) => {
    props2.superstate.settings.waypoints = paths;
    props2.superstate.saveSettings();
  };
  const refreshSpaces = (payload) => {
    if ([...waypoints, props2.superstate.settings.activeView].includes(
      payload.path
    )) {
      setWaypoints(
        props2.superstate.settings.waypoints.map((f4) => props2.superstate.pathsIndex.get(f4)).filter((f4) => f4)
      );
      setActiveViewSpace(
        props2.superstate.spacesIndex.get(props2.superstate.settings.activeView)
      );
    }
  };
  const reloadPaths = () => {
    setWaypoints(
      props2.superstate.settings.waypoints.map((f4) => props2.superstate.pathsIndex.get(f4)).filter((f4) => f4)
    );
    setActiveViewSpace(
      props2.superstate.spacesIndex.get(props2.superstate.settings.activeView)
    );
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      refreshSpaces
    );
    props2.superstate.eventsDispatcher.addListener(
      "settingsChanged",
      reloadPaths
    );
    props2.superstate.eventsDispatcher.addListener(
      "superstateUpdated",
      reloadPaths
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        refreshSpaces
      );
      props2.superstate.eventsDispatcher.removeListener(
        "settingsChanged",
        reloadPaths
      );
      props2.superstate.eventsDispatcher.removeListener(
        "superstateUpdated",
        reloadPaths
      );
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement(NavigatorContext.Provider, {
    value: {
      dragPaths,
      setDragPaths,
      selectedPaths,
      setSelectedPaths,
      activePath,
      setActivePath,
      activeViewSpace,
      activeQuery,
      setActiveQuery,
      waypoints,
      setWaypoints: saveWaypoints,
      saveActiveSpace: setActiveViewSpaceByPath,
      queryResults,
      queryMode,
      setQueryMode,
      modifier,
      setModifier
    }
  }, props2.children);
};

// src/core/react/components/Navigator/SpaceTree/SpaceTreeView.tsx
var import_lodash11 = __toESM(require_lodash());

// src/core/utils/dnd/dragPath.ts
function getMaxDepth(previousItem, dirDown) {
  var _a2;
  if (previousItem) {
    if (((_a2 = previousItem.item) == null ? void 0 : _a2.type) == "space" && !previousItem.collapsed && dirDown)
      return previousItem.depth + 1;
    return previousItem.depth;
  }
  return 0;
}
function getMinDepth(previousItem) {
  if (previousItem) {
    return Math.max(0, previousItem.depth - 1);
  }
  return 0;
}
function getDragDepth(offset2, indentationWidth) {
  return Math.round(offset2 / indentationWidth);
}
var getMultiProjection = (flattenedTree, paths, overIndex, modifier) => {
  const overItem = flattenedTree[overIndex];
  if (!overItem)
    return;
  const dropTarget = overItem.type == "file" ? flattenedTree.find((f4) => f4.id == overItem.parentId) : overItem;
  if (dropTarget && dropTarget.type != "file") {
    const _projected = {
      depth: overItem.depth,
      overId: overItem.id,
      parentId: dropTarget.id,
      sortable: false,
      insert: dropTarget.collapsed,
      droppable: true,
      copy: modifier == "link" || modifier == "copy",
      reorder: false
    };
    return _projected;
  }
  return null;
};
function getProjection(activeItem, items, paths, overItemIndex, dragDepth, yOffset, dirDown, modifier, activeSpaceID) {
  if (paths.length == 0)
    return null;
  if (paths.length > 1)
    return getMultiProjection(items, paths, overItemIndex, modifier);
  const overItem = items[overItemIndex];
  const previousItem = items[overItemIndex];
  const nextItem = items[overItemIndex + 1];
  if (!previousItem)
    return;
  const previousItemDroppable = previousItem.type != "file";
  const insert2 = overItem.collapsed && previousItemDroppable && (!overItem.sortable || dirDown && yOffset <= 13 || !dirDown && yOffset >= 13);
  const sortable = overItem.sortable || previousItemDroppable && !insert2 && nextItem.sortable;
  const projectedDepth = dragDepth;
  const maxDepth = getMaxDepth(
    previousItem,
    dirDown
  );
  const minDepth = getMinDepth(previousItem);
  let depth = projectedDepth;
  if (projectedDepth >= maxDepth) {
    depth = maxDepth;
  } else if (projectedDepth < minDepth) {
    depth = minDepth;
  }
  const parentId = getParentId();
  const parent = items.find((f4) => f4.id == parentId);
  return {
    depth,
    overId: previousItem.id,
    parentId,
    sortable,
    insert: insert2,
    droppable: (parent == null ? void 0 : parent.type) != "file",
    copy: modifier == "link" || modifier == "copy",
    reorder: insert2 ? (activeItem == null ? void 0 : activeItem.parentId) == (overItem == null ? void 0 : overItem.id) : (activeItem == null ? void 0 : activeItem.parentId) == (parent == null ? void 0 : parent.id) || (activeItem == null ? void 0 : activeItem.parentId) == activeSpaceID
  };
  function getParentId() {
    var _a2;
    if (depth === 0) {
      return null;
    }
    if (!previousItem) {
      return null;
    }
    if (depth === previousItem.depth || depth > previousItem.depth && previousItem.item.type != "space") {
      return previousItem.parentId;
    }
    if (depth > previousItem.depth) {
      return previousItem.id;
    }
    const newParent = (_a2 = items.slice(0, overItemIndex).reverse().find((item) => item.depth === depth)) == null ? void 0 : _a2.parentId;
    return newParent != null ? newParent : null;
  }
}

// src/core/utils/keyboard.ts
var normalizedAltName = () => window.navigator.platform.startsWith("Mac") ? "\u2325" : "Alt";

// src/core/react/components/Navigator/SpaceTree/SpaceTreeItem.tsx
var import_classnames5 = __toESM(require_classnames());

// node_modules/react-dropzone/dist/es/index.js
var import_prop_types = __toESM(require_prop_types());

// node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends: __extends3,
  __assign: __assign4,
  __rest: __rest2,
  __decorate,
  __param,
  __esDecorate,
  __runInitializers,
  __propKey,
  __setFunctionName,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray: __spreadArray2,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn
} = import_tslib.default;

// node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath(file, path) {
  var f4 = withMimeType(file);
  if (typeof f4.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f4, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f4;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  ".DS_Store",
  "Thumbs.db"
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      if (isObject2(evt) && isDataTransfer(evt.dataTransfer)) {
        return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value) {
  return isObject2(value);
}
function isChangeEvt(value) {
  return isObject2(value) && isObject2(value.target);
}
function isObject2(v3) {
  return typeof v3 === "object" && v3 !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map(function(file) {
    return toFileWithPath(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function() {
    var files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h5) {
            return h5.getFile();
          }))];
        case 1:
          files = _a2.sent();
          return [2, files.map(function(file) {
            return toFileWithPath(file);
          })];
      }
    });
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a2.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i4 = 0; i4 < items.length; i4++) {
    var file = items[i4];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spreadArray2(__spreadArray2([], __read(acc), false), __read(Array.isArray(files) ? flatten(files) : [files]), false);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject("".concat(item, " is not a File"));
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a2.label = 1;
              case 1:
                _a2.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a2.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a2.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a2.label = 6;
              case 6:
                return [2];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _slicedToArray(arr, i4) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i4) || _unsupportedIterableToArray(arr, i4) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o3, minLen) {
  if (!o3)
    return;
  if (typeof o3 === "string")
    return _arrayLikeToArray(o3, minLen);
  var n2 = Object.prototype.toString.call(o3).slice(8, -1);
  if (n2 === "Object" && o3.constructor)
    n2 = o3.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o3);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o3, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n2 = true;
  var _d2 = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n2 = (_s = _i.next()).done); _n2 = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d2 = true;
    _e2 = err;
  } finally {
    try {
      if (!_n2 && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d2)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined2(file.size)) {
    if (isDefined2(minSize) && isDefined2(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined2(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined2(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined2(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles, validator = _ref.validator;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    var customErrors = validator ? validator(file) : null;
    return accepted && sizeMatch && !customErrors;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn2) {
      if (!isPropagationStopped(event) && fn2) {
        fn2.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function pickerOptionsFromAccept(accept) {
  if (isDefined2(accept)) {
    var acceptForPicker = Object.entries(accept).filter(function(_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2), mimeType = _ref3[0], ext = _ref3[1];
      var ok = true;
      if (!isMIMEType(mimeType)) {
        console.warn('Skipped "'.concat(mimeType, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.'));
        ok = false;
      }
      if (!Array.isArray(ext) || !ext.every(isExt)) {
        console.warn('Skipped "'.concat(mimeType, '" because an invalid file extension was provided.'));
        ok = false;
      }
      return ok;
    }).reduce(function(agg, _ref4) {
      var _ref5 = _slicedToArray(_ref4, 2), mimeType = _ref5[0], ext = _ref5[1];
      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, mimeType, ext));
    }, {});
    return [{
      description: "Files",
      accept: acceptForPicker
    }];
  }
  return accept;
}
function acceptPropAsAcceptAttr(accept) {
  if (isDefined2(accept)) {
    return Object.entries(accept).reduce(function(a5, _ref6) {
      var _ref7 = _slicedToArray(_ref6, 2), mimeType = _ref7[0], ext = _ref7[1];
      return [].concat(_toConsumableArray(a5), [mimeType], _toConsumableArray(ext));
    }, []).filter(function(v3) {
      return isMIMEType(v3) || isExt(v3);
    }).join(",");
  }
  return void 0;
}
function isAbort(v3) {
  return v3 instanceof DOMException && (v3.name === "AbortError" || v3.code === v3.ABORT_ERR);
}
function isSecurityError(v3) {
  return v3 instanceof DOMException && (v3.name === "SecurityError" || v3.code === v3.SECURITY_ERR);
}
function isMIMEType(v3) {
  return v3 === "audio/*" || v3 === "video/*" || v3 === "image/*" || v3 === "text/*" || /\w+\/[-+.\w]+/g.test(v3);
}
function isExt(v3) {
  return /^.*\.[\w]+$/.test(v3);
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded = ["children"];
var _excluded2 = ["open"];
var _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i4) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i4) || _unsupportedIterableToArray2(arr, i4) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o3, minLen) {
  if (!o3)
    return;
  if (typeof o3 === "string")
    return _arrayLikeToArray2(o3, minLen);
  var n2 = Object.prototype.toString.call(o3).slice(8, -1);
  if (n2 === "Object" && o3.constructor)
    n2 = o3.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o3);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray2(o3, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n2 = true;
  var _d2 = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n2 = (_s = _i.next()).done); _n2 = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d2 = true;
    _e2 = err;
  } finally {
    try {
      if (!_n2 && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d2)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys2(Object(source), true).forEach(function(key2) {
      _defineProperty2(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty2(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key2, i4;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i4 = 0; i4 < sourceSymbolKeys.length; i4++) {
      key2 = sourceSymbolKeys[i4];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i4;
  for (i4 = 0; i4 < sourceKeys.length; i4++) {
    key2 = sourceKeys[i4];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
var Dropzone = /* @__PURE__ */ k3(function(_ref, ref2) {
  var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props2 = _objectWithoutProperties(_useDropzone, _excluded2);
  A2(ref2, function() {
    return {
      open
    };
  }, [open]);
  return /* @__PURE__ */ Cn.createElement(_, null, children(_objectSpread2(_objectSpread2({}, props2), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps2 = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: true,
  autoFocus: false
};
Dropzone.defaultProps = defaultProps2;
Dropzone.propTypes = {
  children: import_prop_types.default.func,
  accept: import_prop_types.default.objectOf(import_prop_types.default.arrayOf(import_prop_types.default.string)),
  multiple: import_prop_types.default.bool,
  preventDropOnDocument: import_prop_types.default.bool,
  noClick: import_prop_types.default.bool,
  noKeyboard: import_prop_types.default.bool,
  noDrag: import_prop_types.default.bool,
  noDragEventsBubbling: import_prop_types.default.bool,
  minSize: import_prop_types.default.number,
  maxSize: import_prop_types.default.number,
  maxFiles: import_prop_types.default.number,
  disabled: import_prop_types.default.bool,
  getFilesFromEvent: import_prop_types.default.func,
  onFileDialogCancel: import_prop_types.default.func,
  onFileDialogOpen: import_prop_types.default.func,
  useFsAccessApi: import_prop_types.default.bool,
  autoFocus: import_prop_types.default.bool,
  onDragEnter: import_prop_types.default.func,
  onDragLeave: import_prop_types.default.func,
  onDragOver: import_prop_types.default.func,
  onDrop: import_prop_types.default.func,
  onDropAccepted: import_prop_types.default.func,
  onDropRejected: import_prop_types.default.func,
  onError: import_prop_types.default.func,
  validator: import_prop_types.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$props = _objectSpread2(_objectSpread2({}, defaultProps2), props2), accept = _defaultProps$props.accept, disabled = _defaultProps$props.disabled, getFilesFromEvent = _defaultProps$props.getFilesFromEvent, maxSize = _defaultProps$props.maxSize, minSize = _defaultProps$props.minSize, multiple = _defaultProps$props.multiple, maxFiles = _defaultProps$props.maxFiles, onDragEnter = _defaultProps$props.onDragEnter, onDragLeave = _defaultProps$props.onDragLeave, onDragOver = _defaultProps$props.onDragOver, onDrop = _defaultProps$props.onDrop, onDropAccepted = _defaultProps$props.onDropAccepted, onDropRejected = _defaultProps$props.onDropRejected, onFileDialogCancel = _defaultProps$props.onFileDialogCancel, onFileDialogOpen = _defaultProps$props.onFileDialogOpen, useFsAccessApi = _defaultProps$props.useFsAccessApi, autoFocus = _defaultProps$props.autoFocus, preventDropOnDocument = _defaultProps$props.preventDropOnDocument, noClick = _defaultProps$props.noClick, noKeyboard = _defaultProps$props.noKeyboard, noDrag = _defaultProps$props.noDrag, noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling, onError = _defaultProps$props.onError, validator = _defaultProps$props.validator;
  var acceptAttr = F2(function() {
    return acceptPropAsAcceptAttr(accept);
  }, [accept]);
  var pickerTypes = F2(function() {
    return pickerOptionsFromAccept(accept);
  }, [accept]);
  var onFileDialogOpenCb = F2(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop2;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = F2(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop2;
  }, [onFileDialogCancel]);
  var rootRef = _2(null);
  var inputRef = _2(null);
  var _useReducer = s2(reducer2, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive;
  var fsAccessApiWorksRef = _2(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  p2(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = _2([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  p2(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  p2(function() {
    if (!disabled && autoFocus && rootRef.current) {
      rootRef.current.focus();
    }
    return function() {
    };
  }, [rootRef, autoFocus, disabled]);
  var onErrCb = T2(function(e4) {
    if (onError) {
      onError(e4);
    } else {
      console.error(e4);
    }
  }, [onError]);
  var onDragEnterCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    dragTargetsRef.current = [].concat(_toConsumableArray2(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        var fileCount = files.length;
        var isDragAccept = fileCount > 0 && allFilesAccepted({
          files,
          accept: acceptAttr,
          minSize,
          maxSize,
          multiple,
          maxFiles,
          validator
        });
        var isDragReject = fileCount > 0 && !isDragAccept;
        dispatch({
          isDragAccept,
          isDragReject,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      }).catch(function(e4) {
        return onErrCb(e4);
      });
    }
  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);
  var onDragOverCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      type: "setDraggedFiles",
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = T2(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, acceptAttr), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e4) {
            return e4;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      }).catch(function(e4) {
        return onErrCb(e4);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]);
  var openFileDialog = T2(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: pickerTypes
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e4) {
        if (isAbort(e4)) {
          onFileDialogCancelCb(e4);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e4)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          } else {
            onErrCb(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."));
          }
        } else {
          onErrCb(e4);
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]);
  var onKeyDownCb = T2(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = T2(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = T2(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = T2(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn2) {
    return disabled ? null : fn2;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
    return noKeyboard ? null : composeHandler(fn2);
  };
  var composeDragHandler = function composeDragHandler2(fn2) {
    return noDrag ? null : composeHandler(fn2);
  };
  var stopPropagation2 = function stopPropagation3(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = F2(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
      return _objectSpread2(_objectSpread2(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "presentation"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = T2(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = F2(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
      var inputProps = _defineProperty2({
        accept: acceptAttr,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer2(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isDragActive: action.isDragActive,
        isDragAccept: action.isDragAccept,
        isDragReject: action.isDragReject
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread2({}, initialState);
    default:
      return state;
  }
}
function noop2() {
}

// src/core/react/components/Navigator/SpaceTree/SpaceTreeItem.tsx
var eventToModifier = (e4, isDefaultSpace) => e4.altKey ? "copy" : e4.shiftKey || isDefaultSpace ? "link" : "move";
var TreeItem = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f;
  const {
    id: id2,
    childCount,
    clone,
    data: data2,
    depth,
    dragActive,
    ghost,
    active,
    indentationWidth,
    indicator,
    collapsed,
    selected,
    highlighted,
    onCollapse,
    onSelectRange,
    style,
    superstate,
    disabled,
    dragStarted,
    dragOver,
    dragEnded
  } = props2;
  const {
    activePath,
    setActivePath,
    selectedPaths,
    setSelectedPaths,
    setDragPaths
  } = q2(NavigatorContext);
  const [hoverTarget, setHoverTarget] = h2(null);
  const innerRef = _2(null);
  const [dropHighlighted, setDropHighlighted] = h2(false);
  const [pathState, setPathState] = h2(
    superstate.pathsIndex.get(data2.item.path)
  );
  p2(
    () => setPathState(superstate.pathsIndex.get(data2.item.path)),
    [data2.item.path]
  );
  const openPathAtTarget = (path, e4) => {
    if (e4.shiftKey) {
      onSelectRange(path.id);
      return;
    } else if (e4.altKey) {
      setSelectedPaths((s5) => [...s5.filter((f4) => f4.id != path.id), path]);
      return;
    }
    if (isFolder) {
      if (superstate.settings.expandFolderOnClick) {
        onCollapse(data2, true);
      }
    }
    superstate.ui.openPath(
      path.item.path,
      e4.ctrlKey || e4.metaKey || e4.button == 1 ? e4.altKey ? "split" : "tab" : false
    );
    setActivePath(path.item.path);
    setSelectedPaths([path]);
  };
  const onDragStarted = (e4) => {
    if (selectedPaths.length > 1) {
      setDragPaths(selectedPaths.map((f4) => f4.path));
      superstate.ui.dragStarted(
        e4,
        selectedPaths.map((f4) => f4.path)
      );
      return;
    }
    dragStarted(data2.id);
    setDragPaths([data2.path]);
    superstate.ui.dragStarted(e4, [data2.path]);
  };
  const onDragOver = (e4) => {
    e4.preventDefault();
    if (!innerRef.current)
      return;
    const rect = innerRef.current.getBoundingClientRect();
    const x5 = e4.clientX - rect.left;
    const y5 = e4.clientY - rect.top;
    dragOver(e4, data2.id, { x: x5, y: y5 });
  };
  const onKeyDown = (e4) => {
    if (e4.key === "Control" || e4.key === "Meta") {
      if (e4.repeat)
        return;
      const el = hoverTarget;
      if (el)
        superstate.ui.openPath(pathState.path, "hover", el);
    }
  };
  const onDrop = T2((files, g4, h5) => {
    if (isFolder) {
      files.map(async (file) => {
        file.arrayBuffer().then((arrayBuffer) => {
          superstate.spaceManager.writeToPath(
            pathState.path + "/" + file.name,
            arrayBuffer,
            true
          );
        });
      });
    }
  }, []);
  const onDragEnter = T2(() => {
    if (isFolder)
      setDropHighlighted(true);
  }, []);
  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    onDragEnter,
    onDragLeave: () => setDropHighlighted(false),
    onDropAccepted: () => setDropHighlighted(false),
    onDropRejected: () => setDropHighlighted(false),
    noClick: true
  });
  const onDragEnded = (e4) => {
    dragEnded(e4, data2.id);
  };
  const mouseOut = (e4) => {
    setHoverTarget(null);
  };
  const newAction = (e4) => {
    const space = superstate.spacesIndex.get(pathState.path);
    if (e4.shiftKey) {
      showLinkMenu(
        e4,
        superstate,
        (link) => {
          pinPathToSpaceAtIndex(superstate, space, link);
        },
        i18n_default.labels.pinNotePlaceholder
      );
      return;
    }
    newPathInSpace(superstate, space, "md", null);
  };
  const handleRightClick = (e4) => {
    selectedPaths.length > 1 && selectedPaths.some((f4) => f4.id == data2.id) ? triggerMultiPathMenu(superstate, selectedPaths, e4) : contextMenu(e4);
  };
  const contextMenu = (e4) => {
    if (superstate.spacesIndex.has(pathState.path)) {
      triggerSpaceMenu(superstate, pathState, e4, activePath, data2.space);
      return;
    }
    showPathContextMenu(superstate, data2.path, data2.space, e4);
  };
  const pathStateUpdated = (payload) => {
    if (payload.path == (pathState == null ? void 0 : pathState.path)) {
      const _pathState = superstate.pathsIndex.get(pathState.path);
      if (_pathState)
        setPathState(_pathState);
    }
  };
  p2(() => {
    superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      pathStateUpdated
    );
    return () => {
      superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        pathStateUpdated
      );
    };
  }, []);
  const hoverItem = (e4) => {
    if (superstate.settings.filePreviewOnHover) {
      setHoverTarget(e4.target);
      if (e4.ctrlKey || e4.metaKey) {
        superstate.ui.openPath(pathState.path, "hover", e4.target);
      }
    }
  };
  p2(() => {
    if (hoverTarget && superstate.settings.filePreviewOnHover) {
      window.addEventListener("keydown", onKeyDown);
      return () => {
        window.removeEventListener("keydown", onKeyDown);
      };
    }
  }, [hoverTarget]);
  const dropProps = {
    onDragOver
  };
  const innerProps = {
    draggable: true,
    onDragStart: onDragStarted,
    onDrop: onDragEnded
  };
  const isSpace = (pathState == null ? void 0 : pathState.type) == "space";
  const isFolder = ((_a2 = pathState == null ? void 0 : pathState.metadata) == null ? void 0 : _a2.isFolder) || isSpace;
  const extension = (_c2 = (_b2 = pathState == null ? void 0 : pathState.metadata) == null ? void 0 : _b2.file) == null ? void 0 : _c2.extension;
  const isLink = (pathState == null ? void 0 : pathState.parent) != data2.space;
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames5.default)(
      "mk-tree-wrapper",
      clone && "mk-clone",
      ghost && "mk-ghost",
      highlighted ? "is-highlighted" : ""
    ),
    style: { position: "relative" },
    ref: innerRef,
    onMouseLeave: mouseOut,
    onMouseEnter: hoverItem,
    onKeyDown,
    onClick: (e4) => openPathAtTarget(data2, e4),
    onContextMenu: (e4) => handleRightClick(e4),
    ...dropProps,
    ...innerProps
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames5.default)(isFolder ? "nav-folder" : "nav-file"),
    style: {
      ...style,
      ...dragActive ? { pointerEvents: "none" } : {}
    },
    ...superstate.ui.getScreenType() != "mobile" ? getRootProps({ className: "dropzone" }) : {}
  }, /* @__PURE__ */ Cn.createElement("input", {
    ...getInputProps()
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames5.default)(
      "mk-tree-item",
      "tree-item-self",
      isFolder ? "nav-folder-title" : "nav-file-title",
      active ? "is-active" : "",
      selected ? "is-selected" : "",
      indicator || dropHighlighted ? "mk-indicator-row" : ""
    ),
    style: {
      "--spacing": `${indentationWidth * depth}px`,
      "--childrenCount": `${childCount * spaceRowHeight(superstate) - 13}px`
    },
    "data-path": pathState == null ? void 0 : pathState.path
  }, ((_d2 = data2.item) == null ? void 0 : _d2.type) == "space" ? /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": `${collapsed ? i18n_default.labels.expand : i18n_default.labels.collapse}`,
    className: `mk-collapse mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    onClick: (e4) => {
      onCollapse(data2, false);
      e4.stopPropagation();
    },
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker("ui//mk-ui-collapse")
    }
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-collapse mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`
  }), superstate.settings.spacesStickers && pathState && /* @__PURE__ */ Cn.createElement(PathStickerView, {
    superstate,
    pathState
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-tree-text ${isFolder ? "nav-folder-title-content" : "nav-file-title-content"}`
  }, (_f = (_e2 = pathState == null ? void 0 : pathState.displayName) != null ? _e2 : pathState == null ? void 0 : pathState.name) != null ? _f : data2.path, isLink && superstate.settings.showSpacePinIcon && /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-path-link",
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker("lucide//pin")
    }
  })), !isSpace && extension != "md" && /* @__PURE__ */ Cn.createElement("span", {
    className: "nav-file-tag"
  }, extension), !clone ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-folder-buttons"
  }, /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": i18n_default.buttons.moreOptions,
    onClick: (e4) => {
      contextMenu(e4);
      e4.stopPropagation();
    },
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker("ui//mk-ui-options")
    }
  }), isSpace && /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": i18n_default.buttons.newNote,
    onClick: (e4) => {
      newAction(e4);
      e4.stopPropagation();
    },
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker("ui//mk-ui-plus")
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)))));
};
TreeItem.displayName = "TreeItem";

// node_modules/@tanstack/react-virtual/build/esm/index.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i4 = 1; i4 < arguments.length; i4++) {
      var source = arguments[i4];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i4;
  for (i4 = 0; i4 < sourceKeys.length; i4++) {
    key2 = sourceKeys[i4];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
var props = ["bottom", "height", "left", "right", "top", "width"];
var rectChanged = function rectChanged2(a5, b4) {
  if (a5 === void 0) {
    a5 = {};
  }
  if (b4 === void 0) {
    b4 = {};
  }
  return props.some(function(prop) {
    return a5[prop] !== b4[prop];
  });
};
var observedNodes = /* @__PURE__ */ new Map();
var rafId;
var run = function run2() {
  var changedStates = [];
  observedNodes.forEach(function(state, node) {
    var newRect = node.getBoundingClientRect();
    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function(state) {
    state.callbacks.forEach(function(cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run2);
};
function observeRect(node, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;
      if (observedNodes.has(node)) {
        observedNodes.get(node).callbacks.push(cb);
      } else {
        observedNodes.set(node, {
          rect: void 0,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }
      if (wasEmpty)
        run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node);
      if (state) {
        var index = state.callbacks.indexOf(cb);
        if (index >= 0)
          state.callbacks.splice(index, 1);
        if (!state.callbacks.length)
          observedNodes["delete"](node);
        if (!observedNodes.size)
          cancelAnimationFrame(rafId);
      }
    }
  };
}
var useIsomorphicLayoutEffect3 = typeof window !== "undefined" ? y2 : p2;
function rectReducer(state, action) {
  var rect = action.rect;
  if (state.height !== rect.height || state.width !== rect.width) {
    return rect;
  }
  return state;
}
var useRect2 = function useRect3(nodeRef, initialRect) {
  if (initialRect === void 0) {
    initialRect = {
      width: 0,
      height: 0
    };
  }
  var _React$useState = Cn.useState(nodeRef.current), element = _React$useState[0], setElement = _React$useState[1];
  var _React$useReducer = Cn.useReducer(rectReducer, initialRect), rect = _React$useReducer[0], dispatch = _React$useReducer[1];
  var initialRectSet = Cn.useRef(false);
  useIsomorphicLayoutEffect3(function() {
    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  useIsomorphicLayoutEffect3(function() {
    if (element && !initialRectSet.current) {
      initialRectSet.current = true;
      var _rect = element.getBoundingClientRect();
      dispatch({
        rect: _rect
      });
    }
  }, [element]);
  Cn.useEffect(function() {
    if (!element) {
      return;
    }
    var observer = observeRect(element, function(rect2) {
      dispatch({
        rect: rect2
      });
    });
    observer.observe();
    return function() {
      observer.unobserve();
    };
  }, [element]);
  return rect;
};
var _excluded5 = ["align"];
var defaultEstimateSize = function defaultEstimateSize2() {
  return 50;
};
var defaultKeyExtractor = function defaultKeyExtractor2(index) {
  return index;
};
var defaultMeasureSize = function defaultMeasureSize2(el, horizontal) {
  var key2 = horizontal ? "offsetWidth" : "offsetHeight";
  return el[key2];
};
var defaultRangeExtractor = function defaultRangeExtractor2(range) {
  var start = Math.max(range.start - range.overscan, 0);
  var end = Math.min(range.end + range.overscan, range.size - 1);
  var arr = [];
  for (var _i = start; _i <= end; _i++) {
    arr.push(_i);
  }
  return arr;
};
var useVirtual = function useVirtual2(_ref) {
  var _measurements;
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 0 : _ref$size, _ref$estimateSize = _ref.estimateSize, estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize, _ref$overscan = _ref.overscan, overscan = _ref$overscan === void 0 ? 1 : _ref$overscan, _ref$paddingStart = _ref.paddingStart, paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart, _ref$paddingEnd = _ref.paddingEnd, paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd, parentRef = _ref.parentRef, _ref$horizontal = _ref.horizontal, horizontal = _ref$horizontal === void 0 ? false : _ref$horizontal, scrollToFn = _ref.scrollToFn, useObserver = _ref.useObserver, initialRect = _ref.initialRect, onScrollElement = _ref.onScrollElement, scrollOffsetFn = _ref.scrollOffsetFn, _ref$keyExtractor = _ref.keyExtractor, keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor, _ref$measureSize = _ref.measureSize, measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize, _ref$rangeExtractor = _ref.rangeExtractor, rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;
  var sizeKey = horizontal ? "width" : "height";
  var scrollKey = horizontal ? "scrollLeft" : "scrollTop";
  var latestRef = _2({
    outerSize: 0,
    scrollOffset: 0,
    measurements: [],
    totalSize: 0
  });
  var _React$useState = h2(0), scrollOffset = _React$useState[0], setScrollOffset = _React$useState[1];
  latestRef.current.scrollOffset = scrollOffset;
  var useMeasureParent = useObserver || useRect2;
  var _useMeasureParent = useMeasureParent(parentRef, initialRect), outerSize = _useMeasureParent[sizeKey];
  latestRef.current.outerSize = outerSize;
  var defaultScrollToFn = T2(function(offset2) {
    if (parentRef.current) {
      parentRef.current[scrollKey] = offset2;
    }
  }, [parentRef, scrollKey]);
  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;
  var scrollTo = T2(function(offset2) {
    resolvedScrollToFn(offset2, defaultScrollToFn);
  }, [defaultScrollToFn, resolvedScrollToFn]);
  var _React$useState2 = h2({}), measuredCache = _React$useState2[0], setMeasuredCache = _React$useState2[1];
  var measure = T2(function() {
    return setMeasuredCache({});
  }, []);
  var pendingMeasuredCacheIndexesRef = _2([]);
  var measurements = F2(function() {
    var min3 = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;
    pendingMeasuredCacheIndexesRef.current = [];
    var measurements2 = latestRef.current.measurements.slice(0, min3);
    for (var _i2 = min3; _i2 < size; _i2++) {
      var key2 = keyExtractor(_i2);
      var measuredSize = measuredCache[key2];
      var _start = measurements2[_i2 - 1] ? measurements2[_i2 - 1].end : paddingStart;
      var _size = typeof measuredSize === "number" ? measuredSize : estimateSize(_i2);
      var _end = _start + _size;
      measurements2[_i2] = {
        index: _i2,
        start: _start,
        size: _size,
        end: _end,
        key: key2
      };
    }
    return measurements2;
  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);
  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;
  latestRef.current.measurements = measurements;
  latestRef.current.totalSize = totalSize;
  var element = onScrollElement ? onScrollElement.current : parentRef.current;
  var scrollOffsetFnRef = _2(scrollOffsetFn);
  scrollOffsetFnRef.current = scrollOffsetFn;
  useIsomorphicLayoutEffect3(function() {
    if (!element) {
      setScrollOffset(0);
      return;
    }
    var onScroll = function onScroll2(event) {
      var offset2 = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];
      setScrollOffset(offset2);
    };
    onScroll();
    element.addEventListener("scroll", onScroll, {
      capture: false,
      passive: true
    });
    return function() {
      element.removeEventListener("scroll", onScroll);
    };
  }, [element, scrollKey]);
  var _calculateRange = calculateRange(latestRef.current), start = _calculateRange.start, end = _calculateRange.end;
  var indexes = F2(function() {
    return rangeExtractor({
      start,
      end,
      overscan,
      size: measurements.length
    });
  }, [start, end, overscan, measurements.length, rangeExtractor]);
  var measureSizeRef = _2(measureSize);
  measureSizeRef.current = measureSize;
  var virtualItems = F2(function() {
    var virtualItems2 = [];
    var _loop = function _loop2(k6, len2) {
      var i4 = indexes[k6];
      var measurement = measurements[i4];
      var item = _extends({}, measurement, {
        measureRef: function measureRef(el) {
          if (el) {
            var measuredSize = measureSizeRef.current(el, horizontal);
            if (measuredSize !== item.size) {
              var _scrollOffset = latestRef.current.scrollOffset;
              if (item.start < _scrollOffset) {
                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));
              }
              pendingMeasuredCacheIndexesRef.current.push(i4);
              setMeasuredCache(function(old) {
                var _extends2;
                return _extends({}, old, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));
              });
            }
          }
        }
      });
      virtualItems2.push(item);
    };
    for (var k5 = 0, len = indexes.length; k5 < len; k5++) {
      _loop(k5);
    }
    return virtualItems2;
  }, [indexes, defaultScrollToFn, horizontal, measurements]);
  var mountedRef = _2(false);
  useIsomorphicLayoutEffect3(function() {
    if (mountedRef.current) {
      setMeasuredCache({});
    }
    mountedRef.current = true;
  }, [estimateSize]);
  var scrollToOffset = T2(function(toOffset, _temp) {
    var _ref2 = _temp === void 0 ? {
      align: "start"
    } : _temp, align = _ref2.align;
    var _latestRef$current = latestRef.current, scrollOffset2 = _latestRef$current.scrollOffset, outerSize2 = _latestRef$current.outerSize;
    if (align === "auto") {
      if (toOffset <= scrollOffset2) {
        align = "start";
      } else if (toOffset >= scrollOffset2 + outerSize2) {
        align = "end";
      } else {
        align = "start";
      }
    }
    if (align === "start") {
      scrollTo(toOffset);
    } else if (align === "end") {
      scrollTo(toOffset - outerSize2);
    } else if (align === "center") {
      scrollTo(toOffset - outerSize2 / 2);
    }
  }, [scrollTo]);
  var tryScrollToIndex = T2(function(index, _temp2) {
    var _ref3 = _temp2 === void 0 ? {
      align: "auto"
    } : _temp2, align = _ref3.align, rest = _objectWithoutPropertiesLoose2(_ref3, _excluded5);
    var _latestRef$current2 = latestRef.current, measurements2 = _latestRef$current2.measurements, scrollOffset2 = _latestRef$current2.scrollOffset, outerSize2 = _latestRef$current2.outerSize;
    var measurement = measurements2[Math.max(0, Math.min(index, size - 1))];
    if (!measurement) {
      return;
    }
    if (align === "auto") {
      if (measurement.end >= scrollOffset2 + outerSize2) {
        align = "end";
      } else if (measurement.start <= scrollOffset2) {
        align = "start";
      } else {
        return;
      }
    }
    var toOffset = align === "center" ? measurement.start + measurement.size / 2 : align === "end" ? measurement.end : measurement.start;
    scrollToOffset(toOffset, _extends({
      align
    }, rest));
  }, [scrollToOffset, size]);
  var scrollToIndex = T2(function(index, options) {
    tryScrollToIndex(index, options);
    requestAnimationFrame(function() {
      tryScrollToIndex(index, options);
    });
  }, [tryScrollToIndex]);
  return {
    virtualItems,
    totalSize,
    scrollToOffset,
    scrollToIndex,
    measure
  };
};
var findNearestBinarySearch = function findNearestBinarySearch2(low, high, getCurrentValue, value) {
  while (low <= high) {
    var middle = (low + high) / 2 | 0;
    var currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange(_ref4) {
  var measurements = _ref4.measurements, outerSize = _ref4.outerSize, scrollOffset = _ref4.scrollOffset;
  var size = measurements.length - 1;
  var getOffset = function getOffset2(index) {
    return measurements[index].start;
  };
  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);
  var end = start;
  while (end < size && measurements[end].end < scrollOffset + outerSize) {
    end++;
  }
  return {
    start,
    end
  };
}

// src/core/react/components/Navigator/SpaceTree/SpaceTreeVirtualized.tsx
var VirtualizedList = Cn.memo(function VirtualizedList2(props2) {
  const {
    flattenedTree,
    projected,
    vRef,
    selectedPaths,
    activePath,
    selectRange: selectRange2,
    handleCollapse,
    superstate,
    overIndex,
    activeIndex,
    indentationWidth
  } = props2;
  const parentRef = Cn.useRef(null);
  const rowHeight = (index) => flattenedTree[index].parentId == null ? spaceRowHeight(superstate) : spaceRowHeight(superstate);
  const rowVirtualizer = useVirtual({
    size: flattenedTree.length,
    paddingEnd: 24,
    parentRef,
    estimateSize: Cn.useCallback(
      (index) => rowHeight(index),
      [flattenedTree]
    ),
    overscan: 0
  });
  vRef.current = rowVirtualizer;
  rowVirtualizer.scrollToIndex;
  const dropIndicator = (index) => {
    return overIndex == index && projected && projected.insert;
  };
  const highlighted = (index) => {
    if (!projected || !flattenedTree[index] || !(projected == null ? void 0 : projected.droppable))
      return false;
    return !projected.sortable && !projected.insert && flattenedTree[index].parentId && flattenedTree[index].parentId.startsWith(projected.parentId) || flattenedTree[index].id == projected.parentId;
  };
  const calcYOffset = (index) => {
    if (!projected)
      return 0;
    if (projected.insert) {
      if (projected.copy && !projected.reorder)
        return 0;
      if (index > activeIndex) {
        return -spaceRowHeight(superstate);
      } else if (index == activeIndex) {
        return spaceRowHeight(superstate) * (overIndex - activeIndex);
      } else {
        return 0;
      }
    } else if (projected.sortable) {
      const targetIndex = overIndex < activeIndex ? overIndex : overIndex;
      if (projected.copy && !projected.reorder) {
        if (index == activeIndex) {
          return spaceRowHeight(superstate) * (targetIndex - activeIndex);
        } else if (index >= targetIndex) {
          return spaceRowHeight(superstate);
        } else {
          return 0;
        }
      }
      if (index == activeIndex) {
        return spaceRowHeight(superstate) * (targetIndex - activeIndex);
      } else if (index > activeIndex && index <= targetIndex) {
        return -spaceRowHeight(superstate);
      } else if (index < activeIndex && index >= targetIndex) {
        return spaceRowHeight(superstate);
      } else {
        return 0;
      }
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: parentRef,
    style: {
      width: `100%`,
      height: `100%`,
      overflow: "auto",
      "--spaceRowHeight": spaceRowHeight(superstate) + "px"
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    style: {
      height: `${rowVirtualizer.totalSize}px`,
      width: "100%",
      position: "relative"
    }
  }, rowVirtualizer.virtualItems.map((virtualRow) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: virtualRow.index,
      ref: virtualRow.measureRef,
      style: {
        position: "absolute",
        top: 0,
        left: 0,
        width: "100%",
        height: `${rowHeight(virtualRow.index)}px`,
        transform: `translateY(${virtualRow.start}px)`
      }
    }, /* @__PURE__ */ Cn.createElement(TreeItem, {
      key: flattenedTree[virtualRow.index].id,
      id: flattenedTree[virtualRow.index].id,
      data: flattenedTree[virtualRow.index],
      disabled: false,
      depth: flattenedTree[virtualRow.index].depth,
      childCount: flattenedTree[virtualRow.index].childrenCount,
      indentationWidth,
      dragStarted: props2.dragStarted,
      dragOver: props2.dragOver,
      dragEnded: props2.dragEnded,
      dragActive: activeIndex != -1,
      indicator: dropIndicator(virtualRow.index),
      superstate,
      ghost: overIndex != -1 && activeIndex == virtualRow.index,
      style: {
        opacity: projected && projected.insert && !projected.copy && virtualRow.index == activeIndex ? 0 : 1,
        transform: CSS.Translate.toString({
          x: projected && projected.sortable && virtualRow.index == activeIndex && projected ? (projected.depth - flattenedTree[virtualRow.index].depth) * indentationWidth : 0,
          y: calcYOffset(virtualRow.index),
          scaleX: 0,
          scaleY: 0
        })
      },
      onSelectRange: selectRange2,
      active: activePath == ((_a2 = flattenedTree[virtualRow.index].item) == null ? void 0 : _a2.path),
      highlighted: highlighted(virtualRow.index),
      selected: selectedPaths.some(
        (g4) => g4.id == flattenedTree[virtualRow.index].id
      ),
      collapsed: flattenedTree[virtualRow.index].collapsed,
      onCollapse: handleCollapse
    }));
  })));
});

// src/core/react/components/Navigator/SpaceTree/SpaceTreeView.tsx
var SpaceTreeComponent = (props2) => {
  const { superstate } = props2;
  const indentationWidth = 16;
  const [expandedSpaces, setExpandedSpaces] = h2(
    superstate.settings.expandedSpaces
  );
  const {
    activePath,
    activeViewSpace,
    setActivePath,
    selectedPaths,
    setSelectedPaths,
    dragPaths,
    setDragPaths,
    queryResults,
    queryMode,
    modifier,
    setModifier
  } = q2(NavigatorContext);
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const nextTreeScrollPath = _2(null);
  const [offset2, setOffset] = h2({ x: 0, y: 0 });
  const listRef = _2(null);
  const treeForPaths = (paths) => {
    const tree = [];
    paths.map((f4) => {
      const pathState = props2.superstate.pathsIndex.get(f4);
      return {
        ...pathState
      };
    }).filter((f4) => f4).forEach((item) => {
      if (!superstate.spacesIndex.has(item.path)) {
        item = item;
        tree.push(
          pathStateToTreeNode(
            superstate,
            item,
            item.parent,
            item.path,
            0,
            0,
            false,
            false,
            0,
            null
          )
        );
      } else {
        tree.push(
          ...treeForSpace(
            superstate.spacesIndex.get(item.path),
            item,
            0,
            null,
            activeId,
            false,
            false,
            null
          )
        );
      }
    });
    return tree;
  };
  const treeForRoot = (space, activeId2) => {
    var _a2, _b2, _c2;
    const tree = [];
    const spaceSort = (_b2 = (_a2 = space.metadata) == null ? void 0 : _a2.sort) != null ? _b2 : {
      field: "rank",
      asc: true,
      group: true
    };
    const children = (_c2 = superstate.getSpaceItems(space.path)) != null ? _c2 : [];
    children.sort(spaceSortFn(spaceSort)).forEach((item) => {
      const _parentId = space.path;
      if (item.type != "space") {
        const id2 = _parentId + "/" + item.path;
        const itemCollapsed = !expandedSpaces.includes(id2);
        tree.push(
          pathStateToTreeNode(
            superstate,
            item,
            space.path,
            item.path,
            0,
            0,
            itemCollapsed,
            space.sortable,
            0,
            _parentId
          )
        );
      } else {
        if (superstate.spacesIndex.has(item.path))
          tree.push(
            ...treeForSpace(
              superstate.spacesIndex.get(item.path),
              item,
              0,
              _parentId,
              activeId2,
              space.sortable,
              false,
              space.path
            )
          );
      }
    });
    return tree;
  };
  const treeForSpace = (space, path, depth, parentId, activeId2, sortable, root, parentPath) => {
    var _a2, _b2, _c2;
    const tree = [];
    const id2 = parentId ? parentId + "/" + space.path : space.path;
    const spaceCollapsed = !expandedSpaces.includes(id2) || activeId2 == id2;
    const spaceSort = (_b2 = (_a2 = space.metadata) == null ? void 0 : _a2.sort) != null ? _b2 : {
      field: "rank",
      asc: true,
      group: true
    };
    const children = (_c2 = superstate.getSpaceItems(space.path)) != null ? _c2 : [];
    if (!spaceCollapsed || root) {
      children.sort(spaceSortFn(spaceSort)).forEach((item) => {
        const _parentId = parentId ? parentId + "/" + space.path : space.path;
        if (item.type != "space") {
          tree.push(
            pathStateToTreeNode(
              superstate,
              item,
              space.path,
              item.path,
              depth + 1,
              0,
              true,
              space.sortable,
              0,
              _parentId
            )
          );
        } else {
          if (superstate.spacesIndex.has(item.path)) {
            tree.push(
              ...treeForSpace(
                superstate.spacesIndex.get(item.path),
                item,
                depth + 1,
                _parentId,
                activeId2,
                space.sortable,
                false,
                space.path
              )
            );
          }
        }
      });
    }
    if (!root)
      tree.splice(
        0,
        0,
        spaceToTreeNode(
          path,
          spaceCollapsed,
          sortable,
          depth,
          parentId,
          parentPath,
          tree.length
        )
      );
    return tree;
  };
  const [flattenedTree, setFlattenedTree] = h2([]);
  const refreshableSpaces = F2(
    () => [
      activeViewSpace == null ? void 0 : activeViewSpace.path,
      ...flattenedTree.filter((f4) => f4.type == "space").map((f4) => f4.path)
    ].filter((f4) => f4),
    [activeViewSpace, flattenedTree]
  );
  const retrieveData = () => {
    if (queryMode) {
      setFlattenedTree(treeForPaths(queryResults));
      return;
    }
    if (!activeViewSpace)
      return setFlattenedTree([]);
    const tree = [];
    tree.push(...treeForRoot(activeViewSpace, activeId));
    if (nextTreeScrollPath.current) {
      const index = tree.findIndex(
        (f4) => {
          var _a2;
          return ((_a2 = f4.item) == null ? void 0 : _a2.path) == nextTreeScrollPath.current;
        }
      );
      if (index != -1) {
        listRef.current.scrollToIndex(index);
        nextTreeScrollPath.current = null;
      }
    }
    setFlattenedTree(tree);
  };
  p2(() => {
    if (selectedPaths.length <= 1) {
      if (!selectedPaths[0] || selectedPaths[0].item.path != activePath)
        setSelectedPaths([]);
      if (superstate.settings.revealActiveFile)
        revealPath(activePath);
    }
    props2.superstate.ui.eventsDispatch.addListener(
      "activePathChanged",
      changeActivePath
    );
    return () => {
      props2.superstate.ui.eventsDispatch.removeListener(
        "activePathChanged",
        changeActivePath
      );
    };
  }, [activePath]);
  p2(() => {
    window.addEventListener("dragend", resetState);
    return () => {
      window.removeEventListener("dragend", resetState);
    };
  });
  p2(() => {
    superstate.eventsDispatcher.addListener("settingsChanged", settingsChanged);
    return () => {
      superstate.eventsDispatcher.removeListener(
        "settingsChanged",
        settingsChanged
      );
    };
  }, [activeViewSpace]);
  p2(() => {
    window.addEventListener(eventTypes.revealPath, handleRevealPathEvent);
    return () => {
      window.removeEventListener(eventTypes.revealPath, handleRevealPathEvent);
    };
  }, [activeViewSpace]);
  const revealPath = (path) => {
    var _a2;
    if (!path || (activeViewSpace == null ? void 0 : activeViewSpace.path) != "/")
      return;
    const folders = path.split("/");
    const openPaths = folders.reduce(
      (p3, c4, index) => [...p3, index == 0 ? c4 : `/${p3[index]}/${c4}`],
      ["/"]
    ).slice(0, -1);
    const newOpenFolders = [
      ...(_a2 = expandedSpaces.filter((f4) => !openPaths.find((g4) => g4 == f4))) != null ? _a2 : [],
      ...openPaths
    ];
    superstate.settings.expandedSpaces = newOpenFolders;
    nextTreeScrollPath.current = "/" + path;
    superstate.saveSettings();
  };
  const handleRevealPathEvent = (evt) => {
    if (evt.detail)
      revealPath(evt.detail.path);
  };
  p2(() => {
    retrieveData();
    props2.superstate.eventsDispatcher.addListener(
      "superstateUpdated",
      retrieveData
    );
    return () => {
      props2.superstate.eventsDispatcher.addListener(
        "superstateUpdated",
        retrieveData
      );
    };
  }, [expandedSpaces, activeViewSpace, activeId, queryResults, queryMode]);
  p2(() => {
    const spaceUpdated = (payload) => {
      if (refreshableSpaces.some((f4) => f4 == payload.path)) {
        retrieveData();
      }
    };
    props2.superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      spaceUpdated
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        spaceUpdated
      );
    };
  }, [refreshableSpaces]);
  const changeActivePath = (path) => {
    setActivePath(path);
  };
  const settingsChanged = () => {
    setExpandedSpaces(superstate.settings.expandedSpaces);
  };
  const overIndex = F2(
    () => flattenedTree.findIndex((f4) => f4.id == overId),
    [overId, flattenedTree]
  );
  const activeIndex = F2(
    () => flattenedTree.findIndex((f4) => f4.id == activeId),
    [activeId, flattenedTree]
  );
  const sortedIds = F2(
    () => flattenedTree.map(({ id: id2 }) => id2),
    [flattenedTree]
  );
  const selectRange2 = T2(
    (fromId) => {
      const startIndex = sortedIds.findIndex((f4) => f4 == fromId);
      const selectedPathsStartIndex = sortedIds.findIndex(
        (f4) => {
          var _a2;
          return f4 == ((_a2 = selectedPaths[0]) == null ? void 0 : _a2.id);
        }
      );
      const selectedPathsEndIndex = sortedIds.findIndex(
        (f4) => {
          var _a2;
          return f4 == ((_a2 = selectedPaths[selectedPaths.length - 1]) == null ? void 0 : _a2.id);
        }
      );
      if (startIndex < selectedPathsStartIndex) {
        setSelectedPaths(
          flattenedTree.slice(startIndex, selectedPathsEndIndex + 1).filter((f4) => f4.item)
        );
      } else {
        setSelectedPaths(
          flattenedTree.slice(selectedPathsStartIndex, startIndex + 1).filter((f4) => f4.item)
        );
      }
    },
    [sortedIds, selectedPaths, setSelectedPaths, flattenedTree]
  );
  const [projected, setProjected] = h2(null);
  p2(() => {
    const dragDepth = getDragDepth(offset2.x, indentationWidth);
    const activeItem = flattenedTree.find(({ id: id2 }) => id2 === activeId);
    const _projected = overId ? getProjection(
      activeItem,
      flattenedTree,
      dragPaths,
      overIndex,
      dragDepth,
      offset2.y,
      activeIndex < overIndex,
      modifier,
      activeViewSpace.path
    ) : null;
    setProjected((p3) => !(0, import_lodash11.isEqual)(p3, _projected) ? _projected : p3);
  }, [
    activeId,
    flattenedTree,
    overId,
    overIndex,
    dragPaths,
    offset2,
    activeIndex,
    modifier,
    activeViewSpace
  ]);
  const dragStarted = (activeId2) => {
    const activeItem = flattenedTree.find(({ id: id2 }) => id2 === activeId2);
    setActiveId(activeId2);
    setOverId(activeId2);
    if (activeItem) {
      if (selectedPaths.length > 1) {
        setDragPaths(selectedPaths.map((f4) => f4.path));
      } else {
        setDragPaths([activeItem.path]);
      }
    }
    document.body.style.setProperty("cursor", "grabbing");
  };
  const parentName = F2(
    () => {
      var _a2, _b2, _c2;
      return projected ? (_c2 = (_b2 = (_a2 = flattenedTree.find((f4) => f4.id == projected.parentId)) == null ? void 0 : _a2.item) == null ? void 0 : _b2.name) != null ? _c2 : activeViewSpace == null ? void 0 : activeViewSpace.name : null;
    },
    [flattenedTree, projected, activeViewSpace]
  );
  const overName = F2(
    () => {
      var _a2, _b2;
      return projected && ((_b2 = (_a2 = flattenedTree.find((f4) => f4.id == projected.overId)) == null ? void 0 : _a2.item) == null ? void 0 : _b2.name);
    },
    [flattenedTree, projected]
  );
  const dragOver = (e4, _overId, position) => {
    const modifier2 = eventToModifier(e4);
    setModifier(modifier2);
    e4.dataTransfer.dropEffect = modifier2;
    if (projected) {
      superstate.ui.setDragLabel(
        `${projected.reorder && !projected.insert ? i18n_default.labels.reorderIn : modifier2 == "move" || !modifier2 ? i18n_default.labels.moveTo : modifier2 == "link" ? i18n_default.labels.addTo : i18n_default.labels.copyTo} ${projected.insert ? overName : parentName}`
      );
    }
    if (dragPaths.length > 1) {
      if (_overId && _overId != overId)
        setOverId(_overId);
      return;
    }
    if (_overId && _overId != overId)
      setOverId(_overId);
    const x5 = offset2.x;
    const y5 = offset2.y;
    const newX = 2 * Math.round(Math.max(1, position.x - indentationWidth - 20));
    const newY = 2 * Math.round(position.y / 2);
    if (x5 != newX || y5 != newY) {
      setOffset({
        x: newX,
        y: newY
      });
    }
  };
  p2(() => {
    if (dragPaths.length == 0) {
      setOverId(null);
      setActiveId(null);
      setOffset({ x: 0, y: 0 });
      setModifier(null);
      setProjected(null);
      dragCounter.current = 0;
      document.body.style.setProperty("cursor", "");
    }
  }, [dragPaths]);
  const dragEnded = (e4, overId2) => {
    const modifiers = eventToModifier(e4);
    dropPathsInTree(
      superstate,
      dragPaths,
      activeId,
      overId2,
      projected,
      flattenedTree,
      activeViewSpace,
      modifiers
    );
    resetState();
  };
  const handleCollapse = T2(
    (folder, open) => {
      const folderOpen = expandedSpaces == null ? void 0 : expandedSpaces.includes(folder.id);
      const newOpenFolders = !folderOpen || open ? [...expandedSpaces, folder.id] : expandedSpaces.filter(
        (openFolder) => folder.id !== openFolder
      );
      superstate.settings.expandedSpaces = newOpenFolders;
      superstate.saveSettings();
    },
    [superstate, expandedSpaces]
  );
  function resetState() {
    setDragPaths([]);
    setOverId(null);
    setActiveId(null);
    setOffset({ x: 0, y: 0 });
    setModifier(null);
    setProjected(null);
    dragCounter.current = 0;
    document.body.style.setProperty("cursor", "");
  }
  const dragCounter = _2(0);
  const dragEnter = () => {
    dragCounter.current++;
  };
  const dragLeave = () => {
    dragCounter.current--;
    if (dragCounter.current == 0) {
      setOverId(null);
      setOffset({ x: 0, y: 0 });
      setProjected(null);
      dragCounter.current = 0;
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-tree",
    onDragEnter: () => dragEnter(),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => e4.preventDefault(),
    onDrop: (e4) => {
      if (overId) {
        dragEnded(e4, overId);
      } else {
        resetState();
      }
    }
  }, /* @__PURE__ */ Cn.createElement(VirtualizedList, {
    vRef: listRef,
    flattenedTree,
    projected,
    handleCollapse,
    activePath,
    superstate,
    selectedPaths,
    selectRange: selectRange2,
    indentationWidth,
    dragStarted,
    dragOver,
    dragEnded,
    overIndex,
    activeIndex
  }), modifier && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-hint-dnd",
    style: {
      position: "absolute",
      bottom: "10px",
      left: "10px",
      background: "var(--interactive-accent)",
      boxShadow: "var(--background-modifier-box-shadow)",
      padding: "4px 8px",
      borderRadius: "4px",
      color: "var(--text-on-accent)",
      fontSize: "var(--font-ui-smaller)"
    }
  }, /* @__PURE__ */ Cn.createElement("div", null, i18n_default.hintText.dragDropModifierKeys.replace("${1}", "shift").replace("${2}", normalizedAltName()))));
};

// src/core/react/components/Navigator/MainMenu.tsx
var import_classnames6 = __toESM(require_classnames());
var MainMenu = (props2) => {
  const { superstate } = props2;
  const {
    activeViewSpace,
    setDragPaths,
    activeQuery,
    queryMode,
    setQueryMode,
    setActiveQuery
  } = q2(NavigatorContext);
  const [activeViewPath, setActiveViewPath] = h2(
    activeViewSpace && props2.superstate.pathsIndex.get(activeViewSpace.path)
  );
  const reloadSpace = () => {
    setActiveViewPath(
      activeViewSpace && props2.superstate.pathsIndex.get(activeViewSpace.path)
    );
  };
  p2(() => {
    const refreshActiveViewPath = (payload) => {
      if (payload.path == (activeViewSpace == null ? void 0 : activeViewSpace.path))
        reloadSpace();
    };
    reloadSpace();
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      refreshActiveViewPath
    );
    props2.superstate.eventsDispatcher.addListener(
      "superstateUpdated",
      reloadSpace
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        refreshActiveViewPath
      );
      props2.superstate.eventsDispatcher.removeListener(
        "superstateUpdated",
        reloadSpace
      );
    };
  }, [activeViewSpace]);
  const ref2 = _2();
  const inputRef = _2();
  const [queryString, setQueryString] = h2("");
  const [filters, setFilters] = h2([]);
  const [hover, setHover] = h2(false);
  p2(() => {
    if (queryMode && inputRef.current)
      inputRef.current.focus();
  }, [queryMode]);
  const queries = F2(() => {
    return queryString.length > 0 ? [
      {
        type: "any",
        trueFalse: true,
        filters: [
          {
            type: "fileprop",
            fType: "text",
            field: "name",
            fn: "include",
            value: queryString
          }
        ]
      },
      ...filters
    ] : filters;
  }, [queryString, filters]);
  p2(() => {
    setActiveQuery(queries);
  }, [queries]);
  const { dragPaths, saveActiveSpace } = q2(NavigatorContext);
  const onDragOver = (e4) => {
    e4.preventDefault();
    e4.dataTransfer.dropEffect = "none";
    if (dragPaths.length == 1) {
      superstate.ui.setDragLabel(i18n_default.menu.openSpace);
      setHover(true);
    }
  };
  const dragLeave = () => {
    setHover(false);
  };
  const onDrop = () => {
    if (dragPaths.length == 1 && props2.superstate.spacesIndex.has(dragPaths[0])) {
      saveActiveSpace(dragPaths[0]);
    }
    setHover(false);
  };
  const saveQuerySpace = (e4) => {
    showSpacesMenu(
      e4,
      props2.superstate,
      (link, isNew) => {
        if (!isNew) {
          saveSpaceMetadataValue(
            props2.superstate,
            link,
            "filters",
            activeQuery
          );
        } else {
          createSpace(props2.superstate, link, {
            filters: activeQuery
          }).then((f4) => props2.superstate.ui.openPath(link, false));
        }
      },
      false,
      true
    );
  };
  const defaultAddAction = (superstate2, space, path) => {
    if (space.path == "spaces://$tags") {
      superstate2.ui.openModal("New Tag", (props3) => {
        return /* @__PURE__ */ Cn.createElement(InputModal, {
          value: "",
          saveLabel: i18n_default.labels.saveView,
          hide: props3.hide,
          saveValue: (value) => addTag(superstate2, value)
        });
      });
    } else {
      newPathInSpace(superstate2, space, "md", path);
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-main-menu-container"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-main-menu-inner"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames6.default)("mk-main-menu", queryMode && "mk-hidden")
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-main-menu-button mk-main-menu-button-primary ${hover && "is-active"}`,
    ref: ref2,
    onClick: (e4) => props2.superstate.ui.mainMenu(ref2.current, superstate),
    onContextMenu: (e4) => triggerSpaceMenu(props2.superstate, activeViewPath, e4, null, null),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => onDragOver(e4),
    onDrop: () => onDrop()
  }, activeViewPath ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames6.default)("mk-main-menu-sticker"),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        activeViewPath.label.sticker
      )
    },
    draggable: true,
    onDragStart: () => setDragPaths([activeViewPath.path])
  }), activeViewPath.displayName) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-main-menu-button",
    onClick: (e4) => e4.metaKey ? props2.superstate.ui.quickOpen() : setQueryMode((p3) => !p3)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-search")
    }
  }))), /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames6.default)(
      "mk-main-menu-search",
      !queryMode && "mk-hidden"
    )
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-main-menu-button",
    onClick: (e4) => setQueryMode((p3) => !p3)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//arrow-left")
    }
  })), /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    placeholder: i18n_default.labels.navigatorSearchPlaceholder,
    ref: inputRef,
    type: "text",
    value: queryString,
    tabIndex: -1,
    onChange: (e4) => setQueryString(e4.target.value)
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.addToSpace,
    className: "mk-main-menu-button",
    onClick: (e4) => saveQuerySpace(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//plus-square")
    }
  }))), /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": (activeViewSpace == null ? void 0 : activeViewSpace.path) == "spaces://$tags" ? i18n_default.buttons.addTag : i18n_default.buttons.newNote,
    className: "mk-main-menu-button",
    onClick: (e4) => e4.metaKey ? showSpaceAddMenu(props2.superstate, e4, activeViewSpace) : defaultAddAction(superstate, activeViewSpace, null)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(
        (activeViewSpace == null ? void 0 : activeViewSpace.path) == "spaces://$tags" ? "lucide//plus" : "ui//mk-ui-new-note"
      )
    }
  }))), queryMode && /* @__PURE__ */ Cn.createElement(SpaceQuery, {
    superstate,
    filters,
    setFilters
  }));
};

// src/core/react/components/Navigator/Waypoints/Waypoint.tsx
var import_classnames7 = __toESM(require_classnames());
var SortablePinnedSpaceItem = ({
  id: id2,
  index,
  ...props2
}) => {
  return /* @__PURE__ */ Cn.createElement(PinnedSpace, {
    index,
    ...props2
  });
};
var PinnedSpace = k3(
  ({
    pin,
    indicator,
    highlighted,
    superstate,
    style,
    clone,
    ghost,
    dragStart,
    dragOver,
    dragEnded,
    index
  }, ref2) => {
    var _a2, _b2, _c2, _d2;
    const innerRef = _2(null);
    const {
      setDragPaths,
      activeViewSpace,
      activePath,
      saveActiveSpace,
      setModifier
    } = q2(NavigatorContext);
    const onDragStarted = (e4) => {
      if (dragStart && pin) {
        dragStart(pin.path);
        setDragPaths([pin.path]);
      }
    };
    const onDragEnded = (e4) => {
      if (dragEnded) {
        dragEnded();
      }
    };
    const innerProps = {
      draggable: true,
      onDragStart: onDragStarted,
      onDragEnded,
      onDrop: onDragEnded
    };
    return pin ? /* @__PURE__ */ Cn.createElement("div", {
      ref: innerRef,
      className: "mk-waypoint",
      onClick: (e4) => {
        if (e4.metaKey)
          superstate.ui.openPath(pin.path, false);
        saveActiveSpace(pin.path);
      },
      onContextMenu: (e4) => triggerSpaceMenu(
        superstate,
        pin,
        e4,
        activePath,
        "spaces://$waypoints"
      ),
      onDragOver: (e4) => {
        e4.preventDefault();
        setModifier(eventToModifier(e4));
        if (!innerRef.current)
          return;
        const rect = innerRef.current.getBoundingClientRect();
        const x5 = e4.clientX - rect.left;
        if (dragOver && pin)
          dragOver(pin.path, x5);
      },
      ...innerProps
    }, /* @__PURE__ */ Cn.createElement("div", {
      ref: ref2,
      className: (0, import_classnames7.default)(
        "mk-waypoints-item",
        "clickable-icon",
        "nav-action-button",
        ((activeViewSpace == null ? void 0 : activeViewSpace.path) == (pin == null ? void 0 : pin.path) || highlighted) && "mk-active",
        indicator && "mk-indicator",
        clone && "mk-clone",
        ghost && "mk-ghost"
      ),
      dangerouslySetInnerHTML: {
        __html: superstate.ui.getSticker((_a2 = pin.label) == null ? void 0 : _a2.sticker)
      },
      style: {
        ...style,
        ...((_c2 = (_b2 = pin.label) == null ? void 0 : _b2.color) == null ? void 0 : _c2.length) > 0 ? {
          "--label-color": `${(_d2 = pin.label) == null ? void 0 : _d2.color}`,
          "--icon-color": `var(--text-normal)`
        } : {
          "--icon-color": `var(--text-muted)`
        },
        ...{ pointerEvents: "none" }
      }
    })) : /* @__PURE__ */ Cn.createElement("div", {
      ref: innerRef,
      className: "mk-waypoint"
    }, /* @__PURE__ */ Cn.createElement("div", {
      ref: ref2,
      className: (0, import_classnames7.default)(
        "mk-waypoints-item",
        "clickable-icon",
        "nav-action-button",
        highlighted && "mk-active",
        indicator && "mk-indicator",
        clone && "mk-clone",
        ghost && "mk-ghost"
      ),
      style: {
        ...style,
        ...{ pointerEvents: "none" }
      }
    }));
  }
);
PinnedSpace.displayName = "PinnedSpace";

// src/core/react/components/Navigator/Waypoints/Waypoints.tsx
var SpaceSwitcher = (props2) => {
  const {
    waypoints,
    modifier,
    setModifier
  } = q2(NavigatorContext);
  const { superstate } = props2;
  const { dragPaths, setDragPaths } = q2(NavigatorContext);
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const dragCounter = _2(0);
  const [offset2, setOffset] = h2(0);
  const [projected, setProjected] = h2(null);
  const [dropPlaceholder, setDragPlaceholder] = h2(null);
  p2(() => {
    if (overId === null || dragPaths.length == 0) {
      setProjected(null);
      return;
    }
    const waypoint = waypoints.find((f4) => f4.path == overId);
    if (!waypoint)
      return;
    if (dragPaths.length > 1) {
      if (waypoint.type == "space") {
        const _projected = {
          depth: 0,
          overId,
          parentId: null,
          sortable: false,
          insert: true,
          droppable: true,
          copy: false,
          reorder: false
        };
        setProjected(_projected);
        return;
      } else {
        return null;
      }
    } else {
      const insert2 = !activeId && (!pathIsSpace(props2.superstate, dragPaths[0]) || modifier == "copy" || modifier == "link");
      const _projected = {
        depth: 0,
        overId,
        parentId: null,
        sortable: false,
        insert: insert2,
        droppable: waypoint.type != "space",
        copy: modifier == "copy" || modifier == "link",
        reorder: false
      };
      setProjected(_projected);
    }
  }, [overId, dragPaths, offset2, modifier, waypoints, activeId]);
  const resetState = () => {
    setModifier(null);
    setOverId(null);
    setDragPaths([]);
    setActiveId(null);
    setProjected(null);
    setOffset(0);
    dragCounter.current = 0;
  };
  const handleDragCancel = () => {
    resetState();
  };
  const dragEnter = () => {
    dragCounter.current++;
  };
  const dragLeave = () => {
    dragCounter.current--;
    if (dragCounter.current == 0) {
      setOverId(null);
      setProjected(null);
      setOffset(0);
      dragCounter.current = 0;
    }
  };
  const adjustTranslate = ({ transform }) => {
    return {
      ...transform,
      x: transform.x,
      y: transform.y - 10
    };
  };
  const dragStarted = (id2) => {
    setActiveId(id2);
  };
  const dragOver = (id2, x5) => {
    setOffset(x5);
    setOverId(id2);
  };
  const dragEnded = () => {
    if (projected && projected.insert) {
      const space = props2.superstate.spacesIndex.get(overId);
      if (space)
        dropPathsInSpaceAtIndex(
          props2.superstate,
          dragPaths,
          space.path,
          0,
          "link"
        );
    } else if (dragPaths.length == 1) {
      const toIndex = waypoints.findIndex((f4) => f4.path == overId);
      if (activeId !== null) {
        const fromIndex = waypoints.findIndex((f4) => f4.path == activeId);
        superstate.settings.waypoints = arrayMove(
          waypoints.map((f4) => f4.path),
          fromIndex,
          toIndex
        );
        superstate.saveSettings();
      } else {
        superstate.settings.waypoints = insert(
          waypoints.map((f4) => f4.path).filter((f4) => f4 != dragPaths[0]),
          toIndex,
          dragPaths[0]
        );
        superstate.saveSettings();
      }
    }
    resetState();
  };
  useDndMonitor({
    onDragStart: handleDragStart,
    onDragMove: handleDragMove,
    onDragOver: handleDragOver,
    onDragEnd: handleDragEnd,
    onDragCancel: handleDragCancel
  });
  function handleDragStart(event) {
    const {
      active: { id: activeId2 }
    } = event;
    const waypoint = waypoints.find((f4) => f4.path == activeId2);
    if (waypoint) {
      setDragPaths([waypoint.path]);
    }
    dragStarted(activeId2);
  }
  function handleDragMove({ delta }) {
  }
  function handleDragOver({ over }) {
    const overId2 = over == null ? void 0 : over.id;
    if (overId2 !== null) {
      setOverId(overId2);
    }
  }
  function handleDragEnd({ active, over }) {
    dragEnded();
  }
  p2(() => {
    window.addEventListener("dragend", resetState);
    return () => {
      window.removeEventListener("dragend", resetState);
    };
  });
  const width = props2.superstate.ui.getScreenType() == "mobile" ? 48 : 32;
  const calcXOffset = (index) => {
    if (!projected || projected.insert)
      return 0;
    const fromIndex = waypoints.findIndex((f4) => f4.path == activeId);
    const targetIndex = waypoints.findIndex((f4) => f4.path == overId);
    if (activeId === null) {
      if (index >= targetIndex)
        return width;
      return 0;
    }
    if (index == fromIndex) {
      return width * (targetIndex - fromIndex);
    } else if (index > fromIndex && index <= targetIndex) {
      return -width;
    } else if (index < fromIndex && index >= targetIndex) {
      return width;
    } else {
      return 0;
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-waypoints nav-header",
    onDragEnter: () => dragEnter(),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => e4.preventDefault()
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "nav-buttons-container"
  }, waypoints.map((pin, i4) => /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
    id: pin.path,
    superstate: props2.superstate,
    highlighted: overId == pin.path && projected && projected.insert && projected.droppable,
    style: {
      transform: CSS.Translate.toString({
        x: calcXOffset(i4),
        y: 0,
        scaleX: 0,
        scaleY: 0
      })
    },
    index: i4,
    pin,
    key: pin.path,
    dragStart: dragStarted,
    dragOver,
    dragEnded,
    dragActive: activeId !== null,
    ghost: activeId === pin.path
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-waypoint-new",
    onClick: (e4) => showSpacesMenu(
      e4,
      props2.superstate,
      (link) => {
        toggleWaypoint(
          props2.superstate,
          link,
          false,
          waypoints.length
        );
      },
      true,
      true
    ),
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("lucide//plus")
    }
  }), overId != null && activeId === null && /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
    id: waypoints.length,
    superstate: props2.superstate,
    highlighted: false,
    index: waypoints.length,
    pin: null
  })), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      modifiers: [adjustTranslate],
      zIndex: 1600
    }, activeId !== null ? /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
      id: -1,
      superstate: props2.superstate,
      highlighted: false,
      clone: true,
      index: waypoints.findIndex((f4) => f4.path == activeId),
      indicator: false,
      pin: waypoints.find((f4) => f4.path == activeId)
    }) : null),
    document.body
  )));
};

// src/core/react/components/Navigator/MainList.tsx
var MainList = (props2) => {
  const [indexing, setIndexing] = Cn.useState(false);
  const [error, resetError] = P2();
  if (error)
    console.log(error);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    })
  );
  const measuring = {
    droppable: {
      strategy: MeasuringStrategy.Always
    }
  };
  p2(() => {
    const reindex = async () => {
      setIndexing(true);
    };
    const finishedIndex = async () => {
      setIndexing(false);
    };
    props2.superstate.eventsDispatcher.addListener("superstateReindex", reindex);
    props2.superstate.eventsDispatcher.addListener(
      "superstateUpdated",
      finishedIndex
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "superstateReindex",
        reindex
      );
      props2.superstate.eventsDispatcher.removeListener(
        "superstateUpdated",
        finishedIndex
      );
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-progress-bar"
  }, indexing && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-progress-bar-value"
  })), /* @__PURE__ */ Cn.createElement(SpaceSwitcher, {
    superstate: props2.superstate
  }), props2.superstate.ui.getScreenType() != "mobile" && /* @__PURE__ */ Cn.createElement(MainMenu, {
    superstate: props2.superstate
  }), /* @__PURE__ */ Cn.createElement(SpaceTreeComponent, {
    superstate: props2.superstate
  }));
};

// src/core/react/components/Navigator/Navigator.tsx
var Navigator = (props2) => {
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-sidebar"
  }, /* @__PURE__ */ Cn.createElement(SidebarProvider, {
    superstate: props2.superstate
  }, /* @__PURE__ */ Cn.createElement(MainList, {
    superstate: props2.superstate
  })));
};

// src/core/utils/frames/editor/dropFrame.ts
var shouldDeleteColumn = (nodeParent) => {
  if (nodeParent.node.type == "column" && nodeParent.children.length == 1) {
    return true;
  }
  return false;
};
var shouldDeleteColumnContainer = (nodeParent) => {
  if (nodeParent.node.type == "container" && nodeParent.children.length == 1) {
    return true;
  }
  return false;
};
var shouldCollapseColumnContainer = (nodeParent) => {
  if (nodeParent.node.type == "container" && nodeParent.children.length == 2) {
    return true;
  }
  return false;
};
var dropFrame = (activeNode, overNode, root, nodes, newColumn) => {
  let saveNodes = [];
  const deleteNodes = [];
  const schemaId = root.node.schemaId;
  const overParentNode = findParent(root, overNode.id);
  const activeParentNode = findParent(root, activeNode.id);
  if (!overParentNode || !activeParentNode) {
    return [[], []];
  }
  if (newColumn) {
    const baseLevelNode = overNode.node.parentId == root.id;
    const containerType = overNode.node.type == "container";
    const columnType = overNode.node.type == "column";
    let columnContainerIsBaseLevel = false;
    if (columnType) {
      if (overParentNode.node.parentId == root.id)
        columnContainerIsBaseLevel = true;
    }
    const createColumnContainer = baseLevelNode && !containerType;
    const insertColumn = baseLevelNode && containerType || columnType && columnContainerIsBaseLevel;
    if (createColumnContainer) {
      const newColumns = { ...newUniqueNode(
        columnsNode,
        overParentNode.id,
        nodes,
        schemaId
      ), rank: overNode.node.rank };
      const column1 = newUniqueNode(
        columnNode,
        newColumns.id,
        [...nodes, newColumns],
        schemaId
      );
      const column2 = newUniqueNode(
        columnNode,
        newColumns.id,
        [...nodes, newColumns, column1],
        schemaId
      );
      const newNodes = [
        newColumns,
        column1,
        column2,
        { ...overNode.node, rank: 0, parentId: column1.id }
      ];
      saveNodes.push(
        ...newNodes,
        { ...activeNode.node, rank: 0, parentId: column2.id }
      );
    } else if (insertColumn) {
      const column = {
        ...newUniqueNode(columnNode, overParentNode.id, nodes, schemaId),
        rank: overNode.node.rank > activeNode.node.rank ? overNode.node.rank : overNode.node.rank + 1
      };
      const newNodes = [column, { ...activeNode.node, parentId: column.id }];
      saveNodes.push(...newNodes);
    }
  } else {
    const newRank = overNode.node.rank + 1;
    const items = nodes.filter((f4) => f4.parentId == overParentNode.id && f4.id != activeNode.id).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const newItem = { ...activeNode.node, parentId: overNode.node.parentId };
    const newItems = insert(items, newRank, newItem).map((f4, i4) => ({
      ...f4,
      rank: i4
    }));
    saveNodes.push(...newItems);
  }
  if (shouldDeleteColumn(activeParentNode)) {
    const columnParentNode = findParent(root, activeParentNode.id);
    deleteNodes.push(activeParentNode.node);
    if (shouldDeleteColumnContainer(columnParentNode)) {
      deleteNodes.push(columnParentNode.node);
    } else if (shouldCollapseColumnContainer(columnParentNode)) {
      const removeColumn = columnParentNode.children.filter((f4) => f4.id != activeParentNode.id);
      deleteNodes.push(...removeColumn.map((f4) => f4.node), columnParentNode.node);
      const moveToParentNodes = removeColumn.flatMap((f4) => f4.children.map((f5) => ({ ...f5.node, parentId: root.id })));
      saveNodes = [...saveNodes.map((f4) => moveToParentNodes.some((g4) => g4.id == f4.id) ? { ...f4, parentId: root.id } : f4), ...moveToParentNodes.filter((g4) => !saveNodes.some((f4) => g4.id == f4.id))];
    }
  }
  return [saveNodes, deleteNodes];
};

// src/core/react/components/SpaceView/Contexts/SpaceBodyView.tsx
var PLACEHOLDER_ID3 = "_placeholder";
var SpaceBodyView = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const {
    instance,
    root,
    saveState,
    hoverNode,
    setHoverNode,
    dragNode,
    moveToRank,
    nodes,
    setDragNode,
    addNode,
    saveNodes,
    moveNodeFromSchema
  } = q2(FramesEditorContext);
  const activeRunID = _2(null);
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const resetState = () => {
    setHoverNode(null);
    setDragNode(null);
  };
  const dragTreeNode = F2(
    () => {
      var _a2;
      return dragNode && instance.root && ((_a2 = findParent(instance.root, dragNode)) == null ? void 0 : _a2.children.find(
        (f4) => f4.id == dragNode
      ));
    },
    [dragNode, instance]
  );
  useDndMonitor({
    onDragStart({ active }) {
      if (active.data.current.frame == frameSchema.id)
        setDragNode(active.data.current.id);
    },
    onDragOver({ active, over }) {
      const overId = over == null ? void 0 : over.data.current.id;
      if ((over == null ? void 0 : over.data.current.frame) == frameSchema.id) {
        if (overId)
          setHoverNode(overId);
      }
    },
    onDragCancel() {
      resetState();
    },
    onDragEnd({ active, over }) {
      if (!active) {
        resetState();
        return;
      }
      let overId = hoverNode;
      let overNewColumn = false;
      if ((overId == null ? void 0 : overId.charAt(0)) == "|") {
        overId = overId.substring(1);
        overNewColumn = true;
      }
      if (overId == active.data.current.id) {
        resetState();
        return;
      }
      const overParentNode = findParent(instance.root, overId);
      const overNode = overParentNode == null ? void 0 : overParentNode.children.find(
        (f4) => f4.id == overId
      );
      const activeParentNode = findParent(
        instance.root,
        active.data.current.id
      );
      const activeNode = activeParentNode == null ? void 0 : activeParentNode.children.find(
        (f4) => f4.id == active.data.current.id
      );
      if (overId === PLACEHOLDER_ID3) {
        saveNodes([{ ...activeNode.node, parentId: overNode.node.id }]);
      } else if (overNode && activeNode) {
        const [newNodes, deleteNodes] = dropFrame(
          activeNode,
          overNode,
          instance.root,
          nodes,
          overNewColumn
        );
        saveNodes(newNodes, deleteNodes);
      }
      resetState();
    }
  });
  const _instance = F2(() => {
    return instance ? {
      ...instance,
      root: instance.root ? {
        ...instance.root,
        node: {
          ...instance.root.node,
          props: {
            ...instance.root.node.props,
            ...props2.cols.reduce(
              (p3, c4) => ({
                ...p3,
                [c4]: ""
              }),
              {}
            )
          }
        }
      } : null
    } : null;
  }, [props2.cols, instance]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, _instance.root && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: 1,
    superstate: props2.superstate,
    treeNode: _instance.root,
    instance: _instance
  }), /* @__PURE__ */ Cn.createElement(RowPlaceholder, {
    superstate: props2.superstate,
    id: PLACEHOLDER_ID3,
    parentId: "main"
  })), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      zIndex: 1600
    }, dragTreeNode && /* @__PURE__ */ Cn.createElement(FrameView, {
      superstate: props2.superstate,
      treeNode: dragTreeNode,
      instance: _instance,
      saveState
    })),
    document.body
  ));
};

// src/core/react/components/SpaceView/TitleComponent.tsx
var TitleComponent = (props2) => {
  const fileNameRef = _2(null);
  const [pathState, setPathState] = Cn.useState(
    props2.superstate.pathsIndex.get(props2.path)
  );
  const name = F2(
    () => pathState ? props2.superstate.settings.spacesUseAlias ? pathState == null ? void 0 : pathState.displayName : pathState.subtype == "tag" ? stringFromTag(pathState == null ? void 0 : pathState.name) : pathState == null ? void 0 : pathState.name : pathToString(props2.path),
    [pathState, props2.path]
  );
  const pathStateUpdated = (payload) => {
    if (payload.path == props2.path) {
      const _pathState = props2.superstate.pathsIndex.get(props2.path);
      if (_pathState)
        setPathState(_pathState);
    }
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      pathStateUpdated
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "pathStateUpdated",
        pathStateUpdated
      );
    };
  }, []);
  const contentEditable = !props2.readOnly;
  const onBlur = (e4) => {
    const newValue = e4.target.innerHTML;
    if (newValue != name) {
      if (props2.path == "/") {
        props2.superstate.settings.systemName = newValue;
        props2.superstate.saveSettings();
        props2.superstate.reloadSpaceByPath("/");
        return;
      }
      if (props2.superstate.settings.spacesUseAlias) {
        updatePrimaryAlias(
          props2.superstate,
          props2.path,
          pathState.metadata.aliases,
          newValue
        );
      } else {
        renamePathByName(props2.superstate, props2.path, newValue);
      }
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      e4.preventDefault();
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.superstate.settings.spacesStickers && /* @__PURE__ */ Cn.createElement(PathStickerContainer, {
    superstate: props2.superstate,
    path: props2.path
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-title-container"
  }, (pathState == null ? void 0 : pathState.subtype) == "tag" ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-title-prefix"
  }, "#") : "", /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title",
    ref: fileNameRef,
    contentEditable,
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    dangerouslySetInnerHTML: {
      __html: name
    }
  })));
};

// src/core/react/components/SpaceView/SpaceComponent.tsx
var SpaceComponent = (props2) => {
  var _a2;
  const { spaceInfo, spaceState, pathState } = q2(SpaceContext);
  const [collapsed, setCollapsed] = h2(
    !props2.superstate.settings.inlineContextExpanded
  );
  const [selectedView, setSelectedView] = h2(0);
  const frameProps = F2(() => {
    var _a3;
    if (!spaceInfo) {
      return {};
    }
    const linkedNote = spaceInfo.defPath;
    return {
      ...(_a3 = spaceState == null ? void 0 : spaceState.metadata) != null ? _a3 : {},
      note: linkedNote,
      space: props2.path + "/#*" + defaultFrameListViewID
    };
  }, [spaceInfo, props2.path, spaceState]);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const banner = (_a2 = pathState == null ? void 0 : pathState.metadata.property) == null ? void 0 : _a2[props2.superstate.settings.fmKeyBanner];
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    superstate: props2.superstate,
    props: frameProps,
    editMode: 1
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-scroller markdown-source-view mod-cm6 is-readable-line-width"
  }, spaceState && pathState && /* @__PURE__ */ Cn.createElement(BannerView, {
    superstate: props2.superstate,
    bannerPath: banner,
    itemPath: spaceState.space.defPath
  }), banner && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-spacer",
    style: {
      "--mk-header-height": ((props2.superstate.ui.getScreenType() == "mobile" ? 1 : 0) * 26 + 138 + (!props2.superstate.settings.spacesStickers || props2.superstate.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px"
    }
  }), spaceState && /* @__PURE__ */ Cn.createElement(SpaceOuter, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-header"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-path-context-file`
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-space-title ${props2.superstate.settings.inlineContextNameLayout == "horizontal" ? "mk-path-context-file-horizontal" : ""}`
  }, /* @__PURE__ */ Cn.createElement(TitleComponent, {
    superstate: props2.superstate,
    path: spaceState.path,
    readOnly: spaceState.space.readOnly
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-collapse mk-icon-xsmall mk-fold ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-collapse")
    },
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    }
  })), !collapsed && /* @__PURE__ */ Cn.createElement(MarkdownHeaderView, {
    superstate: props2.superstate,
    path: spaceState.path,
    showHeader: false,
    showMetadata: true,
    hiddenFields: [
      ...FMMetadataKeys(props2.superstate.settings),
      ...FMSpaceKeys(props2.superstate.settings)
    ],
    showBanner: false,
    editable: true,
    showFolder: spaceState.type == "folder"
  }))), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-body"
  }, /* @__PURE__ */ Cn.createElement(SpaceBodyView, {
    selectedView,
    superstate: props2.superstate,
    cols: (pathState == null ? void 0 : pathState.properties) ? Object.keys(pathState.properties) : []
  }))))));
};
var SpaceOuter = (props2) => {
  const { selectNodes, selectableNodeBounds, selectedNodes, nodes } = q2(FramesEditorContext);
  const [selectionBox, setSelectionBox] = h2();
  const selectableItems = _2([]);
  const ref2 = _2(null);
  const [dragging, setDragging] = h2(false);
  const onKeyDown = (e4) => {
    if (e4.key === "Escape") {
      selectNodes([]);
    }
  };
  p2(() => {
    window.addEventListener("keydown", onKeyDown);
    return () => {
      window.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-outer cm-line",
    ref: ref2,
    onClick: () => {
      if (!dragging)
        selectNodes([]);
    }
  }, props2.children);
};

// src/core/react/components/SpaceView/Contexts/SpaceView.tsx
var SpaceView = (props2) => {
  const [spaceState, setSpaceState] = Cn.useState(
    props2.superstate.spacesIndex.get(props2.path)
  );
  Cn.useEffect(() => {
    const update = (payload) => {
      if (payload.path == props2.path) {
        setSpaceState(props2.superstate.spacesIndex.get(props2.path));
      }
    };
    setSpaceState(props2.superstate.spacesIndex.get(props2.path));
    props2.superstate.eventsDispatcher.addListener("spaceStateUpdated", update);
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "spaceStateUpdated",
        update
      );
    };
  }, [props2.path]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-view"
  }, (spaceState == null ? void 0 : spaceState.space) && /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    superstate: props2.superstate,
    space: spaceState.space
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    superstate: props2.superstate,
    schema: "main"
  }, /* @__PURE__ */ Cn.createElement(SpaceComponent, {
    path: props2.path,
    superstate: props2.superstate
  }))));
};

// src/adapters/obsidian/utils/createTable.ts
var createTable2 = (object, columns) => {
  const columnNames = columns.map((f4) => f4.name);
  const base2 = "|";
  let outputString = base2 + columnNames.join(base2) + "|\n";
  columns.forEach((f4) => {
    outputString += base2 + "----";
  });
  outputString += base2 + "\n";
  object.forEach((row) => {
    outputString += columnNames.map((c4) => base2 + row[c4]).join("") + "|\n";
  });
  return outputString;
};

// src/adapters/obsidian/ui/editors/markdownView/FlowEditorHover.tsx
var import_obsidian2 = require("obsidian");
var FlowEditorHover = (props2) => {
  var _a2;
  const uri = props2.superstate.spaceManager.uriByString(props2.path);
  const file = props2.app.metadataCache.getFirstLinkpathDest(
    uri.path,
    (_a2 = props2.source) != null ? _a2 : "/"
  );
  const convertTable = () => {
    props2.superstate.spaceManager.readTable(uri.fullPath, uri.ref).then((mdbTable) => {
      const markdown = createTable2(mdbTable.rows, mdbTable.cols);
      props2.view.dispatch({
        changes: {
          from: props2.pos.from - 4,
          to: props2.pos.to + 2,
          insert: markdown
        }
      });
    });
  };
  const cutTable = () => {
    navigator.clipboard.writeText(`![![${props2.path}]]`);
    props2.view.dispatch({
      changes: { from: props2.pos.from - 4, to: props2.pos.to + 2 }
    });
  };
  const deleteTable = () => {
    props2.view.dispatch({
      changes: { from: props2.pos.from - 4, to: props2.pos.to + 2 }
    });
  };
  const toggleFlow = () => {
    const domPos = props2.view.posAtDOM(props2.dom);
    const line = props2.view.state.doc.lineAt(domPos);
    const pos = line.from;
    if (props2.toggleState) {
      props2.view.dispatch({
        changes: { from: pos, to: pos + 1 }
      });
    } else {
      props2.view.dispatch({
        changes: {
          from: pos,
          to: pos,
          insert: "!"
        }
      });
    }
  };
  const openLink = () => {
    props2.superstate.ui.openPath(uri.path, false);
  };
  const showTableMenu = (e4) => {
    const menuOptions = [];
    menuOptions.push({
      name: i18n_default.buttons.convertTable,
      icon: "ui//mk-ui-sync",
      onClick: (e5) => {
        convertTable();
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.cutTable,
      icon: "ui//mk-ui-cut",
      onClick: (e5) => {
        cutTable();
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.deleteTable,
      icon: "ui//mk-ui-close",
      onClick: (e5) => {
        deleteTable();
      }
    });
    const offset2 = e4.target.getBoundingClientRect();
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      defaultMenu(props2.superstate.ui, menuOptions)
    );
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, file ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flowblock-menu"
  }, file instanceof import_obsidian2.TFile ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, " ", props2.toggle && /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.toggleFlow,
    onClick: toggleFlow,
    className: `mk-hover-button ${props2.toggleState ? "mk-toggle-on" : ""}`,
    dangerouslySetInnerHTML: {
      __html: !props2.toggleState ? props2.superstate.ui.getSticker("lucide//edit-3") : props2.superstate.ui.getSticker("lucide//book-open")
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.openLink,
    onClick: openLink,
    className: "mk-hover-button",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-open-link")
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small mk-hover-button",
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-handle")
    },
    onClick: (e4) => {
      showTableMenu(e4);
    }
  })), " ") : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/adapters/obsidian/utils/flow/flowEditor.ts
var import_state5 = require("@codemirror/state");

// src/adapters/obsidian/ui/editors/FlowEditor.tsx
var import_obsidian3 = require("obsidian");

// src/core/utils/uuid.js
function genId2() {
  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(
    /[018]/g,
    (c4) => (c4 ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c4 / 4).toString(16)
  );
}

// src/adapters/obsidian/ui/editors/FlowEditor.tsx
var popovers = /* @__PURE__ */ new WeakMap();
var mouseCoords = { x: 0, y: 0 };
function nosuper(base2) {
  const derived = function() {
    return Object.setPrototypeOf(new import_obsidian3.Component(), new.target.prototype);
  };
  derived.prototype = base2.prototype;
  return Object.setPrototypeOf(derived, base2);
}
var _a, _b, _c, _d, _e;
var FlowEditor = class extends nosuper(import_obsidian3.HoverPopover) {
  constructor(parent, targetEl, plugin, waitTime, onShowCallback) {
    super();
    this.targetEl = targetEl;
    this.plugin = plugin;
    this.onShowCallback = onShowCallback;
    this.abortController = this.addChild(new import_obsidian3.Component());
    this.detaching = false;
    this.opening = false;
    this.rootSplit = new import_obsidian3.WorkspaceSplit(
      this.plugin.app.workspace,
      "vertical"
    );
    this.targetRect = (_a = this.targetEl) == null ? void 0 : _a.getBoundingClientRect();
    this.oldPopover = (_b = this.parent) == null ? void 0 : _b.flowEditor;
    this.document = (_e = (_d = (_c = this.targetEl) == null ? void 0 : _c.ownerDocument) != null ? _d : window.activeDocument) != null ? _e : window.document;
    this.id = genId2();
    this.hoverEl = this.document.defaultView.createDiv({
      cls: "mk-floweditor mk-hover-popover",
      attr: { id: "he" + this.id }
    });
    if (waitTime === void 0) {
      waitTime = 300;
    }
    this.onTarget = true;
    this.parent = parent;
    this.waitTime = waitTime;
    this.state = import_obsidian3.PopoverState.Showing;
    const { hoverEl } = this;
    this.abortController.load();
    this.timer = window.setTimeout(this.show.bind(this), waitTime);
    this.setActive = this._setActive.bind(this);
    if (hoverEl) {
      hoverEl.addEventListener("mousedown", this.setActive);
      hoverEl.addEventListener("mousedown", (e4) => e4.stopPropagation());
    }
    popovers.set(this.hoverEl, this);
    this.hoverEl.addClass("hover-editor");
    this.containerEl = this.hoverEl.createDiv("popover-content");
    this.setTitleBar();
    this.hoverEl.style.height = "auto";
    this.hoverEl.style.width = "100%";
    this.hoverEl.addEventListener("keydown", (e4) => e4.stopPropagation());
  }
  static activeWindows() {
    const windows = [window];
    const { floatingSplit } = app.workspace;
    if (floatingSplit) {
      for (const split of floatingSplit.children) {
        if (split.win)
          windows.push(split.win);
      }
    }
    return windows;
  }
  static containerForDocument(doc) {
    if (doc !== document && app.workspace.floatingSplit)
      for (const container of app.workspace.floatingSplit.children) {
        if (container.doc === doc)
          return container;
      }
    return app.workspace.rootSplit;
  }
  static activePopovers() {
    return this.activeWindows().flatMap(this.popoversForWindow);
  }
  static popoversForWindow(win) {
    var _a2, _b2;
    return Array.prototype.slice.call(
      (_b2 = (_a2 = win == null ? void 0 : win.document) == null ? void 0 : _a2.body.querySelectorAll(".mk-hover-popover")) != null ? _b2 : []
    ).map((el) => popovers.get(el)).filter((he2) => he2);
  }
  static forLeaf(leaf) {
    const el = leaf && document.body.matchParent.call(leaf.containerEl, ".mk-hover-popover");
    return el ? popovers.get(el) : void 0;
  }
  onunload() {
    this.hide();
  }
  _setActive() {
    this.plugin.app.workspace.setActiveLeaf(this.leaves()[0], { focus: true });
  }
  getDefaultMode() {
    var _a2, _b2;
    return ((_b2 = (_a2 = this.parent) == null ? void 0 : _a2.view) == null ? void 0 : _b2.getMode) ? this.parent.view.getMode() : "preview";
  }
  updateLeaves() {
    if (this.onTarget && this.targetEl && !this.document.contains(this.targetEl)) {
      this.onTarget = false;
      this.transition();
    }
    let leafCount = 0;
    this.plugin.app.workspace.iterateLeaves((leaf) => {
      leafCount++;
    }, this.rootSplit);
    if (leafCount === 0) {
      this.hide();
    } else if (leafCount > 1) {
    }
    this.hoverEl.setAttribute("data-leaf-count", leafCount.toString());
  }
  setTitleBar() {
    this.titleEl = this.document.defaultView.createDiv("mk-flow-titlebar");
    this.containerEl.prepend(this.titleEl);
  }
  attachLeaf() {
    this.rootSplit.getRoot = () => this.plugin.app.workspace[this.document === document ? "rootSplit" : "floatingSplit"];
    this.rootSplit.getContainer = () => FlowEditor.containerForDocument(this.document);
    this.titleEl.insertAdjacentElement("afterend", this.rootSplit.containerEl);
    const leaf = this.plugin.app.workspace.createLeafInParent(
      this.rootSplit,
      0
    );
    leaf.isFlowBlock = true;
    this.updateLeaves();
    return leaf;
  }
  onload() {
    super.onload();
    this.registerEvent(
      this.plugin.app.workspace.on("layout-change", this.updateLeaves, this)
    );
    this.registerEvent(
      app.workspace.on("layout-change", () => {
        this.rootSplit.children.forEach((item, index) => {
          if (item instanceof import_obsidian3.WorkspaceTabs) {
            this.rootSplit.replaceChild(index, item.children[0]);
          }
        });
      })
    );
  }
  leaves() {
    const leaves = [];
    this.plugin.app.workspace.iterateLeaves((leaf) => {
      leaves.push(leaf);
    }, this.rootSplit);
    return leaves;
  }
  async onShow() {
    var _a2, _b2;
    const closeDelay = 600;
    setTimeout(() => this.waitTime = closeDelay, closeDelay);
    (_a2 = this.oldPopover) == null ? void 0 : _a2.hide();
    this.oldPopover = null;
    this.hoverEl.toggleClass("is-new", true);
    this.document.body.addEventListener(
      "click",
      () => {
        this.hoverEl.toggleClass("is-new", false);
      },
      { once: true, capture: true }
    );
    if (this.parent) {
      this.parent.flowEditor = this;
      this.parent.view.addChild(this);
    }
    await ((_b2 = this.onShowCallback) == null ? void 0 : _b2.call(this, this));
    this.onShowCallback = void 0;
    const viewHeaderEl = this.hoverEl.querySelector(".view-header");
    viewHeaderEl == null ? void 0 : viewHeaderEl.remove();
    const sizer = this.hoverEl.querySelector(".workspace-leaf");
    if (sizer)
      this.hoverEl.appendChild(sizer);
    const inlineTitle = this.hoverEl.querySelector(".inline-title");
    inlineTitle == null ? void 0 : inlineTitle.remove();
  }
  transition() {
    if (this.shouldShow()) {
      if (this.state === import_obsidian3.PopoverState.Hiding) {
        this.state = import_obsidian3.PopoverState.Shown;
        clearTimeout(this.timer);
      }
    } else {
      if (this.state === import_obsidian3.PopoverState.Showing) {
        this.hide();
      } else {
        if (this.state === import_obsidian3.PopoverState.Shown) {
          this.state = import_obsidian3.PopoverState.Hiding;
          this.timer = window.setTimeout(() => {
            if (this.shouldShow()) {
              this.transition();
            } else {
              this.hide();
            }
          }, this.waitTime);
        }
      }
    }
  }
  shouldShow() {
    return this.shouldShowSelf() || this.shouldShowChild();
  }
  shouldShowChild() {
    return FlowEditor.activePopovers().some((popover) => {
      if (popover !== this && popover.targetEl && this.hoverEl.contains(popover.targetEl)) {
        return popover.shouldShow();
      }
      return false;
    });
  }
  shouldShowSelf() {
    return !this.detaching && !!(this.onTarget || this.state == import_obsidian3.PopoverState.Shown || this.document.querySelector(
      `body>.modal-container, body > #he${this.id} ~ .menu, body > #he${this.id} ~ .suggestion-container`
    ));
  }
  show() {
    if (!this.targetEl || this.document.body.contains(this.targetEl)) {
      this.state = import_obsidian3.PopoverState.Shown;
      this.timer = 0;
      this.shownPos = mouseCoords;
      this.targetEl.replaceChildren(this.hoverEl);
      this.onShow();
      app.workspace.onLayoutChange();
      this.load();
    } else {
      this.hide();
    }
  }
  onHide() {
    var _a2;
    this.oldPopover = null;
    if (((_a2 = this.parent) == null ? void 0 : _a2.flowEditor) === this) {
      this.parent.flowEditor = null;
    }
  }
  hide() {
    var _a2;
    this.onTarget = false;
    this.detaching = true;
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = 0;
    }
    this.hoverEl.hide();
    if (this.opening)
      return;
    const leaves = this.leaves();
    if (leaves.length) {
      leaves.forEach((leaf) => {
        leaf.detach();
      });
    } else {
      this.parent = null;
      (_a2 = this.abortController) == null ? void 0 : _a2.unload();
      this.abortController = void 0;
      return this.nativeHide();
    }
  }
  nativeHide() {
    var _a2;
    const { hoverEl, targetEl } = this;
    this.state = import_obsidian3.PopoverState.Hidden;
    hoverEl.detach();
    if (targetEl) {
      const parent = targetEl.matchParent(".mk-hover-popover");
      if (parent)
        (_a2 = popovers.get(parent)) == null ? void 0 : _a2.transition();
    }
    this.onHide();
    this.unload();
  }
  async openContext(file, openState, useLeaf) {
    if (this.detaching)
      return;
    const leaf = useLeaf != null ? useLeaf : this.attachLeaf();
    this.opening = true;
    try {
      await leaf.openFile(file, openState);
    } catch (e4) {
      console.error(e4);
    } finally {
      this.opening = false;
      if (this.detaching)
        this.hide();
    }
    return leaf;
  }
  async openFile(file, openState, useLeaf) {
    if (this.detaching)
      return;
    const leaf = useLeaf != null ? useLeaf : this.attachLeaf();
    this.opening = true;
    try {
      await leaf.openFile(file, openState);
    } catch (e4) {
      console.error(e4);
    } finally {
      this.opening = false;
      if (this.detaching)
        this.hide();
    }
    return leaf;
  }
  buildState(parentMode, eState) {
    return {
      active: false,
      state: {},
      eState
    };
  }
  buildEphemeralState(file, link) {
    const cache = this.plugin.app.metadataCache.getFileCache(file);
    const subpath = cache ? (0, import_obsidian3.resolveSubpath)(cache, (link == null ? void 0 : link.subpath) || "") : void 0;
    const eState = { subpath: link == null ? void 0 : link.subpath };
    if (subpath) {
      eState.line = subpath.start.line;
      eState.startLoc = subpath.start;
      eState.endLoc = subpath.end || void 0;
    }
    return eState;
  }
};

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/atomic.ts
var import_state4 = require("@codemirror/state");

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/selectiveEditor.ts
var import_state3 = require("@codemirror/state");
var import_view2 = require("@codemirror/view");
var combinedRangeFacets = (rangeA, rangeB) => {
  const startRange = !(rangeA == null ? void 0 : rangeA[0]) ? rangeB[0] : !(rangeB == null ? void 0 : rangeB[0]) ? rangeA[0] : Math.max(rangeA == null ? void 0 : rangeA[0], rangeB == null ? void 0 : rangeB[0]);
  const endRange = !(rangeA == null ? void 0 : rangeA[1]) ? rangeB[1] : !(rangeB == null ? void 0 : rangeB[1]) ? rangeA[1] : Math.min(rangeA == null ? void 0 : rangeA[1], rangeB == null ? void 0 : rangeB[1]);
  return [isNaN(startRange) ? null : startRange, isNaN(endRange) ? null : endRange];
};
var editableRange = import_state3.Annotation.define();
var contentRange = import_state3.Annotation.define();
var hiddenLine = import_view2.Decoration.replace({ inclusive: true, block: true });
var hideLine = import_state3.StateField.define({
  create() {
    return import_view2.Decoration.none;
  },
  update(value, tr) {
    const builder = new import_state3.RangeSetBuilder();
    const betterFacet = combinedRangeFacets(tr.state.field(selectiveLinesFacet, false), tr.state.field(frontmatterFacet, false));
    if ((betterFacet == null ? void 0 : betterFacet[0]) != null) {
      const starterLine = Math.min(
        tr.state.doc.lines,
        betterFacet[0]
      );
      builder.add(
        tr.state.doc.line(1).from,
        tr.state.doc.line(starterLine).from - 1,
        hiddenLine
      );
      if (tr.newDoc.lines != betterFacet[1])
        builder.add(
          tr.state.doc.line(
            Math.min(tr.newDoc.lines, betterFacet[1])
          ).to,
          tr.state.doc.line(tr.newDoc.lines).to,
          hiddenLine
        );
    }
    const dec = builder.finish();
    return dec;
  },
  provide: (f4) => import_view2.EditorView.decorations.from(f4)
});
var frontmatterFacet = import_state3.StateField.define({
  create: () => [void 0, void 0],
  update(value, tr) {
    if (tr.annotation(contentRange)) {
      if (tr.annotation(contentRange)[0]) {
        return [
          tr.annotation(contentRange)[0],
          Math.min(tr.state.doc.lines, tr.annotation(contentRange)[1])
        ];
      }
      return tr.annotation(contentRange);
    }
    return value;
  }
});
var selectiveLinesFacet = import_state3.StateField.define({
  create: () => [void 0, void 0],
  update(value, tr) {
    if (tr.annotation(editableRange)) {
      if (tr.annotation(editableRange)[0]) {
        return [
          tr.annotation(editableRange)[0],
          Math.min(tr.state.doc.lines, tr.annotation(editableRange)[1])
        ];
      }
      return tr.annotation(editableRange);
    }
    return value;
  }
});
var lineRangeToPosRange = (state, range) => {
  return {
    from: state.doc.line(range[0]).from,
    to: state.doc.line(Math.min(state.doc.lines, range[1])).to
  };
};
var smartDelete = import_state3.EditorState.transactionFilter.of(
  (tr) => {
    if (tr.isUserEvent("delete") && !tr.annotation(import_state3.Transaction.userEvent).endsWith(".smart")) {
      const initialSelections = tr.startState.selection.ranges.map((range) => ({
        from: range.from,
        to: range.to
      }));
      const betterFacet = combinedRangeFacets(tr.startState.field(selectiveLinesFacet, false), tr.startState.field(frontmatterFacet, false));
      if (initialSelections.length > 0 && (betterFacet == null ? void 0 : betterFacet[0])) {
        const posRange = lineRangeToPosRange(
          tr.startState,
          betterFacet
        );
        if (tr.changes.touchesRange(0, posRange.from - 1)) {
          const minFrom = Math.max(posRange.from, initialSelections[0].from);
          const minTo = Math.min(posRange.to, initialSelections[0].to);
          return [{
            changes: {
              from: Math.min(minFrom, minTo),
              to: Math.max(minFrom, minTo)
            },
            annotations: import_state3.Transaction.userEvent.of(
              `${tr.annotation(import_state3.Transaction.userEvent)}.smart`
            )
          }];
        }
      }
    }
    return tr;
  }
);
var preventModifyTargetRanges = import_state3.EditorState.transactionFilter.of(
  (tr) => {
    const newTrans = [];
    try {
      const editableLines = tr.startState.field(selectiveLinesFacet, false);
      const contentLines = tr.startState.field(frontmatterFacet, false);
      const selectiveLines = combinedRangeFacets(editableLines, contentLines);
      if (tr.isUserEvent("input") || tr.isUserEvent("delete") || tr.isUserEvent("move")) {
        if (selectiveLines == null ? void 0 : selectiveLines[0]) {
          const posRange = lineRangeToPosRange(
            tr.startState,
            selectiveLines
          );
          if (!tr.changes.touchesRange(posRange.from, posRange.to)) {
            return [];
          }
        }
      }
      if (tr.state.doc.lines != tr.startState.doc.lines) {
        const numberNewLines = tr.state.doc.lines - tr.startState.doc.lines;
        if (selectiveLines == null ? void 0 : selectiveLines[0]) {
          const posRange = lineRangeToPosRange(
            tr.startState,
            selectiveLines
          );
          if (tr.changes.touchesRange(0, posRange.from - 1)) {
            const newAnnotations = [];
            if (editableLines[0]) {
              newAnnotations.push(editableRange.of([
                editableLines[0] + numberNewLines,
                editableLines[1] + numberNewLines
              ]));
            }
            if (contentLines[0]) {
              newAnnotations.push(contentRange.of([
                contentLines[0] + numberNewLines,
                contentLines[1] + numberNewLines
              ]));
            }
            newTrans.push({
              annotations: newAnnotations
            });
          } else if (tr.changes.touchesRange(posRange.from - 1, posRange.to)) {
            const newAnnotations = [];
            if (editableLines[0]) {
              newAnnotations.push(editableRange.of([
                editableLines[0],
                editableLines[1] + numberNewLines
              ]));
            }
            if (contentLines[0]) {
              newAnnotations.push(contentRange.of([
                contentLines[0],
                contentLines[1] + numberNewLines
              ]));
            }
            newTrans.push({
              annotations: newAnnotations
            });
          }
        }
      }
    } catch (e4) {
      return [];
    }
    return [tr, ...newTrans];
  }
);
var readOnlyRangesExtension = [smartDelete, preventModifyTargetRanges];
var editBlockExtensions = () => [
  readOnlyRangesExtension,
  hideLine,
  selectiveLinesFacet,
  frontmatterFacet
];

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/atomic.ts
var arrowKeyAnnotation = import_state4.Annotation.define();

// src/adapters/obsidian/utils/flow/flowEditor.ts
var import_obsidian9 = require("obsidian");

// src/adapters/obsidian/ui/editors/EmbedContextView.tsx
var import_obsidian4 = require("obsidian");
var EMBED_CONTEXT_VIEW_TYPE = "make-inline-context";
var EmbedContextView2 = class extends import_obsidian4.ItemView {
  constructor(leaf, superstate) {
    super(leaf);
    this.navigation = true;
    this.superstate = superstate;
  }
  getViewType() {
    return EMBED_CONTEXT_VIEW_TYPE;
  }
  getDisplayText() {
    return this.path;
  }
  async onClose() {
    this.destroy();
  }
  onunload() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.path = state.path;
    this.source = state.source;
    this.constructInlineContext(this.path);
    await super.setState(state, result);
    const title = pathDisplayName(this.path, this.superstate);
    this.leaf.tabHeaderInnerTitleEl.innerText = title;
    this.leaf.view.titleEl = title;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = title;
    }
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path;
    state.source = this.source;
    return state;
  }
  constructInlineContext(file) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(EmbedViewComponent, {
        superstate: this.superstate,
        path: this.path,
        source: this.source
      }))
    );
  }
};

// src/adapters/obsidian/ui/editors/markdownView/FileView.tsx
var import_obsidian6 = require("obsidian");

// src/adapters/obsidian/ui/editors/markdownView/FileLinkViewComponent.tsx
var import_obsidian5 = require("obsidian");
var FileLinkViewComponent = (props2) => {
  const ref2 = _2(null);
  const [markdown, setMarkdown] = h2("");
  p2(() => {
    if (ref2.current)
      import_obsidian5.MarkdownRenderer.render(
        props2.app,
        markdown,
        ref2.current,
        props2.path,
        props2.component
      );
  }, [markdown]);
  p2(() => {
    fetch(props2.path).then((res) => res.text()).then((f4) => setMarkdown(f4));
  }, [props2.path]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "markdown-preview-view markdown-rendered node-insert-event is-readable-line-width allow-fold-headings show-indentation-guide allow-fold-lists show-frontmatter"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "markdown-preview-sizer markdown-preview-section",
    ref: ref2
  }));
};

// src/adapters/obsidian/ui/editors/markdownView/FileView.tsx
var FILE_VIEW_TYPE = "make-file-view";
var FileLinkView = class extends import_obsidian6.ItemView {
  constructor(leaf, app2, viewType) {
    super(leaf);
    this.navigation = true;
    this.app = app2;
    this.viewType = viewType;
  }
  getViewType() {
    return FILE_VIEW_TYPE;
  }
  getDisplayText() {
    return this.path;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.path = state.path;
    this.constructView(this.path);
    const displayName = this.path;
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = displayName;
    this.leaf.view.titleEl = displayName;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = displayName;
    }
    result.history = true;
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path;
    return state;
  }
  constructView(path) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", {
        className: "markdown-reading-view"
      }, /* @__PURE__ */ Cn.createElement(FileLinkViewComponent, {
        path,
        app: this.app,
        component: this
      }))
    );
  }
};

// src/adapters/obsidian/utils/file.ts
var import_obsidian8 = require("obsidian");

// src/adapters/obsidian/SpaceViewContainer.tsx
var import_obsidian7 = require("obsidian");
var SPACE_VIEW_TYPE = "mk-space";
var SpaceViewContainer = class extends import_obsidian7.ItemView {
  constructor(leaf, superstate, viewType) {
    super(leaf);
    this.navigation = true;
    this.superstate = superstate;
    this.viewType = viewType;
    this.superstate.eventsDispatcher.addListener(
      "spaceChanged",
      this.changePath,
      0,
      this
    );
    this.superstate.eventsDispatcher.addListener(
      "spaceDeleted",
      this.closePath,
      0,
      this
    );
  }
  getViewType() {
    return SPACE_VIEW_TYPE;
  }
  getDisplayText() {
    return pathDisplayName(this.path, this.superstate);
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    this.superstate.eventsDispatcher.removeListener(
      "spaceChanged",
      this.changePath
    );
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  changePath(payload) {
    if (this.path == payload.path) {
      this.leaf.setViewState({
        type: SPACE_VIEW_TYPE,
        state: { path: payload.newPath }
      });
    }
  }
  closePath(payload) {
    if ((this == null ? void 0 : this.path) == payload.path) {
      this.leaf.setViewState({
        type: null
      });
    }
  }
  async setState(state, result) {
    this.path = state.path;
    if (!this.path)
      return;
    this.constructNote(this.path);
    const displayName = pathDisplayName(this.path, this.superstate);
    const spaceCache = this.superstate.spacesIndex.get(this.path);
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = displayName;
    this.leaf.view.titleEl = displayName;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl && spaceCache) {
      headerEl.querySelector(".view-header-title").innerText = displayName;
      if (spaceCache.type == "folder") {
        const titleParent = headerEl.querySelector(".view-header-title-parent");
        titleParent.empty();
        const parentPaths = getParentFolderPaths(spaceCache.path);
        if (titleParent) {
          parentPaths.forEach((f4) => {
            const breadcrumb = titleParent.createEl("span");
            breadcrumb.addClass("view-header-breadcrumb");
            breadcrumb.innerText = folderPathToString(f4);
            breadcrumb.addEventListener(
              "click",
              () => this.superstate.ui.openPath(f4, false)
            );
            const breadcrumbSeparator = titleParent.createEl("span");
            breadcrumbSeparator.addClass("view-header-breadcrumb-separator");
            breadcrumbSeparator.innerText = "/";
          });
        }
      }
    }
    result.history = true;
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path;
    return state;
  }
  constructNote(path) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement(SpaceView, {
        path,
        superstate: this.superstate
      })
    );
  }
};

// src/adapters/obsidian/utils/file.ts
var tFileToAFile = (file) => {
  var _a2, _b2;
  if (!file)
    return null;
  if (file instanceof import_obsidian8.TFile && file.stat) {
    return {
      isFolder: false,
      name: file.basename,
      filename: file.name,
      path: file.path,
      parent: (_a2 = file.parent) == null ? void 0 : _a2.path,
      stat: file.stat,
      extension: file.extension
    };
  }
  return {
    isFolder: true,
    name: file.name,
    filename: file.name,
    path: file.path,
    parent: (_b2 = file.parent) == null ? void 0 : _b2.path
  };
};
var defaultSpace = async (superstate, activeFile) => {
  var _a2;
  return (_a2 = superstate.settings.newFileLocation == "folder" ? superstate.spacesIndex.get(superstate.settings.newFileFolderPath) : superstate.settings.newFileLocation == "current" && activeFile && (activeFile.type == "space" ? superstate.spacesIndex.get(activeFile.path) : superstate.spacesIndex.get(activeFile.parent))) != null ? _a2 : superstate.spacesIndex.get("/");
};
var defaultConfigFile = async (plugin) => {
  return await plugin.app.vault.adapter.read(
    (0, import_obsidian8.normalizePath)(plugin.app.vault.configDir + "/app.json")
  );
};
var fileExtensionForFile = (path) => path == null ? void 0 : path.split(".").pop();
var uniqueFileName = (oldName, name, extension, folder) => {
  let newName = sanitizeFileName(name);
  let uniqueName = false;
  let append = 1;
  while (!uniqueName) {
    if (!folder.children.some((f4) => f4.name == `${newName}.${extension}` && f4.name != oldName)) {
      uniqueName = true;
    } else {
      newName = `${newName} ${append}`;
      append += 1;
    }
  }
  return `${newName}.${extension}`;
};
function getAllAbstractFilesInVault(plugin) {
  const files = [];
  const rootFolder = plugin.app.vault.getRoot();
  function recursiveFx(folder) {
    for (const child of folder.children) {
      if (child instanceof import_obsidian8.TFolder) {
        const childFolder = child;
        if (childFolder.children)
          recursiveFx(childFolder);
      }
      files.push(child);
    }
  }
  recursiveFx(rootFolder);
  files.push(rootFolder);
  return files;
}
var getParentPathFromString = (file) => {
  const indexOfLastSlash = file.lastIndexOf("/");
  if (indexOfLastSlash == -1) {
    return "/";
  }
  return file.substring(0, indexOfLastSlash + 1);
};
var openPath = async (leaf, path, plugin) => {
  const uri = plugin.superstate.spaceManager.uriByString(path);
  if (uri.scheme == "obsidian") {
    await leaf.setViewState({
      type: uri.authority
    });
    return;
  }
  if (uri.ref) {
    const cache = plugin.superstate.pathsIndex.get(uri.path);
    if (cache && cache.type == "space") {
      await leaf.setViewState({
        type: EMBED_CONTEXT_VIEW_TYPE,
        state: { path: uri.fullPath }
      });
      return;
    }
  }
  if (uri.scheme == "spaces") {
    openTagContext(leaf, uri.authority, plugin.app);
    return;
  }
  plugin.files.getFile(path).then((f4) => {
    if (f4) {
      openAFile(leaf, f4, plugin.app);
    } else {
      defaultSpace(plugin.superstate, plugin.superstate.pathsIndex.get(plugin.superstate.ui.activePath)).then((f5) => {
        if (f5)
          newPathInSpace(
            plugin.superstate,
            f5,
            fileExtensionForFile(path),
            null
          );
      });
    }
  });
};
var getLeaf = (app2, location) => {
  let leaf;
  if (location == "system" || location == "hover") {
    return null;
  } else if (location == "right") {
    leaf = app2.workspace.getRightLeaf(false);
  } else if (location == "left") {
    leaf = app2.workspace.getLeftLeaf(false);
  } else {
    leaf = app2.workspace.getLeaf(location);
  }
  return leaf;
};
var openURL = async (url, app2, location) => {
  if (location == "system") {
    window.open(url, "_blank");
    return;
  }
  const leaf = getLeaf(app2, location);
  if (url.endsWith(".md")) {
    const viewType = FILE_VIEW_TYPE;
    app2.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: viewType,
      state: { path: url }
    });
    await app2.workspace.requestSaveLayout();
  } else if (url.endsWith(".mdb")) {
    const viewType = SPACE_VIEW_TYPE;
    app2.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: viewType,
      state: { path: url }
    });
    await app2.workspace.requestSaveLayout();
  } else {
    app2.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: EMBED_CONTEXT_VIEW_TYPE,
      state: { path: url }
    });
  }
  if (import_obsidian8.Platform.isMobile) {
    app2.workspace.leftSplit.collapse();
  }
};
var openAFile = async (leaf, file, app2) => {
  if (file.isFolder) {
    openTFolder(leaf, getAbstractFileAtPath(app2, file.path), app2);
  } else if (file) {
    openTFile(leaf, getAbstractFileAtPath(app2, file.path), app2);
  } else {
    return;
  }
};
var openTFile = async (leaf, file, app2) => {
  if (!file)
    return;
  app2.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.openFile(file);
};
var openTFolder = async (leaf, file, app2) => {
  const viewType = SPACE_VIEW_TYPE;
  app2.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({
    type: viewType,
    state: { path: file.path }
  });
  await app2.workspace.requestSaveLayout();
  if (import_obsidian8.Platform.isMobile) {
    app2.workspace.leftSplit.collapse();
  }
};
var openTagContext = async (leaf, tag, app2) => {
  const viewType = SPACE_VIEW_TYPE;
  app2.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({ type: viewType, state: { path: "spaces://" + tag } });
  await app2.workspace.requestSaveLayout();
  if (import_obsidian8.Platform.isMobile) {
    app2.workspace.leftSplit.collapse();
  }
};
var getAbstractFileAtPath = (app2, path) => {
  return app2.vault.getAbstractFileByPath(path);
};

// src/adapters/obsidian/utils/flow/flowEditor.ts
var getLineRangeFromRef = (path, ref2, plugin) => {
  var _a2;
  if (!ref2) {
    return [void 0, void 0];
  }
  const cache = plugin.app.metadataCache.getCache(path);
  if (!cache)
    return [void 0, void 0];
  const headings = cache.headings;
  const blocks = cache.blocks;
  const sections = cache.sections;
  if (blocks && ref2.charAt(0) == "^" && blocks[ref2.substring(1)]) {
    return [
      blocks[ref2.substring(1)].position.start.line + 1,
      blocks[ref2.substring(1)].position.end.line + 1
    ];
  }
  const heading = headings == null ? void 0 : headings.find((f4) => f4.heading.replace("#", " ") == ref2);
  if (heading) {
    const index = headings.findIndex((f4) => f4.heading == heading.heading);
    const level = (_a2 = headings[index]) == null ? void 0 : _a2.level;
    const nextIndex2 = headings.findIndex(
      (f4, i4) => i4 > index && f4.level <= level
    );
    const start = plugin.superstate.settings.editorFlowStyle == "classic" ? heading.position.start.line + 1 : heading.position.start.line + 2;
    if (index < headings.length - 1 && nextIndex2 != -1) {
      return [start, headings[nextIndex2].position.end.line];
    }
    return [start, sections[sections.length - 1].position.end.line + 1];
  }
  return [void 0, void 0];
};
var loadFlowEditorByDOM = (plugin, el, view, id2) => {
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    let dom = el;
    while (!dom.hasClass("mk-floweditor") && !dom.hasClass("workspace") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (!dom.hasClass("mk-floweditor") && !dom.hasClass("workspace") && !(dom.nodeName == "HTML")) {
      return;
    }
    setTimeout(async () => {
      var _a2, _b2;
      let leafFound = false;
      if (plugin.app.workspace.activeEditor) {
        if (((_b2 = (_a2 = plugin.app.workspace.activeEditor) == null ? void 0 : _a2.editor) == null ? void 0 : _b2.cm.dom) == view.dom) {
          leafFound = true;
          plugin.app.workspace.iterateLeaves((leaf) => {
            var _a3, _b3;
            if (((_a3 = leaf.view.editor) == null ? void 0 : _a3.cm.dom) == view.dom) {
              loadFlowEditorsForLeafForID(
                leaf,
                plugin.app.workspace.activeEditor.editor.cm,
                (_b3 = plugin.app.workspace.activeEditor.file) == null ? void 0 : _b3.path,
                plugin,
                id2
              );
            }
          }, plugin.app.workspace["rootSplit"]);
        }
      }
      if (!leafFound) {
        plugin.app.workspace.iterateLeaves((leaf) => {
          var _a3, _b3;
          const cm = (_a3 = leaf.view.editor) == null ? void 0 : _a3.cm;
          if (cm && view.dom == cm.dom) {
            leafFound = true;
            loadFlowEditorsForLeafForID(
              leaf,
              cm,
              (_b3 = leaf.view.file) == null ? void 0 : _b3.path,
              plugin,
              id2
            );
          }
        }, plugin.app.workspace["rootSplit"]);
      }
    });
  });
};
var loadFlowEditorsForLeafForID = (leaf, cm, source, plugin, id2) => {
  const stateField = cm.state.field(flowEditorInfo, false);
  if (!stateField)
    return;
  const flowInfo = stateField.find((f4) => f4.id == id2);
  if (flowInfo && flowInfo.expandedState == 2) {
    loadFlowEditor(leaf, cm, flowInfo, source, plugin);
  }
};
var loadFlowEditor = async (leaf, cm, flowEditorInfo2, source, plugin) => {
  const dom = cm.dom.querySelector(
    "#mk-flow-" + flowEditorInfo2.id
  );
  const path = plugin.superstate.spaceManager.uriByString(flowEditorInfo2.link, source);
  const basePath = plugin.superstate.spaceManager.resolvePath(path.basePath, source);
  if (dom) {
    const file = getAbstractFileAtPath(plugin.app, basePath);
    if (file instanceof import_obsidian9.TFolder) {
      if (!dom.hasAttribute("ready")) {
        dom.setAttribute("ready", "");
        plugin.superstate.ui.openPath(path.fullPath, false, dom);
        return;
      }
    } else {
      if (file) {
        const selectiveRange = getLineRangeFromRef(file.path, path.refStr, plugin);
        if (!dom.hasAttribute("ready")) {
          dom.setAttribute("ready", "");
          plugin.superstate.ui.openPath(basePath, false, dom, { from: selectiveRange[0], to: selectiveRange[1] });
        }
      } else {
        dom.empty();
        const createDiv = dom.createDiv("file-embed");
        createDiv.toggleClass("mod-empty", true);
        const createFile = async (e4) => {
          e4.stopPropagation();
          e4.stopImmediatePropagation();
          await plugin.files.newFile("/", basePath, "md");
          loadFlowEditor(leaf, cm, flowEditorInfo2, source, plugin);
        };
        createDiv.setText(`"${basePath}" ` + i18n_default.labels.noFile);
        createDiv.addEventListener("click", createFile);
      }
    }
  }
};
var openPathInElement = (plugin, parentLeaf, initiatingEl, fileName, onShowCallback) => {
  const parent = parentLeaf != null ? parentLeaf : plugin.app.workspace.activeLeaf;
  if (!initiatingEl)
    initiatingEl = parent.containerEl;
  const hoverPopover = new FlowEditor(
    parent,
    initiatingEl,
    plugin,
    void 0,
    onShowCallback
  );
  if (fileName)
    hoverPopover.titleEl.textContent = fileName.substring(
      0,
      fileName.lastIndexOf(".")
    );
};

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/flowEditor.tsx
var import_obsidian10 = require("obsidian");
var toggleFlowEditor = import_state6.Annotation.define();
var cacheFlowEditorHeight = import_state6.Annotation.define();
var preloadFlowEditor = import_state6.EditorState.transactionFilter.of(
  (tr) => {
    const newTrans = [];
    const value = tr.state.field(flowEditorInfo, false);
    if (value && !tr.annotation(toggleFlowEditor)) {
      newTrans.push(
        ...value.filter((f4) => f4.expandedState == 1).map((f4) => {
          if (tr.state.field(flowTypeStateField, false) == "doc") {
            return {
              annotations: toggleFlowEditor.of([f4.id, 2])
            };
          } else {
            return {
              annotations: toggleFlowEditor.of([f4.id, 0])
            };
          }
        })
      );
    }
    return [tr, ...newTrans];
  }
);
var internalLinkToggle = import_view3.ViewPlugin.fromClass(
  class {
    constructor(view) {
    }
  },
  {
    eventHandlers: {
      mousedown: (e4, view) => {
        if (!e4.shiftKey) {
          return;
        }
        const pos = view.posAtDOM(e4.target);
        const { from: lineFrom, to: lineTo, text: text2 } = view.state.doc.lineAt(pos);
        for (const match2 of text2.matchAll(/(?!!)\[\[([^\]]+)\]\]/g)) {
          const stateField = view.state.field(flowEditorInfo, false);
          const info = stateField.find(
            (f4) => f4.to == lineFrom + match2.index + match2[1].length + 2 && pos >= f4.from && pos <= f4.to
          );
          if (info) {
            e4.preventDefault();
            view.dispatch({
              annotations: toggleFlowEditor.of([info.id, 2])
            });
          }
        }
      }
    }
  }
);
var internalLinkHover = hoverTooltip((view, pos, side) => {
  const { from: lineFrom, to: lineTo } = view.state.doc.lineAt(pos);
  let hovObject = null;
  iterateTreeInSelection({ from: lineFrom, to: lineTo }, view.state, {
    enter: ({ name, from, to }) => {
      if (name.includes("hmd-internal-link") && pos <= to && pos >= from) {
        const stateField = view.state.field(flowEditorInfo, false);
        const info = stateField.find((f4) => f4.to == to);
        if (info) {
          hovObject = {
            pos,
            end: to,
            above: true,
            create(view2) {
              const dom = document.createElement("div");
              dom.toggleClass("mk-flow-hover", true);
              dom.toggleClass("menu", true);
              const openHoverDiv = dom.createDiv();
              openHoverDiv.setAttribute(
                "aria-label",
                info.expandedState == 0 ? i18n_default.buttons.openFlow : i18n_default.buttons.hideFlow
              );
              openHoverDiv.addEventListener("click", () => {
                view2.dispatch({
                  annotations: toggleFlowEditor.of([info.id, 2])
                });
              });
              const icon = openHoverDiv.createDiv();
              icon.innerHTML = uiIconSet["mk-ui-flow-hover"];
              openHoverDiv.insertAdjacentText(
                "beforeend",
                info.expandedState == 0 ? i18n_default.buttons.openFlow : i18n_default.buttons.hideFlow
              );
              return { dom };
            }
          };
          return false;
        }
      }
    }
  });
  return hovObject;
});
var flowEditorInfo = import_state6.StateField.define({
  create() {
    return [];
  },
  update(value, tr) {
    var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l;
    const newValues = [];
    const previous = value;
    const usedContainers = [];
    const str = tr.newDoc.sliceString(0);
    const reverseExpandedState = (state) => {
      const news = state != 2 ? 2 : 0;
      return news;
    };
    for (const match2 of str.matchAll(/(?:!\[!\[|!!\[\[)([^\]]+)\]\]/g)) {
      const link = match2[1];
      const existingLinks = previous.filter((f4) => f4.link == link);
      const offset2 = usedContainers.filter((f4) => f4 == link).length;
      const existingInfo = existingLinks[offset2];
      const id2 = existingInfo ? existingInfo.id : genId2();
      usedContainers.push(link);
      const info = {
        id: id2,
        link: match2[1],
        startOfLineFix: false,
        from: match2.index + 4,
        to: match2.index + 4 + match2[1].length,
        embed: 1,
        height: existingInfo ? ((_a2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _a2[0]) == id2 && ((_b2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _b2[1]) != 0 ? (_c2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _c2[1] : existingInfo.height : -1,
        expandedState: existingInfo ? ((_d2 = tr.annotation(toggleFlowEditor)) == null ? void 0 : _d2[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 1
      };
      newValues.push(info);
    }
    for (const match2 of str.matchAll(/\[\[([^\]]+)\]\]/g)) {
      if (str.charAt(match2.index - 1) != "!") {
        const link = match2[1];
        const existingLinks = previous.filter((f4) => f4.link == link);
        const offset2 = usedContainers.filter((f4) => f4 == link).length;
        const existingInfo = existingLinks[offset2];
        const id2 = existingInfo ? existingInfo.id : genId2();
        usedContainers.push(link);
        const info = {
          id: id2,
          link: match2[1],
          startOfLineFix: false,
          from: match2.index + 2,
          to: match2.index + 2 + match2[1].length,
          embed: 0,
          height: existingInfo ? ((_e2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _e2[0]) == id2 && ((_f = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _f[1]) != 0 ? (_g = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _g[1] : existingInfo.height : -1,
          expandedState: existingInfo ? ((_h = tr.annotation(toggleFlowEditor)) == null ? void 0 : _h[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 0
        };
        newValues.push(info);
      } else if (str.charAt(match2.index - 2) != "!") {
        const link = match2[1];
        const existingLinks = previous.filter((f4) => f4.link == link);
        const offset2 = usedContainers.filter((f4) => f4 == link).length;
        const existingInfo = existingLinks[offset2];
        const id2 = existingInfo ? existingInfo.id : genId2();
        usedContainers.push(link);
        const info = {
          id: id2,
          link: match2[1],
          startOfLineFix: false,
          from: match2.index + 3,
          to: match2.index + 3 + match2[1].length,
          embed: 2,
          height: existingInfo ? ((_i = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _i[0]) == id2 && ((_j = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _j[1]) != 0 ? (_k = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _k[1] : existingInfo.height : -1,
          expandedState: existingInfo ? ((_l = tr.annotation(toggleFlowEditor)) == null ? void 0 : _l[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 1
        };
        newValues.push(info);
      }
    }
    newValues.sort(compareByField("from", true));
    return newValues;
  }
});
var flowEditorRangeset = (state, plugin) => {
  const builder = new import_state6.RangeSetBuilder();
  const infoFields = state.field(flowEditorInfo, false);
  for (const info of infoFields) {
    const { from, to, embed: embedType, expandedState } = info;
    const lineFix = from - 3 == state.doc.lineAt(from).from && to + 2 == state.doc.lineAt(from).to;
    if (expandedState == 2) {
      if (embedType == 1) {
        if (!(state.selection.main.from == from - 4 && state.selection.main.to == to + 2 || state.selection.main.from >= from - 3 && state.selection.main.to <= to + 1)) {
          builder.add(from - 4, from - 3, flowEditorSelector(info, plugin));
          if (lineFix) {
            builder.add(
              from - 3,
              to + 2,
              flowEditorWidgetDecoration(info, plugin)
            );
          } else {
            builder.add(from - 3, to + 2, flowEditorDecoration(info, plugin));
          }
        }
      } else if (embedType == 0) {
        builder.add(to + 2, to + 2, flowEditorDecoration(info, plugin));
      }
    }
  }
  const dec = builder.finish();
  return dec;
};
var flowEditorField = (plugin) => import_state6.StateField.define({
  create(state) {
    return flowEditorRangeset(state, plugin);
  },
  update(value, tr) {
    return flowEditorRangeset(tr.state, plugin);
  },
  provide: (f4) => import_view3.EditorView.decorations.from(f4)
});
var FlowEditorWidget = class extends import_view3.WidgetType {
  constructor(info, plugin) {
    super();
    this.info = info;
    this.plugin = plugin;
  }
  eq(other) {
    return other.info.id === this.info.id;
  }
  toDOM(view) {
    const div = document.createElement("div");
    div.toggleClass("mk-floweditor-container", true);
    div.toggleClass("mk-floweditor-fix", this.info.startOfLineFix);
    div.setAttribute("id", "mk-flow-" + this.info.id);
    const placeholder = div.createDiv("mk-floweditor-placeholder");
    placeholder.style.setProperty("height", this.info.height + "px");
    loadFlowEditorByDOM(this.plugin, div, view, this.info.id);
    return div;
  }
  get estimatedHeight() {
    return this.info.height;
  }
};
var FlowEditorSelector = class extends import_view3.WidgetType {
  constructor(info, plugin) {
    super();
    this.info = info;
    this.flowInfo = info;
    this.plugin = plugin;
  }
  eq(other) {
    return other.info.id === this.info.id;
  }
  toDOM(view) {
    const div = document.createElement("div");
    div.toggleClass("mk-floweditor-selector", true);
    const reactEl = createRoot(div);
    if (this.info.link && view.state.field(import_obsidian10.editorInfoField, false)) {
      const infoField = view.state.field(import_obsidian10.editorInfoField, false);
      const file = infoField.file;
      reactEl.render(
        /* @__PURE__ */ Cn.createElement(FlowEditorHover, {
          app: this.plugin.app,
          superstate: this.plugin.superstate,
          toggle: true,
          path: this.info.link,
          source: file == null ? void 0 : file.path,
          toggleState: true,
          view,
          pos: { from: this.info.from, to: this.info.to },
          dom: div
        })
      );
    }
    return div;
  }
};
var flowEditorSelector = (info, plugin) => import_view3.Decoration.replace({
  widget: new FlowEditorSelector(info, plugin),
  inclusive: true,
  block: false
});
var flowEditorDecoration = (info, plugin) => import_view3.Decoration.replace({
  widget: new FlowEditorWidget(info, plugin),
  inclusive: true,
  block: false
});
var flowEditorWidgetDecoration = (info, plugin) => import_view3.Decoration.widget({
  widget: new FlowEditorWidget(info, plugin),
  block: true
});

// src/adapters/obsidian/ui/editors/markdownView/flowEditor/flowViewUpdates.ts
var import_view4 = require("@codemirror/view");
var flowViewUpdates = (plugin) => import_view4.EditorView.updateListener.of((v3) => {
  if (v3.heightChanged) {
    plugin.app.workspace.iterateRootLeaves((leaf) => {
      var _a2, _b2;
      const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
      if (cm && v3.view.dom == cm.dom && cm.state.field(flowTypeStateField, false)) {
        if ((_b2 = leaf.containerEl.parentElement) == null ? void 0 : _b2.hasClass("workspace-tab-container")) {
          if (cm.state.field(flowTypeStateField, false) != "doc") {
            cm.dispatch({
              annotations: portalTypeAnnotation.of("doc")
            });
          }
        }
      }
    });
  }
  if (v3.heightChanged) {
    const flowID = v3.state.field(flowIDStateField, false);
    if (flowID) {
      plugin.app.workspace.iterateLeaves((leaf) => {
        var _a2;
        const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
        if (cm) {
          const stateField = cm.state.field(flowEditorInfo, false);
          if (stateField) {
            if (stateField.find((f4) => f4.id == flowID)) {
              cm.dispatch({
                annotations: cacheFlowEditorHeight.of([
                  flowID,
                  v3.view.contentHeight
                ])
              });
            }
          }
        }
      }, plugin.app.workspace["rootSplit"]);
    }
  }
});

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/inlineStyler.tsx
var import_state8 = require("@codemirror/state");

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/marks.ts
var import_state7 = require("@codemirror/state");

// src/adapters/obsidian/ui/editors/markdownView/obsidianSyntax.ts
var oMarks = [
  {
    mark: "em",
    formatting: "formatting-em",
    altFormatting: "em_formatting_formatting-strong",
    formatChar: "*"
  },
  {
    mark: "strong",
    formatting: "formatting-strong",
    formatChar: "**"
  },
  {
    mark: "strikethrough",
    formatting: "formatting-strikethrough",
    formatChar: "~~"
  },
  {
    mark: "inline-code",
    formatting: "formatting-code",
    formatChar: "`"
  }
];

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/marks.ts
var toggleMark = import_state7.Annotation.define();
var trimSpace = (pos, moveDirLeft, state) => {
  if (moveDirLeft && state.sliceDoc(pos, pos + 1) == " ")
    return pos + 1;
  if (!moveDirLeft && state.sliceDoc(pos - 1, pos) == " ")
    return pos - 1;
  return pos;
};
var newPosAfterFormatting = (pos, moveDirLeft, state) => {
  const line = state.doc.lineAt(pos);
  const start = moveDirLeft ? line.from : pos;
  const end = moveDirLeft ? pos : line.to;
  let newPos = start;
  let lastFormatPos = start;
  const exitFormatRange = false;
  iterateTreeInSelection({ from: start, to: end }, state, {
    enter: (node) => {
      if (exitFormatRange)
        return false;
      if (node.name.includes("formatting")) {
        if (!moveDirLeft && node.from > start) {
          return false;
        }
        if (moveDirLeft) {
          newPos = node.from;
          lastFormatPos = node.to;
        } else {
          newPos = node.to;
        }
      }
    }
  });
  if (moveDirLeft && lastFormatPos < pos) {
    newPos = pos;
  }
  return newPos;
};
var expandRange = (selection, state) => {
  const from = trimSpace(
    newPosAfterFormatting(selection.from, true, state),
    true,
    state
  );
  const to = trimSpace(
    newPosAfterFormatting(selection.to, false, state),
    false,
    state
  );
  return { from, to };
};
var addMarkAtPos = (pos, mark) => ({
  changes: { from: pos, to: pos, insert: mark.formatChar }
});
var rangeIsMark = (state, mark, selection) => posIsMark(selection.from, state, mark.mark) && posIsMark(selection.to, state, mark.mark);
var posIsMark = (pos, state, markString) => {
  let isMark = false;
  iterateTreeAtPos(pos, state, {
    enter: ({ name, from, to }) => {
      if (nodeNameContainsMark(name, markString))
        isMark = true;
    }
  });
  return isMark;
};
var nodeNameContainsMark = (name, markString) => {
  return name.includes(markString);
};
var edgeIsMark = (pos, state, mark) => posIsMark(pos, state, mark.mark);
var edgeIsMarkFormat = (pos, state, mark) => posIsMark(pos, state, mark.formatting) ? true : mark.altFormatting ? posIsMark(pos, state, mark.altFormatting) : false;
var transactionChangesForMark = (range, mark, state) => {
  const newTrans = [];
  if (rangeIsMark(state, mark, range)) {
    if (edgeIsMarkFormat(range.from, state, mark) && !edgeIsMarkFormat(range.to, state, mark)) {
      newTrans.push(addMarkAtPos(range.to, mark));
    }
    if (edgeIsMarkFormat(range.to, state, mark) && !edgeIsMarkFormat(range.from, state, mark)) {
      newTrans.push(addMarkAtPos(range.from, mark));
    }
  } else if (edgeIsMark(range.from, state, mark)) {
    if (edgeIsMarkFormat(range.from, state, mark) && !edgeIsMark(range.from - 1, state, mark)) {
      newTrans.push(addMarkAtPos(range.from, mark));
    }
    newTrans.push(addMarkAtPos(range.to, mark));
  } else if (edgeIsMark(range.to, state, mark)) {
    if (edgeIsMarkFormat(range.to, state, mark) && !edgeIsMark(range.to + 1, state, mark)) {
      newTrans.push(addMarkAtPos(range.to, mark));
    }
    newTrans.push(addMarkAtPos(range.from, mark));
  } else {
    newTrans.push(addMarkAtPos(range.to, mark));
    newTrans.push(addMarkAtPos(range.from, mark));
  }
  return newTrans;
};
var removeAllInternalMarks = (sel, state, mark) => {
  const returnTrans = [];
  iterateTreeInSelection({ from: sel.from, to: sel.to }, state, {
    enter: ({ name, from, to }) => {
      if (nodeNameContainsMark(name, mark.formatting) || (mark.altFormatting ? nodeNameContainsMark(name, mark.altFormatting) : false))
        returnTrans.push({
          from,
          to: from + mark.formatChar.length
        });
    }
  });
  return {
    changes: returnTrans
  };
};
var toggleMarkExtension = import_state7.EditorState.transactionFilter.of(
  (tr) => {
    if (!tr.annotation(toggleMark))
      return tr;
    const markToggle = tr.annotation(toggleMark);
    const mark = oMarks.find((f4) => f4.mark == markToggle);
    if (!mark) {
      return tr;
    }
    const selection = tr.startState.selection.main;
    const newTrans = [];
    if (selection.head == selection.anchor) {
      if (tr.startState.sliceDoc(
        selection.head - mark.formatChar.length,
        selection.head
      ) == mark.formatChar && tr.startState.sliceDoc(
        selection.head,
        selection.head + mark.formatChar.length
      ) == mark.formatChar) {
        newTrans.push({
          changes: {
            from: selection.head - mark.formatChar.length,
            to: selection.head + mark.formatChar.length
          }
        });
      } else {
        newTrans.push({
          changes: {
            from: selection.head,
            insert: mark.formatChar + mark.formatChar
          },
          selection: {
            anchor: selection.head + mark.formatChar.length,
            head: selection.head + mark.formatChar.length
          }
        });
      }
      return [tr, ...newTrans];
    }
    const range = expandRange(selection, tr.startState);
    newTrans.push(removeAllInternalMarks(range, tr.startState, mark));
    const newFrom = range.from;
    const newTo = range.to;
    newTrans.push(...transactionChangesForMark(range, mark, tr.startState));
    return [tr, ...newTrans, { selection: { anchor: newFrom, head: newTo } }];
  }
);

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/InlineMenu.tsx
var import_classnames8 = __toESM(require_classnames());

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/Mark.tsx
var Mark = (props2) => {
  const { i: i4, style, active, toggleMarkAction } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.styles[style.label] : void 0,
    className: `mk-mark ${style.mark && active ? "mk-mark-active" : ""}`,
    dangerouslySetInnerHTML: { __html: uiIconSet[style.icon] },
    onMouseDown: (e4) => toggleMarkAction(e4, style)
  });
};

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/styles/default.ts
var default_default = [
  {
    label: "bold",
    value: `****`,
    insertOffset: 2,
    icon: "mk-mark-strong",
    mark: "strong"
  },
  {
    label: "italics",
    value: "**",
    insertOffset: 1,
    icon: "mk-mark-em",
    mark: "em"
  },
  {
    label: "strikethrough",
    value: "~~~~",
    insertOffset: 2,
    icon: "mk-mark-strikethrough",
    mark: "strikethrough"
  },
  {
    label: "code",
    value: "``",
    insertOffset: 1,
    icon: "mk-mark-code",
    mark: "inline-code"
  },
  {
    label: "link",
    value: "[]()",
    insertOffset: 1,
    cursorOffset: 2,
    icon: "mk-mark-link"
  },
  {
    label: "blocklink",
    value: "[[]]",
    insertOffset: 2,
    icon: "mk-mark-blocklink"
  }
];

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/styles/index.ts
function resolveStyles() {
  return default_default;
}

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/InlineMenu.tsx
var loadStylerIntoContainer = (el, plugin) => {
  const root = createRoot(el);
  root.render(
    /* @__PURE__ */ Cn.createElement(InlineMenuComponent, {
      mobile: true,
      activeMarks: [],
      plugin
    })
  );
};
var InlineMenuComponent = (props2) => {
  const [mode, setMode] = h2(props2.mobile ? 0 : 1);
  const [colorMode, setColorMode] = h2(null);
  const makeMenu = (e4) => {
    var _a2;
    e4.preventDefault();
    const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM(props2.plugin);
    if (!cm)
      return;
    const end = cm.state.selection.main.to;
    const insertChars = cm.state.sliceDoc(end - 1, end) == cm.state.lineBreak ? props2.plugin.superstate.settings.menuTriggerChar : cm.state.lineBreak + props2.plugin.superstate.settings.menuTriggerChar;
    cm.dispatch({
      changes: {
        from: end,
        to: end,
        insert: insertChars
      },
      selection: {
        head: end + insertChars.length,
        anchor: end + insertChars.length
      }
    });
  };
  const toggleMarkAction = (e4, s5) => {
    var _a2;
    e4.preventDefault();
    const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM(props2.plugin);
    if (!cm)
      return;
    if (s5.mark) {
      cm.dispatch({
        annotations: toggleMark.of(s5.mark)
      });
      return;
    }
    const selection = cm.state.selection.main;
    const selectedText = cm.state.sliceDoc(selection.from, selection.to);
    cm.dispatch({
      changes: {
        from: selection.from,
        to: selection.to,
        insert: s5.value.substring(0, s5.insertOffset) + selectedText + s5.value.substring(s5.insertOffset)
      },
      selection: s5.cursorOffset ? {
        anchor: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length + s5.cursorOffset,
        head: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length + s5.cursorOffset
      } : {
        anchor: selection.from + s5.value.substring(0, s5.insertOffset).length,
        head: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length
      }
    });
  };
  const makeMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.makeMenu : void 0,
    onMouseDown: (e4) => {
      makeMenu(e4);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-slash"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.selectStyle : void 0,
    onMouseDown: () => {
      setMode(1);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-style"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.image : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView(props2.plugin);
      props2.plugin.app.commands.commands["editor:attach-file"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-attach"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.toggleKeyboard : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView(props2.plugin);
      props2.plugin.app.commands.commands["editor:indent-list"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-indent"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.toggleKeyboard : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView(props2.plugin);
      props2.plugin.app.commands.commands["editor:unindent-list"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-unindent"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.commands.toggleKeyboard : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView(props2.plugin);
      props2.plugin.app.commands.commands["editor:toggle-keyboard"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-keyboard"] }
  }));
  const colorsMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      setColorMode(null);
      setMode(1);
    },
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }), colors.map((c4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onMouseDown: () => {
      var _a2;
      setMode(1);
      setColorMode(null);
      const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM(props2.plugin);
      if (!cm)
        return;
      const selection = cm.state.selection.main;
      const selectedText = cm.state.sliceDoc(
        selection.from,
        selection.to
      );
      cm.dispatch({
        changes: {
          from: selection.from,
          to: selection.to,
          insert: colorMode.prefix + c4[1] + colorMode.suffix + selectedText + colorMode.closeTag
        }
      });
    },
    className: "mk-color",
    style: { background: c4[1] }
  })));
  const marksMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.mobile ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      setMode(0);
    },
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), resolveStyles().map((s5, i4) => {
    return /* @__PURE__ */ Cn.createElement(Mark, {
      plugin: props2.plugin,
      key: i4,
      i: i4,
      style: s5,
      active: props2.activeMarks.find((f4) => f4 == s5.mark) ? true : false,
      toggleMarkAction
    });
  }), props2.plugin.superstate.settings.inlineStylerColors ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.styles.textColor : void 0,
    onMouseDown: () => {
      setMode(2);
      setColorMode({
        prefix: `<span style='color:`,
        suffix: `'>`,
        closeTag: "</span>"
      });
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-mark-color"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": props2.plugin.superstate.ui.getScreenType() != "mobile" ? i18n_default.styles.highlight : void 0,
    onMouseDown: () => {
      setMode(2);
      setColorMode({
        prefix: `<mark style='background:`,
        suffix: `'>`,
        closeTag: "</mark>"
      });
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-mark-highlight"]
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
  return /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames8.default)("mk-style-menu", props2.mobile ? "" : "menu"),
    onMouseDown: (e4) => e4.preventDefault()
  }, mode == 0 && props2.mobile ? makeMode() : mode == 2 ? colorsMode() : marksMode());
};

// src/adapters/obsidian/ui/editors/markdownView/menus/inlineStylerView/inlineStyler.tsx
var cursorTooltipField = (plugin) => import_state8.StateField.define({
  create: getCursorTooltips(plugin),
  update(tooltips2, tr) {
    if (!tr.docChanged && !tr.selection)
      return tooltips2;
    return getCursorTooltips(plugin)(tr.state);
  },
  provide: (f4) => showTooltip.computeN([f4], (state) => state.field(f4))
});
var getCursorTooltips = (plugin) => (state) => {
  return state.selection.ranges.filter((range) => !range.empty).map((range) => {
    const expandedRange = expandRange(range, state);
    const line = state.doc.lineAt(range.head);
    const activeMarks = oMarks.map((f4) => rangeIsMark(state, f4, expandedRange) ? f4.mark : "").filter((f4) => f4 != "");
    return {
      pos: Math.min(range.head, range.anchor),
      above: true,
      strictSide: true,
      arrow: false,
      create: (view) => {
        const dom = document.createElement("div");
        dom.className = "cm-tooltip-cursor";
        const reactElement = createRoot(dom);
        reactElement.render(
          /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(InlineMenuComponent, {
            plugin,
            cm: view,
            activeMarks,
            mobile: false
          }))
        );
        return { dom };
      }
    };
  });
};
function cursorTooltip(plugin) {
  return cursorTooltipField(plugin);
}

// src/adapters/obsidian/ui/editors/markdownView/placeholder.ts
var import_state9 = require("@codemirror/state");
var import_view5 = require("@codemirror/view");
var placeholderLine = (plugin) => import_view5.Decoration.line({
  attributes: { "data-ph": i18n_default.labels.placeholder.replace("${1}", plugin.superstate.settings.menuTriggerChar) },
  class: "mk-placeholder"
});
var placeholderExtension = (plugin) => import_state9.StateField.define({
  create() {
    return import_view5.Decoration.none;
  },
  update(value, tr) {
    const builder = new import_state9.RangeSetBuilder();
    const currentLine = tr.state.doc.lineAt(tr.state.selection.main.head);
    if ((currentLine == null ? void 0 : currentLine.length) == 0)
      builder.add(currentLine.from, currentLine.from, placeholderLine(plugin));
    const dec = builder.finish();
    return dec;
  },
  provide: (f4) => import_view5.EditorView.decorations.from(f4)
});

// src/adapters/obsidian/ui/editors/markdownView/cmExtensions.ts
var cmExtensions = (plugin, mobile) => {
  const extensions = [...editBlockExtensions()];
  if (plugin.superstate.settings.makerMode) {
    extensions.push(
      ...[toggleMarkExtension, tooltips({ parent: document.body })]
    );
    if (!mobile && plugin.superstate.settings.inlineStyler) {
      extensions.push(cursorTooltip(plugin));
    }
    if (plugin.superstate.settings.flowMenuEnabled && plugin.superstate.settings.makeMenuPlaceholder)
      extensions.push(placeholderExtension(plugin));
    if (plugin.superstate.settings.editorFlow) {
      extensions.push(
        flowTypeStateField,
        preloadFlowEditor,
        flowEditorField(plugin),
        flowEditorInfo,
        flowIDStateField,
        flowViewUpdates(plugin)
      );
      if (plugin.superstate.settings.internalLinkClickFlow) {
        extensions.push(internalLinkToggle);
      } else {
        extensions.push(internalLinkHover);
      }
    }
  }
  return extensions;
};

// src/adapters/obsidian/utils/flow/markdownPost.tsx
var getCMFromElement = (el, app2) => {
  let dom = el;
  while (!dom.hasClass("cm-editor") && dom.parentElement) {
    dom = dom.parentElement;
  }
  if (!dom.hasClass("cm-editor")) {
    return;
  }
  let rcm;
  app2.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm && dom == cm.dom) {
      rcm = cm;
      return true;
    }
  }, app2.workspace["rootSplit"]);
  return rcm;
};
var replaceAllTables = (plugin, el, ctx) => {
  el.querySelectorAll("p").forEach((element) => {
    for (const match2 of element.textContent.matchAll(
      /(?:!\[!\[|!!\[\[)([^\]]+)\]\]/g
    )) {
      const link = match2[1];
      const reactEl = createRoot(element.parentElement);
      reactEl.render(
        /* @__PURE__ */ Cn.createElement(PathView, {
          superstate: plugin.superstate,
          path: link,
          load: true
        })
      );
    }
  });
};
var replaceMarkdownForEmbeds = (el, callback) => {
  let dom = el;
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    while (!dom.hasClass("markdown-embed") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (dom) {
      callback(dom);
    }
  });
};
var replaceMarkdownForReadingMode = (el, callback) => {
  let dom = el;
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    while (!dom.hasClass("markdown-reading-view") && !dom.hasClass("internal-embed") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (dom && dom.hasClass("markdown-reading-view")) {
      callback(dom);
    }
  });
};
var replaceAllEmbed = (el, ctx, superstate, app2) => {
  replaceMarkdownForEmbeds(el, async (dom) => {
    const nodes = dom.querySelectorAll(".markdown-embed-link");
    for (let i4 = 0; i4 < nodes.length; i4++) {
      if (nodes[i4].parentNode === dom) {
        dom.removeChild(nodes[i4]);
        const div = dom.createDiv("mk-floweditor-selector");
        const reactEl = createRoot(div);
        const cm = getCMFromElement(el, app2);
        const pos = cm == null ? void 0 : cm.posAtDOM(dom);
        const index = [...Array.from(dom.parentElement.childNodes)].indexOf(
          dom
        );
        const nextDom = dom.parentElement.childNodes[index];
        const endPos = cm == null ? void 0 : cm.posAtDOM(nextDom);
        if (ctx.sourcePath)
          reactEl.render(
            /* @__PURE__ */ Cn.createElement(FlowEditorHover, {
              app: app2,
              toggle: true,
              path: ctx.sourcePath,
              toggleState: false,
              view: cm,
              pos: { from: pos + 3, to: endPos - 3 },
              superstate,
              dom
            })
          );
      }
    }
  });
};

// src/core/schemas/settings.ts
var DEFAULT_SETTINGS = {
  newNotePlaceholder: "Untitled",
  defaultInitialization: false,
  filePreviewOnHover: false,
  flowMenuEnabled: true,
  markSans: false,
  blinkEnabled: true,
  makeMenuPlaceholder: true,
  mobileMakeBar: true,
  inlineStyler: true,
  makerMode: true,
  spacesMDBInHidden: true,
  inlineStylerColors: false,
  editorFlow: true,
  internalLinkClickFlow: true,
  contextEnabled: true,
  spaceViewEnabled: true,
  saveAllContextToFrontmatter: true,
  editorFlowStyle: "seamless",
  autoOpenFileContext: false,
  activeView: "Spaces/Home",
  hideFrontmatter: true,
  activeSpace: "",
  defaultDateFormat: "MMM dd yyyy",
  spacesEnabled: true,
  spacesPerformance: false,
  enableFolderNote: true,
  folderIndentationLines: true,
  revealActiveFile: false,
  spacesStickers: true,
  spaceRowHeight: 29,
  spacesDisablePatch: false,
  folderNoteInsideFolder: true,
  sidebarTabs: true,
  showRibbon: true,
  deleteFileOption: "trash",
  expandedSpaces: ["/"],
  expandFolderOnClick: true,
  menuTriggerChar: "/",
  inlineStickerMenu: true,
  emojiTriggerChar: ":",
  folderContextFile: "context",
  folderFrameFile: "frames",
  spacesFolder: "Spaces",
  hiddenFiles: [],
  hiddenExtensions: [".mdb"],
  newFileLocation: "root",
  newFileFolderPath: "",
  inlineBacklinks: false,
  inlineContext: true,
  inlineBacklinksExpanded: false,
  inlineContextExpanded: true,
  inlineContextSectionsExpanded: true,
  dataviewInlineContext: false,
  inlineContextNameLayout: "vertical",
  waypoints: ["Spaces/Home", "/", "spaces://$tags"],
  spacesUseAlias: false,
  fmKeyAlias: "aliases",
  fmKeyBanner: "banner",
  fmKeyColor: "color",
  fmKeySticker: "sticker",
  fmKeyContexts: "_contexts",
  fmKeySort: "_sort",
  fmKeyFilter: "_filters",
  fmKeyLinks: "_links",
  openSpacesOnLaunch: true,
  indexSVG: false,
  quickFrames: [],
  readableLineWidth: true,
  autoAddContextsToSubtags: true,
  autoMigration08: false,
  releaseNotesPrompt: 0.8,
  enableDefaultSpaces: true,
  enableTagSpaces: true,
  enableHomeSpace: true,
  showSpacePinIcon: true,
  minimalFix: false,
  experimental: false,
  systemName: "Vault"
};

// src/main.ts
var import_obsidian31 = require("obsidian");

// src/adapters/obsidian/settings.ts
var import_obsidian11 = require("obsidian");
var MakeMDPluginSettingsTab = class extends import_obsidian11.PluginSettingTab {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.plugin = plugin;
  }
  refreshView() {
    this.display();
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h1", { text: i18n_default.settings.sectionSidebar });
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.spaces.name).setDesc(i18n_default.settings.spaces.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.spacesEnabled).onChange((value) => {
        this.plugin.superstate.settings.spacesEnabled = value;
        this.plugin.saveSettings();
        if (value) {
          this.plugin.openFileTreeLeaf(true);
        } else {
          this.plugin.detachFileTreeLeafs();
        }
        this.refreshView();
      })
    );
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.defaultSpaces.name).setDesc(i18n_default.settings.defaultSpaces.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.enableDefaultSpaces).onChange((value) => {
        this.plugin.superstate.settings.enableDefaultSpaces = value;
        this.plugin.saveSettings();
      })
    );
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.spacesStickers.name).setDesc(i18n_default.settings.spacesStickers.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.spacesStickers).onChange((value) => {
        this.plugin.superstate.settings.spacesStickers = value;
        this.plugin.saveSettings();
        this.refreshView();
      })
    );
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.spaceView.name).setDesc(i18n_default.settings.spaceView.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.spaceViewEnabled).onChange((value) => {
        this.plugin.superstate.settings.spaceViewEnabled = value;
        this.plugin.saveSettings();
      })
    );
    if (this.plugin.superstate.settings.enableDefaultSpaces) {
      containerEl.createEl("h3", { text: i18n_default.settings.sectionDefault });
      const defaultSpaces = containerEl.createEl("div");
      new import_obsidian11.Setting(defaultSpaces).setName(i18n_default.settings.homeSpace.name).setDesc(i18n_default.settings.homeSpace.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.enableHomeSpace).onChange((value) => {
          this.plugin.superstate.settings.enableHomeSpace = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(defaultSpaces).setName(i18n_default.settings.tagSpaces.name).setDesc(i18n_default.settings.tagSpaces.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.enableTagSpaces).onChange((value) => {
          this.plugin.superstate.settings.enableTagSpaces = value;
          this.plugin.saveSettings();
        })
      );
    }
    if (this.plugin.superstate.settings.spacesEnabled) {
      containerEl.createEl("h3", { text: i18n_default.settings.sectionNavigator });
      const spaceAppearances = containerEl.createEl("div");
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.sidebarTabs.name).setDesc(i18n_default.settings.sidebarTabs.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.sidebarTabs).onChange((value) => {
          this.plugin.superstate.settings.sidebarTabs = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-hide-tabs", !value);
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.hideRibbon.name).setDesc(i18n_default.settings.hideRibbon.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.showRibbon).onChange((value) => {
          this.plugin.superstate.settings.showRibbon = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-hide-ribbon", !value);
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.folderIndentationLines.name).setDesc(i18n_default.settings.folderIndentationLines.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.folderIndentationLines).onChange((value) => {
          this.plugin.superstate.settings.folderIndentationLines = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-folder-lines", value);
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.spacesAlias.name).setDesc(i18n_default.settings.spacesAlias.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.spacesUseAlias).onChange((value) => {
          this.plugin.superstate.settings.spacesUseAlias = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.readableLineWidth.name).setDesc(i18n_default.settings.readableLineWidth.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.readableLineWidth).onChange((value) => {
          this.plugin.superstate.settings.readableLineWidth = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.openSpacesOnLaunch.name).setDesc(i18n_default.settings.openSpacesOnLaunch.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.openSpacesOnLaunch).onChange((value) => {
          this.plugin.superstate.settings.openSpacesOnLaunch = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.spaceRowHeight.name).setDesc(i18n_default.settings.spaceRowHeight.desc).addText((text2) => {
        text2.setValue(this.plugin.superstate.settings.spaceRowHeight.toString()).onChange(async (value) => {
          text2.setValue(parseInt(value).toString());
          this.plugin.superstate.settings.spaceRowHeight = parseInt(value);
          await this.plugin.saveSettings();
        });
      });
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.expandFolder.name).setDesc(i18n_default.settings.expandFolder.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.expandFolderOnClick).onChange((value) => {
          this.plugin.superstate.settings.expandFolderOnClick = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.hoverPreview.name).setDesc(i18n_default.settings.hoverPreview.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.filePreviewOnHover).onChange((value) => {
          this.plugin.superstate.settings.filePreviewOnHover = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.activeFile.name).setDesc(i18n_default.settings.activeFile.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.revealActiveFile).onChange((value) => {
          this.plugin.superstate.settings.revealActiveFile = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.spacesFileExplorerDual.name).setDesc(i18n_default.settings.spacesFileExplorerDual.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.spacesDisablePatch).onChange((value) => {
          this.plugin.superstate.settings.spacesDisablePatch = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.spacesPerformance.name).setDesc(i18n_default.settings.spacesPerformance.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.spacesPerformance).onChange((value) => {
          this.plugin.superstate.settings.spacesPerformance = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(spaceAppearances).setName(i18n_default.settings.spacesDeleteOption.name).setDesc(i18n_default.settings.spacesDeleteOption.desc).addDropdown((dropdown) => {
        dropdown.addOption(
          "permanent",
          i18n_default.settings.spacesDeleteOptions.permanant
        );
        dropdown.addOption("trash", i18n_default.settings.spacesDeleteOptions.trash);
        dropdown.addOption(
          "system-trash",
          i18n_default.settings.spacesDeleteOptions["system-trash"]
        );
        dropdown.setValue(this.plugin.superstate.settings.deleteFileOption);
        dropdown.onChange((option) => {
          this.plugin.superstate.settings.deleteFileOption = option;
          this.plugin.saveSettings();
        });
      });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.newNotePlaceholder.name).setDesc(i18n_default.settings.newNotePlaceholder.desc).addText((text2) => {
        text2.setValue(this.plugin.superstate.settings.newNotePlaceholder).onChange(async (value) => {
          this.plugin.superstate.settings.newNotePlaceholder = value;
          await this.plugin.saveSettings();
        });
      });
    }
    if (this.plugin.superstate.settings.spacesStickers) {
      containerEl.createEl("h3", { text: "Stickers" });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.indexSVG.name).setDesc(i18n_default.settings.indexSVG.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.indexSVG).onChange((value) => {
          this.plugin.superstate.settings.indexSVG = value;
          this.plugin.saveSettings();
        })
      );
    }
    if (this.plugin.superstate.settings.spaceViewEnabled) {
      containerEl.createEl("h3", { text: "Space View" });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.minimalThemeFix.name).setDesc(i18n_default.settings.minimalThemeFix.description).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.minimalFix).onChange((value) => {
          this.plugin.superstate.settings.minimalFix = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-minimal-fix", !value);
        })
      );
    }
    containerEl.createEl("h1", { text: i18n_default.settings.sectionContext });
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.contexts.name).setDesc(i18n_default.settings.contexts.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.contextEnabled).onChange((value) => {
        this.plugin.superstate.settings.contextEnabled = value;
        this.plugin.saveSettings();
        this.plugin.reloadExtensions(false);
      })
    );
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.defaultDateFormat.name).setDesc(i18n_default.settings.defaultDateFormat.desc).addText((text2) => {
      text2.setValue(this.plugin.superstate.settings.defaultDateFormat).onChange(async (value) => {
        this.plugin.superstate.settings.defaultDateFormat = value;
        await this.plugin.saveSettings();
      });
    });
    containerEl.createEl("h3", { text: i18n_default.settings.sectionAdvanced });
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.openFileContext.name).setDesc(i18n_default.settings.openFileContext.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.autoOpenFileContext).onChange((value) => {
        this.plugin.superstate.settings.autoOpenFileContext = value;
        this.plugin.saveSettings();
      })
    );
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.syncContextToFrontmatter.name).setDesc(i18n_default.settings.syncContextToFrontmatter.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.saveAllContextToFrontmatter).onChange((value) => {
        this.plugin.superstate.settings.saveAllContextToFrontmatter = value;
        this.plugin.saveSettings();
      })
    );
    containerEl.createEl("h1", { text: i18n_default.settings.sectionBlink });
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.blink.name).setDesc(i18n_default.settings.blink.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.blinkEnabled).onChange(async (value) => {
        this.plugin.superstate.settings.blinkEnabled = value;
        await this.plugin.saveSettings();
        this.plugin.reloadExtensions(false);
      })
    );
    containerEl.createEl("h1", { text: i18n_default.settings.sectionFlow });
    new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.editorMakerMode.name).setDesc(i18n_default.settings.editorMakerMode.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.makerMode).onChange((value) => {
        this.plugin.superstate.settings.makerMode = value;
        this.plugin.saveSettings();
        this.refreshView();
      })
    );
    if (this.plugin.superstate.settings.makerMode) {
      containerEl.createEl("h3", { text: i18n_default.settings.sectionInlineContext });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineContextExplorer.name).setDesc(i18n_default.settings.inlineContextExplorer.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineContext).onChange((value) => {
          this.plugin.superstate.settings.inlineContext = value;
          this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineContextExpanded.name).setDesc(i18n_default.settings.inlineContextExpanded.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineContextSectionsExpanded).onChange((value) => {
          this.plugin.superstate.settings.inlineContextSectionsExpanded = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineContextHorizontal.name).setDesc(i18n_default.settings.inlineContextHorizontal.desc).addDropdown((dropdown) => {
        dropdown.addOption("vertical", i18n_default.settings.layoutVertical);
        dropdown.addOption("horizontal", i18n_default.settings.layoutHorizontal);
        dropdown.setValue(this.plugin.superstate.settings.inlineContextNameLayout);
        dropdown.onChange((option) => {
          this.plugin.superstate.settings.inlineContextNameLayout = option;
          this.plugin.saveSettings();
        });
      });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.hideFrontmatter.name).setDesc(i18n_default.settings.hideFrontmatter.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.hideFrontmatter).onChange(async (value) => {
          this.plugin.superstate.settings.hideFrontmatter = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.dataviewInlineContext.name).setDesc(i18n_default.settings.dataviewInlineContext.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.dataviewInlineContext).onChange((value) => {
          this.plugin.superstate.settings.dataviewInlineContext = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineBacklinks.name).setDesc(i18n_default.settings.inlineBacklinks.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineBacklinks).onChange(async (value) => {
          this.plugin.superstate.settings.inlineBacklinks = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      containerEl.createEl("h3", { text: i18n_default.settings.sectionFlow });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.editorFlowReplace.name).setDesc(i18n_default.settings.editorFlowReplace.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.editorFlow).onChange((value) => {
          this.plugin.superstate.settings.editorFlow = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.internalLinkFlowEditor.name).setDesc(i18n_default.settings.internalLinkFlowEditor.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.internalLinkClickFlow).onChange(async (value) => {
          this.plugin.superstate.settings.internalLinkClickFlow = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.editorFlowStyle.name).setDesc(i18n_default.settings.editorFlowStyle.desc).addDropdown((dropdown) => {
        dropdown.addOption("classic", i18n_default.settings.editorFlowStyle.classic);
        dropdown.addOption("seamless", i18n_default.settings.editorFlowStyle.seamless);
        dropdown.addOption("minimal", i18n_default.settings.editorFlowStyle.minimal);
        dropdown.setValue(this.plugin.superstate.settings.editorFlowStyle).onChange(async (value) => {
          this.plugin.superstate.settings.editorFlowStyle = value;
          document.body.classList.toggle("mk-flow-classic", false);
          document.body.classList.toggle("mk-flow-seamless", false);
          document.body.classList.toggle("mk-flow-minimal", false);
          if (value == "seamless")
            document.body.classList.toggle("mk-flow-seamless", true);
          if (value == "classic")
            document.body.classList.toggle("mk-flow-classic", true);
          if (value == "minimal")
            document.body.classList.toggle("mk-flow-minimal", true);
        });
      });
      containerEl.createEl("h3", { text: i18n_default.settings.sectionFlowMenu });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.editorMakeMenu.name).setDesc(i18n_default.settings.editorMakeMenu.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.flowMenuEnabled).onChange(async (value) => {
          this.plugin.superstate.settings.flowMenuEnabled = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.makeChar.name).setDesc(i18n_default.settings.makeChar.desc).addText((text2) => {
        text2.setValue(this.plugin.superstate.settings.menuTriggerChar).onChange(async (value) => {
          if (value.length < 1) {
            text2.setValue(this.plugin.superstate.settings.menuTriggerChar);
            return;
          }
          let char = value[0];
          if (value.length === 2) {
            char = value.replace(this.plugin.superstate.settings.menuTriggerChar, "");
          }
          text2.setValue(char);
          this.plugin.superstate.settings.menuTriggerChar = char;
          await this.plugin.saveSettings();
        });
      });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.editorMakePlacholder.name).setDesc(i18n_default.settings.editorMakePlacholder.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.makeMenuPlaceholder).onChange(async (value) => {
          this.plugin.superstate.settings.makeMenuPlaceholder = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      containerEl.createEl("h3", { text: i18n_default.settings.sectionFlowStyler });
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineStyler.name).setDesc(i18n_default.settings.inlineStyler.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineStyler).onChange(async (value) => {
          this.plugin.superstate.settings.inlineStyler = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineStickerMenu.name).setDesc(i18n_default.settings.inlineStickerMenu.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineStickerMenu).onChange(async (value) => {
          this.plugin.superstate.settings.inlineStickerMenu = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.inlineStylerColor.name).setDesc(i18n_default.settings.inlineStylerColor.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.inlineStylerColors).onChange((value) => {
          this.plugin.superstate.settings.inlineStylerColors = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian11.Setting(containerEl).setName(i18n_default.settings.mobileMakeBar.name).setDesc(i18n_default.settings.mobileMakeBar.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.superstate.settings.mobileMakeBar).onChange((value) => {
          this.plugin.superstate.settings.mobileMakeBar = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
    }
    new import_obsidian11.Setting(containerEl).setName("Experimental").setDesc("Experimental features that are subject to change and may not be optimized for performance").addToggle(
      (toggle) => toggle.setValue(this.plugin.superstate.settings.experimental).onChange((value) => {
        this.plugin.superstate.settings.experimental = value;
        this.plugin.saveSettings();
        this.refreshView();
      })
    );
  }
};

// src/adapters/obsidian/ui/navigator/NavigatorView.tsx
var import_obsidian12 = require("obsidian");
var FILE_TREE_VIEW_TYPE = "mk-path-view";
var VIEW_DISPLAY_TEXT = "Spaces";
var ICON = "layout-grid";
var FileTreeView = class extends import_obsidian12.ItemView {
  constructor(leaf, superstate) {
    super(leaf);
    this.navigation = false;
    this.superstate = superstate;
  }
  revealInFolder(file) {
    if (file instanceof import_obsidian12.TFolder) {
      this.leaf.view.app.workspace.activeLeaf.setViewState({
        type: SPACE_VIEW_TYPE,
        state: { path: file.path }
      });
      this.leaf.view.app.workspace.requestSaveLayout();
    } else {
      const evt = new CustomEvent(eventTypes.revealPath, {
        detail: { path: file.path }
      });
      window.dispatchEvent(evt);
    }
  }
  getViewType() {
    return FILE_TREE_VIEW_TYPE;
  }
  getDisplayText() {
    return VIEW_DISPLAY_TEXT;
  }
  getIcon() {
    return ICON;
  }
  async onClose() {
    const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
    if (leafs.length == 0) {
      const leaf = this.app.workspace.getLeftLeaf(false);
      await leaf.setViewState({ type: FILE_TREE_VIEW_TYPE });
    }
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
    this.constructFileTree();
  }
  constructFileTree() {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(/* @__PURE__ */ Cn.createElement(Navigator, {
      superstate: this.superstate
    }));
  }
};

// src/adapters/obsidian/replaceMobileMainMenu.tsx
var replaceMobileMainMenu = (superstate) => {
  if (superstate.ui.getScreenType() == "mobile") {
    const header = app.workspace.containerEl.querySelector(
      ".workspace-drawer.mod-left .workspace-drawer-header-left"
    );
    header.empty();
    const reactEl = createRoot(header);
    reactEl.render(
      /* @__PURE__ */ Cn.createElement(SidebarProvider, {
        superstate
      }, /* @__PURE__ */ Cn.createElement(MainMenu, {
        superstate
      }))
    );
  }
};

// src/adapters/obsidian/ui/editors/MDBFileViewer.tsx
var import_obsidian13 = require("obsidian");
var MDB_FILE_VIEWER_TYPE = "make-mdb-viewer";
var MDBFileViewer = class extends import_obsidian13.FileView {
  constructor(leaf, plugin) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
  }
  getViewType() {
    return MDB_FILE_VIEWER_TYPE;
  }
  getDisplayText() {
    var _a2;
    return (_a2 = this.file) == null ? void 0 : _a2.name;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.file = getAbstractFileAtPath(this.plugin.app, state.file);
    this.schema = state.schema;
    this.constructInlineContext(state.file, state.schema);
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = this.file.name;
    this.leaf.view.titleEl = this.file.name;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = this.file.name;
    }
    return;
  }
  getState() {
    const state = super.getState();
    state.file = this.file.path;
    state.schema = this.schema;
    return state;
  }
  constructInlineContext(path, schema) {
    const space = this.plugin.superstate.spaceManager.spaceInfoForPath(
      getParentPathFromString(path)
    );
    this.destroy();
    this.root = createRoot(this.contentEl);
    if (space)
      this.root.render(
        /* @__PURE__ */ Cn.createElement(MDBViewer, {
          superstate: this.plugin.superstate,
          space,
          schema
        })
      );
  }
};

// src/adapters/obsidian/ui/explorer/ContextExplorerLeafView.tsx
var import_obsidian14 = require("obsidian");
var ContextExplorerLeafView = class extends import_obsidian14.ItemView {
  constructor(leaf, superstate) {
    super(leaf);
    this.navigation = false;
    this.superstate = superstate;
  }
  getViewType() {
    return FILE_CONTEXT_VIEW_TYPE;
  }
  getDisplayText() {
    return VIEW_DISPLAY_TEXT2;
  }
  getIcon() {
    return ICON2;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
    this.constructFileContext();
  }
  async setState(state, result) {
    this.constructFileContext();
    await super.setState(state, result);
    return;
  }
  getState() {
    const state = super.getState();
    return state;
  }
  constructFileContext() {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement(PathContextView, {
        superstate: this.superstate
      })
    );
  }
};
var FILE_CONTEXT_VIEW_TYPE = "make-context-view";
var ICON2 = "component";
var VIEW_DISPLAY_TEXT2 = "Explorer";

// src/adapters/obsidian/ui/editors/ReadingModeHeader.tsx
var ReadingModeHeader = (props2) => {
  const [path, setPath] = h2(props2.filePath);
  const ref2 = _2(null);
  p2(() => {
    setPath(props2.filePath);
  }, [props2.filePath]);
  const changeActiveFile = (path2) => {
    if (ref2.current.closest(".mod-active"))
      setPath(path2);
  };
  p2(() => {
    props2.superstate.ui.eventsDispatch.addListener(
      "activePathChanged",
      changeActiveFile
    );
    return () => {
      props2.superstate.ui.eventsDispatch.removeListener(
        "activePathChanged",
        changeActiveFile
      );
    };
  }, []);
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, /* @__PURE__ */ Cn.createElement(MarkdownHeaderView, {
    superstate: props2.superstate,
    path,
    showHeader: true,
    showBanner: true,
    showFolder: true,
    editable: false
  }));
};

// src/adapters/obsidian/filetypes/frontmatter/frontMatterKeys.ts
var frontMatterKeys = (fm) => {
  return Object.keys(fm != null ? fm : {}).filter((f4) => f4 != "position");
};

// src/adapters/obsidian/ui/editors/markdownView/RemoteMarkdownHeaderView.tsx
var RemoteMarkdownHeaderView = (props2) => {
  var _a2;
  const { name, fm } = props2;
  const [collapsed, setCollapsed] = h2(false);
  const tags = (_a2 = fm.tags) != null ? _a2 : [];
  const [values, setValues] = h2({});
  const [columns, setColumns] = h2([]);
  p2(() => {
    const newCols = [];
    const newValues = {};
    const fmKeys = uniqCaseInsensitive(frontMatterKeys(fm));
    const cols = fmKeys.map((f4) => ({
      table: "",
      name: f4,
      schemaId: "",
      type: yamlTypeToMDBType(detectPropertyType(fm[f4], f4))
    }));
    if (fm) {
      newCols.push(...cols);
      Object.keys(fm).forEach((c4) => {
        newValues[c4] = parseProperty(c4, fm[c4]);
      });
    }
    setValues(newValues);
    setColumns(newCols);
  }, []);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fm && /* @__PURE__ */ Cn.createElement(BannerView, {
    superstate: props2.superstate,
    bannerPath: fm[props2.superstate.settings.fmKeyBanner]
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-component"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-spacer`,
    style: {
      "--mk-header-height": fm && fm[props2.superstate.settings.fmKeyBanner] ? ((props2.superstate.ui.getScreenType() == "mobile" ? 1 : 0) * 26 + 138 + (!fm.icon || props2.superstate.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px" : 0
    },
    onContextMenu: (e4) => e4.preventDefault()
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-path-context-file ${props2.superstate.settings.inlineContextNameLayout == "horizontal" ? "mk-path-context-file-horizontal" : ""}`
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fm.icon ? /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-path-icon`
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker(fm.icon)
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title"
  }, pathNameToString(name))))), !collapsed ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-component"
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-section"
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, columns.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-path-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-field"
  }, f4.name), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-path-context-value"
  }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
    superstate: props2.superstate,
    initialValue: values[f4.name],
    row: {},
    column: { ...f4, table: "" },
    editable: false,
    updateValue: () => {
    },
    updateFieldValue: (fieldValue, value) => {
    },
    contextTable: {}
  })))))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/adapters/obsidian/utils/markdownPost.tsx
var import_obsidian15 = require("obsidian");
var replaceInlineContext = (plugin, el, ctx) => {
  replaceMarkdownForReadingMode(el, async (dom) => {
    const element = dom.querySelector(".mod-header");
    if (!el.parentElement)
      return;
    let outerdom = dom;
    while (!outerdom.hasClass("mk-floweditor") && !outerdom.hasClass("workspace") && outerdom.parentElement) {
      outerdom = outerdom.parentElement;
    }
    if (outerdom.hasClass("mk-floweditor"))
      return;
    if (element) {
      let ctxElement = element == null ? void 0 : element.querySelector(".mk-inline-context");
      if (!ctxElement) {
        ctxElement = element.createDiv();
        ctxElement.toggleClass("mk-inline-context", true);
        element.prepend(ctxElement);
      }
      if (ctxElement.getAttribute("data-path") != ctx.sourcePath) {
        ctxElement.setAttribute("data-path", ctx.sourcePath);
        const reactEl = createRoot(ctxElement);
        ctx.addChild(new import_obsidian15.MarkdownRenderChild(element));
        if (ctx.sourcePath.match(urlRegex)) {
          reactEl.render(
            /* @__PURE__ */ Cn.createElement(RemoteMarkdownHeaderView, {
              superstate: plugin.superstate,
              fm: ctx.frontmatter,
              name: pathToString(ctx.sourcePath)
            })
          );
        } else {
          reactEl.render(
            /* @__PURE__ */ Cn.createElement(ReadingModeHeader, {
              superstate: plugin.superstate,
              filePath: ctx.sourcePath
            })
          );
        }
      }
    }
  });
};

// node_modules/monkey-around/mjs/index.js
function around(obj, factories) {
  const removers = Object.keys(factories).map((key2) => around1(obj, key2, factories[key2]));
  return removers.length === 1 ? removers[0] : function() {
    removers.forEach((r3) => r3());
  };
}
function around1(obj, method, createWrapper) {
  const original = obj[method], hadOwn = obj.hasOwnProperty(method);
  let current2 = createWrapper(original);
  if (original)
    Object.setPrototypeOf(current2, original);
  Object.setPrototypeOf(wrapper, current2);
  obj[method] = wrapper;
  return remove;
  function wrapper(...args) {
    if (current2 === original && obj[method] === wrapper)
      remove();
    return current2.apply(this, args);
  }
  function remove() {
    if (obj[method] === wrapper) {
      if (hadOwn)
        obj[method] = original;
      else
        delete obj[method];
    }
    if (current2 === original)
      return;
    current2 = original;
    Object.setPrototypeOf(wrapper, original || Function);
  }
}

// src/adapters/obsidian/utils/patches.ts
var import_obsidian16 = require("obsidian");
var patchFilesPlugin = (plugin) => {
  plugin.register(
    around(import_obsidian16.Workspace.prototype, {
      getLeavesOfType(old) {
        return function(type) {
          if (type == "file-explorer") {
            return old.call(this, FILE_TREE_VIEW_TYPE);
          }
          return old.call(this, type);
        };
      }
    })
  );
};
var patchWorkspace = (plugin) => {
  let layoutChanging = false;
  const uninstaller = around(import_obsidian16.Workspace.prototype, {
    changeLayout(old) {
      return async function(workspace) {
        layoutChanging = true;
        try {
          await old.call(this, workspace);
        } finally {
          layoutChanging = false;
        }
      };
    },
    iterateLeaves(old) {
      return function(arg1, arg2) {
        if (old.call(this, arg1, arg2))
          return true;
        const cb = typeof arg1 === "function" ? arg1 : arg2;
        const parent = typeof arg1 === "function" ? arg2 : arg1;
        if (!parent)
          return false;
        if (layoutChanging)
          return false;
        if (parent === plugin.app.workspace.rootSplit || import_obsidian16.WorkspaceContainer && parent instanceof import_obsidian16.WorkspaceContainer) {
          for (const popover of FlowEditor.popoversForWindow(
            parent.win
          )) {
            if (old.call(this, cb, popover.rootSplit))
              return true;
          }
        }
        return false;
      };
    },
    setActiveLeaf(old) {
      return function setActiveLeaf(leaf, params) {
        if (leaf.view.getViewType() == "markdown") {
          this.activeEditor = leaf.view;
          if (leaf.view.file) {
          }
        }
        return old.call(this, leaf, params);
      };
    },
    getActiveViewOfType(old) {
      return function getActiveViewOfType(type) {
        var _a2;
        if (((_a2 = type.prototype) == null ? void 0 : _a2.getViewType) && type.prototype.getViewType() == "markdown") {
          if (this.activeEditor)
            return this.activeEditor;
        }
        return old.call(this, type);
      };
    },
    getDropLocation(old) {
      return function getDropLocation(event) {
        for (const popover of FlowEditor.activePopovers()) {
          const dropLoc = this.recursiveGetTarget(event, popover.rootSplit);
          if (dropLoc) {
            return dropLoc;
          }
        }
        return old.call(this, event);
      };
    },
    onDragLeaf(old) {
      return function(event, leaf) {
        const hoverPopover = FlowEditor.forLeaf(leaf);
        return old.call(this, event, leaf);
      };
    }
  });
  plugin.register(uninstaller);
};

// src/adapters/obsidian/utils/flow/flow.tsx
var modifyFlowDom = (plugin) => {
  if (!plugin.superstate.settings.makerMode || !plugin.superstate.settings.inlineContext || !plugin.app.workspace.activeEditor)
    return;
  const contentEl = plugin.app.workspace.activeEditor.contentEl;
  const editorView = plugin.app.workspace.activeEditor.editor;
  const sizerEl = contentEl.querySelector(".cm-sizer");
  const file = plugin.app.workspace.getActiveFile();
  if (sizerEl && file) {
    let inlineContext = contentEl.querySelector(".mk-inline-context");
    if (!inlineContext) {
      inlineContext = document.createElement("div");
      inlineContext.classList.add("mk-inline-context");
      inlineContext.classList.add("embedded-backlinks");
      sizerEl.prepend(inlineContext);
    } else if (sizerEl.indexOf(inlineContext) != 0) {
      sizerEl.prepend(inlineContext);
    }
    const inlineContextReactEl = createRoot(inlineContext);
    inlineContextReactEl.render(
      /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(MarkdownHeaderView, {
        superstate: plugin.superstate,
        path: file.path,
        editorView: editorView.cm,
        showHeader: true,
        showBanner: true,
        showFolder: true,
        editable: true,
        hiddenFields: [...FMMetadataKeys(plugin.superstate.settings)]
      }))
    );
    if (plugin.superstate.settings.inlineBacklinks) {
      let backlinksEl = contentEl.querySelector(".mk-backlinks");
      if (!backlinksEl) {
        backlinksEl = document.createElement("div");
        backlinksEl.classList.add("mk-backlinks");
        backlinksEl.classList.add("embedded-backlinks");
        sizerEl.appendChild(backlinksEl);
      }
      const backlinksReactEl = createRoot(backlinksEl);
      backlinksReactEl.render(
        /* @__PURE__ */ Cn.createElement(Backlinks, {
          superstate: plugin.superstate,
          path: file.path
        })
      );
    }
  }
};

// src/adapters/mdb/db/db.ts
var getDBFile = async (plugin, path, isRemote) => {
  if (isRemote) {
    return fetch(path).then((res) => res.arrayBuffer());
  }
  if (!await plugin.middleware.fileExists(path)) {
    return null;
  }
  const file = await plugin.middleware.readBinaryToFile(
    path
  );
  return file;
};
var getDB = async (plugin, sqlJS, path, isRemote) => {
  const buf = await getDBFile(plugin, path, isRemote);
  if (buf) {
    const db = await new sqlJS.Database(new Uint8Array(buf));
    try {
      db.exec(
        "SELECT name FROM sqlite_schema"
      );
    } catch (e4) {
      return new sqlJS.Database();
    }
    return db;
  }
  return new sqlJS.Database();
};
var saveDBFile = async (plugin, path, binary) => {
  if (!await plugin.middleware.fileExists(
    removeTrailingSlashFromFolder(getParentPathFromString(path))
  )) {
    await plugin.middleware.createFolder(getParentPathFromString(path));
  }
  const file = plugin.middleware.writeBinaryToFile(
    path,
    binary
  );
  return file;
};
var mdbTablesToDBTables = (tables, uniques) => {
  return Object.keys(tables).reduce((p3, c4) => {
    var _a2;
    return {
      ...p3,
      [c4]: {
        uniques: (_a2 = uniques == null ? void 0 : uniques[c4]) != null ? _a2 : [],
        cols: tables[c4].cols.map((f4) => f4.name),
        rows: tables[c4].rows
      }
    };
  }, {});
};
var dbResultsToDBTables = (res) => {
  return res.reduce(
    (p3, c4, i4) => [
      ...p3,
      {
        cols: c4.columns,
        rows: c4 ? c4.values.map(
          (r3) => c4.columns.reduce(
            (prev, curr, index) => ({ ...prev, [curr]: r3[index] }),
            {}
          )
        ) : []
      }
    ],
    []
  );
};
var selectDB = (db, table, condition, fields) => {
  const fieldsStr = fields != null ? fields : "*";
  const sqlstr = condition ? `SELECT ${fieldsStr} FROM "${table}" WHERE ${condition};` : `SELECT ${fieldsStr} FROM ${table};`;
  let tables;
  try {
    tables = dbResultsToDBTables(db.exec(sqlstr));
  } catch (e4) {
    return null;
  }
  if (tables.length == 1)
    return tables[0];
  return null;
};
var insertIntoDB = (db, tables, replace) => {
  const sqlstr = serializeSQLStatements(
    Object.keys(tables).map((t4) => {
      const tableFields = tables[t4].cols;
      const rowsQuery = tables[t4].rows.reduce((prev, curr) => {
        return `${prev} ${replace ? "REPLACE" : "INSERT"} INTO "${t4}" VALUES (${serializeSQLValues(
          tableFields.map((c4) => {
            var _a2;
            return `'${(_a2 = sanitizeSQLStatement(curr == null ? void 0 : curr[c4])) != null ? _a2 : ""}'`;
          })
        )});`;
      }, "");
      return rowsQuery;
    })
  );
  try {
    db.exec(`${sqlstr}`);
  } catch (e4) {
    console.log(e4);
  }
};
var deleteFromDB = (db, table, condition) => {
  const sqlstr = `DELETE FROM "${table}" WHERE ${condition};`;
  try {
    db.exec(sqlstr);
  } catch (e4) {
    console.log(e4);
  }
};
var dropTable = (db, table) => {
  const sqlstr = `DROP TABLE IF EXISTS "${table}";`;
  try {
    db.exec(sqlstr);
  } catch (e4) {
    console.log(e4);
  }
};
var replaceDB = (db, tables) => {
  const sqlStatements = [];
  Object.keys(tables).forEach((t4) => {
    const tableFields = tables[t4].cols;
    const fieldQuery = serializeSQLFieldNames(uniq(tableFields).filter((f4) => f4).map((f4) => `'${sanitizeSQLStatement(f4)}' char`));
    const createQuery = `CREATE TABLE IF NOT EXISTS "${t4}" (${fieldQuery}); `;
    const idxQuery = tables[t4].uniques.filter((f4) => f4).reduce((p3, c4) => {
      return `${p3} CREATE UNIQUE INDEX IF NOT EXISTS "idx_${t4}_${c4.replace(
        /,/g,
        "_"
      )}" ON "${t4}"(${c4});`;
    }, "");
    const beginTransaction = `BEGIN TRANSACTION;`;
    const rowsQuery = tables[t4].rows.map((curr) => {
      return `REPLACE INTO "${t4}" VALUES (${serializeSQLValues(tableFields.map((c4) => {
        var _a2;
        return `'${sanitizeSQLStatement((_a2 = curr == null ? void 0 : curr[c4]) != null ? _a2 : "")}'`;
      }))});`;
    });
    const commitQuery = `COMMIT;`;
    sqlStatements.push(`DROP INDEX IF EXISTS "idx_${t4}__id"; DROP TABLE IF EXISTS "${t4}";`);
    if (fieldQuery.length > 0) {
      sqlStatements.push(createQuery);
      sqlStatements.push(idxQuery);
      sqlStatements.push(beginTransaction);
      sqlStatements.push(...rowsQuery);
      sqlStatements.push(commitQuery);
    }
  });
  try {
    for (const s5 of sqlStatements) {
      db.exec(s5);
    }
  } catch (e4) {
    console.log(e4);
  }
};
var saveDBToPath = async (plugin, path, tables) => {
  const sqlJS = await plugin.sqlJS();
  const db = await getDB(plugin, sqlJS, path);
  if (!db) {
    db.close();
    return false;
  }
  replaceDB(db, tables);
  await saveDBFile(plugin, path, db.export().buffer);
  db.close();
  return true;
};

// src/adapters/obsidian/filesystem/schemas/vaultSchema.ts
var vaultSchema = {
  uniques: ["path"],
  cols: ["path", "parent", "created", "sticker", "color", "folder", "rank"],
  rows: []
};

// src/adapters/mdb/utils/mdb.ts
var dbTableToMDBTable = (table, schema, fields) => {
  var _a2;
  return {
    schema,
    cols: fields,
    rows: (_a2 = table == null ? void 0 : table.rows) != null ? _a2 : []
  };
};
var getMDB = async (plugin, path) => {
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, path, false);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  let fields;
  let schemas;
  try {
    fields = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_fields`)
    )[0].rows;
    schemas = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_schema`)
    )[0].rows;
  } catch (e4) {
    db.close();
    return null;
  }
  let dbTable;
  try {
    dbTable = schemas.filter((f4) => f4.type == "db").map((f4) => ({ [f4.id]: dbResultsToDBTables(
      db.exec(
        `SELECT * FROM "${f4.id}"`
      )
    )[0] })).reduce((p3, c4) => ({ ...p3, ...c4 }), {});
  } catch (e4) {
    db.close();
    return null;
  }
  db.close();
  return {
    schemas,
    fields,
    tables: dbTable
  };
};
var getMDBTable = async (plugin, dbPath, table) => {
  var _a2;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, dbPath, false);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  let fieldsTables;
  let schema;
  try {
    fieldsTables = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_fields WHERE schemaId = '${table}'`)
    );
    schema = (_a2 = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_schema WHERE id = '${table}'`)
    )[0]) == null ? void 0 : _a2.rows[0];
  } catch (e4) {
    console.log(e4);
    db.close();
    return null;
  }
  if (!schema)
    return null;
  if (fieldsTables.length == 0) {
    db.close();
    return {
      schema,
      cols: [],
      rows: []
    };
  }
  const fields = fieldsTables[0].rows.filter(
    (f4) => f4.name.length > 0
  );
  const dbTable = dbResultsToDBTables(
    db.exec(
      `SELECT * FROM "${table}"`
    )
  );
  db.close();
  return dbTableToMDBTable(
    dbTable[0],
    schema,
    fields
  );
};
var getMDBTables = async (plugin, dbPath) => {
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, dbPath, false);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  const schemas = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_schema`)
  )[0].rows;
  const mdbTables = {};
  schemas.forEach((schema) => {
    var _a2, _b2;
    let fieldsTables;
    try {
      fieldsTables = dbResultsToDBTables(
        db.exec(`SELECT * FROM m_fields WHERE schemaId = '${schema.id}'`)
      );
    } catch (e4) {
      return;
    }
    const fields = ((_b2 = (_a2 = fieldsTables == null ? void 0 : fieldsTables[0]) == null ? void 0 : _a2.rows) != null ? _b2 : []).filter(
      (f4) => f4.name.length > 0
    );
    let dbTable;
    try {
      dbTable = dbResultsToDBTables(db.exec(`SELECT * FROM "${schema.id}"`));
      mdbTables[schema.id] = dbTableToMDBTable(
        dbTable[0],
        schema,
        fields
      );
    } catch (e4) {
      mdbTables[schema.id] = {
        schema,
        cols: fields,
        rows: []
      };
      return;
    }
  });
  db.close();
  return mdbTables;
};
var deleteMDBTable = async (plugin, table, dbPath) => {
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, dbPath, false);
  if (!buf) {
    return false;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  deleteFromDB(db, "m_schema", `id = '${sanitizeSQLStatement(table)}'`);
  deleteFromDB(db, "m_schema", `def = '${sanitizeSQLStatement(table)}'`);
  deleteFromDB(db, "m_fields", `schemaId = '${sanitizeSQLStatement(table)}'`);
  dropTable(db, table);
  await saveDBFile(plugin, dbPath, db.export().buffer);
  db.close();
  return true;
};
var getMDBTableSchemas = async (plugin, path) => {
  var _a2, _b2;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, path, false);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  const tables = db.exec(`SELECT * FROM m_schema`);
  db.close();
  return ((_b2 = (_a2 = tables[0]) == null ? void 0 : _a2.values) != null ? _b2 : []).map((f4) => {
    const [id2, name, type, def, predicate, primary] = f4;
    return { id: id2, name, type, def, predicate, primary };
  });
};
var getMDBTableProperties = async (plugin, path) => {
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(plugin, path, false);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  let fieldsTables;
  try {
    fieldsTables = dbResultsToDBTables(db.exec(`SELECT * FROM m_fields`))[0].rows;
  } catch (e4) {
    console.log(e4);
    db.close();
    return null;
  }
  if (fieldsTables.length == 0) {
    db.close();
    return [];
  }
  db.close();
  return fieldsTables;
};
var initiateDB = (db) => {
  replaceDB(db, {
    vault: vaultSchema
  });
};

// src/adapters/mdb/db/sqljs.js
var import_sql = __toESM(require_sql_wasm());

// wasm-binary:/Users/cen/Documents/GitHub/make-md/src/adapters/mdb/db/sqljs/sql-wasm.wasm
var sql_wasm_exports = {};
__export(sql_wasm_exports, {
  default: () => sql_wasm_default
});
var sql_wasm_default = __toBinary("");

// src/adapters/mdb/db/sqljs.js
var loadSQL = async () => {
  const sql = await (0, import_sql.default)({
    wasmBinary: sql_wasm_default
  });
  return sql;
};

// src/adapters/mdb/utils/property.ts
var savePropertyToDBTables = (newColumn, fields, oldColumn) => {
  const column = {
    ...newColumn,
    name: sanitizeColumnName(newColumn.name)
  };
  const oldFieldIndex = oldColumn ? fields.findIndex((f4) => f4.name == oldColumn.name) : -1;
  const newFields = oldFieldIndex == -1 ? [...fields, column] : fields.map((f4, i4) => i4 == oldFieldIndex ? column : f4);
  return {
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: [...fields != null ? fields : [], ...newFields]
    }
  };
};
var deletePropertyToDBTables = (column, fields) => {
  const newFields = fields.filter((f4) => !(f4.name == column.name && f4.schemaId == column.schemaId));
  return {
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: [...fields != null ? fields : [], ...newFields]
    }
  };
};

// src/adapters/mdb/utils/schema.ts
var saveSchemaToDBTables = (table, schemas) => {
  const newSchema = schemas.find((f4) => f4.id == table.id) ? true : false;
  const newSchemaTable = newSchema ? {
    uniques: [],
    cols: ["id", "name", "type", "def", "predicate", "primary"],
    rows: schemas.map((f4) => f4.id == table.id ? table : f4)
  } : {
    uniques: [],
    cols: ["id", "name", "type", "def", "predicate", "primary"],
    rows: [...schemas, table]
  };
  return {
    m_schema: newSchemaTable
  };
};

// src/adapters/mdb/mdbAdapter.ts
var MDBFileTypeAdapter = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.supportedFileTypes = ["mdb"];
    this.id = "mdb.make.md";
  }
  async sqlJS() {
    const sqljs = await loadSQL();
    return sqljs;
  }
  async newFile(parent, name, type, content) {
    const newPath = `${parent}/${name}.${type}`;
    await saveDBToPath(this, newPath, content);
    return this.middleware.getFile(newPath);
  }
  initiate(middleware) {
    this.middleware = middleware;
    this.cache = /* @__PURE__ */ new Map();
  }
  async parseCache(file, refresh) {
    await getMDB(this, file.path).then((mdb) => {
      this.cache.set(file.path, {
        schemas: mdb.schemas,
        fields: mdb.fields,
        tables: mdb.tables
      });
    });
    this.middleware.updateFileCache(file.path, this.cache.get(file.path), refresh);
  }
  contentTypes(file) {
    return ["schemas", "fields", "tables", "field", "table", "schema", "field", "mdbTable", "mdbTables", "mdbFrame"];
  }
  cacheTypes(file) {
    return ["schemas", "fields", "tables"];
  }
  getCacheTypeByRefString(file, refString) {
    return null;
  }
  getCache(file, fragmentType, query) {
    return this.cache.get(file.path)[fragmentType];
  }
  async readContent(file, fragmentType, fragmentId) {
    if (fragmentType == "table") {
      return this.cache.get(file.path)["tables"][fragmentId];
    }
    if (fragmentType == "schema") {
      const schema = this.cache.get(file.path)["schemas"].find((t4) => t4.id == fragmentId);
      if (schema) {
        return schema;
      }
      return getMDBTableSchemas(this, file.path).then((f4) => f4.find((t4) => t4.id == fragmentId));
    }
    if (fragmentType == "schemas") {
      return getMDBTableSchemas(this, file.path);
    }
    if (fragmentType == "fields") {
      return getMDBTableProperties(this, file.path);
    }
    if (fragmentType == "mdbTables") {
      return getMDBTables(this, file.path);
    }
    if (fragmentType == "mdbTable") {
      return getMDBTable(this, file.path, fragmentId);
    }
    if (fragmentType == "mdbFrame") {
      return getMDBTable(this, file.path, fragmentId);
    }
  }
  async newContent(file, fragmentType, name, content, options) {
    if (fragmentType == "schema") {
      const dbTables = saveSchemaToDBTables(content, this.cache.get(file.path).schemas);
      return saveDBToPath(this, file.path, dbTables);
    }
    if (fragmentType == "field") {
      const oldFields = await this.readContent(file, "fields", null);
      const dbTables = savePropertyToDBTables(content, oldFields);
      return saveDBToPath(this, file.path, dbTables);
    }
    if (fragmentType == "table") {
      return saveDBToPath(this, file.path, { [name]: content });
    }
    if (fragmentType == "tables") {
      return saveDBToPath(this, file.path, content);
    }
    if (fragmentType == "mdbTable") {
      return saveDBToPath(this, file.path, mdbTablesToDBTables({ [name]: content }));
    }
    if (fragmentType == "mdbFrame") {
      return saveDBToPath(this, file.path, mdbFrameToDBTables({ [name]: content }));
    }
  }
  async saveContent(file, fragmentType, fragmentId, content) {
    if (fragmentType == "schema") {
      const schemas = await this.readContent(file, "schemas", null);
      const dbTables = saveSchemaToDBTables(content(schemas.find((t4) => t4.id == fragmentId)), schemas);
      return saveDBToPath(this, file.path, dbTables);
    }
    if (fragmentType == "field") {
      const oldFields = await this.readContent(file, "fields", null);
      const oldField = oldFields.find((t4) => t4.name == fragmentId);
      const dbTables = savePropertyToDBTables(content(oldField), oldFields, oldField);
      return saveDBToPath(this, file.path, dbTables);
    }
    if (fragmentType == "table") {
      return saveDBToPath(this, file.path, { [fragmentId]: content(this.cache.get(file.path)["tables"][fragmentId]) });
    }
    if (fragmentType == "mdbTable") {
      const mdbTable = await this.readContent(file, "mdbTable", fragmentId);
      const oldFields = await this.readContent(file, "fields", null);
      const tables = { [fragmentId]: content(mdbTable) };
      const newFields = {
        m_fields: {
          uniques: fieldSchema.uniques,
          cols: fieldSchema.cols,
          rows: [...oldFields.filter((f4) => f4.schemaId != fragmentId), ...Object.values(tables).flatMap((f4) => f4.cols)]
        }
      };
      return saveDBToPath(this, file.path, { ...mdbTablesToDBTables(tables), ...newFields });
    }
    if (fragmentType == "mdbFrame") {
      const mdbTable = await this.readContent(file, "mdbFrame", fragmentId);
      return saveDBToPath(this, file.path, mdbFrameToDBTables({ [fragmentId]: content(mdbTable) }));
    }
  }
  deleteContent(file, fragmentType, fragmentId) {
    if (fragmentType == "schema") {
      return deleteMDBTable(this, fragmentId, file.path);
    }
    if (fragmentType == "field") {
      const field = this.cache.get(file.path)["fields"].find((t4) => t4.name == fragmentId);
      const dbTables = deletePropertyToDBTables(field, this.cache.get(file.path).fields);
      return saveDBToPath(this, file.path, dbTables);
    }
    if (fragmentType == "table") {
      return deleteMDBTable(this, fragmentId, file.path);
    }
  }
};

// src/adapters/obsidian/filesystem/rebuildIndex.ts
var import_lodash12 = __toESM(require_lodash());

// src/adapters/obsidian/filesystem/indexCurrentFileTree.ts
var import_obsidian17 = require("obsidian");
var indexCurrentFileTree = (plugin, vaultDB) => {
  const treeItems = getAllAbstractFilesInVault(plugin).map((file) => {
    var _a2, _b2;
    return {
      ...(_a2 = vaultDB.find((f4) => f4.path == file.path)) != null ? _a2 : {},
      path: file.path,
      parent: (_b2 = file.parent) == null ? void 0 : _b2.path,
      created: file instanceof import_obsidian17.TFile ? file.stat.ctime.toString() : void 0,
      folder: file instanceof import_obsidian17.TFolder ? "true" : "false"
    };
  });
  return {
    vault: {
      ...vaultSchema,
      rows: treeItems
    }
  };
};

// src/adapters/obsidian/filesystem/rebuildIndex.ts
var rebuildIndex = async (filesystem, plugin, save) => {
  var _a2;
  const start = Date.now();
  const newTables = indexCurrentFileTree(plugin, (_a2 = filesystem.vaultDBCache) != null ? _a2 : []);
  if (save && !import_lodash12.default.isEqual(newTables.vault.rows, filesystem.vaultDBCache)) {
    await filesystem.saveSpacesDatabaseToDisk(newTables, save);
  }
  plugin.superstate.ui.notify(`Make.md - Vault Reindexed in ${(Date.now() - start) / 1e3} seconds`, "console");
};

// src/adapters/obsidian/utils/tags.ts
var import_obsidian18 = require("obsidian");
var tagKeys = ["tags"];
var loadTags = (app2, settings) => {
  var _a2;
  const folder = settings.spacesFolder == "" ? app2.vault.getRoot() : getAbstractFileAtPath(
    app2,
    settings.spacesFolder
  );
  return uniq([
    ...Object.keys(app2.metadataCache.getTags()),
    ...(_a2 = folder == null ? void 0 : folder.children.filter(
      (f4) => f4 instanceof import_obsidian18.TFolder && f4.name.charAt(0) == "#"
    ).map((f4) => tagPathToTag(f4.name))) != null ? _a2 : []
  ]);
};
var tagExists = (currentCache, findTag) => {
  let currentTags = [];
  if ((0, import_obsidian18.getAllTags)(currentCache)) {
    currentTags = (0, import_obsidian18.getAllTags)(currentCache);
  }
  return currentTags.find((tag) => tag.toLowerCase() == findTag.toLowerCase()) ? true : false;
};
var getAllFilesForTag = (plugin, tag) => {
  const tagsCache = [];
  (() => {
    plugin.app.vault.getMarkdownFiles().forEach((tfile) => {
      let currentCache;
      if (plugin.app.metadataCache.getFileCache(tfile) !== null) {
        currentCache = plugin.app.metadataCache.getFileCache(tfile);
      }
      const relativePath = tfile.path;
      const hasTag = tagExists(currentCache, tag);
      if (hasTag) {
        tagsCache.push(relativePath);
      }
    });
  })();
  return tagsCache;
};
var addTagToProperties = (manager, tag, path) => {
  const newTag = validateName(tag);
  editTagInProperties(manager, "", newTag, path);
};
var positionsForTag = (plugin, tag, file) => {
  const currentCache = plugin.app.metadataCache.getFileCache(file);
  if (currentCache.tags) {
    const positions = currentCache.tags.filter((f4) => f4.tag == tag).map((f4) => f4.position).sort((a5, b4) => {
      if (a5.start.offset < b4.start.offset) {
        return -1;
      }
      if (a5.start.offset > b4.start.offset) {
        return 1;
      }
      return 0;
    });
    return positions;
  }
  return [];
};
var removeTagFromMarkdownFile = (plugin, tag, file) => {
  const pos = positionsForTag(plugin, tag, file);
  removeTagInProperties(plugin.superstate.spaceManager, tag, file.path);
  editTagInFileBody(plugin, tag, "", pos, file);
};
var renameTagInMarkdownFile = async (plugin, tag, newTag, tFile) => {
  const positions = positionsForTag(plugin, tag, tFile);
  if (positions.length > 0) {
    await editTagInFileBody(plugin, tag, newTag, positions, tFile);
  } else {
    await editTagInProperties(plugin.superstate.spaceManager, tag, newTag, tFile.path);
  }
};
var removeTagInProperties = async (manager, oldTag, path) => {
  const fm = await manager.readProperties(path);
  const processKey = (value) => {
    if (Array.isArray(value)) {
      return value.filter((f4) => stringFromTag(oldTag) != f4);
    } else if (typeof value === "string") {
      return serializeMultiDisplayString(
        value.replace(/\s/g, "").split(",").filter((f4) => stringFromTag(oldTag) != f4)
      );
    }
    return value;
  };
  const editKeys = tagKeys.filter((f4) => {
    let tags = [];
    if (Array.isArray(fm[f4])) {
      tags = fm[f4];
    } else if (typeof fm[f4] === "string") {
      tags = fm[f4].replace(/\s/g, "").split(",");
    }
    if (tags.find((g4) => g4 == stringFromTag(oldTag)))
      return true;
    return false;
  });
  editKeys.forEach((tag) => {
    manager.saveProperties(path, { [tag]: processKey(fm[tag]) });
  });
};
var editTagInProperties = async (manager, oldTag, newTag, path) => {
  const addTag2 = (value) => {
    if (Array.isArray(value)) {
      return uniq([...value, stringFromTag(newTag)]).filter((f4) => (f4 == null ? void 0 : f4.length) > 0);
    } else if (typeof value === "string") {
      return serializeMultiDisplayString(uniq([
        ...value.replace(/\s/g, "").split(","),
        stringFromTag(newTag)
      ]).filter((f4) => (f4 == null ? void 0 : f4.length) > 0));
    }
    return stringFromTag(newTag);
  };
  const fm = await manager.readProperties(path);
  if (fm) {
    const processKey = (value) => {
      if (Array.isArray(value)) {
        return uniq(
          value.map(
            (f4) => stringFromTag(oldTag) == f4 ? stringFromTag(newTag) : f4
          )
        );
      } else if (typeof value === "string") {
        return serializeMultiDisplayString(uniq(
          value.replace(/\s/g, "").split(",").map(
            (f4) => stringFromTag(oldTag) == f4 ? stringFromTag(newTag) : f4
          )
        ));
      }
      return value;
    };
    const editKeys = tagKeys.filter((f4) => {
      let tags = [];
      if (Array.isArray(fm[f4])) {
        tags = fm[f4];
      } else if (typeof fm[f4] === "string") {
        tags = fm[f4].replace(/\s/g, "").split(",");
      }
      if (tags.find((g4) => g4 == stringFromTag(oldTag)))
        return true;
      return false;
    });
    if (editKeys.length > 0) {
      editKeys.forEach((key2) => {
        manager.saveProperties(path, {
          [key2]: processKey(fm[key2])
        });
      });
    } else {
      manager.saveProperties(path, {
        tags: addTag2(fm["tags"])
      });
    }
  } else {
    manager.saveProperties(path, {
      tags: stringFromTag(newTag)
    });
  }
};
var editTagInFileBody = async (plugin, oldTag, newTag, positions, file) => {
  const offsetOffset = newTag.length - oldTag.length;
  if (positions.length == 0)
    return false;
  const original = await plugin.files.readTextFromFile(file.path);
  let text2 = original;
  let offset2 = 0;
  for (const { start, end } of positions) {
    const startOff = start.offset + offset2;
    const endOff = end.offset + offset2;
    if (text2.slice(startOff, endOff) !== oldTag) {
      return false;
    }
    text2 = text2.slice(0, startOff) + newTag + text2.slice(startOff + oldTag.length);
    offset2 += offsetOffset;
  }
  if (text2 !== original) {
    await plugin.files.writeTextToFile(file.path, text2);
    return true;
  }
};

// src/adapters/obsidian/filesystem/filesystem.ts
var import_lodash15 = __toESM(require_lodash());
var import_obsidian19 = require("obsidian");

// src/adapters/mdb/localCache/localCache.ts
var import_lodash13 = __toESM(require_lodash());

// src/schemas/cache.ts
var CacheDBSchema = { uniques: ["path"], cols: ["path", "cache", "version"], rows: [] };

// src/adapters/mdb/localCache/localCache.ts
var LocalStorageCache = class {
  constructor(storageDBPath, mdbAdapter, types2) {
    this.storageDBPath = storageDBPath;
    this.mdbAdapter = mdbAdapter;
    this.indexVersion = Date.now().toString();
    this.debounceSaveSpaceDatabase = (0, import_lodash13.debounce)(
      () => {
        saveDBFile(this.mdbAdapter, this.storageDBPath, this.db.export().buffer);
      },
      1e3,
      {
        leading: false
      }
    );
    this.defaultTables = types2.reduce((acc, type) => ({ ...acc, [type]: CacheDBSchema }), {});
  }
  async initialize() {
    this.db = await getDB(this.mdbAdapter, await this.mdbAdapter.sqlJS(), this.storageDBPath);
    let tables;
    try {
      tables = dbResultsToDBTables(
        this.db.exec(
          "SELECT name FROM sqlite_schema WHERE type ='table' AND name NOT LIKE 'sqlite_%';"
        )
      );
    } catch (e4) {
      console.log(e4);
      tables = [];
    }
    if (tables.length == 0) {
      replaceDB(this.db, this.defaultTables);
    }
  }
  async store(path, cache, type) {
    if (!this.db)
      return;
    await insertIntoDB(this.db, {
      [type]: { ...this.defaultTables[type], rows: [{ path, cache, version: this.indexVersion }] }
    }, true);
    this.debounceSaveSpaceDatabase();
    return;
  }
  async remove(path, type) {
    if (!this.db)
      return;
    await deleteFromDB(this.db, type, `path='${path}'`);
    this.debounceSaveSpaceDatabase();
    return;
  }
  cleanType(type) {
    if (!this.db)
      return;
    deleteFromDB(this.db, type, `version != '${this.indexVersion}'`);
    return;
  }
  async loadAll(type) {
    var _a2, _b2;
    if (!this.db)
      return;
    return (_b2 = (_a2 = selectDB(this.db, type)) == null ? void 0 : _a2.rows) != null ? _b2 : [];
  }
};

// src/adapters/mdb/localCache/localCacheMobile.ts
var import_lodash14 = __toESM(require_lodash());
var MobileCachePersister = class {
  constructor(storageDBPath, mdbAdapter, types2) {
    this.storageDBPath = storageDBPath;
    this.mdbAdapter = mdbAdapter;
    this.types = types2;
    this.indexVersion = Date.now().toString();
    this.debounceSaveSpaceDatabase = (0, import_lodash14.debounce)(
      (tables) => {
        saveDBToPath(this.mdbAdapter, this.storageDBPath, tables);
      },
      2e3,
      {
        leading: false
      }
    );
  }
  async getDB() {
    return await getDB(this.mdbAdapter, await this.mdbAdapter.sqlJS(), this.storageDBPath);
  }
  async initialize() {
    const db = await this.getDB();
    let tables;
    try {
      tables = dbResultsToDBTables(
        db.exec(
          "SELECT name FROM sqlite_schema WHERE type ='table' AND name NOT LIKE 'sqlite_%';"
        )
      );
    } catch (e4) {
      console.log(e4);
      tables = [];
    }
    if (tables.length == 0) {
      replaceDB(db, this.types.reduce((acc, type) => ({ ...acc, [type]: CacheDBSchema }), {}));
      await saveDBFile(this.mdbAdapter, this.storageDBPath, db.export().buffer);
    }
    this.cache = this.types.reduce((acc, type) => {
      var _a2, _b2;
      return { ...acc, [type]: { ...CacheDBSchema, rows: (_b2 = (_a2 = selectDB(db, type)) == null ? void 0 : _a2.rows) != null ? _b2 : [] } };
    }, {});
    db.close();
  }
  async store(path, cache, type) {
    this.cache[type].rows = [...this.cache[type].rows.filter((f4) => f4.path != path), { path, cache, version: this.indexVersion }];
    this.debounceSaveSpaceDatabase(this.cache);
    return;
  }
  async remove(path, type) {
    this.cache[type].rows = this.cache[type].rows.filter((f4) => f4.path != path);
    this.debounceSaveSpaceDatabase(this.cache);
    return;
  }
  async cleanType(type) {
    this.cache[type].rows = this.cache[type].rows.filter((f4) => f4.version == this.indexVersion);
    this.debounceSaveSpaceDatabase(this.cache);
    return;
  }
  async loadAll(type) {
    var _a2;
    return (_a2 = this.cache[type].rows) != null ? _a2 : [];
  }
};

// src/adapters/obsidian/filesystem/filesystem.ts
var ObsidianFileSystem = class {
  constructor(plugin, middleware, vaultDBPath) {
    this.plugin = plugin;
    this.vaultDBPath = vaultDBPath;
    this.vaultDBCache = [];
    this.cache = /* @__PURE__ */ new Map();
    this.vaultQueue = Promise.resolve();
    this.spacesDBPath = (0, import_obsidian19.normalizePath)(
      this.plugin.app.vault.configDir + "/plugins/make-md/Spaces.mdb"
    );
    this.debounceSaveSpaceDatabase = (0, import_lodash15.debounce)(
      (tables) => {
        saveDBToPath(this.plugin.mdbFileAdapter, this.spacesDBPath, tables);
      },
      1e3,
      {
        leading: false
      }
    );
    this.onCreate = async (file) => {
      var _a2;
      if (!file)
        return;
      this.addToVaultQueue(async () => {
        const folder = file instanceof import_obsidian19.TFolder;
        const parent = file.parent;
        await this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: [...this.vaultDBCache, {
          path: file.path,
          parent: parent == null ? void 0 : parent.path,
          created: Math.trunc(Date.now() / 1e3).toString(),
          folder: folder ? "true" : "false"
        }] } });
      });
      const afile = tFileToAFile(file);
      this.cache.set(afile.path, {
        file: afile,
        metadata: {},
        label: { sticker: null, color: null, name: (_a2 = file.basename) != null ? _a2 : file.name },
        tags: [],
        parent: afile.parent,
        type: afile.isFolder ? "space" : "file",
        subtype: afile.isFolder ? "folder" : afile.extension
      });
      this.middleware.onCreate(afile);
    };
    this.onModify = async (file) => {
      if (!file)
        return;
      this.middleware.onModify(tFileToAFile(file));
    };
    this.onDelete = async (file) => {
      if (!file)
        return;
      this.addToVaultQueue(async () => {
        if (file instanceof import_obsidian19.TFolder) {
          const newVaultRows = this.vaultDBCache.filter((f4) => f4.path != file.path && !f4.parent.startsWith(file.path));
          await this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
        } else {
          const newVaultRows = this.vaultDBCache.filter((f4) => f4.path != file.path);
          await this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
        }
      });
      this.middleware.onDelete(tFileToAFile(file));
    };
    this.onRename = async (file, oldPath) => {
      var _a2;
      if (!file)
        return;
      this.addToVaultQueue(async () => {
        if (file instanceof import_obsidian19.TFolder) {
          const newVaultRows = this.vaultDBCache.map((f4) => f4.path == oldPath ? {
            ...f4,
            path: file.path,
            parent: file.parent.path
          } : f4.parent.startsWith(oldPath) || f4.path.startsWith(oldPath) ? {
            ...f4,
            path: f4.path.replace(oldPath, file.path),
            parent: f4.parent.replace(oldPath, file.path)
          } : f4);
          await this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
        } else {
          const newVaultRows = this.vaultDBCache.map((f4) => f4.path == oldPath ? {
            ...f4,
            path: file.path,
            parent: file.parent.path
          } : f4);
          await this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
        }
      });
      const newFile = tFileToAFile(file);
      const oldCache = this.cache.get(oldPath);
      this.cache.set(newFile.path, {
        ...this.cache.get(oldPath),
        file: newFile,
        label: { ...oldCache.label, name: (_a2 = file.basename) != null ? _a2 : file.name },
        parent: newFile.parent,
        type: newFile.isFolder ? "space" : "file",
        subtype: newFile.isFolder ? "folder" : newFile.extension
      });
      this.cache.delete(oldPath);
      this.middleware.onRename(tFileToAFile(file), oldPath);
    };
    this.middleware = middleware;
    this.plugin = plugin;
    if (import_obsidian19.Platform.isMobile) {
      this.persister = new MobileCachePersister(".makemd/fileCache.mdb", this.plugin.mdbFileAdapter, ["file"]);
    } else {
      this.persister = new LocalStorageCache(".makemd/fileCache.mdb", this.plugin.mdbFileAdapter, ["file"]);
    }
  }
  addToVaultQueue(operation) {
    this.vaultQueue = this.vaultQueue.then(operation).catch(() => {
    });
  }
  updateFileCache(path, cache, refresh) {
    if (!cache)
      return;
    const oldCache = this.cache.get(path);
    const newCache = { ...oldCache, ...cache };
    if (oldCache && import_lodash15.default.isEqual(newCache, oldCache)) {
      return;
    }
    this.cache.set(path, newCache);
    this.persister.store(path, JSON.stringify(newCache), "file");
    if (refresh)
      this.middleware.eventDispatch.dispatchEvent("onCacheUpdated", { path });
  }
  readAllTags() {
    return loadTags(this.plugin.app, this.plugin.superstate.settings);
  }
  async addTagToFile(path, tag) {
    const file = this.plugin.app.vault.getAbstractFileByPath(path);
    if (file.extension == "md") {
      addTagToProperties(this.plugin.superstate.spaceManager, tag, file.path);
      return;
    }
    const vaultItem = this.cache.get(path);
    if (!vaultItem)
      return;
    this.updateFileLabel(path, "tags", serializeMultiString([...vaultItem.tags, tag]));
  }
  async renameTagForFile(path, oldTag, newTag) {
    const file = this.plugin.app.vault.getAbstractFileByPath(path);
    if (file.extension == "md") {
      renameTagInMarkdownFile(this.plugin, oldTag, newTag, file);
      return;
    }
    const vaultItem = this.cache.get(path);
    if (!vaultItem)
      return;
    this.updateFileLabel(path, "tags", serializeMultiString([...vaultItem.tags.filter((t4) => t4 != oldTag), newTag]));
  }
  async removeTagFromFile(path, tag) {
    const file = this.plugin.app.vault.getAbstractFileByPath(path);
    if (file.extension == "md") {
      removeTagFromMarkdownFile(this.plugin, tag, file);
      return;
    }
    const vaultItem = this.cache.get(path);
    if (!vaultItem)
      return;
    this.updateFileLabel(path, "tags", serializeMultiString([...vaultItem.tags.filter((t4) => t4 != tag)]));
  }
  async loadCacheFromObsidianCache() {
    var _a2, _b2;
    await this.persister.initialize();
    const db = await getDB(this.plugin.mdbFileAdapter, await this.plugin.mdbFileAdapter.sqlJS(), this.vaultDBPath);
    let tables;
    try {
      tables = dbResultsToDBTables(
        db.exec(
          "SELECT name FROM sqlite_schema WHERE type ='table' AND name NOT LIKE 'sqlite_%';"
        )
      );
    } catch (e4) {
      console.log(e4);
      tables = [];
    }
    if (tables.length == 0) {
      initiateDB(db);
      await saveDBToPath(this.plugin.mdbFileAdapter, this.spacesDBPath, {
        vault: vaultSchema
      });
    }
    this.vaultDBCache = (_b2 = (_a2 = selectDB(db, "vault")) == null ? void 0 : _a2.rows) != null ? _b2 : [];
    db.close();
    this.vaultDBLoaded = true;
    await rebuildIndex(this, this.plugin, true);
    const allPaths = await this.persister.loadAll("file");
    this.vaultDBCache.forEach((f4) => {
      var _a3, _b3;
      const file = tFileToAFile(getAbstractFileAtPath(this.plugin.app, f4.path));
      let cache = {
        metadata: {},
        tags: [],
        label: { sticker: f4.sticker, color: f4.color, name: f4.name }
      };
      const h5 = allPaths.find((g4) => g4.path == f4.path);
      if (h5)
        cache = { ...cache, ...parsePathState(h5.cache) };
      if (file)
        cache = {
          ...cache,
          file,
          contentTypes: file.isFolder ? [] : ["md", "canvas", "folder"],
          label: { name: file.name, sticker: (_a3 = cache.label.sticker) != null ? _a3 : "", color: (_b3 = cache.label.color) != null ? _b3 : "" },
          parent: file.parent,
          type: file.isFolder ? "space" : "file",
          subtype: file.isFolder ? "folder" : file.extension
        };
      this.updateFileCache(f4.path, cache, false);
    });
    const start = Date.now();
    await Promise.all(this.vaultDBCache.map((f4) => this.middleware.createFileCache(f4.path)));
    this.plugin.superstate.ui.notify(`Make.md - File Cache Loaded in ${(Date.now() - start) / 1e3} seconds ${this.cache.size}`, "console");
    this.middleware.eventDispatch.dispatchEvent("onFilesystemIndexed", null);
    this.plugin.registerEvent(this.plugin.app.vault.on("create", this.onCreate));
    this.plugin.registerEvent(this.plugin.app.vault.on("modify", this.onModify));
    this.plugin.registerEvent(this.plugin.app.vault.on("delete", this.onDelete));
    this.plugin.registerEvent(this.plugin.app.vault.on("rename", this.onRename));
    this.plugin.superstate.initialize();
  }
  allFiles() {
    return getAllAbstractFilesInVault(this.plugin).map((f4) => tFileToAFile(f4));
  }
  getFileCache(path, source) {
    return this.cache.get(path);
  }
  parentPathForPath(path) {
    return removeTrailingSlashFromFolder(
      getParentPathFromString(path)
    );
  }
  resolvePath(path, source) {
    var _a2, _b2;
    return (_b2 = (_a2 = this.plugin.app.metadataCache.getFirstLinkpathDest(path, source)) == null ? void 0 : _a2.path) != null ? _b2 : path;
  }
  updateFileLabel(path, label, content) {
    {
      const newVaultDB = this.vaultDBCache.map((f4) => f4.path == path ? { ...f4, [label]: content } : f4);
      this.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultDB } });
      const file = this.cache.get(path);
      this.middleware.updateFileCache(path, { label: { ...file.label, [label]: content } }, true);
    }
  }
  async saveSpacesDatabaseToDisk(tables, save = true) {
    if (await this.plugin.files.fileExists((0, import_obsidian19.normalizePath)(this.spacesDBPath)) && !this.vaultDBLoaded) {
      return;
    }
    this.vaultDBLoaded = true;
    if (tables.vault)
      this.vaultDBCache = tables.vault.rows;
    if (save && this.plugin.superstate.settings.spacesEnabled) {
      this.debounceSaveSpaceDatabase(tables);
    }
  }
  initiate(middleware) {
    this.middleware = middleware;
  }
  resourcePathForPath(path) {
    const file = this.plugin.app.vault.getAbstractFileByPath(path);
    if (file instanceof import_obsidian19.TFile)
      return this.plugin.app.vault.getResourcePath(file);
    return path;
  }
  async getRoot() {
    return tFileToAFile(this.plugin.app.vault.getRoot());
  }
  async copyFile(path, folder) {
    const file = await this.getFile(path);
    if (!file)
      return;
    const newPath = folder + "/" + file.filename;
    let newFile;
    if (file.isFolder) {
      newFile = await this.createFolder(newPath);
    } else if (file) {
      newFile = tFileToAFile(await this.plugin.app.vault.copy(this.plugin.app.vault.getAbstractFileByPath(file.path), folder + "/" + file.filename));
    }
    if (!newFile)
      return;
    this.cache.set(newFile.path, {
      ...this.cache.get(file.path),
      file: newFile,
      label: { ...this.cache.get(path).label, name: newFile.name },
      parent: newFile.parent,
      type: newFile.isFolder ? "space" : "file",
      subtype: newFile.isFolder ? "folder" : newFile.extension
    });
  }
  async writeTextToFile(path, content) {
    const newFile = this.plugin.app.vault.getAbstractFileByPath(path);
    if (!newFile) {
      await this.plugin.app.vault.adapter.write(path, content);
    } else {
      await this.plugin.app.vault.modify(newFile, content);
    }
  }
  async readTextFromFile(path) {
    return this.plugin.app.vault.read(this.plugin.app.vault.getAbstractFileByPath(path));
  }
  async writeBinaryToFile(path, buffer) {
    return this.plugin.app.vault.adapter.writeBinary(
      path,
      buffer
    );
  }
  async readBinaryToFile(path) {
    return this.plugin.app.vault.adapter.readBinary(path);
  }
  async renameFile(path, newPath) {
    return this.plugin.app.fileManager.renameFile(
      this.plugin.app.vault.getAbstractFileByPath(path),
      newPath
    );
  }
  async createFolder(path) {
    if (!await this.fileExists(path)) {
      const newFolder = await this.plugin.app.vault.createFolder(path);
      return tFileToAFile(newFolder);
    } else {
      return this.getFile(path);
    }
  }
  async fileExists(path) {
    return this.plugin.app.vault.adapter.exists(path);
  }
  async getFile(path, source) {
    let aFile;
    if (source) {
      aFile = tFileToAFile(this.plugin.app.metadataCache.getFirstLinkpathDest(path, source));
    } else {
      aFile = tFileToAFile(this.plugin.app.vault.getAbstractFileByPath(path));
    }
    if (!aFile) {
      if (!await this.fileExists(path)) {
        return null;
      }
      const extension = path.split(".").pop();
      const folder = path.split("/").slice(0, -1).join("/");
      const filename = path.split("/").pop();
      const name = filename.split(".")[0];
      aFile = {
        path,
        name,
        filename,
        parent: folder,
        isFolder: false,
        extension
      };
    }
    return aFile;
  }
  async deleteFile(path) {
    const file = this.plugin.app.vault.getAbstractFileByPath(path);
    const deleteOption = this.plugin.superstate.settings.deleteFileOption;
    if (!file)
      return;
    if (deleteOption === "permanent") {
      return this.plugin.app.vault.delete(file, true);
    } else if (deleteOption === "system-trash") {
      return this.plugin.app.vault.trash(file, true);
    } else if (deleteOption === "trash") {
      return this.plugin.app.vault.trash(file, false);
    }
  }
  filesForTag(tag) {
    return getAllFilesForTag(this.plugin, tag);
  }
};

// src/adapters/obsidian/filetypes/canvasAdapter.ts
var ObsidianCanvasFiletypeAdapter = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.supportedFileTypes = ["canvas"];
    this.id = "canvas.obsidian.md";
    this.plugin = plugin;
    this.cache = /* @__PURE__ */ new Map();
  }
  initiate(middleware) {
    this.middleware = middleware;
  }
  async parseCache(file, refresh) {
    var _a2, _b2;
    if (!file)
      return;
    const label = (_a2 = this.middleware.getFileCache(file.path)) == null ? void 0 : _a2.label;
    const updatedCache = {
      label: {
        name: file.name,
        sticker: ((_b2 = label == null ? void 0 : label.sticker) == null ? void 0 : _b2.length) > 0 ? label.sticker : "ui//mk-ui-canvas",
        color: label == null ? void 0 : label.color
      }
    };
    this.cache.set(file.path, updatedCache);
    this.middleware.updateFileCache(file.path, updatedCache, refresh);
  }
  async newFile(parent, name, type) {
    if (!name) {
      name = uniqueFileName("Untitled", "Untitled", "canvas", getAbstractFileAtPath(this.plugin.app, parent));
    }
    const newPath = `${parent}/${name}`;
    await this.middleware.writeTextToFile(`${parent}/${name}`, "{}");
    return this.middleware.getFile(newPath);
  }
};

// src/adapters/obsidian/filetypes/markdownAdapter.ts
var import_obsidian21 = require("obsidian");

// src/adapters/obsidian/filetypes/frontmatter/fm.ts
var import_obsidian20 = require("obsidian");
var frontMatterForFile = (app2, file) => {
  let currentCache;
  if (file instanceof import_obsidian20.TFile && app2.metadataCache.getFileCache(file) !== null) {
    currentCache = app2.metadataCache.getFileCache(file);
  }
  return currentCache == null ? void 0 : currentCache.frontmatter;
};

// src/adapters/obsidian/filetypes/markdownAdapter.ts
var ObsidianMarkdownFiletypeAdapter = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.id = "metadata.obsidian.md";
    this.supportedFileTypes = ["md"];
    this.metadataKeys = ["property", "links", "embeds", "tags", "headings", "sections", "listItems", "frontmatter", "frontmatterPostion", "frontmatterLinks", "blocks"];
    this.app = plugin.app;
  }
  initiate(middleware) {
    this.middleware = middleware;
    this.cache = /* @__PURE__ */ new Map();
  }
  metadataChange(file) {
    this.parseCache(tFileToAFile(file), true);
  }
  async parseCache(file, refresh) {
    var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l, _m, _n2;
    if (!file)
      return;
    const fCache = this.app.metadataCache.getCache(file.path);
    if (!fCache)
      return;
    const rt = [];
    if (fCache && fCache.tags)
      rt.push(...(_b2 = (_a2 = fCache.tags) == null ? void 0 : _a2.map((f4) => f4.tag)) != null ? _b2 : []);
    if (fCache && ((_c2 = fCache.frontmatter) == null ? void 0 : _c2.tags))
      rt.push(
        ...(typeof ((_d2 = fCache.frontmatter) == null ? void 0 : _d2.tags) === "string" ? parseMultiString(fCache.frontmatter.tags.replace(/ /g, "")) : Array.isArray((_e2 = fCache.frontmatter) == null ? void 0 : _e2.tags) ? (_g = (_f = fCache.frontmatter) == null ? void 0 : _f.tags) != null ? _g : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
      );
    if (fCache && ((_h = fCache.frontmatter) == null ? void 0 : _h.tag))
      rt.push(
        ...(typeof ((_i = fCache.frontmatter) == null ? void 0 : _i.tag) === "string" ? parseMultiString(fCache.frontmatter.tag.replace(/ /g, "")) : Array.isArray((_j = fCache.frontmatter) == null ? void 0 : _j.tag) ? (_l = (_k = fCache.frontmatter) == null ? void 0 : _k.tag) != null ? _l : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
      );
    const updatedCache = {
      ...fCache,
      tags: rt,
      property: fCache.frontmatter,
      label: {
        name: file.name,
        sticker: (_m = fCache.frontmatter) == null ? void 0 : _m[this.plugin.superstate.settings.fmKeySticker],
        color: (_n2 = fCache.frontmatter) == null ? void 0 : _n2[this.plugin.superstate.settings.fmKeyColor]
      }
    };
    this.cache.set(file.path, updatedCache);
    this.middleware.updateFileCache(file.path, updatedCache, refresh);
  }
  cacheTypes(file) {
    return this.metadataKeys;
  }
  contentTypes(file) {
    return ["tags", "frontmatter", "property", "label"];
  }
  getCacheTypeByRefString(file, refString) {
    const refType = refString.charAt(0);
    if (refType == "^") {
      return "blocks";
    } else {
      return "headings";
    }
  }
  getCache(file, fragmentType, query) {
    var _a2;
    return (_a2 = this.cache.get(file.path)) == null ? void 0 : _a2[fragmentType];
  }
  async readContent(file, fragmentType, fragmentId) {
    var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l, _m;
    if (fragmentType == "tags") {
      const fCache = this.app.metadataCache.getFileCache(getAbstractFileAtPath(this.app, file.path));
      const rt = [];
      if (fCache && fCache.tags)
        rt.push(...(_b2 = (_a2 = fCache.tags) == null ? void 0 : _a2.map((f4) => f4.tag)) != null ? _b2 : []);
      if (fCache && ((_c2 = fCache.frontmatter) == null ? void 0 : _c2.tags))
        rt.push(
          ...(typeof ((_d2 = fCache.frontmatter) == null ? void 0 : _d2.tags) === "string" ? parseMultiString(fCache.frontmatter.tags.replace(/ /g, "")) : Array.isArray((_e2 = fCache.frontmatter) == null ? void 0 : _e2.tags) ? (_g = (_f = fCache.frontmatter) == null ? void 0 : _f.tags) != null ? _g : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
        );
      if (fCache && ((_h = fCache.frontmatter) == null ? void 0 : _h.tag))
        rt.push(
          ...(typeof ((_i = fCache.frontmatter) == null ? void 0 : _i.tag) === "string" ? parseMultiString(fCache.frontmatter.tag.replace(/ /g, "")) : Array.isArray((_j = fCache.frontmatter) == null ? void 0 : _j.tag) ? (_l = (_k = fCache.frontmatter) == null ? void 0 : _k.tag) != null ? _l : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
        );
      return (_m = uniq(rt)) != null ? _m : [];
    }
    if (fragmentType == "frontmatter" || fragmentType == "property" || fragmentType == "label") {
      const tfile = getAbstractFileAtPath(this.app, file.path);
      const fm = frontMatterForFile(this.app, tfile);
      const fmKeys = frontMatterKeys(fm);
      const rows = fmKeys.reduce(
        (p3, c4) => ({ ...p3, [c4]: parseProperty(c4, fm[c4]) }),
        {}
      );
      return rows;
    }
  }
  async newFile(parent, name, type) {
    let parentFolder = getAbstractFileAtPath(this.app, parent);
    if (!parentFolder) {
      await this.middleware.createFolder(parent);
      parentFolder = getAbstractFileAtPath(this.app, parent);
    }
    return this.app.fileManager.createNewMarkdownFile(
      parentFolder ? parentFolder instanceof import_obsidian21.TFolder ? parentFolder : parentFolder.parent : this.app.vault.getRoot(),
      name
    ).then((f4) => tFileToAFile(f4));
  }
  async saveContent(file, fragmentType, fragmentId, content) {
    if (fragmentType == "label") {
      const afile = this.app.vault.getAbstractFileByPath(file.path);
      if (afile && afile instanceof import_obsidian21.TFile) {
        if (this.app.fileManager.processFrontMatter) {
          await this.app.fileManager.processFrontMatter(afile, (frontmatter) => {
            if (fragmentId == "sticker") {
              frontmatter[this.plugin.superstate.settings.fmKeySticker] = content(frontmatter);
            } else if (fragmentId == "color") {
              frontmatter[this.plugin.superstate.settings.fmKeyColor] = content(frontmatter);
            }
          });
          await this.parseCache(file, true);
        }
      }
    }
    if (fragmentType == "frontmatter" || fragmentType == "property") {
      const afile = this.app.vault.getAbstractFileByPath(file.path);
      if (afile && afile instanceof import_obsidian21.TFile) {
        if (this.app.fileManager.processFrontMatter) {
          await this.app.fileManager.processFrontMatter(afile, (frontmatter) => {
            const newFrontmatter = content(frontmatter);
            Object.keys(newFrontmatter).forEach((f4) => {
              frontmatter[f4] = newFrontmatter == null ? void 0 : newFrontmatter[f4];
            });
          });
          await this.parseCache(file, true);
        }
      }
    }
    return;
  }
  async deleteContent(file, fragmentType, fragmentId) {
    if (fragmentType == "frontmatter" || fragmentType == "property") {
      const afile = this.app.vault.getAbstractFileByPath(file.path);
      if (afile && afile instanceof import_obsidian21.TFile) {
        if (this.app.fileManager.processFrontMatter) {
          return this.app.fileManager.processFrontMatter(afile, (frontmatter) => {
            delete frontmatter[fragmentId];
          });
        }
      }
    }
    return;
  }
};

// src/adapters/obsidian/ui/sticker.ts
var stickerFromString = (sticker, plugin) => {
  if (!sticker || typeof sticker != "string")
    return "";
  const [type, value] = parseStickerString(sticker);
  if (type == "" || type == "emoji") {
    return emojiFromString(value);
  } else if (type == "ui") {
    return uiIconSet[value];
  } else if (type == "lucide") {
    return lucideIcon(value);
  } else {
    return plugin.superstate.iconsCache.get(value);
  }
};

// src/adapters/obsidian/ui/editors/markdownView/menus/MakeMenu/MakeMenu.tsx
var import_obsidian22 = require("obsidian");

// src/adapters/obsidian/ui/editors/markdownView/menus/MakeMenu/commands/default.ts
var default_default2 = [
  {
    label: "todo",
    value: "- [ ] ",
    icon: "ui//mk-make-todo"
  },
  {
    label: "list",
    value: `- `,
    icon: "ui//mk-make-list"
  },
  {
    label: "ordered-list",
    value: `1. `,
    icon: "ui//mk-make-ordered"
  },
  {
    label: "h1",
    value: "# ",
    icon: "ui//mk-make-h1"
  },
  {
    label: "h2",
    value: "## ",
    icon: "ui//mk-make-h2"
  },
  {
    label: "h3",
    value: "### ",
    icon: "ui//mk-make-h3"
  },
  {
    label: "quote",
    value: "> ",
    icon: "ui//mk-make-quote"
  },
  {
    label: "divider",
    value: `
---
`,
    icon: "ui//mk-make-hr"
  },
  {
    label: "link",
    value: "<Paste Link>",
    offset: [-1, 1],
    icon: "ui//mk-make-link"
  },
  {
    label: "image",
    value: "![](Paste Link)",
    offset: [-1, 4],
    icon: "ui//mk-make-image"
  },
  {
    label: "codeblock",
    value: `
\`\`\`
Type/Paste Your Code
\`\`\``,
    offset: [-4, 5],
    icon: "ui//mk-make-codeblock"
  },
  {
    label: "callout",
    value: `> [!NOTE]
> Content`,
    offset: [-7, 12],
    icon: "ui//mk-make-callout"
  },
  {
    label: "note",
    value: "[[Note Name]]",
    offset: [-2, 2],
    icon: "ui//mk-make-note"
  },
  {
    label: "table",
    value: "table",
    icon: "ui//mk-make-table"
  },
  {
    label: "flow",
    value: `!![[Note Name]]`,
    offset: [-2, 4],
    icon: "ui//mk-make-flow"
  },
  {
    label: "tag",
    value: "#tag",
    offset: [0, 1],
    icon: "ui//mk-make-tag"
  }
];

// src/adapters/obsidian/ui/editors/markdownView/menus/MakeMenu/commands/index.ts
function resolveCommands(plugin) {
  const allFrames = plugin.superstate.settings.quickFrames.flatMap((f4) => {
    var _a2;
    return (_a2 = plugin.superstate.framesIndex.get(f4)) == null ? void 0 : _a2.schemas.map((g4) => ({ ...g4, path: f4 }));
  }).map((f4) => {
    var _a2;
    return {
      label: f4.name,
      value: `![![${f4.path}#*${f4.id}]]`,
      icon: (_a2 = safelyParseJSON(f4.def)) == null ? void 0 : _a2.icon
    };
  });
  return [...default_default2];
}

// src/adapters/obsidian/ui/editors/markdownView/menus/MakeMenu/MakeMenu.tsx
var MakeMenu = class extends import_obsidian22.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.inCmd = false;
    this.cmdStartCh = 0;
    this.plugin = plugin;
  }
  resetInfos() {
    this.cmdStartCh = 0;
    this.inCmd = false;
  }
  onTrigger(cursor, editor, _file) {
    const currentLine = editor.getLine(cursor.line).slice(0, cursor.ch);
    const triggerCharLength = this.plugin.superstate.settings.menuTriggerChar.length;
    this.file = _file;
    if (!this.inCmd && currentLine.slice(0, triggerCharLength) !== this.plugin.superstate.settings.menuTriggerChar && currentLine.slice(-2 - triggerCharLength) !== "- " + this.plugin.superstate.settings.menuTriggerChar) {
      this.resetInfos();
      return null;
    }
    if (!this.inCmd) {
      this.cmdStartCh = currentLine.length - triggerCharLength;
      this.inCmd = true;
    }
    const currentCmd = currentLine.slice(this.cmdStartCh, cursor.ch);
    if (currentCmd.length > 1 && currentCmd.includes(" ") || !currentCmd.includes(this.plugin.superstate.settings.menuTriggerChar)) {
      this.resetInfos();
      return null;
    }
    return {
      start: cursor,
      end: cursor,
      query: currentCmd.slice(triggerCharLength)
    };
  }
  getSuggestions(context) {
    const suggestions = resolveCommands(this.plugin).filter(
      ({ label }) => label.toLowerCase().includes(context.query.toLowerCase()) || i18n_default.commands[label] && i18n_default.commands[label].toLowerCase().includes(context.query.toLowerCase())
    );
    return suggestions.length > 0 ? suggestions : [{ label: i18n_default.commandsSuggest.noResult, value: "", icon: "" }];
  }
  renderSuggestion(value, el) {
    var _a2;
    if (value.value == "") {
      el.setText(i18n_default.commandsSuggest.noResult);
      return;
    }
    const div = el.createDiv("mk-slash-item");
    const icon = div.createDiv("mk-slash-icon");
    icon.innerHTML = stickerFromString(value.icon, this.plugin);
    const title = div.createDiv();
    title.setText((_a2 = i18n_default.commands[value.label]) != null ? _a2 : value.label);
  }
  selectSuggestion(cmd, _evt) {
    if (cmd.label === i18n_default.commandsSuggest.noResult)
      return;
    if (cmd.value == "table") {
      createInlineTable(this.plugin.superstate, this.file.parent.path).then(
        (f4) => {
          this.context.editor.replaceRange(
            contextEmbedStringFromContext(
              this.plugin.superstate.spacesIndex.get(this.file.parent.path),
              f4
            ),
            { ...this.context.start, ch: this.cmdStartCh },
            this.context.end
          );
          this.context.editor.setSelection({
            line: this.context.start.line,
            ch: 0
          });
          this.resetInfos();
          this.close();
        }
      );
    } else {
      this.context.editor.replaceRange(
        cmd.value,
        { ...this.context.start, ch: this.cmdStartCh },
        this.context.end
      );
      if (cmd.offset) {
        this.context.editor.setSelection(
          { ...this.context.start, ch: this.cmdStartCh + cmd.offset[1] },
          {
            ...this.context.end,
            ch: this.cmdStartCh + cmd.value.length + cmd.offset[0]
          }
        );
      }
      this.resetInfos();
      this.close();
    }
  }
};

// src/adapters/obsidian/ui/editors/markdownView/menus/StickerMenu.tsx
var import_obsidian23 = require("obsidian");

// src/schemas/emoji.ts
var emojis = {
  smileys_people: [
    { n: ["grinning", "grinning face"], u: "1f600" },
    { n: ["smiley", "smiling face with open mouth"], u: "1f603" },
    {
      n: ["smile", "smiling face with open mouth and smiling eyes"],
      u: "1f604"
    },
    { n: ["grin", "grinning face with smiling eyes"], u: "1f601" },
    {
      n: [
        "laughing",
        "satisfied",
        "smiling face with open mouth and tightly-closed eyes"
      ],
      u: "1f606"
    },
    {
      n: ["sweat smile", "smiling face with open mouth and cold sweat"],
      u: "1f605"
    },
    { n: ["rolling on the floor laughing"], u: "1f923" },
    { n: ["joy", "face with tears of joy"], u: "1f602" },
    { n: ["slightly smiling face"], u: "1f642" },
    { n: ["upside-down face", "upside down face"], u: "1f643" },
    { n: ["melting face"], u: "1fae0" },
    { n: ["wink", "winking face"], u: "1f609" },
    { n: ["blush", "smiling face with smiling eyes"], u: "1f60a" },
    { n: ["innocent", "smiling face with halo"], u: "1f607" },
    {
      n: [
        "smiling face with 3 hearts",
        "smiling face with smiling eyes and three hearts"
      ],
      u: "1f970"
    },
    { n: ["heart eyes", "smiling face with heart-shaped eyes"], u: "1f60d" },
    { n: ["star-struck", "grinning face with star eyes"], u: "1f929" },
    { n: ["kissing heart", "face throwing a kiss"], u: "1f618" },
    { n: ["kissing", "kissing face"], u: "1f617" },
    { n: ["relaxed", "white smiling face"], u: "263a-fe0f" },
    { n: ["kissing closed eyes", "kissing face with closed eyes"], u: "1f61a" },
    {
      n: ["kissing smiling eyes", "kissing face with smiling eyes"],
      u: "1f619"
    },
    { n: ["smiling face with tear"], u: "1f972" },
    { n: ["yum", "face savouring delicious food"], u: "1f60b" },
    { n: ["stuck out tongue", "face with stuck-out tongue"], u: "1f61b" },
    {
      n: [
        "stuck out tongue winking eye",
        "face with stuck-out tongue and winking eye"
      ],
      u: "1f61c"
    },
    {
      n: ["zany face", "grinning face with one large and one small eye"],
      u: "1f92a"
    },
    {
      n: [
        "stuck out tongue closed eyes",
        "face with stuck-out tongue and tightly-closed eyes"
      ],
      u: "1f61d"
    },
    { n: ["money-mouth face", "money mouth face"], u: "1f911" },
    { n: ["hugging face"], u: "1f917" },
    {
      n: [
        "face with hand over mouth",
        "smiling face with smiling eyes and hand covering mouth"
      ],
      u: "1f92d"
    },
    { n: ["face with open eyes and hand over mouth"], u: "1fae2" },
    { n: ["face with peeking eye"], u: "1fae3" },
    {
      n: ["shushing face", "face with finger covering closed lips"],
      u: "1f92b"
    },
    { n: ["thinking face"], u: "1f914" },
    { n: ["saluting face"], u: "1fae1" },
    { n: ["zipper-mouth face", "zipper mouth face"], u: "1f910" },
    {
      n: ["face with raised eyebrow", "face with one eyebrow raised"],
      u: "1f928"
    },
    { n: ["neutral face"], u: "1f610" },
    { n: ["expressionless", "expressionless face"], u: "1f611" },
    { n: ["no mouth", "face without mouth"], u: "1f636" },
    { n: ["dotted line face"], u: "1fae5" },
    { n: ["face in clouds"], u: "1f636-200d-1f32b-fe0f" },
    { n: ["smirk", "smirking face"], u: "1f60f" },
    { n: ["unamused", "unamused face"], u: "1f612" },
    { n: ["face with rolling eyes"], u: "1f644" },
    { n: ["grimacing", "grimacing face"], u: "1f62c" },
    { n: ["face exhaling"], u: "1f62e-200d-1f4a8" },
    { n: ["lying face"], u: "1f925" },
    { n: ["relieved", "relieved face"], u: "1f60c" },
    { n: ["pensive", "pensive face"], u: "1f614" },
    { n: ["sleepy", "sleepy face"], u: "1f62a" },
    { n: ["drooling face"], u: "1f924" },
    { n: ["sleeping", "sleeping face"], u: "1f634" },
    { n: ["mask", "face with medical mask"], u: "1f637" },
    { n: ["face with thermometer"], u: "1f912" },
    { n: ["face with head-bandage", "face with head bandage"], u: "1f915" },
    { n: ["nauseated face"], u: "1f922" },
    { n: ["face vomiting", "face with open mouth vomiting"], u: "1f92e" },
    { n: ["sneezing face"], u: "1f927" },
    { n: ["hot face", "overheated face"], u: "1f975" },
    { n: ["cold face", "freezing face"], u: "1f976" },
    { n: ["woozy face", "face with uneven eyes and wavy mouth"], u: "1f974" },
    { n: ["dizzy face"], u: "1f635" },
    { n: ["face with spiral eyes"], u: "1f635-200d-1f4ab" },
    { n: ["exploding head", "shocked face with exploding head"], u: "1f92f" },
    { n: ["face with cowboy hat"], u: "1f920" },
    { n: ["partying face", "face with party horn and party hat"], u: "1f973" },
    { n: ["disguised face"], u: "1f978" },
    { n: ["sunglasses", "smiling face with sunglasses"], u: "1f60e" },
    { n: ["nerd face"], u: "1f913" },
    { n: ["face with monocle"], u: "1f9d0" },
    { n: ["confused", "confused face"], u: "1f615" },
    { n: ["face with diagonal mouth"], u: "1fae4" },
    { n: ["worried", "worried face"], u: "1f61f" },
    { n: ["slightly frowning face"], u: "1f641" },
    { n: ["frowning face", "white frowning face"], u: "2639-fe0f" },
    { n: ["open mouth", "face with open mouth"], u: "1f62e" },
    { n: ["hushed", "hushed face"], u: "1f62f" },
    { n: ["astonished", "astonished face"], u: "1f632" },
    { n: ["flushed", "flushed face"], u: "1f633" },
    { n: ["pleading face", "face with pleading eyes"], u: "1f97a" },
    { n: ["face holding back tears"], u: "1f979" },
    { n: ["frowning", "frowning face with open mouth"], u: "1f626" },
    { n: ["anguished", "anguished face"], u: "1f627" },
    { n: ["fearful", "fearful face"], u: "1f628" },
    { n: ["cold sweat", "face with open mouth and cold sweat"], u: "1f630" },
    {
      n: ["disappointed relieved", "disappointed but relieved face"],
      u: "1f625"
    },
    { n: ["cry", "crying face"], u: "1f622" },
    { n: ["sob", "loudly crying face"], u: "1f62d" },
    { n: ["scream", "face screaming in fear"], u: "1f631" },
    { n: ["confounded", "confounded face"], u: "1f616" },
    { n: ["persevere", "persevering face"], u: "1f623" },
    { n: ["disappointed", "disappointed face"], u: "1f61e" },
    { n: ["sweat", "face with cold sweat"], u: "1f613" },
    { n: ["weary", "weary face"], u: "1f629" },
    { n: ["tired face"], u: "1f62b" },
    { n: ["yawning face"], u: "1f971" },
    { n: ["triumph", "face with look of triumph"], u: "1f624" },
    { n: ["rage", "pouting face"], u: "1f621" },
    { n: ["angry", "angry face"], u: "1f620" },
    {
      n: [
        "face with symbols on mouth",
        "serious face with symbols covering mouth"
      ],
      u: "1f92c"
    },
    { n: ["smiling imp", "smiling face with horns"], u: "1f608" },
    { n: ["imp"], u: "1f47f" },
    { n: ["skull"], u: "1f480" },
    { n: ["skull and crossbones"], u: "2620-fe0f" },
    { n: ["poop", "shit", "hankey", "pile of poo"], u: "1f4a9" },
    { n: ["clown face"], u: "1f921" },
    { n: ["japanese ogre"], u: "1f479" },
    { n: ["japanese goblin"], u: "1f47a" },
    { n: ["ghost"], u: "1f47b" },
    { n: ["alien", "extraterrestrial alien"], u: "1f47d" },
    { n: ["alien monster", "space invader"], u: "1f47e" },
    { n: ["robot face"], u: "1f916" },
    { n: ["smiley cat", "smiling cat face with open mouth"], u: "1f63a" },
    { n: ["smile cat", "grinning cat face with smiling eyes"], u: "1f638" },
    { n: ["joy cat", "cat face with tears of joy"], u: "1f639" },
    {
      n: ["heart eyes cat", "smiling cat face with heart-shaped eyes"],
      u: "1f63b"
    },
    { n: ["smirk cat", "cat face with wry smile"], u: "1f63c" },
    { n: ["kissing cat", "kissing cat face with closed eyes"], u: "1f63d" },
    { n: ["scream cat", "weary cat face"], u: "1f640" },
    { n: ["crying cat face"], u: "1f63f" },
    { n: ["pouting cat", "pouting cat face"], u: "1f63e" },
    { n: ["see no evil", "see-no-evil monkey"], u: "1f648" },
    { n: ["hear no evil", "hear-no-evil monkey"], u: "1f649" },
    { n: ["speak no evil", "speak-no-evil monkey"], u: "1f64a" },
    { n: ["kiss", "kiss mark"], u: "1f48b" },
    { n: ["love letter"], u: "1f48c" },
    { n: ["cupid", "heart with arrow"], u: "1f498" },
    { n: ["gift heart", "heart with ribbon"], u: "1f49d" },
    { n: ["sparkling heart"], u: "1f496" },
    { n: ["heartpulse", "growing heart"], u: "1f497" },
    { n: ["heartbeat", "beating heart"], u: "1f493" },
    { n: ["revolving hearts"], u: "1f49e" },
    { n: ["two hearts"], u: "1f495" },
    { n: ["heart decoration"], u: "1f49f" },
    {
      n: ["heart exclamation", "heavy heart exclamation mark ornament"],
      u: "2763-fe0f"
    },
    { n: ["broken heart"], u: "1f494" },
    { n: ["heart on fire"], u: "2764-fe0f-200d-1f525" },
    { n: ["mending heart"], u: "2764-fe0f-200d-1fa79" },
    { n: ["heart", "heavy black heart"], u: "2764-fe0f" },
    { n: ["orange heart"], u: "1f9e1" },
    { n: ["yellow heart"], u: "1f49b" },
    { n: ["green heart"], u: "1f49a" },
    { n: ["blue heart"], u: "1f499" },
    { n: ["purple heart"], u: "1f49c" },
    { n: ["brown heart"], u: "1f90e" },
    { n: ["black heart"], u: "1f5a4" },
    { n: ["white heart"], u: "1f90d" },
    { n: ["100", "hundred points symbol"], u: "1f4af" },
    { n: ["anger", "anger symbol"], u: "1f4a2" },
    { n: ["boom", "collision", "collision symbol"], u: "1f4a5" },
    { n: ["dizzy", "dizzy symbol"], u: "1f4ab" },
    { n: ["sweat drops", "splashing sweat symbol"], u: "1f4a6" },
    { n: ["dash", "dash symbol"], u: "1f4a8" },
    { n: ["hole"], u: "1f573-fe0f" },
    { n: ["bomb"], u: "1f4a3" },
    { n: ["speech balloon"], u: "1f4ac" },
    {
      n: ["eye in speech bubble", "eye-in-speech-bubble"],
      u: "1f441-fe0f-200d-1f5e8-fe0f"
    },
    { n: ["left speech bubble"], u: "1f5e8-fe0f" },
    { n: ["right anger bubble"], u: "1f5ef-fe0f" },
    { n: ["thought balloon"], u: "1f4ad" },
    { n: ["zzz", "sleeping symbol"], u: "1f4a4" },
    {
      n: ["wave", "waving hand sign"],
      u: "1f44b",
      v: [
        "1f44b-1f3fb",
        "1f44b-1f3fc",
        "1f44b-1f3fd",
        "1f44b-1f3fe",
        "1f44b-1f3ff"
      ]
    },
    {
      n: ["raised back of hand"],
      u: "1f91a",
      v: [
        "1f91a-1f3fb",
        "1f91a-1f3fc",
        "1f91a-1f3fd",
        "1f91a-1f3fe",
        "1f91a-1f3ff"
      ]
    },
    {
      n: ["hand with fingers splayed", "raised hand with fingers splayed"],
      u: "1f590-fe0f",
      v: [
        "1f590-1f3fb",
        "1f590-1f3fc",
        "1f590-1f3fd",
        "1f590-1f3fe",
        "1f590-1f3ff"
      ]
    },
    {
      n: ["hand", "raised hand"],
      u: "270b",
      v: ["270b-1f3fb", "270b-1f3fc", "270b-1f3fd", "270b-1f3fe", "270b-1f3ff"]
    },
    {
      n: [
        "spock-hand",
        "raised hand with part between middle and ring fingers"
      ],
      u: "1f596",
      v: [
        "1f596-1f3fb",
        "1f596-1f3fc",
        "1f596-1f3fd",
        "1f596-1f3fe",
        "1f596-1f3ff"
      ]
    },
    {
      n: ["rightwards hand"],
      u: "1faf1",
      v: [
        "1faf1-1f3fb",
        "1faf1-1f3fc",
        "1faf1-1f3fd",
        "1faf1-1f3fe",
        "1faf1-1f3ff"
      ]
    },
    {
      n: ["leftwards hand"],
      u: "1faf2",
      v: [
        "1faf2-1f3fb",
        "1faf2-1f3fc",
        "1faf2-1f3fd",
        "1faf2-1f3fe",
        "1faf2-1f3ff"
      ]
    },
    {
      n: ["palm down hand"],
      u: "1faf3",
      v: [
        "1faf3-1f3fb",
        "1faf3-1f3fc",
        "1faf3-1f3fd",
        "1faf3-1f3fe",
        "1faf3-1f3ff"
      ]
    },
    {
      n: ["palm up hand"],
      u: "1faf4",
      v: [
        "1faf4-1f3fb",
        "1faf4-1f3fc",
        "1faf4-1f3fd",
        "1faf4-1f3fe",
        "1faf4-1f3ff"
      ]
    },
    {
      n: ["ok hand", "ok hand sign"],
      u: "1f44c",
      v: [
        "1f44c-1f3fb",
        "1f44c-1f3fc",
        "1f44c-1f3fd",
        "1f44c-1f3fe",
        "1f44c-1f3ff"
      ]
    },
    {
      n: ["pinched fingers"],
      u: "1f90c",
      v: [
        "1f90c-1f3fb",
        "1f90c-1f3fc",
        "1f90c-1f3fd",
        "1f90c-1f3fe",
        "1f90c-1f3ff"
      ]
    },
    {
      n: ["pinching hand"],
      u: "1f90f",
      v: [
        "1f90f-1f3fb",
        "1f90f-1f3fc",
        "1f90f-1f3fd",
        "1f90f-1f3fe",
        "1f90f-1f3ff"
      ]
    },
    {
      n: ["v", "victory hand"],
      u: "270c-fe0f",
      v: ["270c-1f3fb", "270c-1f3fc", "270c-1f3fd", "270c-1f3fe", "270c-1f3ff"]
    },
    {
      n: ["crossed fingers", "hand with index and middle fingers crossed"],
      u: "1f91e",
      v: [
        "1f91e-1f3fb",
        "1f91e-1f3fc",
        "1f91e-1f3fd",
        "1f91e-1f3fe",
        "1f91e-1f3ff"
      ]
    },
    {
      n: ["hand with index finger and thumb crossed"],
      u: "1faf0",
      v: [
        "1faf0-1f3fb",
        "1faf0-1f3fc",
        "1faf0-1f3fd",
        "1faf0-1f3fe",
        "1faf0-1f3ff"
      ]
    },
    {
      n: ["i love you hand sign"],
      u: "1f91f",
      v: [
        "1f91f-1f3fb",
        "1f91f-1f3fc",
        "1f91f-1f3fd",
        "1f91f-1f3fe",
        "1f91f-1f3ff"
      ]
    },
    {
      n: ["the horns", "sign of the horns"],
      u: "1f918",
      v: [
        "1f918-1f3fb",
        "1f918-1f3fc",
        "1f918-1f3fd",
        "1f918-1f3fe",
        "1f918-1f3ff"
      ]
    },
    {
      n: ["call me hand"],
      u: "1f919",
      v: [
        "1f919-1f3fb",
        "1f919-1f3fc",
        "1f919-1f3fd",
        "1f919-1f3fe",
        "1f919-1f3ff"
      ]
    },
    {
      n: ["point left", "white left pointing backhand index"],
      u: "1f448",
      v: [
        "1f448-1f3fb",
        "1f448-1f3fc",
        "1f448-1f3fd",
        "1f448-1f3fe",
        "1f448-1f3ff"
      ]
    },
    {
      n: ["point right", "white right pointing backhand index"],
      u: "1f449",
      v: [
        "1f449-1f3fb",
        "1f449-1f3fc",
        "1f449-1f3fd",
        "1f449-1f3fe",
        "1f449-1f3ff"
      ]
    },
    {
      n: ["point up 2", "white up pointing backhand index"],
      u: "1f446",
      v: [
        "1f446-1f3fb",
        "1f446-1f3fc",
        "1f446-1f3fd",
        "1f446-1f3fe",
        "1f446-1f3ff"
      ]
    },
    {
      n: ["middle finger", "reversed hand with middle finger extended"],
      u: "1f595",
      v: [
        "1f595-1f3fb",
        "1f595-1f3fc",
        "1f595-1f3fd",
        "1f595-1f3fe",
        "1f595-1f3ff"
      ]
    },
    {
      n: ["point down", "white down pointing backhand index"],
      u: "1f447",
      v: [
        "1f447-1f3fb",
        "1f447-1f3fc",
        "1f447-1f3fd",
        "1f447-1f3fe",
        "1f447-1f3ff"
      ]
    },
    {
      n: ["point up", "white up pointing index"],
      u: "261d-fe0f",
      v: ["261d-1f3fb", "261d-1f3fc", "261d-1f3fd", "261d-1f3fe", "261d-1f3ff"]
    },
    {
      n: ["index pointing at the viewer"],
      u: "1faf5",
      v: [
        "1faf5-1f3fb",
        "1faf5-1f3fc",
        "1faf5-1f3fd",
        "1faf5-1f3fe",
        "1faf5-1f3ff"
      ]
    },
    {
      n: ["+1", "thumbsup", "thumbs up sign"],
      u: "1f44d",
      v: [
        "1f44d-1f3fb",
        "1f44d-1f3fc",
        "1f44d-1f3fd",
        "1f44d-1f3fe",
        "1f44d-1f3ff"
      ]
    },
    {
      n: ["-1", "thumbsdown", "thumbs down sign"],
      u: "1f44e",
      v: [
        "1f44e-1f3fb",
        "1f44e-1f3fc",
        "1f44e-1f3fd",
        "1f44e-1f3fe",
        "1f44e-1f3ff"
      ]
    },
    {
      n: ["fist", "raised fist"],
      u: "270a",
      v: ["270a-1f3fb", "270a-1f3fc", "270a-1f3fd", "270a-1f3fe", "270a-1f3ff"]
    },
    {
      n: ["punch", "facepunch", "fisted hand sign"],
      u: "1f44a",
      v: [
        "1f44a-1f3fb",
        "1f44a-1f3fc",
        "1f44a-1f3fd",
        "1f44a-1f3fe",
        "1f44a-1f3ff"
      ]
    },
    {
      n: ["left-facing fist"],
      u: "1f91b",
      v: [
        "1f91b-1f3fb",
        "1f91b-1f3fc",
        "1f91b-1f3fd",
        "1f91b-1f3fe",
        "1f91b-1f3ff"
      ]
    },
    {
      n: ["right-facing fist"],
      u: "1f91c",
      v: [
        "1f91c-1f3fb",
        "1f91c-1f3fc",
        "1f91c-1f3fd",
        "1f91c-1f3fe",
        "1f91c-1f3ff"
      ]
    },
    {
      n: ["clap", "clapping hands sign"],
      u: "1f44f",
      v: [
        "1f44f-1f3fb",
        "1f44f-1f3fc",
        "1f44f-1f3fd",
        "1f44f-1f3fe",
        "1f44f-1f3ff"
      ]
    },
    {
      n: ["raised hands", "person raising both hands in celebration"],
      u: "1f64c",
      v: [
        "1f64c-1f3fb",
        "1f64c-1f3fc",
        "1f64c-1f3fd",
        "1f64c-1f3fe",
        "1f64c-1f3ff"
      ]
    },
    {
      n: ["heart hands"],
      u: "1faf6",
      v: [
        "1faf6-1f3fb",
        "1faf6-1f3fc",
        "1faf6-1f3fd",
        "1faf6-1f3fe",
        "1faf6-1f3ff"
      ]
    },
    {
      n: ["open hands", "open hands sign"],
      u: "1f450",
      v: [
        "1f450-1f3fb",
        "1f450-1f3fc",
        "1f450-1f3fd",
        "1f450-1f3fe",
        "1f450-1f3ff"
      ]
    },
    {
      n: ["palms up together"],
      u: "1f932",
      v: [
        "1f932-1f3fb",
        "1f932-1f3fc",
        "1f932-1f3fd",
        "1f932-1f3fe",
        "1f932-1f3ff"
      ]
    },
    {
      n: ["handshake"],
      u: "1f91d",
      v: [
        "1f91d-1f3fb",
        "1f91d-1f3fc",
        "1f91d-1f3fd",
        "1f91d-1f3fe",
        "1f91d-1f3ff",
        "1faf1-1f3fb-200d-1faf2-1f3fc",
        "1faf1-1f3fb-200d-1faf2-1f3fd",
        "1faf1-1f3fb-200d-1faf2-1f3fe",
        "1faf1-1f3fb-200d-1faf2-1f3ff",
        "1faf1-1f3fc-200d-1faf2-1f3fb",
        "1faf1-1f3fc-200d-1faf2-1f3fd",
        "1faf1-1f3fc-200d-1faf2-1f3fe",
        "1faf1-1f3fc-200d-1faf2-1f3ff",
        "1faf1-1f3fd-200d-1faf2-1f3fb",
        "1faf1-1f3fd-200d-1faf2-1f3fc",
        "1faf1-1f3fd-200d-1faf2-1f3fe",
        "1faf1-1f3fd-200d-1faf2-1f3ff",
        "1faf1-1f3fe-200d-1faf2-1f3fb",
        "1faf1-1f3fe-200d-1faf2-1f3fc",
        "1faf1-1f3fe-200d-1faf2-1f3fd",
        "1faf1-1f3fe-200d-1faf2-1f3ff",
        "1faf1-1f3ff-200d-1faf2-1f3fb",
        "1faf1-1f3ff-200d-1faf2-1f3fc",
        "1faf1-1f3ff-200d-1faf2-1f3fd",
        "1faf1-1f3ff-200d-1faf2-1f3fe"
      ]
    },
    {
      n: ["pray", "person with folded hands"],
      u: "1f64f",
      v: [
        "1f64f-1f3fb",
        "1f64f-1f3fc",
        "1f64f-1f3fd",
        "1f64f-1f3fe",
        "1f64f-1f3ff"
      ]
    },
    {
      n: ["writing hand"],
      u: "270d-fe0f",
      v: ["270d-1f3fb", "270d-1f3fc", "270d-1f3fd", "270d-1f3fe", "270d-1f3ff"]
    },
    {
      n: ["nail care", "nail polish"],
      u: "1f485",
      v: [
        "1f485-1f3fb",
        "1f485-1f3fc",
        "1f485-1f3fd",
        "1f485-1f3fe",
        "1f485-1f3ff"
      ]
    },
    {
      n: ["selfie"],
      u: "1f933",
      v: [
        "1f933-1f3fb",
        "1f933-1f3fc",
        "1f933-1f3fd",
        "1f933-1f3fe",
        "1f933-1f3ff"
      ]
    },
    {
      n: ["muscle", "flexed biceps"],
      u: "1f4aa",
      v: [
        "1f4aa-1f3fb",
        "1f4aa-1f3fc",
        "1f4aa-1f3fd",
        "1f4aa-1f3fe",
        "1f4aa-1f3ff"
      ]
    },
    { n: ["mechanical arm"], u: "1f9be" },
    { n: ["mechanical leg"], u: "1f9bf" },
    {
      n: ["leg"],
      u: "1f9b5",
      v: [
        "1f9b5-1f3fb",
        "1f9b5-1f3fc",
        "1f9b5-1f3fd",
        "1f9b5-1f3fe",
        "1f9b5-1f3ff"
      ]
    },
    {
      n: ["foot"],
      u: "1f9b6",
      v: [
        "1f9b6-1f3fb",
        "1f9b6-1f3fc",
        "1f9b6-1f3fd",
        "1f9b6-1f3fe",
        "1f9b6-1f3ff"
      ]
    },
    {
      n: ["ear"],
      u: "1f442",
      v: [
        "1f442-1f3fb",
        "1f442-1f3fc",
        "1f442-1f3fd",
        "1f442-1f3fe",
        "1f442-1f3ff"
      ]
    },
    {
      n: ["ear with hearing aid"],
      u: "1f9bb",
      v: [
        "1f9bb-1f3fb",
        "1f9bb-1f3fc",
        "1f9bb-1f3fd",
        "1f9bb-1f3fe",
        "1f9bb-1f3ff"
      ]
    },
    {
      n: ["nose"],
      u: "1f443",
      v: [
        "1f443-1f3fb",
        "1f443-1f3fc",
        "1f443-1f3fd",
        "1f443-1f3fe",
        "1f443-1f3ff"
      ]
    },
    { n: ["brain"], u: "1f9e0" },
    { n: ["anatomical heart"], u: "1fac0" },
    { n: ["lungs"], u: "1fac1" },
    { n: ["tooth"], u: "1f9b7" },
    { n: ["bone"], u: "1f9b4" },
    { n: ["eyes"], u: "1f440" },
    { n: ["eye"], u: "1f441-fe0f" },
    { n: ["tongue"], u: "1f445" },
    { n: ["lips", "mouth"], u: "1f444" },
    { n: ["biting lip"], u: "1fae6" },
    {
      n: ["baby"],
      u: "1f476",
      v: [
        "1f476-1f3fb",
        "1f476-1f3fc",
        "1f476-1f3fd",
        "1f476-1f3fe",
        "1f476-1f3ff"
      ]
    },
    {
      n: ["child"],
      u: "1f9d2",
      v: [
        "1f9d2-1f3fb",
        "1f9d2-1f3fc",
        "1f9d2-1f3fd",
        "1f9d2-1f3fe",
        "1f9d2-1f3ff"
      ]
    },
    {
      n: ["boy"],
      u: "1f466",
      v: [
        "1f466-1f3fb",
        "1f466-1f3fc",
        "1f466-1f3fd",
        "1f466-1f3fe",
        "1f466-1f3ff"
      ]
    },
    {
      n: ["girl"],
      u: "1f467",
      v: [
        "1f467-1f3fb",
        "1f467-1f3fc",
        "1f467-1f3fd",
        "1f467-1f3fe",
        "1f467-1f3ff"
      ]
    },
    {
      n: ["adult"],
      u: "1f9d1",
      v: [
        "1f9d1-1f3fb",
        "1f9d1-1f3fc",
        "1f9d1-1f3fd",
        "1f9d1-1f3fe",
        "1f9d1-1f3ff"
      ]
    },
    {
      n: ["person with blond hair"],
      u: "1f471",
      v: [
        "1f471-1f3fb",
        "1f471-1f3fc",
        "1f471-1f3fd",
        "1f471-1f3fe",
        "1f471-1f3ff"
      ]
    },
    {
      n: ["man"],
      u: "1f468",
      v: [
        "1f468-1f3fb",
        "1f468-1f3fc",
        "1f468-1f3fd",
        "1f468-1f3fe",
        "1f468-1f3ff"
      ]
    },
    {
      n: ["bearded person"],
      u: "1f9d4",
      v: [
        "1f9d4-1f3fb",
        "1f9d4-1f3fc",
        "1f9d4-1f3fd",
        "1f9d4-1f3fe",
        "1f9d4-1f3ff"
      ]
    },
    {
      n: ["man: beard", "man with beard"],
      u: "1f9d4-200d-2642-fe0f",
      v: [
        "1f9d4-1f3fb-200d-2642-fe0f",
        "1f9d4-1f3fc-200d-2642-fe0f",
        "1f9d4-1f3fd-200d-2642-fe0f",
        "1f9d4-1f3fe-200d-2642-fe0f",
        "1f9d4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman: beard", "woman with beard"],
      u: "1f9d4-200d-2640-fe0f",
      v: [
        "1f9d4-1f3fb-200d-2640-fe0f",
        "1f9d4-1f3fc-200d-2640-fe0f",
        "1f9d4-1f3fd-200d-2640-fe0f",
        "1f9d4-1f3fe-200d-2640-fe0f",
        "1f9d4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man: red hair", "red haired man"],
      u: "1f468-200d-1f9b0",
      v: [
        "1f468-1f3fb-200d-1f9b0",
        "1f468-1f3fc-200d-1f9b0",
        "1f468-1f3fd-200d-1f9b0",
        "1f468-1f3fe-200d-1f9b0",
        "1f468-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["man: curly hair", "curly haired man"],
      u: "1f468-200d-1f9b1",
      v: [
        "1f468-1f3fb-200d-1f9b1",
        "1f468-1f3fc-200d-1f9b1",
        "1f468-1f3fd-200d-1f9b1",
        "1f468-1f3fe-200d-1f9b1",
        "1f468-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["man: white hair", "white haired man"],
      u: "1f468-200d-1f9b3",
      v: [
        "1f468-1f3fb-200d-1f9b3",
        "1f468-1f3fc-200d-1f9b3",
        "1f468-1f3fd-200d-1f9b3",
        "1f468-1f3fe-200d-1f9b3",
        "1f468-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["bald man", "man: bald"],
      u: "1f468-200d-1f9b2",
      v: [
        "1f468-1f3fb-200d-1f9b2",
        "1f468-1f3fc-200d-1f9b2",
        "1f468-1f3fd-200d-1f9b2",
        "1f468-1f3fe-200d-1f9b2",
        "1f468-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["woman"],
      u: "1f469",
      v: [
        "1f469-1f3fb",
        "1f469-1f3fc",
        "1f469-1f3fd",
        "1f469-1f3fe",
        "1f469-1f3ff"
      ]
    },
    {
      n: ["woman: red hair", "red haired woman"],
      u: "1f469-200d-1f9b0",
      v: [
        "1f469-1f3fb-200d-1f9b0",
        "1f469-1f3fc-200d-1f9b0",
        "1f469-1f3fd-200d-1f9b0",
        "1f469-1f3fe-200d-1f9b0",
        "1f469-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["person: red hair", "red haired person"],
      u: "1f9d1-200d-1f9b0",
      v: [
        "1f9d1-1f3fb-200d-1f9b0",
        "1f9d1-1f3fc-200d-1f9b0",
        "1f9d1-1f3fd-200d-1f9b0",
        "1f9d1-1f3fe-200d-1f9b0",
        "1f9d1-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["woman: curly hair", "curly haired woman"],
      u: "1f469-200d-1f9b1",
      v: [
        "1f469-1f3fb-200d-1f9b1",
        "1f469-1f3fc-200d-1f9b1",
        "1f469-1f3fd-200d-1f9b1",
        "1f469-1f3fe-200d-1f9b1",
        "1f469-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["person: curly hair", "curly haired person"],
      u: "1f9d1-200d-1f9b1",
      v: [
        "1f9d1-1f3fb-200d-1f9b1",
        "1f9d1-1f3fc-200d-1f9b1",
        "1f9d1-1f3fd-200d-1f9b1",
        "1f9d1-1f3fe-200d-1f9b1",
        "1f9d1-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["woman: white hair", "white haired woman"],
      u: "1f469-200d-1f9b3",
      v: [
        "1f469-1f3fb-200d-1f9b3",
        "1f469-1f3fc-200d-1f9b3",
        "1f469-1f3fd-200d-1f9b3",
        "1f469-1f3fe-200d-1f9b3",
        "1f469-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["person: white hair", "white haired person"],
      u: "1f9d1-200d-1f9b3",
      v: [
        "1f9d1-1f3fb-200d-1f9b3",
        "1f9d1-1f3fc-200d-1f9b3",
        "1f9d1-1f3fd-200d-1f9b3",
        "1f9d1-1f3fe-200d-1f9b3",
        "1f9d1-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["bald woman", "woman: bald"],
      u: "1f469-200d-1f9b2",
      v: [
        "1f469-1f3fb-200d-1f9b2",
        "1f469-1f3fc-200d-1f9b2",
        "1f469-1f3fd-200d-1f9b2",
        "1f469-1f3fe-200d-1f9b2",
        "1f469-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["bald person", "person: bald"],
      u: "1f9d1-200d-1f9b2",
      v: [
        "1f9d1-1f3fb-200d-1f9b2",
        "1f9d1-1f3fc-200d-1f9b2",
        "1f9d1-1f3fd-200d-1f9b2",
        "1f9d1-1f3fe-200d-1f9b2",
        "1f9d1-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["woman: blond hair", "blond-haired-woman"],
      u: "1f471-200d-2640-fe0f",
      v: [
        "1f471-1f3fb-200d-2640-fe0f",
        "1f471-1f3fc-200d-2640-fe0f",
        "1f471-1f3fd-200d-2640-fe0f",
        "1f471-1f3fe-200d-2640-fe0f",
        "1f471-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man: blond hair", "blond-haired-man"],
      u: "1f471-200d-2642-fe0f",
      v: [
        "1f471-1f3fb-200d-2642-fe0f",
        "1f471-1f3fc-200d-2642-fe0f",
        "1f471-1f3fd-200d-2642-fe0f",
        "1f471-1f3fe-200d-2642-fe0f",
        "1f471-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["older adult"],
      u: "1f9d3",
      v: [
        "1f9d3-1f3fb",
        "1f9d3-1f3fc",
        "1f9d3-1f3fd",
        "1f9d3-1f3fe",
        "1f9d3-1f3ff"
      ]
    },
    {
      n: ["older man"],
      u: "1f474",
      v: [
        "1f474-1f3fb",
        "1f474-1f3fc",
        "1f474-1f3fd",
        "1f474-1f3fe",
        "1f474-1f3ff"
      ]
    },
    {
      n: ["older woman"],
      u: "1f475",
      v: [
        "1f475-1f3fb",
        "1f475-1f3fc",
        "1f475-1f3fd",
        "1f475-1f3fe",
        "1f475-1f3ff"
      ]
    },
    {
      n: ["person frowning"],
      u: "1f64d",
      v: [
        "1f64d-1f3fb",
        "1f64d-1f3fc",
        "1f64d-1f3fd",
        "1f64d-1f3fe",
        "1f64d-1f3ff"
      ]
    },
    {
      n: ["man frowning", "man-frowning"],
      u: "1f64d-200d-2642-fe0f",
      v: [
        "1f64d-1f3fb-200d-2642-fe0f",
        "1f64d-1f3fc-200d-2642-fe0f",
        "1f64d-1f3fd-200d-2642-fe0f",
        "1f64d-1f3fe-200d-2642-fe0f",
        "1f64d-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman frowning", "woman-frowning"],
      u: "1f64d-200d-2640-fe0f",
      v: [
        "1f64d-1f3fb-200d-2640-fe0f",
        "1f64d-1f3fc-200d-2640-fe0f",
        "1f64d-1f3fd-200d-2640-fe0f",
        "1f64d-1f3fe-200d-2640-fe0f",
        "1f64d-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with pouting face"],
      u: "1f64e",
      v: [
        "1f64e-1f3fb",
        "1f64e-1f3fc",
        "1f64e-1f3fd",
        "1f64e-1f3fe",
        "1f64e-1f3ff"
      ]
    },
    {
      n: ["man pouting", "man-pouting"],
      u: "1f64e-200d-2642-fe0f",
      v: [
        "1f64e-1f3fb-200d-2642-fe0f",
        "1f64e-1f3fc-200d-2642-fe0f",
        "1f64e-1f3fd-200d-2642-fe0f",
        "1f64e-1f3fe-200d-2642-fe0f",
        "1f64e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman pouting", "woman-pouting"],
      u: "1f64e-200d-2640-fe0f",
      v: [
        "1f64e-1f3fb-200d-2640-fe0f",
        "1f64e-1f3fc-200d-2640-fe0f",
        "1f64e-1f3fd-200d-2640-fe0f",
        "1f64e-1f3fe-200d-2640-fe0f",
        "1f64e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["no good", "face with no good gesture"],
      u: "1f645",
      v: [
        "1f645-1f3fb",
        "1f645-1f3fc",
        "1f645-1f3fd",
        "1f645-1f3fe",
        "1f645-1f3ff"
      ]
    },
    {
      n: ["man gesturing no", "man-gesturing-no"],
      u: "1f645-200d-2642-fe0f",
      v: [
        "1f645-1f3fb-200d-2642-fe0f",
        "1f645-1f3fc-200d-2642-fe0f",
        "1f645-1f3fd-200d-2642-fe0f",
        "1f645-1f3fe-200d-2642-fe0f",
        "1f645-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman gesturing no", "woman-gesturing-no"],
      u: "1f645-200d-2640-fe0f",
      v: [
        "1f645-1f3fb-200d-2640-fe0f",
        "1f645-1f3fc-200d-2640-fe0f",
        "1f645-1f3fd-200d-2640-fe0f",
        "1f645-1f3fe-200d-2640-fe0f",
        "1f645-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["ok woman", "face with ok gesture"],
      u: "1f646",
      v: [
        "1f646-1f3fb",
        "1f646-1f3fc",
        "1f646-1f3fd",
        "1f646-1f3fe",
        "1f646-1f3ff"
      ]
    },
    {
      n: ["man gesturing ok", "man-gesturing-ok"],
      u: "1f646-200d-2642-fe0f",
      v: [
        "1f646-1f3fb-200d-2642-fe0f",
        "1f646-1f3fc-200d-2642-fe0f",
        "1f646-1f3fd-200d-2642-fe0f",
        "1f646-1f3fe-200d-2642-fe0f",
        "1f646-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman gesturing ok", "woman-gesturing-ok"],
      u: "1f646-200d-2640-fe0f",
      v: [
        "1f646-1f3fb-200d-2640-fe0f",
        "1f646-1f3fc-200d-2640-fe0f",
        "1f646-1f3fd-200d-2640-fe0f",
        "1f646-1f3fe-200d-2640-fe0f",
        "1f646-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["information desk person"],
      u: "1f481",
      v: [
        "1f481-1f3fb",
        "1f481-1f3fc",
        "1f481-1f3fd",
        "1f481-1f3fe",
        "1f481-1f3ff"
      ]
    },
    {
      n: ["man tipping hand", "man-tipping-hand"],
      u: "1f481-200d-2642-fe0f",
      v: [
        "1f481-1f3fb-200d-2642-fe0f",
        "1f481-1f3fc-200d-2642-fe0f",
        "1f481-1f3fd-200d-2642-fe0f",
        "1f481-1f3fe-200d-2642-fe0f",
        "1f481-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman tipping hand", "woman-tipping-hand"],
      u: "1f481-200d-2640-fe0f",
      v: [
        "1f481-1f3fb-200d-2640-fe0f",
        "1f481-1f3fc-200d-2640-fe0f",
        "1f481-1f3fd-200d-2640-fe0f",
        "1f481-1f3fe-200d-2640-fe0f",
        "1f481-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["raising hand", "happy person raising one hand"],
      u: "1f64b",
      v: [
        "1f64b-1f3fb",
        "1f64b-1f3fc",
        "1f64b-1f3fd",
        "1f64b-1f3fe",
        "1f64b-1f3ff"
      ]
    },
    {
      n: ["man raising hand", "man-raising-hand"],
      u: "1f64b-200d-2642-fe0f",
      v: [
        "1f64b-1f3fb-200d-2642-fe0f",
        "1f64b-1f3fc-200d-2642-fe0f",
        "1f64b-1f3fd-200d-2642-fe0f",
        "1f64b-1f3fe-200d-2642-fe0f",
        "1f64b-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman raising hand", "woman-raising-hand"],
      u: "1f64b-200d-2640-fe0f",
      v: [
        "1f64b-1f3fb-200d-2640-fe0f",
        "1f64b-1f3fc-200d-2640-fe0f",
        "1f64b-1f3fd-200d-2640-fe0f",
        "1f64b-1f3fe-200d-2640-fe0f",
        "1f64b-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["deaf person"],
      u: "1f9cf",
      v: [
        "1f9cf-1f3fb",
        "1f9cf-1f3fc",
        "1f9cf-1f3fd",
        "1f9cf-1f3fe",
        "1f9cf-1f3ff"
      ]
    },
    {
      n: ["deaf man"],
      u: "1f9cf-200d-2642-fe0f",
      v: [
        "1f9cf-1f3fb-200d-2642-fe0f",
        "1f9cf-1f3fc-200d-2642-fe0f",
        "1f9cf-1f3fd-200d-2642-fe0f",
        "1f9cf-1f3fe-200d-2642-fe0f",
        "1f9cf-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["deaf woman"],
      u: "1f9cf-200d-2640-fe0f",
      v: [
        "1f9cf-1f3fb-200d-2640-fe0f",
        "1f9cf-1f3fc-200d-2640-fe0f",
        "1f9cf-1f3fd-200d-2640-fe0f",
        "1f9cf-1f3fe-200d-2640-fe0f",
        "1f9cf-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bow", "person bowing deeply"],
      u: "1f647",
      v: [
        "1f647-1f3fb",
        "1f647-1f3fc",
        "1f647-1f3fd",
        "1f647-1f3fe",
        "1f647-1f3ff"
      ]
    },
    {
      n: ["man bowing", "man-bowing"],
      u: "1f647-200d-2642-fe0f",
      v: [
        "1f647-1f3fb-200d-2642-fe0f",
        "1f647-1f3fc-200d-2642-fe0f",
        "1f647-1f3fd-200d-2642-fe0f",
        "1f647-1f3fe-200d-2642-fe0f",
        "1f647-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman bowing", "woman-bowing"],
      u: "1f647-200d-2640-fe0f",
      v: [
        "1f647-1f3fb-200d-2640-fe0f",
        "1f647-1f3fc-200d-2640-fe0f",
        "1f647-1f3fd-200d-2640-fe0f",
        "1f647-1f3fe-200d-2640-fe0f",
        "1f647-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["face palm"],
      u: "1f926",
      v: [
        "1f926-1f3fb",
        "1f926-1f3fc",
        "1f926-1f3fd",
        "1f926-1f3fe",
        "1f926-1f3ff"
      ]
    },
    {
      n: ["man facepalming", "man-facepalming"],
      u: "1f926-200d-2642-fe0f",
      v: [
        "1f926-1f3fb-200d-2642-fe0f",
        "1f926-1f3fc-200d-2642-fe0f",
        "1f926-1f3fd-200d-2642-fe0f",
        "1f926-1f3fe-200d-2642-fe0f",
        "1f926-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman facepalming", "woman-facepalming"],
      u: "1f926-200d-2640-fe0f",
      v: [
        "1f926-1f3fb-200d-2640-fe0f",
        "1f926-1f3fc-200d-2640-fe0f",
        "1f926-1f3fd-200d-2640-fe0f",
        "1f926-1f3fe-200d-2640-fe0f",
        "1f926-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["shrug"],
      u: "1f937",
      v: [
        "1f937-1f3fb",
        "1f937-1f3fc",
        "1f937-1f3fd",
        "1f937-1f3fe",
        "1f937-1f3ff"
      ]
    },
    {
      n: ["man shrugging", "man-shrugging"],
      u: "1f937-200d-2642-fe0f",
      v: [
        "1f937-1f3fb-200d-2642-fe0f",
        "1f937-1f3fc-200d-2642-fe0f",
        "1f937-1f3fd-200d-2642-fe0f",
        "1f937-1f3fe-200d-2642-fe0f",
        "1f937-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman shrugging", "woman-shrugging"],
      u: "1f937-200d-2640-fe0f",
      v: [
        "1f937-1f3fb-200d-2640-fe0f",
        "1f937-1f3fc-200d-2640-fe0f",
        "1f937-1f3fd-200d-2640-fe0f",
        "1f937-1f3fe-200d-2640-fe0f",
        "1f937-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["health worker"],
      u: "1f9d1-200d-2695-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2695-fe0f",
        "1f9d1-1f3fc-200d-2695-fe0f",
        "1f9d1-1f3fd-200d-2695-fe0f",
        "1f9d1-1f3fe-200d-2695-fe0f",
        "1f9d1-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["male-doctor", "man health worker"],
      u: "1f468-200d-2695-fe0f",
      v: [
        "1f468-1f3fb-200d-2695-fe0f",
        "1f468-1f3fc-200d-2695-fe0f",
        "1f468-1f3fd-200d-2695-fe0f",
        "1f468-1f3fe-200d-2695-fe0f",
        "1f468-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["female-doctor", "woman health worker"],
      u: "1f469-200d-2695-fe0f",
      v: [
        "1f469-1f3fb-200d-2695-fe0f",
        "1f469-1f3fc-200d-2695-fe0f",
        "1f469-1f3fd-200d-2695-fe0f",
        "1f469-1f3fe-200d-2695-fe0f",
        "1f469-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["student"],
      u: "1f9d1-200d-1f393",
      v: [
        "1f9d1-1f3fb-200d-1f393",
        "1f9d1-1f3fc-200d-1f393",
        "1f9d1-1f3fd-200d-1f393",
        "1f9d1-1f3fe-200d-1f393",
        "1f9d1-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["man student", "male-student"],
      u: "1f468-200d-1f393",
      v: [
        "1f468-1f3fb-200d-1f393",
        "1f468-1f3fc-200d-1f393",
        "1f468-1f3fd-200d-1f393",
        "1f468-1f3fe-200d-1f393",
        "1f468-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["woman student", "female-student"],
      u: "1f469-200d-1f393",
      v: [
        "1f469-1f3fb-200d-1f393",
        "1f469-1f3fc-200d-1f393",
        "1f469-1f3fd-200d-1f393",
        "1f469-1f3fe-200d-1f393",
        "1f469-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["teacher"],
      u: "1f9d1-200d-1f3eb",
      v: [
        "1f9d1-1f3fb-200d-1f3eb",
        "1f9d1-1f3fc-200d-1f3eb",
        "1f9d1-1f3fd-200d-1f3eb",
        "1f9d1-1f3fe-200d-1f3eb",
        "1f9d1-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["man teacher", "male-teacher"],
      u: "1f468-200d-1f3eb",
      v: [
        "1f468-1f3fb-200d-1f3eb",
        "1f468-1f3fc-200d-1f3eb",
        "1f468-1f3fd-200d-1f3eb",
        "1f468-1f3fe-200d-1f3eb",
        "1f468-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["woman teacher", "female-teacher"],
      u: "1f469-200d-1f3eb",
      v: [
        "1f469-1f3fb-200d-1f3eb",
        "1f469-1f3fc-200d-1f3eb",
        "1f469-1f3fd-200d-1f3eb",
        "1f469-1f3fe-200d-1f3eb",
        "1f469-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["judge"],
      u: "1f9d1-200d-2696-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2696-fe0f",
        "1f9d1-1f3fc-200d-2696-fe0f",
        "1f9d1-1f3fd-200d-2696-fe0f",
        "1f9d1-1f3fe-200d-2696-fe0f",
        "1f9d1-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["man judge", "male-judge"],
      u: "1f468-200d-2696-fe0f",
      v: [
        "1f468-1f3fb-200d-2696-fe0f",
        "1f468-1f3fc-200d-2696-fe0f",
        "1f468-1f3fd-200d-2696-fe0f",
        "1f468-1f3fe-200d-2696-fe0f",
        "1f468-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["woman judge", "female-judge"],
      u: "1f469-200d-2696-fe0f",
      v: [
        "1f469-1f3fb-200d-2696-fe0f",
        "1f469-1f3fc-200d-2696-fe0f",
        "1f469-1f3fd-200d-2696-fe0f",
        "1f469-1f3fe-200d-2696-fe0f",
        "1f469-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["farmer"],
      u: "1f9d1-200d-1f33e",
      v: [
        "1f9d1-1f3fb-200d-1f33e",
        "1f9d1-1f3fc-200d-1f33e",
        "1f9d1-1f3fd-200d-1f33e",
        "1f9d1-1f3fe-200d-1f33e",
        "1f9d1-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["man farmer", "male-farmer"],
      u: "1f468-200d-1f33e",
      v: [
        "1f468-1f3fb-200d-1f33e",
        "1f468-1f3fc-200d-1f33e",
        "1f468-1f3fd-200d-1f33e",
        "1f468-1f3fe-200d-1f33e",
        "1f468-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["woman farmer", "female-farmer"],
      u: "1f469-200d-1f33e",
      v: [
        "1f469-1f3fb-200d-1f33e",
        "1f469-1f3fc-200d-1f33e",
        "1f469-1f3fd-200d-1f33e",
        "1f469-1f3fe-200d-1f33e",
        "1f469-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["cook"],
      u: "1f9d1-200d-1f373",
      v: [
        "1f9d1-1f3fb-200d-1f373",
        "1f9d1-1f3fc-200d-1f373",
        "1f9d1-1f3fd-200d-1f373",
        "1f9d1-1f3fe-200d-1f373",
        "1f9d1-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["man cook", "male-cook"],
      u: "1f468-200d-1f373",
      v: [
        "1f468-1f3fb-200d-1f373",
        "1f468-1f3fc-200d-1f373",
        "1f468-1f3fd-200d-1f373",
        "1f468-1f3fe-200d-1f373",
        "1f468-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["woman cook", "female-cook"],
      u: "1f469-200d-1f373",
      v: [
        "1f469-1f3fb-200d-1f373",
        "1f469-1f3fc-200d-1f373",
        "1f469-1f3fd-200d-1f373",
        "1f469-1f3fe-200d-1f373",
        "1f469-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["mechanic"],
      u: "1f9d1-200d-1f527",
      v: [
        "1f9d1-1f3fb-200d-1f527",
        "1f9d1-1f3fc-200d-1f527",
        "1f9d1-1f3fd-200d-1f527",
        "1f9d1-1f3fe-200d-1f527",
        "1f9d1-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["man mechanic", "male-mechanic"],
      u: "1f468-200d-1f527",
      v: [
        "1f468-1f3fb-200d-1f527",
        "1f468-1f3fc-200d-1f527",
        "1f468-1f3fd-200d-1f527",
        "1f468-1f3fe-200d-1f527",
        "1f468-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["woman mechanic", "female-mechanic"],
      u: "1f469-200d-1f527",
      v: [
        "1f469-1f3fb-200d-1f527",
        "1f469-1f3fc-200d-1f527",
        "1f469-1f3fd-200d-1f527",
        "1f469-1f3fe-200d-1f527",
        "1f469-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["factory worker"],
      u: "1f9d1-200d-1f3ed",
      v: [
        "1f9d1-1f3fb-200d-1f3ed",
        "1f9d1-1f3fc-200d-1f3ed",
        "1f9d1-1f3fd-200d-1f3ed",
        "1f9d1-1f3fe-200d-1f3ed",
        "1f9d1-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["man factory worker", "male-factory-worker"],
      u: "1f468-200d-1f3ed",
      v: [
        "1f468-1f3fb-200d-1f3ed",
        "1f468-1f3fc-200d-1f3ed",
        "1f468-1f3fd-200d-1f3ed",
        "1f468-1f3fe-200d-1f3ed",
        "1f468-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["woman factory worker", "female-factory-worker"],
      u: "1f469-200d-1f3ed",
      v: [
        "1f469-1f3fb-200d-1f3ed",
        "1f469-1f3fc-200d-1f3ed",
        "1f469-1f3fd-200d-1f3ed",
        "1f469-1f3fe-200d-1f3ed",
        "1f469-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["office worker"],
      u: "1f9d1-200d-1f4bc",
      v: [
        "1f9d1-1f3fb-200d-1f4bc",
        "1f9d1-1f3fc-200d-1f4bc",
        "1f9d1-1f3fd-200d-1f4bc",
        "1f9d1-1f3fe-200d-1f4bc",
        "1f9d1-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["man office worker", "male-office-worker"],
      u: "1f468-200d-1f4bc",
      v: [
        "1f468-1f3fb-200d-1f4bc",
        "1f468-1f3fc-200d-1f4bc",
        "1f468-1f3fd-200d-1f4bc",
        "1f468-1f3fe-200d-1f4bc",
        "1f468-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["woman office worker", "female-office-worker"],
      u: "1f469-200d-1f4bc",
      v: [
        "1f469-1f3fb-200d-1f4bc",
        "1f469-1f3fc-200d-1f4bc",
        "1f469-1f3fd-200d-1f4bc",
        "1f469-1f3fe-200d-1f4bc",
        "1f469-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["scientist"],
      u: "1f9d1-200d-1f52c",
      v: [
        "1f9d1-1f3fb-200d-1f52c",
        "1f9d1-1f3fc-200d-1f52c",
        "1f9d1-1f3fd-200d-1f52c",
        "1f9d1-1f3fe-200d-1f52c",
        "1f9d1-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["man scientist", "male-scientist"],
      u: "1f468-200d-1f52c",
      v: [
        "1f468-1f3fb-200d-1f52c",
        "1f468-1f3fc-200d-1f52c",
        "1f468-1f3fd-200d-1f52c",
        "1f468-1f3fe-200d-1f52c",
        "1f468-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["woman scientist", "female-scientist"],
      u: "1f469-200d-1f52c",
      v: [
        "1f469-1f3fb-200d-1f52c",
        "1f469-1f3fc-200d-1f52c",
        "1f469-1f3fd-200d-1f52c",
        "1f469-1f3fe-200d-1f52c",
        "1f469-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["technologist"],
      u: "1f9d1-200d-1f4bb",
      v: [
        "1f9d1-1f3fb-200d-1f4bb",
        "1f9d1-1f3fc-200d-1f4bb",
        "1f9d1-1f3fd-200d-1f4bb",
        "1f9d1-1f3fe-200d-1f4bb",
        "1f9d1-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["man technologist", "male-technologist"],
      u: "1f468-200d-1f4bb",
      v: [
        "1f468-1f3fb-200d-1f4bb",
        "1f468-1f3fc-200d-1f4bb",
        "1f468-1f3fd-200d-1f4bb",
        "1f468-1f3fe-200d-1f4bb",
        "1f468-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["woman technologist", "female-technologist"],
      u: "1f469-200d-1f4bb",
      v: [
        "1f469-1f3fb-200d-1f4bb",
        "1f469-1f3fc-200d-1f4bb",
        "1f469-1f3fd-200d-1f4bb",
        "1f469-1f3fe-200d-1f4bb",
        "1f469-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["singer"],
      u: "1f9d1-200d-1f3a4",
      v: [
        "1f9d1-1f3fb-200d-1f3a4",
        "1f9d1-1f3fc-200d-1f3a4",
        "1f9d1-1f3fd-200d-1f3a4",
        "1f9d1-1f3fe-200d-1f3a4",
        "1f9d1-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["man singer", "male-singer"],
      u: "1f468-200d-1f3a4",
      v: [
        "1f468-1f3fb-200d-1f3a4",
        "1f468-1f3fc-200d-1f3a4",
        "1f468-1f3fd-200d-1f3a4",
        "1f468-1f3fe-200d-1f3a4",
        "1f468-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["woman singer", "female-singer"],
      u: "1f469-200d-1f3a4",
      v: [
        "1f469-1f3fb-200d-1f3a4",
        "1f469-1f3fc-200d-1f3a4",
        "1f469-1f3fd-200d-1f3a4",
        "1f469-1f3fe-200d-1f3a4",
        "1f469-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["artist"],
      u: "1f9d1-200d-1f3a8",
      v: [
        "1f9d1-1f3fb-200d-1f3a8",
        "1f9d1-1f3fc-200d-1f3a8",
        "1f9d1-1f3fd-200d-1f3a8",
        "1f9d1-1f3fe-200d-1f3a8",
        "1f9d1-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["man artist", "male-artist"],
      u: "1f468-200d-1f3a8",
      v: [
        "1f468-1f3fb-200d-1f3a8",
        "1f468-1f3fc-200d-1f3a8",
        "1f468-1f3fd-200d-1f3a8",
        "1f468-1f3fe-200d-1f3a8",
        "1f468-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["woman artist", "female-artist"],
      u: "1f469-200d-1f3a8",
      v: [
        "1f469-1f3fb-200d-1f3a8",
        "1f469-1f3fc-200d-1f3a8",
        "1f469-1f3fd-200d-1f3a8",
        "1f469-1f3fe-200d-1f3a8",
        "1f469-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["pilot"],
      u: "1f9d1-200d-2708-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2708-fe0f",
        "1f9d1-1f3fc-200d-2708-fe0f",
        "1f9d1-1f3fd-200d-2708-fe0f",
        "1f9d1-1f3fe-200d-2708-fe0f",
        "1f9d1-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["man pilot", "male-pilot"],
      u: "1f468-200d-2708-fe0f",
      v: [
        "1f468-1f3fb-200d-2708-fe0f",
        "1f468-1f3fc-200d-2708-fe0f",
        "1f468-1f3fd-200d-2708-fe0f",
        "1f468-1f3fe-200d-2708-fe0f",
        "1f468-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["woman pilot", "female-pilot"],
      u: "1f469-200d-2708-fe0f",
      v: [
        "1f469-1f3fb-200d-2708-fe0f",
        "1f469-1f3fc-200d-2708-fe0f",
        "1f469-1f3fd-200d-2708-fe0f",
        "1f469-1f3fe-200d-2708-fe0f",
        "1f469-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["astronaut"],
      u: "1f9d1-200d-1f680",
      v: [
        "1f9d1-1f3fb-200d-1f680",
        "1f9d1-1f3fc-200d-1f680",
        "1f9d1-1f3fd-200d-1f680",
        "1f9d1-1f3fe-200d-1f680",
        "1f9d1-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["man astronaut", "male-astronaut"],
      u: "1f468-200d-1f680",
      v: [
        "1f468-1f3fb-200d-1f680",
        "1f468-1f3fc-200d-1f680",
        "1f468-1f3fd-200d-1f680",
        "1f468-1f3fe-200d-1f680",
        "1f468-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["woman astronaut", "female-astronaut"],
      u: "1f469-200d-1f680",
      v: [
        "1f469-1f3fb-200d-1f680",
        "1f469-1f3fc-200d-1f680",
        "1f469-1f3fd-200d-1f680",
        "1f469-1f3fe-200d-1f680",
        "1f469-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["firefighter"],
      u: "1f9d1-200d-1f692",
      v: [
        "1f9d1-1f3fb-200d-1f692",
        "1f9d1-1f3fc-200d-1f692",
        "1f9d1-1f3fd-200d-1f692",
        "1f9d1-1f3fe-200d-1f692",
        "1f9d1-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["man firefighter", "male-firefighter"],
      u: "1f468-200d-1f692",
      v: [
        "1f468-1f3fb-200d-1f692",
        "1f468-1f3fc-200d-1f692",
        "1f468-1f3fd-200d-1f692",
        "1f468-1f3fe-200d-1f692",
        "1f468-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["woman firefighter", "female-firefighter"],
      u: "1f469-200d-1f692",
      v: [
        "1f469-1f3fb-200d-1f692",
        "1f469-1f3fc-200d-1f692",
        "1f469-1f3fd-200d-1f692",
        "1f469-1f3fe-200d-1f692",
        "1f469-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["cop", "police officer"],
      u: "1f46e",
      v: [
        "1f46e-1f3fb",
        "1f46e-1f3fc",
        "1f46e-1f3fd",
        "1f46e-1f3fe",
        "1f46e-1f3ff"
      ]
    },
    {
      n: ["man police officer", "male-police-officer"],
      u: "1f46e-200d-2642-fe0f",
      v: [
        "1f46e-1f3fb-200d-2642-fe0f",
        "1f46e-1f3fc-200d-2642-fe0f",
        "1f46e-1f3fd-200d-2642-fe0f",
        "1f46e-1f3fe-200d-2642-fe0f",
        "1f46e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman police officer", "female-police-officer"],
      u: "1f46e-200d-2640-fe0f",
      v: [
        "1f46e-1f3fb-200d-2640-fe0f",
        "1f46e-1f3fc-200d-2640-fe0f",
        "1f46e-1f3fd-200d-2640-fe0f",
        "1f46e-1f3fe-200d-2640-fe0f",
        "1f46e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["detective", "sleuth or spy"],
      u: "1f575-fe0f",
      v: [
        "1f575-1f3fb",
        "1f575-1f3fc",
        "1f575-1f3fd",
        "1f575-1f3fe",
        "1f575-1f3ff"
      ]
    },
    {
      n: ["man detective", "male-detective"],
      u: "1f575-fe0f-200d-2642-fe0f",
      v: [
        "1f575-1f3fb-200d-2642-fe0f",
        "1f575-1f3fc-200d-2642-fe0f",
        "1f575-1f3fd-200d-2642-fe0f",
        "1f575-1f3fe-200d-2642-fe0f",
        "1f575-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman detective", "female-detective"],
      u: "1f575-fe0f-200d-2640-fe0f",
      v: [
        "1f575-1f3fb-200d-2640-fe0f",
        "1f575-1f3fc-200d-2640-fe0f",
        "1f575-1f3fd-200d-2640-fe0f",
        "1f575-1f3fe-200d-2640-fe0f",
        "1f575-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["guardsman"],
      u: "1f482",
      v: [
        "1f482-1f3fb",
        "1f482-1f3fc",
        "1f482-1f3fd",
        "1f482-1f3fe",
        "1f482-1f3ff"
      ]
    },
    {
      n: ["man guard", "male-guard"],
      u: "1f482-200d-2642-fe0f",
      v: [
        "1f482-1f3fb-200d-2642-fe0f",
        "1f482-1f3fc-200d-2642-fe0f",
        "1f482-1f3fd-200d-2642-fe0f",
        "1f482-1f3fe-200d-2642-fe0f",
        "1f482-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman guard", "female-guard"],
      u: "1f482-200d-2640-fe0f",
      v: [
        "1f482-1f3fb-200d-2640-fe0f",
        "1f482-1f3fc-200d-2640-fe0f",
        "1f482-1f3fd-200d-2640-fe0f",
        "1f482-1f3fe-200d-2640-fe0f",
        "1f482-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["ninja"],
      u: "1f977",
      v: [
        "1f977-1f3fb",
        "1f977-1f3fc",
        "1f977-1f3fd",
        "1f977-1f3fe",
        "1f977-1f3ff"
      ]
    },
    {
      n: ["construction worker"],
      u: "1f477",
      v: [
        "1f477-1f3fb",
        "1f477-1f3fc",
        "1f477-1f3fd",
        "1f477-1f3fe",
        "1f477-1f3ff"
      ]
    },
    {
      n: ["man construction worker", "male-construction-worker"],
      u: "1f477-200d-2642-fe0f",
      v: [
        "1f477-1f3fb-200d-2642-fe0f",
        "1f477-1f3fc-200d-2642-fe0f",
        "1f477-1f3fd-200d-2642-fe0f",
        "1f477-1f3fe-200d-2642-fe0f",
        "1f477-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman construction worker", "female-construction-worker"],
      u: "1f477-200d-2640-fe0f",
      v: [
        "1f477-1f3fb-200d-2640-fe0f",
        "1f477-1f3fc-200d-2640-fe0f",
        "1f477-1f3fd-200d-2640-fe0f",
        "1f477-1f3fe-200d-2640-fe0f",
        "1f477-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with crown"],
      u: "1fac5",
      v: [
        "1fac5-1f3fb",
        "1fac5-1f3fc",
        "1fac5-1f3fd",
        "1fac5-1f3fe",
        "1fac5-1f3ff"
      ]
    },
    {
      n: ["prince"],
      u: "1f934",
      v: [
        "1f934-1f3fb",
        "1f934-1f3fc",
        "1f934-1f3fd",
        "1f934-1f3fe",
        "1f934-1f3ff"
      ]
    },
    {
      n: ["princess"],
      u: "1f478",
      v: [
        "1f478-1f3fb",
        "1f478-1f3fc",
        "1f478-1f3fd",
        "1f478-1f3fe",
        "1f478-1f3ff"
      ]
    },
    {
      n: ["man with turban"],
      u: "1f473",
      v: [
        "1f473-1f3fb",
        "1f473-1f3fc",
        "1f473-1f3fd",
        "1f473-1f3fe",
        "1f473-1f3ff"
      ]
    },
    {
      n: ["man wearing turban", "man-wearing-turban"],
      u: "1f473-200d-2642-fe0f",
      v: [
        "1f473-1f3fb-200d-2642-fe0f",
        "1f473-1f3fc-200d-2642-fe0f",
        "1f473-1f3fd-200d-2642-fe0f",
        "1f473-1f3fe-200d-2642-fe0f",
        "1f473-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman wearing turban", "woman-wearing-turban"],
      u: "1f473-200d-2640-fe0f",
      v: [
        "1f473-1f3fb-200d-2640-fe0f",
        "1f473-1f3fc-200d-2640-fe0f",
        "1f473-1f3fd-200d-2640-fe0f",
        "1f473-1f3fe-200d-2640-fe0f",
        "1f473-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man with gua pi mao"],
      u: "1f472",
      v: [
        "1f472-1f3fb",
        "1f472-1f3fc",
        "1f472-1f3fd",
        "1f472-1f3fe",
        "1f472-1f3ff"
      ]
    },
    {
      n: ["person with headscarf"],
      u: "1f9d5",
      v: [
        "1f9d5-1f3fb",
        "1f9d5-1f3fc",
        "1f9d5-1f3fd",
        "1f9d5-1f3fe",
        "1f9d5-1f3ff"
      ]
    },
    {
      n: ["man in tuxedo", "person in tuxedo"],
      u: "1f935",
      v: [
        "1f935-1f3fb",
        "1f935-1f3fc",
        "1f935-1f3fd",
        "1f935-1f3fe",
        "1f935-1f3ff"
      ]
    },
    {
      n: ["man in tuxedo"],
      u: "1f935-200d-2642-fe0f",
      v: [
        "1f935-1f3fb-200d-2642-fe0f",
        "1f935-1f3fc-200d-2642-fe0f",
        "1f935-1f3fd-200d-2642-fe0f",
        "1f935-1f3fe-200d-2642-fe0f",
        "1f935-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in tuxedo"],
      u: "1f935-200d-2640-fe0f",
      v: [
        "1f935-1f3fb-200d-2640-fe0f",
        "1f935-1f3fc-200d-2640-fe0f",
        "1f935-1f3fd-200d-2640-fe0f",
        "1f935-1f3fe-200d-2640-fe0f",
        "1f935-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bride with veil"],
      u: "1f470",
      v: [
        "1f470-1f3fb",
        "1f470-1f3fc",
        "1f470-1f3fd",
        "1f470-1f3fe",
        "1f470-1f3ff"
      ]
    },
    {
      n: ["man with veil"],
      u: "1f470-200d-2642-fe0f",
      v: [
        "1f470-1f3fb-200d-2642-fe0f",
        "1f470-1f3fc-200d-2642-fe0f",
        "1f470-1f3fd-200d-2642-fe0f",
        "1f470-1f3fe-200d-2642-fe0f",
        "1f470-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman with veil"],
      u: "1f470-200d-2640-fe0f",
      v: [
        "1f470-1f3fb-200d-2640-fe0f",
        "1f470-1f3fc-200d-2640-fe0f",
        "1f470-1f3fd-200d-2640-fe0f",
        "1f470-1f3fe-200d-2640-fe0f",
        "1f470-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["pregnant woman"],
      u: "1f930",
      v: [
        "1f930-1f3fb",
        "1f930-1f3fc",
        "1f930-1f3fd",
        "1f930-1f3fe",
        "1f930-1f3ff"
      ]
    },
    {
      n: ["pregnant man"],
      u: "1fac3",
      v: [
        "1fac3-1f3fb",
        "1fac3-1f3fc",
        "1fac3-1f3fd",
        "1fac3-1f3fe",
        "1fac3-1f3ff"
      ]
    },
    {
      n: ["pregnant person"],
      u: "1fac4",
      v: [
        "1fac4-1f3fb",
        "1fac4-1f3fc",
        "1fac4-1f3fd",
        "1fac4-1f3fe",
        "1fac4-1f3ff"
      ]
    },
    {
      n: ["breast-feeding"],
      u: "1f931",
      v: [
        "1f931-1f3fb",
        "1f931-1f3fc",
        "1f931-1f3fd",
        "1f931-1f3fe",
        "1f931-1f3ff"
      ]
    },
    {
      n: ["woman feeding baby"],
      u: "1f469-200d-1f37c",
      v: [
        "1f469-1f3fb-200d-1f37c",
        "1f469-1f3fc-200d-1f37c",
        "1f469-1f3fd-200d-1f37c",
        "1f469-1f3fe-200d-1f37c",
        "1f469-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["man feeding baby"],
      u: "1f468-200d-1f37c",
      v: [
        "1f468-1f3fb-200d-1f37c",
        "1f468-1f3fc-200d-1f37c",
        "1f468-1f3fd-200d-1f37c",
        "1f468-1f3fe-200d-1f37c",
        "1f468-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["person feeding baby"],
      u: "1f9d1-200d-1f37c",
      v: [
        "1f9d1-1f3fb-200d-1f37c",
        "1f9d1-1f3fc-200d-1f37c",
        "1f9d1-1f3fd-200d-1f37c",
        "1f9d1-1f3fe-200d-1f37c",
        "1f9d1-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["angel", "baby angel"],
      u: "1f47c",
      v: [
        "1f47c-1f3fb",
        "1f47c-1f3fc",
        "1f47c-1f3fd",
        "1f47c-1f3fe",
        "1f47c-1f3ff"
      ]
    },
    {
      n: ["santa", "father christmas"],
      u: "1f385",
      v: [
        "1f385-1f3fb",
        "1f385-1f3fc",
        "1f385-1f3fd",
        "1f385-1f3fe",
        "1f385-1f3ff"
      ]
    },
    {
      n: ["mrs claus", "mother christmas"],
      u: "1f936",
      v: [
        "1f936-1f3fb",
        "1f936-1f3fc",
        "1f936-1f3fd",
        "1f936-1f3fe",
        "1f936-1f3ff"
      ]
    },
    {
      n: ["mx claus"],
      u: "1f9d1-200d-1f384",
      v: [
        "1f9d1-1f3fb-200d-1f384",
        "1f9d1-1f3fc-200d-1f384",
        "1f9d1-1f3fd-200d-1f384",
        "1f9d1-1f3fe-200d-1f384",
        "1f9d1-1f3ff-200d-1f384"
      ]
    },
    {
      n: ["superhero"],
      u: "1f9b8",
      v: [
        "1f9b8-1f3fb",
        "1f9b8-1f3fc",
        "1f9b8-1f3fd",
        "1f9b8-1f3fe",
        "1f9b8-1f3ff"
      ]
    },
    {
      n: ["man superhero", "male superhero"],
      u: "1f9b8-200d-2642-fe0f",
      v: [
        "1f9b8-1f3fb-200d-2642-fe0f",
        "1f9b8-1f3fc-200d-2642-fe0f",
        "1f9b8-1f3fd-200d-2642-fe0f",
        "1f9b8-1f3fe-200d-2642-fe0f",
        "1f9b8-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman superhero", "female superhero"],
      u: "1f9b8-200d-2640-fe0f",
      v: [
        "1f9b8-1f3fb-200d-2640-fe0f",
        "1f9b8-1f3fc-200d-2640-fe0f",
        "1f9b8-1f3fd-200d-2640-fe0f",
        "1f9b8-1f3fe-200d-2640-fe0f",
        "1f9b8-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["supervillain"],
      u: "1f9b9",
      v: [
        "1f9b9-1f3fb",
        "1f9b9-1f3fc",
        "1f9b9-1f3fd",
        "1f9b9-1f3fe",
        "1f9b9-1f3ff"
      ]
    },
    {
      n: ["man supervillain", "male supervillain"],
      u: "1f9b9-200d-2642-fe0f",
      v: [
        "1f9b9-1f3fb-200d-2642-fe0f",
        "1f9b9-1f3fc-200d-2642-fe0f",
        "1f9b9-1f3fd-200d-2642-fe0f",
        "1f9b9-1f3fe-200d-2642-fe0f",
        "1f9b9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman supervillain", "female supervillain"],
      u: "1f9b9-200d-2640-fe0f",
      v: [
        "1f9b9-1f3fb-200d-2640-fe0f",
        "1f9b9-1f3fc-200d-2640-fe0f",
        "1f9b9-1f3fd-200d-2640-fe0f",
        "1f9b9-1f3fe-200d-2640-fe0f",
        "1f9b9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["mage"],
      u: "1f9d9",
      v: [
        "1f9d9-1f3fb",
        "1f9d9-1f3fc",
        "1f9d9-1f3fd",
        "1f9d9-1f3fe",
        "1f9d9-1f3ff"
      ]
    },
    {
      n: ["man mage", "male mage"],
      u: "1f9d9-200d-2642-fe0f",
      v: [
        "1f9d9-1f3fb-200d-2642-fe0f",
        "1f9d9-1f3fc-200d-2642-fe0f",
        "1f9d9-1f3fd-200d-2642-fe0f",
        "1f9d9-1f3fe-200d-2642-fe0f",
        "1f9d9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman mage", "female mage"],
      u: "1f9d9-200d-2640-fe0f",
      v: [
        "1f9d9-1f3fb-200d-2640-fe0f",
        "1f9d9-1f3fc-200d-2640-fe0f",
        "1f9d9-1f3fd-200d-2640-fe0f",
        "1f9d9-1f3fe-200d-2640-fe0f",
        "1f9d9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["fairy"],
      u: "1f9da",
      v: [
        "1f9da-1f3fb",
        "1f9da-1f3fc",
        "1f9da-1f3fd",
        "1f9da-1f3fe",
        "1f9da-1f3ff"
      ]
    },
    {
      n: ["man fairy", "male fairy"],
      u: "1f9da-200d-2642-fe0f",
      v: [
        "1f9da-1f3fb-200d-2642-fe0f",
        "1f9da-1f3fc-200d-2642-fe0f",
        "1f9da-1f3fd-200d-2642-fe0f",
        "1f9da-1f3fe-200d-2642-fe0f",
        "1f9da-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman fairy", "female fairy"],
      u: "1f9da-200d-2640-fe0f",
      v: [
        "1f9da-1f3fb-200d-2640-fe0f",
        "1f9da-1f3fc-200d-2640-fe0f",
        "1f9da-1f3fd-200d-2640-fe0f",
        "1f9da-1f3fe-200d-2640-fe0f",
        "1f9da-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["vampire"],
      u: "1f9db",
      v: [
        "1f9db-1f3fb",
        "1f9db-1f3fc",
        "1f9db-1f3fd",
        "1f9db-1f3fe",
        "1f9db-1f3ff"
      ]
    },
    {
      n: ["man vampire", "male vampire"],
      u: "1f9db-200d-2642-fe0f",
      v: [
        "1f9db-1f3fb-200d-2642-fe0f",
        "1f9db-1f3fc-200d-2642-fe0f",
        "1f9db-1f3fd-200d-2642-fe0f",
        "1f9db-1f3fe-200d-2642-fe0f",
        "1f9db-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman vampire", "female vampire"],
      u: "1f9db-200d-2640-fe0f",
      v: [
        "1f9db-1f3fb-200d-2640-fe0f",
        "1f9db-1f3fc-200d-2640-fe0f",
        "1f9db-1f3fd-200d-2640-fe0f",
        "1f9db-1f3fe-200d-2640-fe0f",
        "1f9db-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["merperson"],
      u: "1f9dc",
      v: [
        "1f9dc-1f3fb",
        "1f9dc-1f3fc",
        "1f9dc-1f3fd",
        "1f9dc-1f3fe",
        "1f9dc-1f3ff"
      ]
    },
    {
      n: ["merman"],
      u: "1f9dc-200d-2642-fe0f",
      v: [
        "1f9dc-1f3fb-200d-2642-fe0f",
        "1f9dc-1f3fc-200d-2642-fe0f",
        "1f9dc-1f3fd-200d-2642-fe0f",
        "1f9dc-1f3fe-200d-2642-fe0f",
        "1f9dc-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["mermaid"],
      u: "1f9dc-200d-2640-fe0f",
      v: [
        "1f9dc-1f3fb-200d-2640-fe0f",
        "1f9dc-1f3fc-200d-2640-fe0f",
        "1f9dc-1f3fd-200d-2640-fe0f",
        "1f9dc-1f3fe-200d-2640-fe0f",
        "1f9dc-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["elf"],
      u: "1f9dd",
      v: [
        "1f9dd-1f3fb",
        "1f9dd-1f3fc",
        "1f9dd-1f3fd",
        "1f9dd-1f3fe",
        "1f9dd-1f3ff"
      ]
    },
    {
      n: ["man elf", "male elf"],
      u: "1f9dd-200d-2642-fe0f",
      v: [
        "1f9dd-1f3fb-200d-2642-fe0f",
        "1f9dd-1f3fc-200d-2642-fe0f",
        "1f9dd-1f3fd-200d-2642-fe0f",
        "1f9dd-1f3fe-200d-2642-fe0f",
        "1f9dd-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman elf", "female elf"],
      u: "1f9dd-200d-2640-fe0f",
      v: [
        "1f9dd-1f3fb-200d-2640-fe0f",
        "1f9dd-1f3fc-200d-2640-fe0f",
        "1f9dd-1f3fd-200d-2640-fe0f",
        "1f9dd-1f3fe-200d-2640-fe0f",
        "1f9dd-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["genie"], u: "1f9de" },
    { n: ["man genie", "male genie"], u: "1f9de-200d-2642-fe0f" },
    { n: ["woman genie", "female genie"], u: "1f9de-200d-2640-fe0f" },
    { n: ["zombie"], u: "1f9df" },
    { n: ["man zombie", "male zombie"], u: "1f9df-200d-2642-fe0f" },
    { n: ["woman zombie", "female zombie"], u: "1f9df-200d-2640-fe0f" },
    { n: ["troll"], u: "1f9cc" },
    {
      n: ["massage", "face massage"],
      u: "1f486",
      v: [
        "1f486-1f3fb",
        "1f486-1f3fc",
        "1f486-1f3fd",
        "1f486-1f3fe",
        "1f486-1f3ff"
      ]
    },
    {
      n: ["man getting massage", "man-getting-massage"],
      u: "1f486-200d-2642-fe0f",
      v: [
        "1f486-1f3fb-200d-2642-fe0f",
        "1f486-1f3fc-200d-2642-fe0f",
        "1f486-1f3fd-200d-2642-fe0f",
        "1f486-1f3fe-200d-2642-fe0f",
        "1f486-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman getting massage", "woman-getting-massage"],
      u: "1f486-200d-2640-fe0f",
      v: [
        "1f486-1f3fb-200d-2640-fe0f",
        "1f486-1f3fc-200d-2640-fe0f",
        "1f486-1f3fd-200d-2640-fe0f",
        "1f486-1f3fe-200d-2640-fe0f",
        "1f486-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["haircut"],
      u: "1f487",
      v: [
        "1f487-1f3fb",
        "1f487-1f3fc",
        "1f487-1f3fd",
        "1f487-1f3fe",
        "1f487-1f3ff"
      ]
    },
    {
      n: ["man getting haircut", "man-getting-haircut"],
      u: "1f487-200d-2642-fe0f",
      v: [
        "1f487-1f3fb-200d-2642-fe0f",
        "1f487-1f3fc-200d-2642-fe0f",
        "1f487-1f3fd-200d-2642-fe0f",
        "1f487-1f3fe-200d-2642-fe0f",
        "1f487-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman getting haircut", "woman-getting-haircut"],
      u: "1f487-200d-2640-fe0f",
      v: [
        "1f487-1f3fb-200d-2640-fe0f",
        "1f487-1f3fc-200d-2640-fe0f",
        "1f487-1f3fd-200d-2640-fe0f",
        "1f487-1f3fe-200d-2640-fe0f",
        "1f487-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["walking", "pedestrian"],
      u: "1f6b6",
      v: [
        "1f6b6-1f3fb",
        "1f6b6-1f3fc",
        "1f6b6-1f3fd",
        "1f6b6-1f3fe",
        "1f6b6-1f3ff"
      ]
    },
    {
      n: ["man walking", "man-walking"],
      u: "1f6b6-200d-2642-fe0f",
      v: [
        "1f6b6-1f3fb-200d-2642-fe0f",
        "1f6b6-1f3fc-200d-2642-fe0f",
        "1f6b6-1f3fd-200d-2642-fe0f",
        "1f6b6-1f3fe-200d-2642-fe0f",
        "1f6b6-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman walking", "woman-walking"],
      u: "1f6b6-200d-2640-fe0f",
      v: [
        "1f6b6-1f3fb-200d-2640-fe0f",
        "1f6b6-1f3fc-200d-2640-fe0f",
        "1f6b6-1f3fd-200d-2640-fe0f",
        "1f6b6-1f3fe-200d-2640-fe0f",
        "1f6b6-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["standing person"],
      u: "1f9cd",
      v: [
        "1f9cd-1f3fb",
        "1f9cd-1f3fc",
        "1f9cd-1f3fd",
        "1f9cd-1f3fe",
        "1f9cd-1f3ff"
      ]
    },
    {
      n: ["man standing"],
      u: "1f9cd-200d-2642-fe0f",
      v: [
        "1f9cd-1f3fb-200d-2642-fe0f",
        "1f9cd-1f3fc-200d-2642-fe0f",
        "1f9cd-1f3fd-200d-2642-fe0f",
        "1f9cd-1f3fe-200d-2642-fe0f",
        "1f9cd-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman standing"],
      u: "1f9cd-200d-2640-fe0f",
      v: [
        "1f9cd-1f3fb-200d-2640-fe0f",
        "1f9cd-1f3fc-200d-2640-fe0f",
        "1f9cd-1f3fd-200d-2640-fe0f",
        "1f9cd-1f3fe-200d-2640-fe0f",
        "1f9cd-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["kneeling person"],
      u: "1f9ce",
      v: [
        "1f9ce-1f3fb",
        "1f9ce-1f3fc",
        "1f9ce-1f3fd",
        "1f9ce-1f3fe",
        "1f9ce-1f3ff"
      ]
    },
    {
      n: ["man kneeling"],
      u: "1f9ce-200d-2642-fe0f",
      v: [
        "1f9ce-1f3fb-200d-2642-fe0f",
        "1f9ce-1f3fc-200d-2642-fe0f",
        "1f9ce-1f3fd-200d-2642-fe0f",
        "1f9ce-1f3fe-200d-2642-fe0f",
        "1f9ce-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman kneeling"],
      u: "1f9ce-200d-2640-fe0f",
      v: [
        "1f9ce-1f3fb-200d-2640-fe0f",
        "1f9ce-1f3fc-200d-2640-fe0f",
        "1f9ce-1f3fd-200d-2640-fe0f",
        "1f9ce-1f3fe-200d-2640-fe0f",
        "1f9ce-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with white cane", "person with probing cane"],
      u: "1f9d1-200d-1f9af",
      v: [
        "1f9d1-1f3fb-200d-1f9af",
        "1f9d1-1f3fc-200d-1f9af",
        "1f9d1-1f3fd-200d-1f9af",
        "1f9d1-1f3fe-200d-1f9af",
        "1f9d1-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["man with white cane", "man with probing cane"],
      u: "1f468-200d-1f9af",
      v: [
        "1f468-1f3fb-200d-1f9af",
        "1f468-1f3fc-200d-1f9af",
        "1f468-1f3fd-200d-1f9af",
        "1f468-1f3fe-200d-1f9af",
        "1f468-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["woman with white cane", "woman with probing cane"],
      u: "1f469-200d-1f9af",
      v: [
        "1f469-1f3fb-200d-1f9af",
        "1f469-1f3fc-200d-1f9af",
        "1f469-1f3fd-200d-1f9af",
        "1f469-1f3fe-200d-1f9af",
        "1f469-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["person in motorized wheelchair"],
      u: "1f9d1-200d-1f9bc",
      v: [
        "1f9d1-1f3fb-200d-1f9bc",
        "1f9d1-1f3fc-200d-1f9bc",
        "1f9d1-1f3fd-200d-1f9bc",
        "1f9d1-1f3fe-200d-1f9bc",
        "1f9d1-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["man in motorized wheelchair"],
      u: "1f468-200d-1f9bc",
      v: [
        "1f468-1f3fb-200d-1f9bc",
        "1f468-1f3fc-200d-1f9bc",
        "1f468-1f3fd-200d-1f9bc",
        "1f468-1f3fe-200d-1f9bc",
        "1f468-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["woman in motorized wheelchair"],
      u: "1f469-200d-1f9bc",
      v: [
        "1f469-1f3fb-200d-1f9bc",
        "1f469-1f3fc-200d-1f9bc",
        "1f469-1f3fd-200d-1f9bc",
        "1f469-1f3fe-200d-1f9bc",
        "1f469-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["person in manual wheelchair"],
      u: "1f9d1-200d-1f9bd",
      v: [
        "1f9d1-1f3fb-200d-1f9bd",
        "1f9d1-1f3fc-200d-1f9bd",
        "1f9d1-1f3fd-200d-1f9bd",
        "1f9d1-1f3fe-200d-1f9bd",
        "1f9d1-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["man in manual wheelchair"],
      u: "1f468-200d-1f9bd",
      v: [
        "1f468-1f3fb-200d-1f9bd",
        "1f468-1f3fc-200d-1f9bd",
        "1f468-1f3fd-200d-1f9bd",
        "1f468-1f3fe-200d-1f9bd",
        "1f468-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["woman in manual wheelchair"],
      u: "1f469-200d-1f9bd",
      v: [
        "1f469-1f3fb-200d-1f9bd",
        "1f469-1f3fc-200d-1f9bd",
        "1f469-1f3fd-200d-1f9bd",
        "1f469-1f3fe-200d-1f9bd",
        "1f469-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["runner", "running"],
      u: "1f3c3",
      v: [
        "1f3c3-1f3fb",
        "1f3c3-1f3fc",
        "1f3c3-1f3fd",
        "1f3c3-1f3fe",
        "1f3c3-1f3ff"
      ]
    },
    {
      n: ["man running", "man-running"],
      u: "1f3c3-200d-2642-fe0f",
      v: [
        "1f3c3-1f3fb-200d-2642-fe0f",
        "1f3c3-1f3fc-200d-2642-fe0f",
        "1f3c3-1f3fd-200d-2642-fe0f",
        "1f3c3-1f3fe-200d-2642-fe0f",
        "1f3c3-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman running", "woman-running"],
      u: "1f3c3-200d-2640-fe0f",
      v: [
        "1f3c3-1f3fb-200d-2640-fe0f",
        "1f3c3-1f3fc-200d-2640-fe0f",
        "1f3c3-1f3fd-200d-2640-fe0f",
        "1f3c3-1f3fe-200d-2640-fe0f",
        "1f3c3-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["dancer"],
      u: "1f483",
      v: [
        "1f483-1f3fb",
        "1f483-1f3fc",
        "1f483-1f3fd",
        "1f483-1f3fe",
        "1f483-1f3ff"
      ]
    },
    {
      n: ["man dancing"],
      u: "1f57a",
      v: [
        "1f57a-1f3fb",
        "1f57a-1f3fc",
        "1f57a-1f3fd",
        "1f57a-1f3fe",
        "1f57a-1f3ff"
      ]
    },
    {
      n: ["person in suit levitating", "man in business suit levitating"],
      u: "1f574-fe0f",
      v: [
        "1f574-1f3fb",
        "1f574-1f3fc",
        "1f574-1f3fd",
        "1f574-1f3fe",
        "1f574-1f3ff"
      ]
    },
    { n: ["dancers", "woman with bunny ears"], u: "1f46f" },
    {
      n: [
        "men with bunny ears",
        "men-with-bunny-ears-partying",
        "man-with-bunny-ears-partying"
      ],
      u: "1f46f-200d-2642-fe0f"
    },
    {
      n: [
        "women with bunny ears",
        "women-with-bunny-ears-partying",
        "woman-with-bunny-ears-partying"
      ],
      u: "1f46f-200d-2640-fe0f"
    },
    {
      n: ["person in steamy room"],
      u: "1f9d6",
      v: [
        "1f9d6-1f3fb",
        "1f9d6-1f3fc",
        "1f9d6-1f3fd",
        "1f9d6-1f3fe",
        "1f9d6-1f3ff"
      ]
    },
    {
      n: ["man in steamy room"],
      u: "1f9d6-200d-2642-fe0f",
      v: [
        "1f9d6-1f3fb-200d-2642-fe0f",
        "1f9d6-1f3fc-200d-2642-fe0f",
        "1f9d6-1f3fd-200d-2642-fe0f",
        "1f9d6-1f3fe-200d-2642-fe0f",
        "1f9d6-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in steamy room"],
      u: "1f9d6-200d-2640-fe0f",
      v: [
        "1f9d6-1f3fb-200d-2640-fe0f",
        "1f9d6-1f3fc-200d-2640-fe0f",
        "1f9d6-1f3fd-200d-2640-fe0f",
        "1f9d6-1f3fe-200d-2640-fe0f",
        "1f9d6-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person climbing"],
      u: "1f9d7",
      v: [
        "1f9d7-1f3fb",
        "1f9d7-1f3fc",
        "1f9d7-1f3fd",
        "1f9d7-1f3fe",
        "1f9d7-1f3ff"
      ]
    },
    {
      n: ["man climbing"],
      u: "1f9d7-200d-2642-fe0f",
      v: [
        "1f9d7-1f3fb-200d-2642-fe0f",
        "1f9d7-1f3fc-200d-2642-fe0f",
        "1f9d7-1f3fd-200d-2642-fe0f",
        "1f9d7-1f3fe-200d-2642-fe0f",
        "1f9d7-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman climbing"],
      u: "1f9d7-200d-2640-fe0f",
      v: [
        "1f9d7-1f3fb-200d-2640-fe0f",
        "1f9d7-1f3fc-200d-2640-fe0f",
        "1f9d7-1f3fd-200d-2640-fe0f",
        "1f9d7-1f3fe-200d-2640-fe0f",
        "1f9d7-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["fencer"], u: "1f93a" },
    {
      n: ["horse racing"],
      u: "1f3c7",
      v: [
        "1f3c7-1f3fb",
        "1f3c7-1f3fc",
        "1f3c7-1f3fd",
        "1f3c7-1f3fe",
        "1f3c7-1f3ff"
      ]
    },
    { n: ["skier"], u: "26f7-fe0f" },
    {
      n: ["snowboarder"],
      u: "1f3c2",
      v: [
        "1f3c2-1f3fb",
        "1f3c2-1f3fc",
        "1f3c2-1f3fd",
        "1f3c2-1f3fe",
        "1f3c2-1f3ff"
      ]
    },
    {
      n: ["golfer", "person golfing"],
      u: "1f3cc-fe0f",
      v: [
        "1f3cc-1f3fb",
        "1f3cc-1f3fc",
        "1f3cc-1f3fd",
        "1f3cc-1f3fe",
        "1f3cc-1f3ff"
      ]
    },
    {
      n: ["man golfing", "man-golfing"],
      u: "1f3cc-fe0f-200d-2642-fe0f",
      v: [
        "1f3cc-1f3fb-200d-2642-fe0f",
        "1f3cc-1f3fc-200d-2642-fe0f",
        "1f3cc-1f3fd-200d-2642-fe0f",
        "1f3cc-1f3fe-200d-2642-fe0f",
        "1f3cc-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman golfing", "woman-golfing"],
      u: "1f3cc-fe0f-200d-2640-fe0f",
      v: [
        "1f3cc-1f3fb-200d-2640-fe0f",
        "1f3cc-1f3fc-200d-2640-fe0f",
        "1f3cc-1f3fd-200d-2640-fe0f",
        "1f3cc-1f3fe-200d-2640-fe0f",
        "1f3cc-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["surfer"],
      u: "1f3c4",
      v: [
        "1f3c4-1f3fb",
        "1f3c4-1f3fc",
        "1f3c4-1f3fd",
        "1f3c4-1f3fe",
        "1f3c4-1f3ff"
      ]
    },
    {
      n: ["man surfing", "man-surfing"],
      u: "1f3c4-200d-2642-fe0f",
      v: [
        "1f3c4-1f3fb-200d-2642-fe0f",
        "1f3c4-1f3fc-200d-2642-fe0f",
        "1f3c4-1f3fd-200d-2642-fe0f",
        "1f3c4-1f3fe-200d-2642-fe0f",
        "1f3c4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman surfing", "woman-surfing"],
      u: "1f3c4-200d-2640-fe0f",
      v: [
        "1f3c4-1f3fb-200d-2640-fe0f",
        "1f3c4-1f3fc-200d-2640-fe0f",
        "1f3c4-1f3fd-200d-2640-fe0f",
        "1f3c4-1f3fe-200d-2640-fe0f",
        "1f3c4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["rowboat"],
      u: "1f6a3",
      v: [
        "1f6a3-1f3fb",
        "1f6a3-1f3fc",
        "1f6a3-1f3fd",
        "1f6a3-1f3fe",
        "1f6a3-1f3ff"
      ]
    },
    {
      n: ["man rowing boat", "man-rowing-boat"],
      u: "1f6a3-200d-2642-fe0f",
      v: [
        "1f6a3-1f3fb-200d-2642-fe0f",
        "1f6a3-1f3fc-200d-2642-fe0f",
        "1f6a3-1f3fd-200d-2642-fe0f",
        "1f6a3-1f3fe-200d-2642-fe0f",
        "1f6a3-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman rowing boat", "woman-rowing-boat"],
      u: "1f6a3-200d-2640-fe0f",
      v: [
        "1f6a3-1f3fb-200d-2640-fe0f",
        "1f6a3-1f3fc-200d-2640-fe0f",
        "1f6a3-1f3fd-200d-2640-fe0f",
        "1f6a3-1f3fe-200d-2640-fe0f",
        "1f6a3-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["swimmer"],
      u: "1f3ca",
      v: [
        "1f3ca-1f3fb",
        "1f3ca-1f3fc",
        "1f3ca-1f3fd",
        "1f3ca-1f3fe",
        "1f3ca-1f3ff"
      ]
    },
    {
      n: ["man swimming", "man-swimming"],
      u: "1f3ca-200d-2642-fe0f",
      v: [
        "1f3ca-1f3fb-200d-2642-fe0f",
        "1f3ca-1f3fc-200d-2642-fe0f",
        "1f3ca-1f3fd-200d-2642-fe0f",
        "1f3ca-1f3fe-200d-2642-fe0f",
        "1f3ca-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman swimming", "woman-swimming"],
      u: "1f3ca-200d-2640-fe0f",
      v: [
        "1f3ca-1f3fb-200d-2640-fe0f",
        "1f3ca-1f3fc-200d-2640-fe0f",
        "1f3ca-1f3fd-200d-2640-fe0f",
        "1f3ca-1f3fe-200d-2640-fe0f",
        "1f3ca-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with ball", "person bouncing ball"],
      u: "26f9-fe0f",
      v: ["26f9-1f3fb", "26f9-1f3fc", "26f9-1f3fd", "26f9-1f3fe", "26f9-1f3ff"]
    },
    {
      n: ["man bouncing ball", "man-bouncing-ball"],
      u: "26f9-fe0f-200d-2642-fe0f",
      v: [
        "26f9-1f3fb-200d-2642-fe0f",
        "26f9-1f3fc-200d-2642-fe0f",
        "26f9-1f3fd-200d-2642-fe0f",
        "26f9-1f3fe-200d-2642-fe0f",
        "26f9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman bouncing ball", "woman-bouncing-ball"],
      u: "26f9-fe0f-200d-2640-fe0f",
      v: [
        "26f9-1f3fb-200d-2640-fe0f",
        "26f9-1f3fc-200d-2640-fe0f",
        "26f9-1f3fd-200d-2640-fe0f",
        "26f9-1f3fe-200d-2640-fe0f",
        "26f9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["weight lifter", "person lifting weights"],
      u: "1f3cb-fe0f",
      v: [
        "1f3cb-1f3fb",
        "1f3cb-1f3fc",
        "1f3cb-1f3fd",
        "1f3cb-1f3fe",
        "1f3cb-1f3ff"
      ]
    },
    {
      n: ["man lifting weights", "man-lifting-weights"],
      u: "1f3cb-fe0f-200d-2642-fe0f",
      v: [
        "1f3cb-1f3fb-200d-2642-fe0f",
        "1f3cb-1f3fc-200d-2642-fe0f",
        "1f3cb-1f3fd-200d-2642-fe0f",
        "1f3cb-1f3fe-200d-2642-fe0f",
        "1f3cb-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman lifting weights", "woman-lifting-weights"],
      u: "1f3cb-fe0f-200d-2640-fe0f",
      v: [
        "1f3cb-1f3fb-200d-2640-fe0f",
        "1f3cb-1f3fc-200d-2640-fe0f",
        "1f3cb-1f3fd-200d-2640-fe0f",
        "1f3cb-1f3fe-200d-2640-fe0f",
        "1f3cb-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bicyclist"],
      u: "1f6b4",
      v: [
        "1f6b4-1f3fb",
        "1f6b4-1f3fc",
        "1f6b4-1f3fd",
        "1f6b4-1f3fe",
        "1f6b4-1f3ff"
      ]
    },
    {
      n: ["man biking", "man-biking"],
      u: "1f6b4-200d-2642-fe0f",
      v: [
        "1f6b4-1f3fb-200d-2642-fe0f",
        "1f6b4-1f3fc-200d-2642-fe0f",
        "1f6b4-1f3fd-200d-2642-fe0f",
        "1f6b4-1f3fe-200d-2642-fe0f",
        "1f6b4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman biking", "woman-biking"],
      u: "1f6b4-200d-2640-fe0f",
      v: [
        "1f6b4-1f3fb-200d-2640-fe0f",
        "1f6b4-1f3fc-200d-2640-fe0f",
        "1f6b4-1f3fd-200d-2640-fe0f",
        "1f6b4-1f3fe-200d-2640-fe0f",
        "1f6b4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["mountain bicyclist"],
      u: "1f6b5",
      v: [
        "1f6b5-1f3fb",
        "1f6b5-1f3fc",
        "1f6b5-1f3fd",
        "1f6b5-1f3fe",
        "1f6b5-1f3ff"
      ]
    },
    {
      n: ["man mountain biking", "man-mountain-biking"],
      u: "1f6b5-200d-2642-fe0f",
      v: [
        "1f6b5-1f3fb-200d-2642-fe0f",
        "1f6b5-1f3fc-200d-2642-fe0f",
        "1f6b5-1f3fd-200d-2642-fe0f",
        "1f6b5-1f3fe-200d-2642-fe0f",
        "1f6b5-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman mountain biking", "woman-mountain-biking"],
      u: "1f6b5-200d-2640-fe0f",
      v: [
        "1f6b5-1f3fb-200d-2640-fe0f",
        "1f6b5-1f3fc-200d-2640-fe0f",
        "1f6b5-1f3fd-200d-2640-fe0f",
        "1f6b5-1f3fe-200d-2640-fe0f",
        "1f6b5-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person doing cartwheel"],
      u: "1f938",
      v: [
        "1f938-1f3fb",
        "1f938-1f3fc",
        "1f938-1f3fd",
        "1f938-1f3fe",
        "1f938-1f3ff"
      ]
    },
    {
      n: ["man cartwheeling", "man-cartwheeling"],
      u: "1f938-200d-2642-fe0f",
      v: [
        "1f938-1f3fb-200d-2642-fe0f",
        "1f938-1f3fc-200d-2642-fe0f",
        "1f938-1f3fd-200d-2642-fe0f",
        "1f938-1f3fe-200d-2642-fe0f",
        "1f938-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman cartwheeling", "woman-cartwheeling"],
      u: "1f938-200d-2640-fe0f",
      v: [
        "1f938-1f3fb-200d-2640-fe0f",
        "1f938-1f3fc-200d-2640-fe0f",
        "1f938-1f3fd-200d-2640-fe0f",
        "1f938-1f3fe-200d-2640-fe0f",
        "1f938-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["wrestlers"], u: "1f93c" },
    { n: ["men wrestling", "man-wrestling"], u: "1f93c-200d-2642-fe0f" },
    { n: ["women wrestling", "woman-wrestling"], u: "1f93c-200d-2640-fe0f" },
    {
      n: ["water polo"],
      u: "1f93d",
      v: [
        "1f93d-1f3fb",
        "1f93d-1f3fc",
        "1f93d-1f3fd",
        "1f93d-1f3fe",
        "1f93d-1f3ff"
      ]
    },
    {
      n: ["man playing water polo", "man-playing-water-polo"],
      u: "1f93d-200d-2642-fe0f",
      v: [
        "1f93d-1f3fb-200d-2642-fe0f",
        "1f93d-1f3fc-200d-2642-fe0f",
        "1f93d-1f3fd-200d-2642-fe0f",
        "1f93d-1f3fe-200d-2642-fe0f",
        "1f93d-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman playing water polo", "woman-playing-water-polo"],
      u: "1f93d-200d-2640-fe0f",
      v: [
        "1f93d-1f3fb-200d-2640-fe0f",
        "1f93d-1f3fc-200d-2640-fe0f",
        "1f93d-1f3fd-200d-2640-fe0f",
        "1f93d-1f3fe-200d-2640-fe0f",
        "1f93d-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["handball"],
      u: "1f93e",
      v: [
        "1f93e-1f3fb",
        "1f93e-1f3fc",
        "1f93e-1f3fd",
        "1f93e-1f3fe",
        "1f93e-1f3ff"
      ]
    },
    {
      n: ["man playing handball", "man-playing-handball"],
      u: "1f93e-200d-2642-fe0f",
      v: [
        "1f93e-1f3fb-200d-2642-fe0f",
        "1f93e-1f3fc-200d-2642-fe0f",
        "1f93e-1f3fd-200d-2642-fe0f",
        "1f93e-1f3fe-200d-2642-fe0f",
        "1f93e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman playing handball", "woman-playing-handball"],
      u: "1f93e-200d-2640-fe0f",
      v: [
        "1f93e-1f3fb-200d-2640-fe0f",
        "1f93e-1f3fc-200d-2640-fe0f",
        "1f93e-1f3fd-200d-2640-fe0f",
        "1f93e-1f3fe-200d-2640-fe0f",
        "1f93e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["juggling"],
      u: "1f939",
      v: [
        "1f939-1f3fb",
        "1f939-1f3fc",
        "1f939-1f3fd",
        "1f939-1f3fe",
        "1f939-1f3ff"
      ]
    },
    {
      n: ["man juggling", "man-juggling"],
      u: "1f939-200d-2642-fe0f",
      v: [
        "1f939-1f3fb-200d-2642-fe0f",
        "1f939-1f3fc-200d-2642-fe0f",
        "1f939-1f3fd-200d-2642-fe0f",
        "1f939-1f3fe-200d-2642-fe0f",
        "1f939-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman juggling", "woman-juggling"],
      u: "1f939-200d-2640-fe0f",
      v: [
        "1f939-1f3fb-200d-2640-fe0f",
        "1f939-1f3fc-200d-2640-fe0f",
        "1f939-1f3fd-200d-2640-fe0f",
        "1f939-1f3fe-200d-2640-fe0f",
        "1f939-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person in lotus position"],
      u: "1f9d8",
      v: [
        "1f9d8-1f3fb",
        "1f9d8-1f3fc",
        "1f9d8-1f3fd",
        "1f9d8-1f3fe",
        "1f9d8-1f3ff"
      ]
    },
    {
      n: ["man in lotus position"],
      u: "1f9d8-200d-2642-fe0f",
      v: [
        "1f9d8-1f3fb-200d-2642-fe0f",
        "1f9d8-1f3fc-200d-2642-fe0f",
        "1f9d8-1f3fd-200d-2642-fe0f",
        "1f9d8-1f3fe-200d-2642-fe0f",
        "1f9d8-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in lotus position"],
      u: "1f9d8-200d-2640-fe0f",
      v: [
        "1f9d8-1f3fb-200d-2640-fe0f",
        "1f9d8-1f3fc-200d-2640-fe0f",
        "1f9d8-1f3fd-200d-2640-fe0f",
        "1f9d8-1f3fe-200d-2640-fe0f",
        "1f9d8-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bath"],
      u: "1f6c0",
      v: [
        "1f6c0-1f3fb",
        "1f6c0-1f3fc",
        "1f6c0-1f3fd",
        "1f6c0-1f3fe",
        "1f6c0-1f3ff"
      ]
    },
    {
      n: ["sleeping accommodation"],
      u: "1f6cc",
      v: [
        "1f6cc-1f3fb",
        "1f6cc-1f3fc",
        "1f6cc-1f3fd",
        "1f6cc-1f3fe",
        "1f6cc-1f3ff"
      ]
    },
    {
      n: ["people holding hands"],
      u: "1f9d1-200d-1f91d-200d-1f9d1",
      v: [
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff"
      ]
    },
    {
      n: ["women holding hands", "two women holding hands"],
      u: "1f46d",
      v: [
        "1f46d-1f3fb",
        "1f46d-1f3fc",
        "1f46d-1f3fd",
        "1f46d-1f3fe",
        "1f46d-1f3ff",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe"
      ]
    },
    {
      n: [
        "couple",
        "man and woman holding hands",
        "woman and man holding hands"
      ],
      u: "1f46b",
      v: [
        "1f46b-1f3fb",
        "1f46b-1f3fc",
        "1f46b-1f3fd",
        "1f46b-1f3fe",
        "1f46b-1f3ff",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe"
      ]
    },
    {
      n: ["men holding hands", "two men holding hands"],
      u: "1f46c",
      v: [
        "1f46c-1f3fb",
        "1f46c-1f3fc",
        "1f46c-1f3fd",
        "1f46c-1f3fe",
        "1f46c-1f3ff",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe"
      ]
    },
    {
      n: ["kiss", "couplekiss"],
      u: "1f48f",
      v: [
        "1f48f-1f3fb",
        "1f48f-1f3fc",
        "1f48f-1f3fd",
        "1f48f-1f3fe",
        "1f48f-1f3ff",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe"
      ]
    },
    {
      n: ["woman-kiss-man", "kiss: woman, man"],
      u: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f468",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["man-kiss-man", "kiss: man, man"],
      u: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
      v: [
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["woman-kiss-woman", "kiss: woman, woman"],
      u: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff"
      ]
    },
    {
      n: ["couple with heart"],
      u: "1f491",
      v: [
        "1f491-1f3fb",
        "1f491-1f3fc",
        "1f491-1f3fd",
        "1f491-1f3fe",
        "1f491-1f3ff",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fe"
      ]
    },
    {
      n: ["woman-heart-man", "couple with heart: woman, man"],
      u: "1f469-200d-2764-fe0f-200d-1f468",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["man-heart-man", "couple with heart: man, man"],
      u: "1f468-200d-2764-fe0f-200d-1f468",
      v: [
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["woman-heart-woman", "couple with heart: woman, woman"],
      u: "1f469-200d-2764-fe0f-200d-1f469",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff"
      ]
    },
    { n: ["family"], u: "1f46a" },
    {
      n: ["man-woman-boy", "family: man, woman, boy"],
      u: "1f468-200d-1f469-200d-1f466"
    },
    {
      n: ["man-woman-girl", "family: man, woman, girl"],
      u: "1f468-200d-1f469-200d-1f467"
    },
    {
      n: ["man-woman-girl-boy", "family: man, woman, girl, boy"],
      u: "1f468-200d-1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["man-woman-boy-boy", "family: man, woman, boy, boy"],
      u: "1f468-200d-1f469-200d-1f466-200d-1f466"
    },
    {
      n: ["man-woman-girl-girl", "family: man, woman, girl, girl"],
      u: "1f468-200d-1f469-200d-1f467-200d-1f467"
    },
    {
      n: ["man-man-boy", "family: man, man, boy"],
      u: "1f468-200d-1f468-200d-1f466"
    },
    {
      n: ["man-man-girl", "family: man, man, girl"],
      u: "1f468-200d-1f468-200d-1f467"
    },
    {
      n: ["man-man-girl-boy", "family: man, man, girl, boy"],
      u: "1f468-200d-1f468-200d-1f467-200d-1f466"
    },
    {
      n: ["man-man-boy-boy", "family: man, man, boy, boy"],
      u: "1f468-200d-1f468-200d-1f466-200d-1f466"
    },
    {
      n: ["man-man-girl-girl", "family: man, man, girl, girl"],
      u: "1f468-200d-1f468-200d-1f467-200d-1f467"
    },
    {
      n: ["woman-woman-boy", "family: woman, woman, boy"],
      u: "1f469-200d-1f469-200d-1f466"
    },
    {
      n: ["woman-woman-girl", "family: woman, woman, girl"],
      u: "1f469-200d-1f469-200d-1f467"
    },
    {
      n: ["woman-woman-girl-boy", "family: woman, woman, girl, boy"],
      u: "1f469-200d-1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["woman-woman-boy-boy", "family: woman, woman, boy, boy"],
      u: "1f469-200d-1f469-200d-1f466-200d-1f466"
    },
    {
      n: ["woman-woman-girl-girl", "family: woman, woman, girl, girl"],
      u: "1f469-200d-1f469-200d-1f467-200d-1f467"
    },
    { n: ["man-boy", "family: man, boy"], u: "1f468-200d-1f466" },
    {
      n: ["man-boy-boy", "family: man, boy, boy"],
      u: "1f468-200d-1f466-200d-1f466"
    },
    { n: ["man-girl", "family: man, girl"], u: "1f468-200d-1f467" },
    {
      n: ["man-girl-boy", "family: man, girl, boy"],
      u: "1f468-200d-1f467-200d-1f466"
    },
    {
      n: ["man-girl-girl", "family: man, girl, girl"],
      u: "1f468-200d-1f467-200d-1f467"
    },
    { n: ["woman-boy", "family: woman, boy"], u: "1f469-200d-1f466" },
    {
      n: ["woman-boy-boy", "family: woman, boy, boy"],
      u: "1f469-200d-1f466-200d-1f466"
    },
    { n: ["woman-girl", "family: woman, girl"], u: "1f469-200d-1f467" },
    {
      n: ["woman-girl-boy", "family: woman, girl, boy"],
      u: "1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["woman-girl-girl", "family: woman, girl, girl"],
      u: "1f469-200d-1f467-200d-1f467"
    },
    { n: ["speaking head", "speaking head in silhouette"], u: "1f5e3-fe0f" },
    { n: ["bust in silhouette"], u: "1f464" },
    { n: ["busts in silhouette"], u: "1f465" },
    { n: ["people hugging"], u: "1fac2" },
    { n: ["footprints"], u: "1f463" }
  ],
  animals_nature: [
    { n: ["monkey face"], u: "1f435" },
    { n: ["monkey"], u: "1f412" },
    { n: ["gorilla"], u: "1f98d" },
    { n: ["orangutan"], u: "1f9a7" },
    { n: ["dog", "dog face"], u: "1f436" },
    { n: ["dog", "dog2"], u: "1f415" },
    { n: ["guide dog"], u: "1f9ae" },
    { n: ["service dog"], u: "1f415-200d-1f9ba" },
    { n: ["poodle"], u: "1f429" },
    { n: ["wolf", "wolf face"], u: "1f43a" },
    { n: ["fox face"], u: "1f98a" },
    { n: ["raccoon"], u: "1f99d" },
    { n: ["cat", "cat face"], u: "1f431" },
    { n: ["cat", "cat2"], u: "1f408" },
    { n: ["black cat"], u: "1f408-200d-2b1b" },
    { n: ["lion face"], u: "1f981" },
    { n: ["tiger", "tiger face"], u: "1f42f" },
    { n: ["tiger", "tiger2"], u: "1f405" },
    { n: ["leopard"], u: "1f406" },
    { n: ["horse", "horse face"], u: "1f434" },
    { n: ["horse", "racehorse"], u: "1f40e" },
    { n: ["unicorn face"], u: "1f984" },
    { n: ["zebra face"], u: "1f993" },
    { n: ["deer"], u: "1f98c" },
    { n: ["bison"], u: "1f9ac" },
    { n: ["cow", "cow face"], u: "1f42e" },
    { n: ["ox"], u: "1f402" },
    { n: ["water buffalo"], u: "1f403" },
    { n: ["cow", "cow2"], u: "1f404" },
    { n: ["pig", "pig face"], u: "1f437" },
    { n: ["pig", "pig2"], u: "1f416" },
    { n: ["boar"], u: "1f417" },
    { n: ["pig nose"], u: "1f43d" },
    { n: ["ram"], u: "1f40f" },
    { n: ["sheep"], u: "1f411" },
    { n: ["goat"], u: "1f410" },
    { n: ["dromedary camel"], u: "1f42a" },
    { n: ["camel", "bactrian camel"], u: "1f42b" },
    { n: ["llama"], u: "1f999" },
    { n: ["giraffe face"], u: "1f992" },
    { n: ["elephant"], u: "1f418" },
    { n: ["mammoth"], u: "1f9a3" },
    { n: ["rhinoceros"], u: "1f98f" },
    { n: ["hippopotamus"], u: "1f99b" },
    { n: ["mouse", "mouse face"], u: "1f42d" },
    { n: ["mouse", "mouse2"], u: "1f401" },
    { n: ["rat"], u: "1f400" },
    { n: ["hamster", "hamster face"], u: "1f439" },
    { n: ["rabbit", "rabbit face"], u: "1f430" },
    { n: ["rabbit", "rabbit2"], u: "1f407" },
    { n: ["chipmunk"], u: "1f43f-fe0f" },
    { n: ["beaver"], u: "1f9ab" },
    { n: ["hedgehog"], u: "1f994" },
    { n: ["bat"], u: "1f987" },
    { n: ["bear", "bear face"], u: "1f43b" },
    { n: ["polar bear"], u: "1f43b-200d-2744-fe0f" },
    { n: ["koala"], u: "1f428" },
    { n: ["panda face"], u: "1f43c" },
    { n: ["sloth"], u: "1f9a5" },
    { n: ["otter"], u: "1f9a6" },
    { n: ["skunk"], u: "1f9a8" },
    { n: ["kangaroo"], u: "1f998" },
    { n: ["badger"], u: "1f9a1" },
    { n: ["feet", "paw prints"], u: "1f43e" },
    { n: ["turkey"], u: "1f983" },
    { n: ["chicken"], u: "1f414" },
    { n: ["rooster"], u: "1f413" },
    { n: ["hatching chick"], u: "1f423" },
    { n: ["baby chick"], u: "1f424" },
    { n: ["hatched chick", "front-facing baby chick"], u: "1f425" },
    { n: ["bird"], u: "1f426" },
    { n: ["penguin"], u: "1f427" },
    { n: ["dove", "dove of peace"], u: "1f54a-fe0f" },
    { n: ["eagle"], u: "1f985" },
    { n: ["duck"], u: "1f986" },
    { n: ["swan"], u: "1f9a2" },
    { n: ["owl"], u: "1f989" },
    { n: ["dodo"], u: "1f9a4" },
    { n: ["feather"], u: "1fab6" },
    { n: ["flamingo"], u: "1f9a9" },
    { n: ["peacock"], u: "1f99a" },
    { n: ["parrot"], u: "1f99c" },
    { n: ["frog", "frog face"], u: "1f438" },
    { n: ["crocodile"], u: "1f40a" },
    { n: ["turtle"], u: "1f422" },
    { n: ["lizard"], u: "1f98e" },
    { n: ["snake"], u: "1f40d" },
    { n: ["dragon face"], u: "1f432" },
    { n: ["dragon"], u: "1f409" },
    { n: ["sauropod"], u: "1f995" },
    { n: ["t-rex"], u: "1f996" },
    { n: ["whale", "spouting whale"], u: "1f433" },
    { n: ["whale", "whale2"], u: "1f40b" },
    { n: ["dolphin", "flipper"], u: "1f42c" },
    { n: ["seal"], u: "1f9ad" },
    { n: ["fish"], u: "1f41f" },
    { n: ["tropical fish"], u: "1f420" },
    { n: ["blowfish"], u: "1f421" },
    { n: ["shark"], u: "1f988" },
    { n: ["octopus"], u: "1f419" },
    { n: ["shell", "spiral shell"], u: "1f41a" },
    { n: ["coral"], u: "1fab8" },
    { n: ["snail"], u: "1f40c" },
    { n: ["butterfly"], u: "1f98b" },
    { n: ["bug"], u: "1f41b" },
    { n: ["ant"], u: "1f41c" },
    { n: ["bee", "honeybee"], u: "1f41d" },
    { n: ["beetle"], u: "1fab2" },
    { n: ["ladybug", "lady beetle"], u: "1f41e" },
    { n: ["cricket"], u: "1f997" },
    { n: ["cockroach"], u: "1fab3" },
    { n: ["spider"], u: "1f577-fe0f" },
    { n: ["spider web"], u: "1f578-fe0f" },
    { n: ["scorpion"], u: "1f982" },
    { n: ["mosquito"], u: "1f99f" },
    { n: ["fly"], u: "1fab0" },
    { n: ["worm"], u: "1fab1" },
    { n: ["microbe"], u: "1f9a0" },
    { n: ["bouquet"], u: "1f490" },
    { n: ["cherry blossom"], u: "1f338" },
    { n: ["white flower"], u: "1f4ae" },
    { n: ["lotus"], u: "1fab7" },
    { n: ["rosette"], u: "1f3f5-fe0f" },
    { n: ["rose"], u: "1f339" },
    { n: ["wilted flower"], u: "1f940" },
    { n: ["hibiscus"], u: "1f33a" },
    { n: ["sunflower"], u: "1f33b" },
    { n: ["blossom"], u: "1f33c" },
    { n: ["tulip"], u: "1f337" },
    { n: ["seedling"], u: "1f331" },
    { n: ["potted plant"], u: "1fab4" },
    { n: ["evergreen tree"], u: "1f332" },
    { n: ["deciduous tree"], u: "1f333" },
    { n: ["palm tree"], u: "1f334" },
    { n: ["cactus"], u: "1f335" },
    { n: ["ear of rice"], u: "1f33e" },
    { n: ["herb"], u: "1f33f" },
    { n: ["shamrock"], u: "2618-fe0f" },
    { n: ["four leaf clover"], u: "1f340" },
    { n: ["maple leaf"], u: "1f341" },
    { n: ["fallen leaf"], u: "1f342" },
    { n: ["leaves", "leaf fluttering in wind"], u: "1f343" },
    { n: ["empty nest"], u: "1fab9" },
    { n: ["nest with eggs"], u: "1faba" }
  ],
  food_drink: [
    { n: ["grapes"], u: "1f347" },
    { n: ["melon"], u: "1f348" },
    { n: ["watermelon"], u: "1f349" },
    { n: ["tangerine"], u: "1f34a" },
    { n: ["lemon"], u: "1f34b" },
    { n: ["banana"], u: "1f34c" },
    { n: ["pineapple"], u: "1f34d" },
    { n: ["mango"], u: "1f96d" },
    { n: ["apple", "red apple"], u: "1f34e" },
    { n: ["green apple"], u: "1f34f" },
    { n: ["pear"], u: "1f350" },
    { n: ["peach"], u: "1f351" },
    { n: ["cherries"], u: "1f352" },
    { n: ["strawberry"], u: "1f353" },
    { n: ["blueberries"], u: "1fad0" },
    { n: ["kiwifruit"], u: "1f95d" },
    { n: ["tomato"], u: "1f345" },
    { n: ["olive"], u: "1fad2" },
    { n: ["coconut"], u: "1f965" },
    { n: ["avocado"], u: "1f951" },
    { n: ["eggplant", "aubergine"], u: "1f346" },
    { n: ["potato"], u: "1f954" },
    { n: ["carrot"], u: "1f955" },
    { n: ["corn", "ear of maize"], u: "1f33d" },
    { n: ["hot pepper"], u: "1f336-fe0f" },
    { n: ["bell pepper"], u: "1fad1" },
    { n: ["cucumber"], u: "1f952" },
    { n: ["leafy green"], u: "1f96c" },
    { n: ["broccoli"], u: "1f966" },
    { n: ["garlic"], u: "1f9c4" },
    { n: ["onion"], u: "1f9c5" },
    { n: ["mushroom"], u: "1f344" },
    { n: ["peanuts"], u: "1f95c" },
    { n: ["beans"], u: "1fad8" },
    { n: ["chestnut"], u: "1f330" },
    { n: ["bread"], u: "1f35e" },
    { n: ["croissant"], u: "1f950" },
    { n: ["baguette bread"], u: "1f956" },
    { n: ["flatbread"], u: "1fad3" },
    { n: ["pretzel"], u: "1f968" },
    { n: ["bagel"], u: "1f96f" },
    { n: ["pancakes"], u: "1f95e" },
    { n: ["waffle"], u: "1f9c7" },
    { n: ["cheese wedge"], u: "1f9c0" },
    { n: ["meat on bone"], u: "1f356" },
    { n: ["poultry leg"], u: "1f357" },
    { n: ["cut of meat"], u: "1f969" },
    { n: ["bacon"], u: "1f953" },
    { n: ["hamburger"], u: "1f354" },
    { n: ["fries", "french fries"], u: "1f35f" },
    { n: ["pizza", "slice of pizza"], u: "1f355" },
    { n: ["hotdog", "hot dog"], u: "1f32d" },
    { n: ["sandwich"], u: "1f96a" },
    { n: ["taco"], u: "1f32e" },
    { n: ["burrito"], u: "1f32f" },
    { n: ["tamale"], u: "1fad4" },
    { n: ["stuffed flatbread"], u: "1f959" },
    { n: ["falafel"], u: "1f9c6" },
    { n: ["egg"], u: "1f95a" },
    { n: ["cooking", "fried egg"], u: "1f373" },
    { n: ["shallow pan of food"], u: "1f958" },
    { n: ["stew", "pot of food"], u: "1f372" },
    { n: ["fondue"], u: "1fad5" },
    { n: ["bowl with spoon"], u: "1f963" },
    { n: ["green salad"], u: "1f957" },
    { n: ["popcorn"], u: "1f37f" },
    { n: ["butter"], u: "1f9c8" },
    { n: ["salt", "salt shaker"], u: "1f9c2" },
    { n: ["canned food"], u: "1f96b" },
    { n: ["bento", "bento box"], u: "1f371" },
    { n: ["rice cracker"], u: "1f358" },
    { n: ["rice ball"], u: "1f359" },
    { n: ["rice", "cooked rice"], u: "1f35a" },
    { n: ["curry", "curry and rice"], u: "1f35b" },
    { n: ["ramen", "steaming bowl"], u: "1f35c" },
    { n: ["spaghetti"], u: "1f35d" },
    { n: ["sweet potato", "roasted sweet potato"], u: "1f360" },
    { n: ["oden"], u: "1f362" },
    { n: ["sushi"], u: "1f363" },
    { n: ["fried shrimp"], u: "1f364" },
    { n: ["fish cake", "fish cake with swirl design"], u: "1f365" },
    { n: ["moon cake"], u: "1f96e" },
    { n: ["dango"], u: "1f361" },
    { n: ["dumpling"], u: "1f95f" },
    { n: ["fortune cookie"], u: "1f960" },
    { n: ["takeout box"], u: "1f961" },
    { n: ["crab"], u: "1f980" },
    { n: ["lobster"], u: "1f99e" },
    { n: ["shrimp"], u: "1f990" },
    { n: ["squid"], u: "1f991" },
    { n: ["oyster"], u: "1f9aa" },
    { n: ["icecream", "soft ice cream"], u: "1f366" },
    { n: ["shaved ice"], u: "1f367" },
    { n: ["ice cream"], u: "1f368" },
    { n: ["doughnut"], u: "1f369" },
    { n: ["cookie"], u: "1f36a" },
    { n: ["birthday", "birthday cake"], u: "1f382" },
    { n: ["cake", "shortcake"], u: "1f370" },
    { n: ["cupcake"], u: "1f9c1" },
    { n: ["pie"], u: "1f967" },
    { n: ["chocolate bar"], u: "1f36b" },
    { n: ["candy"], u: "1f36c" },
    { n: ["lollipop"], u: "1f36d" },
    { n: ["custard"], u: "1f36e" },
    { n: ["honey pot"], u: "1f36f" },
    { n: ["baby bottle"], u: "1f37c" },
    { n: ["glass of milk"], u: "1f95b" },
    { n: ["coffee", "hot beverage"], u: "2615" },
    { n: ["teapot"], u: "1fad6" },
    { n: ["tea", "teacup without handle"], u: "1f375" },
    { n: ["sake", "sake bottle and cup"], u: "1f376" },
    { n: ["champagne", "bottle with popping cork"], u: "1f37e" },
    { n: ["wine glass"], u: "1f377" },
    { n: ["cocktail", "cocktail glass"], u: "1f378" },
    { n: ["tropical drink"], u: "1f379" },
    { n: ["beer", "beer mug"], u: "1f37a" },
    { n: ["beers", "clinking beer mugs"], u: "1f37b" },
    { n: ["clinking glasses"], u: "1f942" },
    { n: ["tumbler glass"], u: "1f943" },
    { n: ["pouring liquid"], u: "1fad7" },
    { n: ["cup with straw"], u: "1f964" },
    { n: ["bubble tea"], u: "1f9cb" },
    { n: ["beverage box"], u: "1f9c3" },
    { n: ["mate drink"], u: "1f9c9" },
    { n: ["ice cube"], u: "1f9ca" },
    { n: ["chopsticks"], u: "1f962" },
    { n: ["knife fork plate", "fork and knife with plate"], u: "1f37d-fe0f" },
    { n: ["fork and knife"], u: "1f374" },
    { n: ["spoon"], u: "1f944" },
    { n: ["hocho", "knife"], u: "1f52a" },
    { n: ["jar"], u: "1fad9" },
    { n: ["amphora"], u: "1f3fa" }
  ],
  travel_places: [
    { n: ["earth africa", "earth globe europe-africa"], u: "1f30d" },
    { n: ["earth americas", "earth globe americas"], u: "1f30e" },
    { n: ["earth asia", "earth globe asia-australia"], u: "1f30f" },
    { n: ["globe with meridians"], u: "1f310" },
    { n: ["world map"], u: "1f5fa-fe0f" },
    { n: ["japan", "silhouette of japan"], u: "1f5fe" },
    { n: ["compass"], u: "1f9ed" },
    { n: ["snow-capped mountain", "snow capped mountain"], u: "1f3d4-fe0f" },
    { n: ["mountain"], u: "26f0-fe0f" },
    { n: ["volcano"], u: "1f30b" },
    { n: ["mount fuji"], u: "1f5fb" },
    { n: ["camping"], u: "1f3d5-fe0f" },
    { n: ["beach with umbrella"], u: "1f3d6-fe0f" },
    { n: ["desert"], u: "1f3dc-fe0f" },
    { n: ["desert island"], u: "1f3dd-fe0f" },
    { n: ["national park"], u: "1f3de-fe0f" },
    { n: ["stadium"], u: "1f3df-fe0f" },
    { n: ["classical building"], u: "1f3db-fe0f" },
    { n: ["building construction"], u: "1f3d7-fe0f" },
    { n: ["brick", "bricks"], u: "1f9f1" },
    { n: ["rock"], u: "1faa8" },
    { n: ["wood"], u: "1fab5" },
    { n: ["hut"], u: "1f6d6" },
    { n: ["houses", "house buildings"], u: "1f3d8-fe0f" },
    { n: ["derelict house", "derelict house building"], u: "1f3da-fe0f" },
    { n: ["house", "house building"], u: "1f3e0" },
    { n: ["house with garden"], u: "1f3e1" },
    { n: ["office", "office building"], u: "1f3e2" },
    { n: ["post office", "japanese post office"], u: "1f3e3" },
    { n: ["european post office"], u: "1f3e4" },
    { n: ["hospital"], u: "1f3e5" },
    { n: ["bank"], u: "1f3e6" },
    { n: ["hotel"], u: "1f3e8" },
    { n: ["love hotel"], u: "1f3e9" },
    { n: ["convenience store"], u: "1f3ea" },
    { n: ["school"], u: "1f3eb" },
    { n: ["department store"], u: "1f3ec" },
    { n: ["factory"], u: "1f3ed" },
    { n: ["japanese castle"], u: "1f3ef" },
    { n: ["european castle"], u: "1f3f0" },
    { n: ["wedding"], u: "1f492" },
    { n: ["tokyo tower"], u: "1f5fc" },
    { n: ["statue of liberty"], u: "1f5fd" },
    { n: ["church"], u: "26ea" },
    { n: ["mosque"], u: "1f54c" },
    { n: ["hindu temple"], u: "1f6d5" },
    { n: ["synagogue"], u: "1f54d" },
    { n: ["shinto shrine"], u: "26e9-fe0f" },
    { n: ["kaaba"], u: "1f54b" },
    { n: ["fountain"], u: "26f2" },
    { n: ["tent"], u: "26fa" },
    { n: ["foggy"], u: "1f301" },
    { n: ["night with stars"], u: "1f303" },
    { n: ["cityscape"], u: "1f3d9-fe0f" },
    { n: ["sunrise over mountains"], u: "1f304" },
    { n: ["sunrise"], u: "1f305" },
    { n: ["city sunset", "cityscape at dusk"], u: "1f306" },
    { n: ["city sunrise", "sunset over buildings"], u: "1f307" },
    { n: ["bridge at night"], u: "1f309" },
    { n: ["hotsprings", "hot springs"], u: "2668-fe0f" },
    { n: ["carousel horse"], u: "1f3a0" },
    { n: ["playground slide"], u: "1f6dd" },
    { n: ["ferris wheel"], u: "1f3a1" },
    { n: ["roller coaster"], u: "1f3a2" },
    { n: ["barber", "barber pole"], u: "1f488" },
    { n: ["circus tent"], u: "1f3aa" },
    { n: ["steam locomotive"], u: "1f682" },
    { n: ["railway car"], u: "1f683" },
    { n: ["high-speed train", "bullettrain side"], u: "1f684" },
    {
      n: ["bullettrain front", "high-speed train with bullet nose"],
      u: "1f685"
    },
    { n: ["train", "train2"], u: "1f686" },
    { n: ["metro"], u: "1f687" },
    { n: ["light rail"], u: "1f688" },
    { n: ["station"], u: "1f689" },
    { n: ["tram"], u: "1f68a" },
    { n: ["monorail"], u: "1f69d" },
    { n: ["mountain railway"], u: "1f69e" },
    { n: ["train", "tram car"], u: "1f68b" },
    { n: ["bus"], u: "1f68c" },
    { n: ["oncoming bus"], u: "1f68d" },
    { n: ["trolleybus"], u: "1f68e" },
    { n: ["minibus"], u: "1f690" },
    { n: ["ambulance"], u: "1f691" },
    { n: ["fire engine"], u: "1f692" },
    { n: ["police car"], u: "1f693" },
    { n: ["oncoming police car"], u: "1f694" },
    { n: ["taxi"], u: "1f695" },
    { n: ["oncoming taxi"], u: "1f696" },
    { n: ["car", "red car", "automobile"], u: "1f697" },
    { n: ["oncoming automobile"], u: "1f698" },
    { n: ["blue car", "recreational vehicle"], u: "1f699" },
    { n: ["pickup truck"], u: "1f6fb" },
    { n: ["truck", "delivery truck"], u: "1f69a" },
    { n: ["articulated lorry"], u: "1f69b" },
    { n: ["tractor"], u: "1f69c" },
    { n: ["racing car"], u: "1f3ce-fe0f" },
    { n: ["motorcycle", "racing motorcycle"], u: "1f3cd-fe0f" },
    { n: ["motor scooter"], u: "1f6f5" },
    { n: ["manual wheelchair"], u: "1f9bd" },
    { n: ["motorized wheelchair"], u: "1f9bc" },
    { n: ["auto rickshaw"], u: "1f6fa" },
    { n: ["bike", "bicycle"], u: "1f6b2" },
    { n: ["scooter"], u: "1f6f4" },
    { n: ["skateboard"], u: "1f6f9" },
    { n: ["roller skate"], u: "1f6fc" },
    { n: ["busstop", "bus stop"], u: "1f68f" },
    { n: ["motorway"], u: "1f6e3-fe0f" },
    { n: ["railway track"], u: "1f6e4-fe0f" },
    { n: ["oil drum"], u: "1f6e2-fe0f" },
    { n: ["fuelpump", "fuel pump"], u: "26fd" },
    { n: ["wheel"], u: "1f6de" },
    { n: ["rotating light", "police cars revolving light"], u: "1f6a8" },
    { n: ["traffic light", "horizontal traffic light"], u: "1f6a5" },
    { n: ["vertical traffic light"], u: "1f6a6" },
    { n: ["octagonal sign"], u: "1f6d1" },
    { n: ["construction", "construction sign"], u: "1f6a7" },
    { n: ["anchor"], u: "2693" },
    { n: ["ring buoy"], u: "1f6df" },
    { n: ["boat", "sailboat"], u: "26f5" },
    { n: ["canoe"], u: "1f6f6" },
    { n: ["speedboat"], u: "1f6a4" },
    { n: ["passenger ship"], u: "1f6f3-fe0f" },
    { n: ["ferry"], u: "26f4-fe0f" },
    { n: ["motor boat"], u: "1f6e5-fe0f" },
    { n: ["ship"], u: "1f6a2" },
    { n: ["airplane"], u: "2708-fe0f" },
    { n: ["small airplane"], u: "1f6e9-fe0f" },
    { n: ["airplane departure"], u: "1f6eb" },
    { n: ["airplane arriving"], u: "1f6ec" },
    { n: ["parachute"], u: "1fa82" },
    { n: ["seat"], u: "1f4ba" },
    { n: ["helicopter"], u: "1f681" },
    { n: ["suspension railway"], u: "1f69f" },
    { n: ["mountain cableway"], u: "1f6a0" },
    { n: ["aerial tramway"], u: "1f6a1" },
    { n: ["satellite"], u: "1f6f0-fe0f" },
    { n: ["rocket"], u: "1f680" },
    { n: ["flying saucer"], u: "1f6f8" },
    { n: ["bellhop bell"], u: "1f6ce-fe0f" },
    { n: ["luggage"], u: "1f9f3" },
    { n: ["hourglass"], u: "231b" },
    { n: ["hourglass flowing sand", "hourglass with flowing sand"], u: "23f3" },
    { n: ["watch"], u: "231a" },
    { n: ["alarm clock"], u: "23f0" },
    { n: ["stopwatch"], u: "23f1-fe0f" },
    { n: ["timer clock"], u: "23f2-fe0f" },
    { n: ["mantelpiece clock"], u: "1f570-fe0f" },
    { n: ["clock12", "clock face twelve oclock"], u: "1f55b" },
    { n: ["clock1230", "clock face twelve-thirty"], u: "1f567" },
    { n: ["clock1", "clock face one oclock"], u: "1f550" },
    { n: ["clock130", "clock face one-thirty"], u: "1f55c" },
    { n: ["clock2", "clock face two oclock"], u: "1f551" },
    { n: ["clock230", "clock face two-thirty"], u: "1f55d" },
    { n: ["clock3", "clock face three oclock"], u: "1f552" },
    { n: ["clock330", "clock face three-thirty"], u: "1f55e" },
    { n: ["clock4", "clock face four oclock"], u: "1f553" },
    { n: ["clock430", "clock face four-thirty"], u: "1f55f" },
    { n: ["clock5", "clock face five oclock"], u: "1f554" },
    { n: ["clock530", "clock face five-thirty"], u: "1f560" },
    { n: ["clock6", "clock face six oclock"], u: "1f555" },
    { n: ["clock630", "clock face six-thirty"], u: "1f561" },
    { n: ["clock7", "clock face seven oclock"], u: "1f556" },
    { n: ["clock730", "clock face seven-thirty"], u: "1f562" },
    { n: ["clock8", "clock face eight oclock"], u: "1f557" },
    { n: ["clock830", "clock face eight-thirty"], u: "1f563" },
    { n: ["clock9", "clock face nine oclock"], u: "1f558" },
    { n: ["clock930", "clock face nine-thirty"], u: "1f564" },
    { n: ["clock10", "clock face ten oclock"], u: "1f559" },
    { n: ["clock1030", "clock face ten-thirty"], u: "1f565" },
    { n: ["clock11", "clock face eleven oclock"], u: "1f55a" },
    { n: ["clock1130", "clock face eleven-thirty"], u: "1f566" },
    { n: ["new moon", "new moon symbol"], u: "1f311" },
    { n: ["waxing crescent moon", "waxing crescent moon symbol"], u: "1f312" },
    { n: ["first quarter moon", "first quarter moon symbol"], u: "1f313" },
    {
      n: ["moon", "waxing gibbous moon", "waxing gibbous moon symbol"],
      u: "1f314"
    },
    { n: ["full moon", "full moon symbol"], u: "1f315" },
    { n: ["waning gibbous moon", "waning gibbous moon symbol"], u: "1f316" },
    { n: ["last quarter moon", "last quarter moon symbol"], u: "1f317" },
    { n: ["waning crescent moon", "waning crescent moon symbol"], u: "1f318" },
    { n: ["crescent moon"], u: "1f319" },
    { n: ["new moon with face"], u: "1f31a" },
    { n: ["first quarter moon with face"], u: "1f31b" },
    { n: ["last quarter moon with face"], u: "1f31c" },
    { n: ["thermometer"], u: "1f321-fe0f" },
    { n: ["sunny", "black sun with rays"], u: "2600-fe0f" },
    { n: ["full moon with face"], u: "1f31d" },
    { n: ["sun with face"], u: "1f31e" },
    { n: ["ringed planet"], u: "1fa90" },
    { n: ["star", "white medium star"], u: "2b50" },
    { n: ["star2", "glowing star"], u: "1f31f" },
    { n: ["stars", "shooting star"], u: "1f320" },
    { n: ["milky way"], u: "1f30c" },
    { n: ["cloud"], u: "2601-fe0f" },
    { n: ["partly sunny", "sun behind cloud"], u: "26c5" },
    {
      n: ["thunder cloud and rain", "cloud with lightning and rain"],
      u: "26c8-fe0f"
    },
    {
      n: ["mostly sunny", "sun small cloud", "sun behind small cloud"],
      u: "1f324-fe0f"
    },
    {
      n: ["barely sunny", "sun behind cloud", "sun behind large cloud"],
      u: "1f325-fe0f"
    },
    { n: ["partly sunny rain", "sun behind rain cloud"], u: "1f326-fe0f" },
    { n: ["rain cloud", "cloud with rain"], u: "1f327-fe0f" },
    { n: ["snow cloud", "cloud with snow"], u: "1f328-fe0f" },
    {
      n: ["lightning", "lightning cloud", "cloud with lightning"],
      u: "1f329-fe0f"
    },
    { n: ["tornado", "tornado cloud"], u: "1f32a-fe0f" },
    { n: ["fog"], u: "1f32b-fe0f" },
    { n: ["wind face", "wind blowing face"], u: "1f32c-fe0f" },
    { n: ["cyclone"], u: "1f300" },
    { n: ["rainbow"], u: "1f308" },
    { n: ["closed umbrella"], u: "1f302" },
    { n: ["umbrella"], u: "2602-fe0f" },
    { n: ["umbrella with rain drops"], u: "2614" },
    { n: ["umbrella on ground"], u: "26f1-fe0f" },
    { n: ["zap", "high voltage sign"], u: "26a1" },
    { n: ["snowflake"], u: "2744-fe0f" },
    { n: ["snowman"], u: "2603-fe0f" },
    { n: ["snowman without snow"], u: "26c4" },
    { n: ["comet"], u: "2604-fe0f" },
    { n: ["fire"], u: "1f525" },
    { n: ["droplet"], u: "1f4a7" },
    { n: ["ocean", "water wave"], u: "1f30a" }
  ],
  activities: [
    { n: ["jack-o-lantern", "jack o lantern"], u: "1f383" },
    { n: ["christmas tree"], u: "1f384" },
    { n: ["fireworks"], u: "1f386" },
    { n: ["sparkler", "firework sparkler"], u: "1f387" },
    { n: ["firecracker"], u: "1f9e8" },
    { n: ["sparkles"], u: "2728" },
    { n: ["balloon"], u: "1f388" },
    { n: ["tada", "party popper"], u: "1f389" },
    { n: ["confetti ball"], u: "1f38a" },
    { n: ["tanabata tree"], u: "1f38b" },
    { n: ["bamboo", "pine decoration"], u: "1f38d" },
    { n: ["dolls", "japanese dolls"], u: "1f38e" },
    { n: ["flags", "carp streamer"], u: "1f38f" },
    { n: ["wind chime"], u: "1f390" },
    { n: ["rice scene", "moon viewing ceremony"], u: "1f391" },
    { n: ["red envelope", "red gift envelope"], u: "1f9e7" },
    { n: ["ribbon"], u: "1f380" },
    { n: ["gift", "wrapped present"], u: "1f381" },
    { n: ["reminder ribbon"], u: "1f397-fe0f" },
    { n: ["admission tickets"], u: "1f39f-fe0f" },
    { n: ["ticket"], u: "1f3ab" },
    { n: ["medal", "military medal"], u: "1f396-fe0f" },
    { n: ["trophy"], u: "1f3c6" },
    { n: ["sports medal"], u: "1f3c5" },
    { n: ["first place medal"], u: "1f947" },
    { n: ["second place medal"], u: "1f948" },
    { n: ["third place medal"], u: "1f949" },
    { n: ["soccer", "soccer ball"], u: "26bd" },
    { n: ["baseball"], u: "26be" },
    { n: ["softball"], u: "1f94e" },
    { n: ["basketball", "basketball and hoop"], u: "1f3c0" },
    { n: ["volleyball"], u: "1f3d0" },
    { n: ["football", "american football"], u: "1f3c8" },
    { n: ["rugby football"], u: "1f3c9" },
    { n: ["tennis", "tennis racquet and ball"], u: "1f3be" },
    { n: ["flying disc"], u: "1f94f" },
    { n: ["bowling"], u: "1f3b3" },
    { n: ["cricket bat and ball"], u: "1f3cf" },
    { n: ["field hockey stick and ball"], u: "1f3d1" },
    { n: ["ice hockey stick and puck"], u: "1f3d2" },
    { n: ["lacrosse", "lacrosse stick and ball"], u: "1f94d" },
    { n: ["table tennis paddle and ball"], u: "1f3d3" },
    { n: ["badminton racquet and shuttlecock"], u: "1f3f8" },
    { n: ["boxing glove"], u: "1f94a" },
    { n: ["martial arts uniform"], u: "1f94b" },
    { n: ["goal net"], u: "1f945" },
    { n: ["golf", "flag in hole"], u: "26f3" },
    { n: ["ice skate"], u: "26f8-fe0f" },
    { n: ["fishing pole and fish"], u: "1f3a3" },
    { n: ["diving mask"], u: "1f93f" },
    { n: ["running shirt with sash"], u: "1f3bd" },
    { n: ["ski", "ski and ski boot"], u: "1f3bf" },
    { n: ["sled"], u: "1f6f7" },
    { n: ["curling stone"], u: "1f94c" },
    { n: ["dart", "direct hit"], u: "1f3af" },
    { n: ["yo-yo"], u: "1fa80" },
    { n: ["kite"], u: "1fa81" },
    { n: ["8ball", "billiards"], u: "1f3b1" },
    { n: ["crystal ball"], u: "1f52e" },
    { n: ["magic wand"], u: "1fa84" },
    { n: ["nazar amulet"], u: "1f9ff" },
    { n: ["hamsa"], u: "1faac" },
    { n: ["video game"], u: "1f3ae" },
    { n: ["joystick"], u: "1f579-fe0f" },
    { n: ["slot machine"], u: "1f3b0" },
    { n: ["game die"], u: "1f3b2" },
    { n: ["jigsaw", "jigsaw puzzle piece"], u: "1f9e9" },
    { n: ["teddy bear"], u: "1f9f8" },
    { n: ["pinata"], u: "1fa85" },
    { n: ["mirror ball"], u: "1faa9" },
    { n: ["nesting dolls"], u: "1fa86" },
    { n: ["spades", "black spade suit"], u: "2660-fe0f" },
    { n: ["hearts", "black heart suit"], u: "2665-fe0f" },
    { n: ["diamonds", "black diamond suit"], u: "2666-fe0f" },
    { n: ["clubs", "black club suit"], u: "2663-fe0f" },
    { n: ["chess pawn"], u: "265f-fe0f" },
    { n: ["black joker", "playing card black joker"], u: "1f0cf" },
    { n: ["mahjong", "mahjong tile red dragon"], u: "1f004" },
    { n: ["flower playing cards"], u: "1f3b4" },
    { n: ["performing arts"], u: "1f3ad" },
    { n: ["framed picture", "frame with picture"], u: "1f5bc-fe0f" },
    { n: ["art", "artist palette"], u: "1f3a8" },
    { n: ["thread", "spool of thread"], u: "1f9f5" },
    { n: ["sewing needle"], u: "1faa1" },
    { n: ["yarn", "ball of yarn"], u: "1f9f6" },
    { n: ["knot"], u: "1faa2" }
  ],
  objects: [
    { n: ["eyeglasses"], u: "1f453" },
    { n: ["sunglasses", "dark sunglasses"], u: "1f576-fe0f" },
    { n: ["goggles"], u: "1f97d" },
    { n: ["lab coat"], u: "1f97c" },
    { n: ["safety vest"], u: "1f9ba" },
    { n: ["necktie"], u: "1f454" },
    { n: ["shirt", "tshirt", "t-shirt"], u: "1f455" },
    { n: ["jeans"], u: "1f456" },
    { n: ["scarf"], u: "1f9e3" },
    { n: ["gloves"], u: "1f9e4" },
    { n: ["coat"], u: "1f9e5" },
    { n: ["socks"], u: "1f9e6" },
    { n: ["dress"], u: "1f457" },
    { n: ["kimono"], u: "1f458" },
    { n: ["sari"], u: "1f97b" },
    { n: ["one-piece swimsuit"], u: "1fa71" },
    { n: ["briefs"], u: "1fa72" },
    { n: ["shorts"], u: "1fa73" },
    { n: ["bikini"], u: "1f459" },
    { n: ["womans clothes"], u: "1f45a" },
    { n: ["purse"], u: "1f45b" },
    { n: ["handbag"], u: "1f45c" },
    { n: ["pouch"], u: "1f45d" },
    { n: ["shopping bags"], u: "1f6cd-fe0f" },
    { n: ["school satchel"], u: "1f392" },
    { n: ["thong sandal"], u: "1fa74" },
    { n: ["shoe", "mans shoe"], u: "1f45e" },
    { n: ["athletic shoe"], u: "1f45f" },
    { n: ["hiking boot"], u: "1f97e" },
    { n: ["flat shoe", "womans flat shoe"], u: "1f97f" },
    { n: ["high heel", "high-heeled shoe"], u: "1f460" },
    { n: ["sandal", "womans sandal"], u: "1f461" },
    { n: ["ballet shoes"], u: "1fa70" },
    { n: ["boot", "womans boots"], u: "1f462" },
    { n: ["crown"], u: "1f451" },
    { n: ["womans hat"], u: "1f452" },
    { n: ["tophat", "top hat"], u: "1f3a9" },
    { n: ["mortar board", "graduation cap"], u: "1f393" },
    { n: ["billed cap"], u: "1f9e2" },
    { n: ["military helmet"], u: "1fa96" },
    {
      n: ["rescue worker\u2019s helmet", "helmet with white cross"],
      u: "26d1-fe0f"
    },
    { n: ["prayer beads"], u: "1f4ff" },
    { n: ["lipstick"], u: "1f484" },
    { n: ["ring"], u: "1f48d" },
    { n: ["gem", "gem stone"], u: "1f48e" },
    { n: ["mute", "speaker with cancellation stroke"], u: "1f507" },
    { n: ["speaker"], u: "1f508" },
    { n: ["sound", "speaker with one sound wave"], u: "1f509" },
    { n: ["loud sound", "speaker with three sound waves"], u: "1f50a" },
    { n: ["loudspeaker", "public address loudspeaker"], u: "1f4e2" },
    { n: ["mega", "cheering megaphone"], u: "1f4e3" },
    { n: ["postal horn"], u: "1f4ef" },
    { n: ["bell"], u: "1f514" },
    { n: ["no bell", "bell with cancellation stroke"], u: "1f515" },
    { n: ["musical score"], u: "1f3bc" },
    { n: ["musical note"], u: "1f3b5" },
    { n: ["notes", "multiple musical notes"], u: "1f3b6" },
    { n: ["studio microphone"], u: "1f399-fe0f" },
    { n: ["level slider"], u: "1f39a-fe0f" },
    { n: ["control knobs"], u: "1f39b-fe0f" },
    { n: ["microphone"], u: "1f3a4" },
    { n: ["headphone", "headphones"], u: "1f3a7" },
    { n: ["radio"], u: "1f4fb" },
    { n: ["saxophone"], u: "1f3b7" },
    { n: ["accordion"], u: "1fa97" },
    { n: ["guitar"], u: "1f3b8" },
    { n: ["musical keyboard"], u: "1f3b9" },
    { n: ["trumpet"], u: "1f3ba" },
    { n: ["violin"], u: "1f3bb" },
    { n: ["banjo"], u: "1fa95" },
    { n: ["drum with drumsticks"], u: "1f941" },
    { n: ["long drum"], u: "1fa98" },
    { n: ["iphone", "mobile phone"], u: "1f4f1" },
    {
      n: ["calling", "mobile phone with rightwards arrow at left"],
      u: "1f4f2"
    },
    { n: ["phone", "telephone", "black telephone"], u: "260e-fe0f" },
    { n: ["telephone receiver"], u: "1f4de" },
    { n: ["pager"], u: "1f4df" },
    { n: ["fax", "fax machine"], u: "1f4e0" },
    { n: ["battery"], u: "1f50b" },
    { n: ["low battery"], u: "1faab" },
    { n: ["electric plug"], u: "1f50c" },
    { n: ["computer", "personal computer"], u: "1f4bb" },
    { n: ["desktop computer"], u: "1f5a5-fe0f" },
    { n: ["printer"], u: "1f5a8-fe0f" },
    { n: ["keyboard"], u: "2328-fe0f" },
    { n: ["computer mouse", "three button mouse"], u: "1f5b1-fe0f" },
    { n: ["trackball"], u: "1f5b2-fe0f" },
    { n: ["minidisc"], u: "1f4bd" },
    { n: ["floppy disk"], u: "1f4be" },
    { n: ["cd", "optical disc"], u: "1f4bf" },
    { n: ["dvd"], u: "1f4c0" },
    { n: ["abacus"], u: "1f9ee" },
    { n: ["movie camera"], u: "1f3a5" },
    { n: ["film frames"], u: "1f39e-fe0f" },
    { n: ["film projector"], u: "1f4fd-fe0f" },
    { n: ["clapper", "clapper board"], u: "1f3ac" },
    { n: ["tv", "television"], u: "1f4fa" },
    { n: ["camera"], u: "1f4f7" },
    { n: ["camera with flash"], u: "1f4f8" },
    { n: ["video camera"], u: "1f4f9" },
    { n: ["vhs", "videocassette"], u: "1f4fc" },
    { n: ["mag", "left-pointing magnifying glass"], u: "1f50d" },
    { n: ["mag right", "right-pointing magnifying glass"], u: "1f50e" },
    { n: ["candle"], u: "1f56f-fe0f" },
    { n: ["bulb", "electric light bulb"], u: "1f4a1" },
    { n: ["flashlight", "electric torch"], u: "1f526" },
    { n: ["lantern", "izakaya lantern"], u: "1f3ee" },
    { n: ["diya lamp"], u: "1fa94" },
    { n: ["notebook with decorative cover"], u: "1f4d4" },
    { n: ["closed book"], u: "1f4d5" },
    { n: ["book", "open book"], u: "1f4d6" },
    { n: ["green book"], u: "1f4d7" },
    { n: ["blue book"], u: "1f4d8" },
    { n: ["orange book"], u: "1f4d9" },
    { n: ["books"], u: "1f4da" },
    { n: ["notebook"], u: "1f4d3" },
    { n: ["ledger"], u: "1f4d2" },
    { n: ["page with curl"], u: "1f4c3" },
    { n: ["scroll"], u: "1f4dc" },
    { n: ["page facing up"], u: "1f4c4" },
    { n: ["newspaper"], u: "1f4f0" },
    { n: ["rolled-up newspaper", "rolled up newspaper"], u: "1f5de-fe0f" },
    { n: ["bookmark tabs"], u: "1f4d1" },
    { n: ["bookmark"], u: "1f516" },
    { n: ["label"], u: "1f3f7-fe0f" },
    { n: ["moneybag", "money bag"], u: "1f4b0" },
    { n: ["coin"], u: "1fa99" },
    { n: ["yen", "banknote with yen sign"], u: "1f4b4" },
    { n: ["dollar", "banknote with dollar sign"], u: "1f4b5" },
    { n: ["euro", "banknote with euro sign"], u: "1f4b6" },
    { n: ["pound", "banknote with pound sign"], u: "1f4b7" },
    { n: ["money with wings"], u: "1f4b8" },
    { n: ["credit card"], u: "1f4b3" },
    { n: ["receipt"], u: "1f9fe" },
    { n: ["chart", "chart with upwards trend and yen sign"], u: "1f4b9" },
    { n: ["email", "envelope"], u: "2709-fe0f" },
    { n: ["e-mail", "e-mail symbol"], u: "1f4e7" },
    { n: ["incoming envelope"], u: "1f4e8" },
    {
      n: ["envelope with arrow", "envelope with downwards arrow above"],
      u: "1f4e9"
    },
    { n: ["outbox tray"], u: "1f4e4" },
    { n: ["inbox tray"], u: "1f4e5" },
    { n: ["package"], u: "1f4e6" },
    { n: ["mailbox", "closed mailbox with raised flag"], u: "1f4eb" },
    { n: ["mailbox closed", "closed mailbox with lowered flag"], u: "1f4ea" },
    { n: ["mailbox with mail", "open mailbox with raised flag"], u: "1f4ec" },
    {
      n: ["mailbox with no mail", "open mailbox with lowered flag"],
      u: "1f4ed"
    },
    { n: ["postbox"], u: "1f4ee" },
    { n: ["ballot box with ballot"], u: "1f5f3-fe0f" },
    { n: ["pencil", "pencil2"], u: "270f-fe0f" },
    { n: ["black nib"], u: "2712-fe0f" },
    { n: ["fountain pen", "lower left fountain pen"], u: "1f58b-fe0f" },
    { n: ["pen", "lower left ballpoint pen"], u: "1f58a-fe0f" },
    { n: ["paintbrush", "lower left paintbrush"], u: "1f58c-fe0f" },
    { n: ["crayon", "lower left crayon"], u: "1f58d-fe0f" },
    { n: ["memo", "pencil"], u: "1f4dd" },
    { n: ["briefcase"], u: "1f4bc" },
    { n: ["file folder"], u: "1f4c1" },
    { n: ["open file folder"], u: "1f4c2" },
    { n: ["card index dividers"], u: "1f5c2-fe0f" },
    { n: ["date", "calendar"], u: "1f4c5" },
    { n: ["calendar", "tear-off calendar"], u: "1f4c6" },
    { n: ["spiral notepad", "spiral note pad"], u: "1f5d2-fe0f" },
    { n: ["spiral calendar", "spiral calendar pad"], u: "1f5d3-fe0f" },
    { n: ["card index"], u: "1f4c7" },
    { n: ["chart with upwards trend"], u: "1f4c8" },
    { n: ["chart with downwards trend"], u: "1f4c9" },
    { n: ["bar chart"], u: "1f4ca" },
    { n: ["clipboard"], u: "1f4cb" },
    { n: ["pushpin"], u: "1f4cc" },
    { n: ["round pushpin"], u: "1f4cd" },
    { n: ["paperclip"], u: "1f4ce" },
    { n: ["linked paperclips"], u: "1f587-fe0f" },
    { n: ["straight ruler"], u: "1f4cf" },
    { n: ["triangular ruler"], u: "1f4d0" },
    { n: ["scissors", "black scissors"], u: "2702-fe0f" },
    { n: ["card file box"], u: "1f5c3-fe0f" },
    { n: ["file cabinet"], u: "1f5c4-fe0f" },
    { n: ["wastebasket"], u: "1f5d1-fe0f" },
    { n: ["lock"], u: "1f512" },
    { n: ["unlock", "open lock"], u: "1f513" },
    { n: ["lock with ink pen"], u: "1f50f" },
    { n: ["closed lock with key"], u: "1f510" },
    { n: ["key"], u: "1f511" },
    { n: ["old key"], u: "1f5dd-fe0f" },
    { n: ["hammer"], u: "1f528" },
    { n: ["axe"], u: "1fa93" },
    { n: ["pick"], u: "26cf-fe0f" },
    { n: ["hammer and pick"], u: "2692-fe0f" },
    { n: ["hammer and wrench"], u: "1f6e0-fe0f" },
    { n: ["dagger", "dagger knife"], u: "1f5e1-fe0f" },
    { n: ["crossed swords"], u: "2694-fe0f" },
    { n: ["gun", "pistol"], u: "1f52b" },
    { n: ["boomerang"], u: "1fa83" },
    { n: ["bow and arrow"], u: "1f3f9" },
    { n: ["shield"], u: "1f6e1-fe0f" },
    { n: ["carpentry saw"], u: "1fa9a" },
    { n: ["wrench"], u: "1f527" },
    { n: ["screwdriver"], u: "1fa9b" },
    { n: ["nut and bolt"], u: "1f529" },
    { n: ["gear"], u: "2699-fe0f" },
    { n: ["clamp", "compression"], u: "1f5dc-fe0f" },
    { n: ["scales", "balance scale"], u: "2696-fe0f" },
    { n: ["probing cane"], u: "1f9af" },
    { n: ["link", "link symbol"], u: "1f517" },
    { n: ["chains"], u: "26d3-fe0f" },
    { n: ["hook"], u: "1fa9d" },
    { n: ["toolbox"], u: "1f9f0" },
    { n: ["magnet"], u: "1f9f2" },
    { n: ["ladder"], u: "1fa9c" },
    { n: ["alembic"], u: "2697-fe0f" },
    { n: ["test tube"], u: "1f9ea" },
    { n: ["petri dish"], u: "1f9eb" },
    { n: ["dna", "dna double helix"], u: "1f9ec" },
    { n: ["microscope"], u: "1f52c" },
    { n: ["telescope"], u: "1f52d" },
    { n: ["satellite antenna"], u: "1f4e1" },
    { n: ["syringe"], u: "1f489" },
    { n: ["drop of blood"], u: "1fa78" },
    { n: ["pill"], u: "1f48a" },
    { n: ["adhesive bandage"], u: "1fa79" },
    { n: ["crutch"], u: "1fa7c" },
    { n: ["stethoscope"], u: "1fa7a" },
    { n: ["x-ray"], u: "1fa7b" },
    { n: ["door"], u: "1f6aa" },
    { n: ["elevator"], u: "1f6d7" },
    { n: ["mirror"], u: "1fa9e" },
    { n: ["window"], u: "1fa9f" },
    { n: ["bed"], u: "1f6cf-fe0f" },
    { n: ["couch and lamp"], u: "1f6cb-fe0f" },
    { n: ["chair"], u: "1fa91" },
    { n: ["toilet"], u: "1f6bd" },
    { n: ["plunger"], u: "1faa0" },
    { n: ["shower"], u: "1f6bf" },
    { n: ["bathtub"], u: "1f6c1" },
    { n: ["mouse trap"], u: "1faa4" },
    { n: ["razor"], u: "1fa92" },
    { n: ["lotion bottle"], u: "1f9f4" },
    { n: ["safety pin"], u: "1f9f7" },
    { n: ["broom"], u: "1f9f9" },
    { n: ["basket"], u: "1f9fa" },
    { n: ["roll of paper"], u: "1f9fb" },
    { n: ["bucket"], u: "1faa3" },
    { n: ["soap", "bar of soap"], u: "1f9fc" },
    { n: ["bubbles"], u: "1fae7" },
    { n: ["toothbrush"], u: "1faa5" },
    { n: ["sponge"], u: "1f9fd" },
    { n: ["fire extinguisher"], u: "1f9ef" },
    { n: ["shopping trolley"], u: "1f6d2" },
    { n: ["smoking", "smoking symbol"], u: "1f6ac" },
    { n: ["coffin"], u: "26b0-fe0f" },
    { n: ["headstone"], u: "1faa6" },
    { n: ["funeral urn"], u: "26b1-fe0f" },
    { n: ["moyai"], u: "1f5ff" },
    { n: ["placard"], u: "1faa7" },
    { n: ["identification card"], u: "1faaa" }
  ],
  symbols: [
    { n: ["atm", "automated teller machine"], u: "1f3e7" },
    {
      n: ["put litter in its place", "put litter in its place symbol"],
      u: "1f6ae"
    },
    { n: ["potable water", "potable water symbol"], u: "1f6b0" },
    { n: ["wheelchair", "wheelchair symbol"], u: "267f" },
    { n: ["mens", "mens symbol"], u: "1f6b9" },
    { n: ["womens", "womens symbol"], u: "1f6ba" },
    { n: ["restroom"], u: "1f6bb" },
    { n: ["baby symbol"], u: "1f6bc" },
    { n: ["wc", "water closet"], u: "1f6be" },
    { n: ["passport control"], u: "1f6c2" },
    { n: ["customs"], u: "1f6c3" },
    { n: ["baggage claim"], u: "1f6c4" },
    { n: ["left luggage"], u: "1f6c5" },
    { n: ["warning", "warning sign"], u: "26a0-fe0f" },
    { n: ["children crossing"], u: "1f6b8" },
    { n: ["no entry"], u: "26d4" },
    { n: ["no entry sign"], u: "1f6ab" },
    { n: ["no bicycles"], u: "1f6b3" },
    { n: ["no smoking", "no smoking symbol"], u: "1f6ad" },
    { n: ["do not litter", "do not litter symbol"], u: "1f6af" },
    { n: ["non-potable water", "non-potable water symbol"], u: "1f6b1" },
    { n: ["no pedestrians"], u: "1f6b7" },
    { n: ["no mobile phones"], u: "1f4f5" },
    { n: ["underage", "no one under eighteen symbol"], u: "1f51e" },
    { n: ["radioactive", "radioactive sign"], u: "2622-fe0f" },
    { n: ["biohazard", "biohazard sign"], u: "2623-fe0f" },
    { n: ["arrow up", "upwards black arrow"], u: "2b06-fe0f" },
    { n: ["north east arrow", "arrow upper right"], u: "2197-fe0f" },
    { n: ["arrow right", "black rightwards arrow"], u: "27a1-fe0f" },
    { n: ["south east arrow", "arrow lower right"], u: "2198-fe0f" },
    { n: ["arrow down", "downwards black arrow"], u: "2b07-fe0f" },
    { n: ["south west arrow", "arrow lower left"], u: "2199-fe0f" },
    { n: ["arrow left", "leftwards black arrow"], u: "2b05-fe0f" },
    { n: ["north west arrow", "arrow upper left"], u: "2196-fe0f" },
    { n: ["up down arrow", "arrow up down"], u: "2195-fe0f" },
    { n: ["left right arrow"], u: "2194-fe0f" },
    { n: ["leftwards arrow with hook"], u: "21a9-fe0f" },
    { n: ["arrow right hook", "rightwards arrow with hook"], u: "21aa-fe0f" },
    {
      n: ["arrow heading up", "arrow pointing rightwards then curving upwards"],
      u: "2934-fe0f"
    },
    {
      n: [
        "arrow heading down",
        "arrow pointing rightwards then curving downwards"
      ],
      u: "2935-fe0f"
    },
    {
      n: [
        "arrows clockwise",
        "clockwise downwards and upwards open circle arrows"
      ],
      u: "1f503"
    },
    {
      n: [
        "arrows counterclockwise",
        "anticlockwise downwards and upwards open circle arrows"
      ],
      u: "1f504"
    },
    { n: ["back", "back with leftwards arrow above"], u: "1f519" },
    { n: ["end", "end with leftwards arrow above"], u: "1f51a" },
    {
      n: ["on", "on with exclamation mark with left right arrow above"],
      u: "1f51b"
    },
    { n: ["soon", "soon with rightwards arrow above"], u: "1f51c" },
    { n: ["top", "top with upwards arrow above"], u: "1f51d" },
    { n: ["place of worship"], u: "1f6d0" },
    { n: ["atom symbol"], u: "269b-fe0f" },
    { n: ["om", "om symbol"], u: "1f549-fe0f" },
    { n: ["star of david"], u: "2721-fe0f" },
    { n: ["wheel of dharma"], u: "2638-fe0f" },
    { n: ["yin yang"], u: "262f-fe0f" },
    { n: ["latin cross"], u: "271d-fe0f" },
    { n: ["orthodox cross"], u: "2626-fe0f" },
    { n: ["star and crescent"], u: "262a-fe0f" },
    { n: ["peace symbol"], u: "262e-fe0f" },
    { n: ["menorah with nine branches"], u: "1f54e" },
    { n: ["six pointed star", "six pointed star with middle dot"], u: "1f52f" },
    { n: ["aries"], u: "2648" },
    { n: ["taurus"], u: "2649" },
    { n: ["gemini"], u: "264a" },
    { n: ["cancer"], u: "264b" },
    { n: ["leo"], u: "264c" },
    { n: ["virgo"], u: "264d" },
    { n: ["libra"], u: "264e" },
    { n: ["scorpius"], u: "264f" },
    { n: ["sagittarius"], u: "2650" },
    { n: ["capricorn"], u: "2651" },
    { n: ["aquarius"], u: "2652" },
    { n: ["pisces"], u: "2653" },
    { n: ["ophiuchus"], u: "26ce" },
    { n: ["twisted rightwards arrows"], u: "1f500" },
    {
      n: ["repeat", "clockwise rightwards and leftwards open circle arrows"],
      u: "1f501"
    },
    {
      n: [
        "repeat one",
        "clockwise rightwards and leftwards open circle arrows with circled one overlay"
      ],
      u: "1f502"
    },
    { n: ["arrow forward", "black right-pointing triangle"], u: "25b6-fe0f" },
    { n: ["fast forward", "black right-pointing double triangle"], u: "23e9" },
    {
      n: [
        "next track button",
        "black right pointing double triangle with vertical bar"
      ],
      u: "23ed-fe0f"
    },
    {
      n: [
        "play or pause button",
        "black right pointing triangle with double vertical bar"
      ],
      u: "23ef-fe0f"
    },
    { n: ["arrow backward", "black left-pointing triangle"], u: "25c0-fe0f" },
    { n: ["rewind", "black left-pointing double triangle"], u: "23ea" },
    {
      n: [
        "last track button",
        "black left pointing double triangle with vertical bar"
      ],
      u: "23ee-fe0f"
    },
    { n: ["arrow up small", "up-pointing small red triangle"], u: "1f53c" },
    { n: ["arrow double up", "black up-pointing double triangle"], u: "23eb" },
    { n: ["arrow down small", "down-pointing small red triangle"], u: "1f53d" },
    {
      n: ["arrow double down", "black down-pointing double triangle"],
      u: "23ec"
    },
    { n: ["pause button", "double vertical bar"], u: "23f8-fe0f" },
    { n: ["stop button", "black square for stop"], u: "23f9-fe0f" },
    { n: ["record button", "black circle for record"], u: "23fa-fe0f" },
    { n: ["eject", "eject button"], u: "23cf-fe0f" },
    { n: ["cinema"], u: "1f3a6" },
    { n: ["low brightness", "low brightness symbol"], u: "1f505" },
    { n: ["high brightness", "high brightness symbol"], u: "1f506" },
    { n: ["signal strength", "antenna with bars"], u: "1f4f6" },
    { n: ["vibration mode"], u: "1f4f3" },
    { n: ["mobile phone off"], u: "1f4f4" },
    { n: ["female sign"], u: "2640-fe0f" },
    { n: ["male sign"], u: "2642-fe0f" },
    { n: ["transgender symbol"], u: "26a7-fe0f" },
    { n: ["heavy multiplication x"], u: "2716-fe0f" },
    { n: ["heavy plus sign"], u: "2795" },
    { n: ["heavy minus sign"], u: "2796" },
    { n: ["heavy division sign"], u: "2797" },
    { n: ["heavy equals sign"], u: "1f7f0" },
    { n: ["infinity"], u: "267e-fe0f" },
    { n: ["bangbang", "double exclamation mark"], u: "203c-fe0f" },
    { n: ["interrobang", "exclamation question mark"], u: "2049-fe0f" },
    { n: ["question", "black question mark ornament"], u: "2753" },
    { n: ["grey question", "white question mark ornament"], u: "2754" },
    { n: ["grey exclamation", "white exclamation mark ornament"], u: "2755" },
    {
      n: [
        "exclamation",
        "heavy exclamation mark",
        "heavy exclamation mark symbol"
      ],
      u: "2757"
    },
    { n: ["wavy dash"], u: "3030-fe0f" },
    { n: ["currency exchange"], u: "1f4b1" },
    { n: ["heavy dollar sign"], u: "1f4b2" },
    { n: ["medical symbol", "staff of aesculapius"], u: "2695-fe0f" },
    { n: ["recycle", "black universal recycling symbol"], u: "267b-fe0f" },
    { n: ["fleur-de-lis", "fleur de lis"], u: "269c-fe0f" },
    { n: ["trident", "trident emblem"], u: "1f531" },
    { n: ["name badge"], u: "1f4db" },
    { n: ["beginner", "japanese symbol for beginner"], u: "1f530" },
    { n: ["o", "heavy large circle"], u: "2b55" },
    { n: ["white check mark", "white heavy check mark"], u: "2705" },
    { n: ["ballot box with check"], u: "2611-fe0f" },
    { n: ["heavy check mark"], u: "2714-fe0f" },
    { n: ["x", "cross mark"], u: "274c" },
    { n: ["negative squared cross mark"], u: "274e" },
    { n: ["curly loop"], u: "27b0" },
    { n: ["loop", "double curly loop"], u: "27bf" },
    { n: ["part alternation mark"], u: "303d-fe0f" },
    { n: ["eight spoked asterisk"], u: "2733-fe0f" },
    { n: ["eight pointed black star"], u: "2734-fe0f" },
    { n: ["sparkle"], u: "2747-fe0f" },
    { n: ["copyright", "copyright sign"], u: "00a9-fe0f" },
    { n: ["registered", "registered sign"], u: "00ae-fe0f" },
    { n: ["tm", "trade mark sign"], u: "2122-fe0f" },
    { n: ["hash", "hash key"], u: "0023-fe0f-20e3" },
    { n: ["keycap: *", "keycap star"], u: "002a-fe0f-20e3" },
    { n: ["zero", "keycap 0"], u: "0030-fe0f-20e3" },
    { n: ["one", "keycap 1"], u: "0031-fe0f-20e3" },
    { n: ["two", "keycap 2"], u: "0032-fe0f-20e3" },
    { n: ["three", "keycap 3"], u: "0033-fe0f-20e3" },
    { n: ["four", "keycap 4"], u: "0034-fe0f-20e3" },
    { n: ["five", "keycap 5"], u: "0035-fe0f-20e3" },
    { n: ["six", "keycap 6"], u: "0036-fe0f-20e3" },
    { n: ["seven", "keycap 7"], u: "0037-fe0f-20e3" },
    { n: ["eight", "keycap 8"], u: "0038-fe0f-20e3" },
    { n: ["nine", "keycap 9"], u: "0039-fe0f-20e3" },
    { n: ["keycap ten"], u: "1f51f" },
    {
      n: ["capital abcd", "input symbol for latin capital letters"],
      u: "1f520"
    },
    { n: ["abcd", "input symbol for latin small letters"], u: "1f521" },
    { n: ["1234", "input symbol for numbers"], u: "1f522" },
    { n: ["symbols", "input symbol for symbols"], u: "1f523" },
    { n: ["abc", "input symbol for latin letters"], u: "1f524" },
    { n: ["a", "negative squared latin capital letter a"], u: "1f170-fe0f" },
    { n: ["ab", "negative squared ab"], u: "1f18e" },
    { n: ["b", "negative squared latin capital letter b"], u: "1f171-fe0f" },
    { n: ["cl", "squared cl"], u: "1f191" },
    { n: ["cool", "squared cool"], u: "1f192" },
    { n: ["free", "squared free"], u: "1f193" },
    { n: ["information source"], u: "2139-fe0f" },
    { n: ["id", "squared id"], u: "1f194" },
    { n: ["m", "circled latin capital letter m"], u: "24c2-fe0f" },
    { n: ["new", "squared new"], u: "1f195" },
    { n: ["ng", "squared ng"], u: "1f196" },
    { n: ["o2", "negative squared latin capital letter o"], u: "1f17e-fe0f" },
    { n: ["ok", "squared ok"], u: "1f197" },
    {
      n: ["parking", "negative squared latin capital letter p"],
      u: "1f17f-fe0f"
    },
    { n: ["sos", "squared sos"], u: "1f198" },
    { n: ["up", "squared up with exclamation mark"], u: "1f199" },
    { n: ["vs", "squared vs"], u: "1f19a" },
    { n: ["koko", "squared katakana koko"], u: "1f201" },
    { n: ["sa", "squared katakana sa"], u: "1f202-fe0f" },
    { n: ["u6708", "squared cjk unified ideograph-6708"], u: "1f237-fe0f" },
    { n: ["u6709", "squared cjk unified ideograph-6709"], u: "1f236" },
    { n: ["u6307", "squared cjk unified ideograph-6307"], u: "1f22f" },
    { n: ["ideograph advantage", "circled ideograph advantage"], u: "1f250" },
    { n: ["u5272", "squared cjk unified ideograph-5272"], u: "1f239" },
    { n: ["u7121", "squared cjk unified ideograph-7121"], u: "1f21a" },
    { n: ["u7981", "squared cjk unified ideograph-7981"], u: "1f232" },
    { n: ["accept", "circled ideograph accept"], u: "1f251" },
    { n: ["u7533", "squared cjk unified ideograph-7533"], u: "1f238" },
    { n: ["u5408", "squared cjk unified ideograph-5408"], u: "1f234" },
    { n: ["u7a7a", "squared cjk unified ideograph-7a7a"], u: "1f233" },
    {
      n: ["congratulations", "circled ideograph congratulation"],
      u: "3297-fe0f"
    },
    { n: ["secret", "circled ideograph secret"], u: "3299-fe0f" },
    { n: ["u55b6", "squared cjk unified ideograph-55b6"], u: "1f23a" },
    { n: ["u6e80", "squared cjk unified ideograph-6e80"], u: "1f235" },
    { n: ["red circle", "large red circle"], u: "1f534" },
    { n: ["large orange circle"], u: "1f7e0" },
    { n: ["large yellow circle"], u: "1f7e1" },
    { n: ["large green circle"], u: "1f7e2" },
    { n: ["large blue circle"], u: "1f535" },
    { n: ["large purple circle"], u: "1f7e3" },
    { n: ["large brown circle"], u: "1f7e4" },
    { n: ["black circle", "medium black circle"], u: "26ab" },
    { n: ["white circle", "medium white circle"], u: "26aa" },
    { n: ["large red square"], u: "1f7e5" },
    { n: ["large orange square"], u: "1f7e7" },
    { n: ["large yellow square"], u: "1f7e8" },
    { n: ["large green square"], u: "1f7e9" },
    { n: ["large blue square"], u: "1f7e6" },
    { n: ["large purple square"], u: "1f7ea" },
    { n: ["large brown square"], u: "1f7eb" },
    { n: ["black large square"], u: "2b1b" },
    { n: ["white large square"], u: "2b1c" },
    { n: ["black medium square"], u: "25fc-fe0f" },
    { n: ["white medium square"], u: "25fb-fe0f" },
    { n: ["black medium small square"], u: "25fe" },
    { n: ["white medium small square"], u: "25fd" },
    { n: ["black small square"], u: "25aa-fe0f" },
    { n: ["white small square"], u: "25ab-fe0f" },
    { n: ["large orange diamond"], u: "1f536" },
    { n: ["large blue diamond"], u: "1f537" },
    { n: ["small orange diamond"], u: "1f538" },
    { n: ["small blue diamond"], u: "1f539" },
    { n: ["small red triangle", "up-pointing red triangle"], u: "1f53a" },
    {
      n: ["small red triangle down", "down-pointing red triangle"],
      u: "1f53b"
    },
    { n: ["diamond shape with a dot inside"], u: "1f4a0" },
    { n: ["radio button"], u: "1f518" },
    { n: ["white square button"], u: "1f533" },
    { n: ["black square button"], u: "1f532" }
  ],
  flags: [
    { n: ["chequered flag", "checkered flag"], u: "1f3c1" },
    { n: ["triangular flag on post"], u: "1f6a9" },
    { n: ["crossed flags"], u: "1f38c" },
    { n: ["waving black flag"], u: "1f3f4" },
    { n: ["white flag", "waving white flag"], u: "1f3f3-fe0f" },
    { n: ["rainbow flag", "rainbow-flag"], u: "1f3f3-fe0f-200d-1f308" },
    { n: ["transgender flag"], u: "1f3f3-fe0f-200d-26a7-fe0f" },
    { n: ["pirate flag"], u: "1f3f4-200d-2620-fe0f" },
    { n: ["flag-ac", "ascension island flag"], u: "1f1e6-1f1e8" },
    { n: ["flag-ad", "andorra flag"], u: "1f1e6-1f1e9" },
    { n: ["flag-ae", "united arab emirates flag"], u: "1f1e6-1f1ea" },
    { n: ["flag-af", "afghanistan flag"], u: "1f1e6-1f1eb" },
    { n: ["flag-ag", "antigua & barbuda flag"], u: "1f1e6-1f1ec" },
    { n: ["flag-ai", "anguilla flag"], u: "1f1e6-1f1ee" },
    { n: ["flag-al", "albania flag"], u: "1f1e6-1f1f1" },
    { n: ["flag-am", "armenia flag"], u: "1f1e6-1f1f2" },
    { n: ["flag-ao", "angola flag"], u: "1f1e6-1f1f4" },
    { n: ["flag-aq", "antarctica flag"], u: "1f1e6-1f1f6" },
    { n: ["flag-ar", "argentina flag"], u: "1f1e6-1f1f7" },
    { n: ["flag-as", "american samoa flag"], u: "1f1e6-1f1f8" },
    { n: ["flag-at", "austria flag"], u: "1f1e6-1f1f9" },
    { n: ["flag-au", "australia flag"], u: "1f1e6-1f1fa" },
    { n: ["flag-aw", "aruba flag"], u: "1f1e6-1f1fc" },
    { n: ["flag-ax", "\xE5land islands flag"], u: "1f1e6-1f1fd" },
    { n: ["flag-az", "azerbaijan flag"], u: "1f1e6-1f1ff" },
    { n: ["flag-ba", "bosnia & herzegovina flag"], u: "1f1e7-1f1e6" },
    { n: ["flag-bb", "barbados flag"], u: "1f1e7-1f1e7" },
    { n: ["flag-bd", "bangladesh flag"], u: "1f1e7-1f1e9" },
    { n: ["flag-be", "belgium flag"], u: "1f1e7-1f1ea" },
    { n: ["flag-bf", "burkina faso flag"], u: "1f1e7-1f1eb" },
    { n: ["flag-bg", "bulgaria flag"], u: "1f1e7-1f1ec" },
    { n: ["flag-bh", "bahrain flag"], u: "1f1e7-1f1ed" },
    { n: ["flag-bi", "burundi flag"], u: "1f1e7-1f1ee" },
    { n: ["flag-bj", "benin flag"], u: "1f1e7-1f1ef" },
    { n: ["flag-bl", "st. barth\xE9lemy flag"], u: "1f1e7-1f1f1" },
    { n: ["flag-bm", "bermuda flag"], u: "1f1e7-1f1f2" },
    { n: ["flag-bn", "brunei flag"], u: "1f1e7-1f1f3" },
    { n: ["flag-bo", "bolivia flag"], u: "1f1e7-1f1f4" },
    { n: ["flag-bq", "caribbean netherlands flag"], u: "1f1e7-1f1f6" },
    { n: ["flag-br", "brazil flag"], u: "1f1e7-1f1f7" },
    { n: ["flag-bs", "bahamas flag"], u: "1f1e7-1f1f8" },
    { n: ["flag-bt", "bhutan flag"], u: "1f1e7-1f1f9" },
    { n: ["flag-bv", "bouvet island flag"], u: "1f1e7-1f1fb" },
    { n: ["flag-bw", "botswana flag"], u: "1f1e7-1f1fc" },
    { n: ["flag-by", "belarus flag"], u: "1f1e7-1f1fe" },
    { n: ["flag-bz", "belize flag"], u: "1f1e7-1f1ff" },
    { n: ["flag-ca", "canada flag"], u: "1f1e8-1f1e6" },
    { n: ["flag-cc", "cocos (keeling) islands flag"], u: "1f1e8-1f1e8" },
    { n: ["flag-cd", "congo - kinshasa flag"], u: "1f1e8-1f1e9" },
    { n: ["flag-cf", "central african republic flag"], u: "1f1e8-1f1eb" },
    { n: ["flag-cg", "congo - brazzaville flag"], u: "1f1e8-1f1ec" },
    { n: ["flag-ch", "switzerland flag"], u: "1f1e8-1f1ed" },
    { n: ["flag-ci", "c\xF4te d\u2019ivoire flag"], u: "1f1e8-1f1ee" },
    { n: ["flag-ck", "cook islands flag"], u: "1f1e8-1f1f0" },
    { n: ["flag-cl", "chile flag"], u: "1f1e8-1f1f1" },
    { n: ["flag-cm", "cameroon flag"], u: "1f1e8-1f1f2" },
    { n: ["cn", "flag-cn", "china flag"], u: "1f1e8-1f1f3" },
    { n: ["flag-co", "colombia flag"], u: "1f1e8-1f1f4" },
    { n: ["flag-cp", "clipperton island flag"], u: "1f1e8-1f1f5" },
    { n: ["flag-cr", "costa rica flag"], u: "1f1e8-1f1f7" },
    { n: ["flag-cu", "cuba flag"], u: "1f1e8-1f1fa" },
    { n: ["flag-cv", "cape verde flag"], u: "1f1e8-1f1fb" },
    { n: ["flag-cw", "cura\xE7ao flag"], u: "1f1e8-1f1fc" },
    { n: ["flag-cx", "christmas island flag"], u: "1f1e8-1f1fd" },
    { n: ["flag-cy", "cyprus flag"], u: "1f1e8-1f1fe" },
    { n: ["flag-cz", "czechia flag"], u: "1f1e8-1f1ff" },
    { n: ["de", "flag-de", "germany flag"], u: "1f1e9-1f1ea" },
    { n: ["flag-dg", "diego garcia flag"], u: "1f1e9-1f1ec" },
    { n: ["flag-dj", "djibouti flag"], u: "1f1e9-1f1ef" },
    { n: ["flag-dk", "denmark flag"], u: "1f1e9-1f1f0" },
    { n: ["flag-dm", "dominica flag"], u: "1f1e9-1f1f2" },
    { n: ["flag-do", "dominican republic flag"], u: "1f1e9-1f1f4" },
    { n: ["flag-dz", "algeria flag"], u: "1f1e9-1f1ff" },
    { n: ["flag-ea", "ceuta & melilla flag"], u: "1f1ea-1f1e6" },
    { n: ["flag-ec", "ecuador flag"], u: "1f1ea-1f1e8" },
    { n: ["flag-ee", "estonia flag"], u: "1f1ea-1f1ea" },
    { n: ["flag-eg", "egypt flag"], u: "1f1ea-1f1ec" },
    { n: ["flag-eh", "western sahara flag"], u: "1f1ea-1f1ed" },
    { n: ["flag-er", "eritrea flag"], u: "1f1ea-1f1f7" },
    { n: ["es", "flag-es", "spain flag"], u: "1f1ea-1f1f8" },
    { n: ["flag-et", "ethiopia flag"], u: "1f1ea-1f1f9" },
    { n: ["flag-eu", "european union flag"], u: "1f1ea-1f1fa" },
    { n: ["flag-fi", "finland flag"], u: "1f1eb-1f1ee" },
    { n: ["flag-fj", "fiji flag"], u: "1f1eb-1f1ef" },
    { n: ["flag-fk", "falkland islands flag"], u: "1f1eb-1f1f0" },
    { n: ["flag-fm", "micronesia flag"], u: "1f1eb-1f1f2" },
    { n: ["flag-fo", "faroe islands flag"], u: "1f1eb-1f1f4" },
    { n: ["fr", "flag-fr", "france flag"], u: "1f1eb-1f1f7" },
    { n: ["flag-ga", "gabon flag"], u: "1f1ec-1f1e6" },
    { n: ["gb", "uk", "flag-gb", "united kingdom flag"], u: "1f1ec-1f1e7" },
    { n: ["flag-gd", "grenada flag"], u: "1f1ec-1f1e9" },
    { n: ["flag-ge", "georgia flag"], u: "1f1ec-1f1ea" },
    { n: ["flag-gf", "french guiana flag"], u: "1f1ec-1f1eb" },
    { n: ["flag-gg", "guernsey flag"], u: "1f1ec-1f1ec" },
    { n: ["flag-gh", "ghana flag"], u: "1f1ec-1f1ed" },
    { n: ["flag-gi", "gibraltar flag"], u: "1f1ec-1f1ee" },
    { n: ["flag-gl", "greenland flag"], u: "1f1ec-1f1f1" },
    { n: ["flag-gm", "gambia flag"], u: "1f1ec-1f1f2" },
    { n: ["flag-gn", "guinea flag"], u: "1f1ec-1f1f3" },
    { n: ["flag-gp", "guadeloupe flag"], u: "1f1ec-1f1f5" },
    { n: ["flag-gq", "equatorial guinea flag"], u: "1f1ec-1f1f6" },
    { n: ["flag-gr", "greece flag"], u: "1f1ec-1f1f7" },
    {
      n: ["flag-gs", "south georgia & south sandwich islands flag"],
      u: "1f1ec-1f1f8"
    },
    { n: ["flag-gt", "guatemala flag"], u: "1f1ec-1f1f9" },
    { n: ["flag-gu", "guam flag"], u: "1f1ec-1f1fa" },
    { n: ["flag-gw", "guinea-bissau flag"], u: "1f1ec-1f1fc" },
    { n: ["flag-gy", "guyana flag"], u: "1f1ec-1f1fe" },
    { n: ["flag-hk", "hong kong sar china flag"], u: "1f1ed-1f1f0" },
    { n: ["flag-hm", "heard & mcdonald islands flag"], u: "1f1ed-1f1f2" },
    { n: ["flag-hn", "honduras flag"], u: "1f1ed-1f1f3" },
    { n: ["flag-hr", "croatia flag"], u: "1f1ed-1f1f7" },
    { n: ["flag-ht", "haiti flag"], u: "1f1ed-1f1f9" },
    { n: ["flag-hu", "hungary flag"], u: "1f1ed-1f1fa" },
    { n: ["flag-ic", "canary islands flag"], u: "1f1ee-1f1e8" },
    { n: ["flag-id", "indonesia flag"], u: "1f1ee-1f1e9" },
    { n: ["flag-ie", "ireland flag"], u: "1f1ee-1f1ea" },
    { n: ["flag-il", "israel flag"], u: "1f1ee-1f1f1" },
    { n: ["flag-im", "isle of man flag"], u: "1f1ee-1f1f2" },
    { n: ["flag-in", "india flag"], u: "1f1ee-1f1f3" },
    { n: ["flag-io", "british indian ocean territory flag"], u: "1f1ee-1f1f4" },
    { n: ["flag-iq", "iraq flag"], u: "1f1ee-1f1f6" },
    { n: ["flag-ir", "iran flag"], u: "1f1ee-1f1f7" },
    { n: ["flag-is", "iceland flag"], u: "1f1ee-1f1f8" },
    { n: ["it", "flag-it", "italy flag"], u: "1f1ee-1f1f9" },
    { n: ["flag-je", "jersey flag"], u: "1f1ef-1f1ea" },
    { n: ["flag-jm", "jamaica flag"], u: "1f1ef-1f1f2" },
    { n: ["flag-jo", "jordan flag"], u: "1f1ef-1f1f4" },
    { n: ["jp", "flag-jp", "japan flag"], u: "1f1ef-1f1f5" },
    { n: ["flag-ke", "kenya flag"], u: "1f1f0-1f1ea" },
    { n: ["flag-kg", "kyrgyzstan flag"], u: "1f1f0-1f1ec" },
    { n: ["flag-kh", "cambodia flag"], u: "1f1f0-1f1ed" },
    { n: ["flag-ki", "kiribati flag"], u: "1f1f0-1f1ee" },
    { n: ["flag-km", "comoros flag"], u: "1f1f0-1f1f2" },
    { n: ["flag-kn", "st. kitts & nevis flag"], u: "1f1f0-1f1f3" },
    { n: ["flag-kp", "north korea flag"], u: "1f1f0-1f1f5" },
    { n: ["kr", "flag-kr", "south korea flag"], u: "1f1f0-1f1f7" },
    { n: ["flag-kw", "kuwait flag"], u: "1f1f0-1f1fc" },
    { n: ["flag-ky", "cayman islands flag"], u: "1f1f0-1f1fe" },
    { n: ["flag-kz", "kazakhstan flag"], u: "1f1f0-1f1ff" },
    { n: ["flag-la", "laos flag"], u: "1f1f1-1f1e6" },
    { n: ["flag-lb", "lebanon flag"], u: "1f1f1-1f1e7" },
    { n: ["flag-lc", "st. lucia flag"], u: "1f1f1-1f1e8" },
    { n: ["flag-li", "liechtenstein flag"], u: "1f1f1-1f1ee" },
    { n: ["flag-lk", "sri lanka flag"], u: "1f1f1-1f1f0" },
    { n: ["flag-lr", "liberia flag"], u: "1f1f1-1f1f7" },
    { n: ["flag-ls", "lesotho flag"], u: "1f1f1-1f1f8" },
    { n: ["flag-lt", "lithuania flag"], u: "1f1f1-1f1f9" },
    { n: ["flag-lu", "luxembourg flag"], u: "1f1f1-1f1fa" },
    { n: ["flag-lv", "latvia flag"], u: "1f1f1-1f1fb" },
    { n: ["flag-ly", "libya flag"], u: "1f1f1-1f1fe" },
    { n: ["flag-ma", "morocco flag"], u: "1f1f2-1f1e6" },
    { n: ["flag-mc", "monaco flag"], u: "1f1f2-1f1e8" },
    { n: ["flag-md", "moldova flag"], u: "1f1f2-1f1e9" },
    { n: ["flag-me", "montenegro flag"], u: "1f1f2-1f1ea" },
    { n: ["flag-mf", "st. martin flag"], u: "1f1f2-1f1eb" },
    { n: ["flag-mg", "madagascar flag"], u: "1f1f2-1f1ec" },
    { n: ["flag-mh", "marshall islands flag"], u: "1f1f2-1f1ed" },
    { n: ["flag-mk", "north macedonia flag"], u: "1f1f2-1f1f0" },
    { n: ["flag-ml", "mali flag"], u: "1f1f2-1f1f1" },
    { n: ["flag-mm", "myanmar (burma) flag"], u: "1f1f2-1f1f2" },
    { n: ["flag-mn", "mongolia flag"], u: "1f1f2-1f1f3" },
    { n: ["flag-mo", "macao sar china flag"], u: "1f1f2-1f1f4" },
    { n: ["flag-mp", "northern mariana islands flag"], u: "1f1f2-1f1f5" },
    { n: ["flag-mq", "martinique flag"], u: "1f1f2-1f1f6" },
    { n: ["flag-mr", "mauritania flag"], u: "1f1f2-1f1f7" },
    { n: ["flag-ms", "montserrat flag"], u: "1f1f2-1f1f8" },
    { n: ["flag-mt", "malta flag"], u: "1f1f2-1f1f9" },
    { n: ["flag-mu", "mauritius flag"], u: "1f1f2-1f1fa" },
    { n: ["flag-mv", "maldives flag"], u: "1f1f2-1f1fb" },
    { n: ["flag-mw", "malawi flag"], u: "1f1f2-1f1fc" },
    { n: ["flag-mx", "mexico flag"], u: "1f1f2-1f1fd" },
    { n: ["flag-my", "malaysia flag"], u: "1f1f2-1f1fe" },
    { n: ["flag-mz", "mozambique flag"], u: "1f1f2-1f1ff" },
    { n: ["flag-na", "namibia flag"], u: "1f1f3-1f1e6" },
    { n: ["flag-nc", "new caledonia flag"], u: "1f1f3-1f1e8" },
    { n: ["flag-ne", "niger flag"], u: "1f1f3-1f1ea" },
    { n: ["flag-nf", "norfolk island flag"], u: "1f1f3-1f1eb" },
    { n: ["flag-ng", "nigeria flag"], u: "1f1f3-1f1ec" },
    { n: ["flag-ni", "nicaragua flag"], u: "1f1f3-1f1ee" },
    { n: ["flag-nl", "netherlands flag"], u: "1f1f3-1f1f1" },
    { n: ["flag-no", "norway flag"], u: "1f1f3-1f1f4" },
    { n: ["flag-np", "nepal flag"], u: "1f1f3-1f1f5" },
    { n: ["flag-nr", "nauru flag"], u: "1f1f3-1f1f7" },
    { n: ["flag-nu", "niue flag"], u: "1f1f3-1f1fa" },
    { n: ["flag-nz", "new zealand flag"], u: "1f1f3-1f1ff" },
    { n: ["flag-om", "oman flag"], u: "1f1f4-1f1f2" },
    { n: ["flag-pa", "panama flag"], u: "1f1f5-1f1e6" },
    { n: ["flag-pe", "peru flag"], u: "1f1f5-1f1ea" },
    { n: ["flag-pf", "french polynesia flag"], u: "1f1f5-1f1eb" },
    { n: ["flag-pg", "papua new guinea flag"], u: "1f1f5-1f1ec" },
    { n: ["flag-ph", "philippines flag"], u: "1f1f5-1f1ed" },
    { n: ["flag-pk", "pakistan flag"], u: "1f1f5-1f1f0" },
    { n: ["flag-pl", "poland flag"], u: "1f1f5-1f1f1" },
    { n: ["flag-pm", "st. pierre & miquelon flag"], u: "1f1f5-1f1f2" },
    { n: ["flag-pn", "pitcairn islands flag"], u: "1f1f5-1f1f3" },
    { n: ["flag-pr", "puerto rico flag"], u: "1f1f5-1f1f7" },
    { n: ["flag-ps", "palestinian territories flag"], u: "1f1f5-1f1f8" },
    { n: ["flag-pt", "portugal flag"], u: "1f1f5-1f1f9" },
    { n: ["flag-pw", "palau flag"], u: "1f1f5-1f1fc" },
    { n: ["flag-py", "paraguay flag"], u: "1f1f5-1f1fe" },
    { n: ["flag-qa", "qatar flag"], u: "1f1f6-1f1e6" },
    { n: ["flag-re", "r\xE9union flag"], u: "1f1f7-1f1ea" },
    { n: ["flag-ro", "romania flag"], u: "1f1f7-1f1f4" },
    { n: ["flag-rs", "serbia flag"], u: "1f1f7-1f1f8" },
    { n: ["ru", "flag-ru", "russia flag"], u: "1f1f7-1f1fa" },
    { n: ["flag-rw", "rwanda flag"], u: "1f1f7-1f1fc" },
    { n: ["flag-sa", "saudi arabia flag"], u: "1f1f8-1f1e6" },
    { n: ["flag-sb", "solomon islands flag"], u: "1f1f8-1f1e7" },
    { n: ["flag-sc", "seychelles flag"], u: "1f1f8-1f1e8" },
    { n: ["flag-sd", "sudan flag"], u: "1f1f8-1f1e9" },
    { n: ["flag-se", "sweden flag"], u: "1f1f8-1f1ea" },
    { n: ["flag-sg", "singapore flag"], u: "1f1f8-1f1ec" },
    { n: ["flag-sh", "st. helena flag"], u: "1f1f8-1f1ed" },
    { n: ["flag-si", "slovenia flag"], u: "1f1f8-1f1ee" },
    { n: ["flag-sj", "svalbard & jan mayen flag"], u: "1f1f8-1f1ef" },
    { n: ["flag-sk", "slovakia flag"], u: "1f1f8-1f1f0" },
    { n: ["flag-sl", "sierra leone flag"], u: "1f1f8-1f1f1" },
    { n: ["flag-sm", "san marino flag"], u: "1f1f8-1f1f2" },
    { n: ["flag-sn", "senegal flag"], u: "1f1f8-1f1f3" },
    { n: ["flag-so", "somalia flag"], u: "1f1f8-1f1f4" },
    { n: ["flag-sr", "suriname flag"], u: "1f1f8-1f1f7" },
    { n: ["flag-ss", "south sudan flag"], u: "1f1f8-1f1f8" },
    { n: ["flag-st", "s\xE3o tom\xE9 & pr\xEDncipe flag"], u: "1f1f8-1f1f9" },
    { n: ["flag-sv", "el salvador flag"], u: "1f1f8-1f1fb" },
    { n: ["flag-sx", "sint maarten flag"], u: "1f1f8-1f1fd" },
    { n: ["flag-sy", "syria flag"], u: "1f1f8-1f1fe" },
    { n: ["flag-sz", "eswatini flag"], u: "1f1f8-1f1ff" },
    { n: ["flag-ta", "tristan da cunha flag"], u: "1f1f9-1f1e6" },
    { n: ["flag-tc", "turks & caicos islands flag"], u: "1f1f9-1f1e8" },
    { n: ["flag-td", "chad flag"], u: "1f1f9-1f1e9" },
    { n: ["flag-tf", "french southern territories flag"], u: "1f1f9-1f1eb" },
    { n: ["flag-tg", "togo flag"], u: "1f1f9-1f1ec" },
    { n: ["flag-th", "thailand flag"], u: "1f1f9-1f1ed" },
    { n: ["flag-tj", "tajikistan flag"], u: "1f1f9-1f1ef" },
    { n: ["flag-tk", "tokelau flag"], u: "1f1f9-1f1f0" },
    { n: ["flag-tl", "timor-leste flag"], u: "1f1f9-1f1f1" },
    { n: ["flag-tm", "turkmenistan flag"], u: "1f1f9-1f1f2" },
    { n: ["flag-tn", "tunisia flag"], u: "1f1f9-1f1f3" },
    { n: ["flag-to", "tonga flag"], u: "1f1f9-1f1f4" },
    { n: ["flag-tr", "turkey flag"], u: "1f1f9-1f1f7" },
    { n: ["flag-tt", "trinidad & tobago flag"], u: "1f1f9-1f1f9" },
    { n: ["flag-tv", "tuvalu flag"], u: "1f1f9-1f1fb" },
    { n: ["flag-tw", "taiwan flag"], u: "1f1f9-1f1fc" },
    { n: ["flag-tz", "tanzania flag"], u: "1f1f9-1f1ff" },
    { n: ["flag-ua", "ukraine flag"], u: "1f1fa-1f1e6" },
    { n: ["flag-ug", "uganda flag"], u: "1f1fa-1f1ec" },
    { n: ["flag-um", "u.s. outlying islands flag"], u: "1f1fa-1f1f2" },
    { n: ["flag-un", "united nations flag"], u: "1f1fa-1f1f3" },
    { n: ["us", "flag-us", "united states flag"], u: "1f1fa-1f1f8" },
    { n: ["flag-uy", "uruguay flag"], u: "1f1fa-1f1fe" },
    { n: ["flag-uz", "uzbekistan flag"], u: "1f1fa-1f1ff" },
    { n: ["flag-va", "vatican city flag"], u: "1f1fb-1f1e6" },
    { n: ["flag-vc", "st. vincent & grenadines flag"], u: "1f1fb-1f1e8" },
    { n: ["flag-ve", "venezuela flag"], u: "1f1fb-1f1ea" },
    { n: ["flag-vg", "british virgin islands flag"], u: "1f1fb-1f1ec" },
    { n: ["flag-vi", "u.s. virgin islands flag"], u: "1f1fb-1f1ee" },
    { n: ["flag-vn", "vietnam flag"], u: "1f1fb-1f1f3" },
    { n: ["flag-vu", "vanuatu flag"], u: "1f1fb-1f1fa" },
    { n: ["flag-wf", "wallis & futuna flag"], u: "1f1fc-1f1eb" },
    { n: ["flag-ws", "samoa flag"], u: "1f1fc-1f1f8" },
    { n: ["flag-xk", "kosovo flag"], u: "1f1fd-1f1f0" },
    { n: ["flag-ye", "yemen flag"], u: "1f1fe-1f1ea" },
    { n: ["flag-yt", "mayotte flag"], u: "1f1fe-1f1f9" },
    { n: ["flag-za", "south africa flag"], u: "1f1ff-1f1e6" },
    { n: ["flag-zm", "zambia flag"], u: "1f1ff-1f1f2" },
    { n: ["flag-zw", "zimbabwe flag"], u: "1f1ff-1f1fc" },
    {
      n: ["england flag", "flag-england"],
      u: "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f"
    },
    {
      n: ["scotland flag", "flag-scotland"],
      u: "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f"
    },
    {
      n: ["wales flag", "flag-wales"],
      u: "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f"
    }
  ]
};

// src/adapters/obsidian/ui/editors/markdownView/menus/StickerMenu.tsx
var StickerMenu = class extends import_obsidian23.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.inCmd = false;
    this.cmdStartCh = 0;
    this.plugin = plugin;
    this.emojis = Object.keys(emojis).reduce(
      (p3, c4) => [
        ...p3,
        ...emojis[c4].map((e4) => ({
          label: e4.n[0],
          desc: e4.n[1],
          variants: e4.v,
          unicode: e4.u
        }))
      ],
      []
    );
  }
  resetInfos() {
    this.cmdStartCh = 0;
    this.inCmd = false;
  }
  onTrigger(cursor, editor, _file) {
    const currentLine = editor.getLine(cursor.line).slice(0, cursor.ch);
    if (!this.inCmd && !(currentLine.slice(-2) == " " + this.plugin.superstate.settings.emojiTriggerChar || currentLine[0] == this.plugin.superstate.settings.emojiTriggerChar)) {
      this.resetInfos();
      return null;
    }
    if (!this.inCmd) {
      this.cmdStartCh = currentLine.length - 1;
      this.inCmd = true;
    }
    const currentCmd = currentLine.slice(this.cmdStartCh, cursor.ch);
    if (currentCmd.includes(" ") || !currentCmd.includes(this.plugin.superstate.settings.emojiTriggerChar)) {
      this.resetInfos();
      return null;
    }
    this.suggestEl.classList.toggle("mk-emoji-menu", true);
    return { start: cursor, end: cursor, query: currentCmd.slice(1) };
  }
  getSuggestions(context) {
    const suggestions = this.emojis.filter(
      ({ label, desc }) => label.includes(context.query) || (desc == null ? void 0 : desc.includes(context.query))
    );
    return suggestions.length > 0 ? suggestions : [{ label: i18n_default.commandsSuggest.noResult, unicode: "", desc: "" }];
  }
  renderSuggestion(value, el) {
    const div = document.createElement("div");
    div.setAttribute("aria-label", value.label);
    const reactElement = createRoot(div);
    reactElement.render(
      /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, value.unicode.length > 0 ? this.plugin.superstate.ui.getSticker(value.unicode) : i18n_default.commandsSuggest.noResult)
    );
    el.appendChild(div);
  }
  selectSuggestion(cmd, _evt) {
    if (cmd.label === i18n_default.commandsSuggest.noResult)
      return;
    this.context.editor.replaceRange(
      this.plugin.superstate.ui.getSticker(cmd.unicode),
      { ...this.context.start, ch: this.cmdStartCh },
      this.context.end
    );
    this.resetInfos();
    this.close();
  }
};

// src/adapters/obsidian/ui/editors/markdownView/menus/registerMenus.ts
var registerEditorMenus = (plugin) => {
  if (plugin.superstate.settings.flowMenuEnabled) {
    plugin.registerEditorSuggest(new MakeMenu(plugin.app, plugin));
  }
  if (plugin.superstate.settings.inlineStickerMenu) {
    plugin.registerEditorSuggest(new StickerMenu(plugin.app, plugin));
  }
  if (plugin.superstate.ui.getScreenType() == "mobile" && plugin.superstate.settings.mobileMakeBar && plugin.superstate.settings.inlineStyler)
    loadStylerIntoContainer(plugin.app.mobileToolbar.containerEl, plugin);
};

// src/adapters/obsidian/ui/selectMenu.tsx
var import_obsidian24 = require("obsidian");
var showSelectMenu = (point, optionProps) => {
  const menu = new import_obsidian24.Menu();
  menu.dom.toggleClass("mk-menu", true);
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createDiv("mk-options-container");
  div.style.minHeight = Math.min(
    window.innerHeight - 40,
    optionProps.searchable ? 200 : optionProps.options.filter(
      (f4) => f4.type != -1 /* Separator */
    ).length * 24 + optionProps.options.filter(
      (f4) => f4.type == -1 /* Separator */
    ).length * 12
  ).toString() + "px";
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mousedown", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mouseup", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  menu.onHide(() => optionProps.onHide && optionProps.onHide());
  const root = createRoot(div);
  root.render(
    /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(menu_default, {
      hide: () => {
        menu.hide();
        optionProps.onHide && optionProps.onHide();
      },
      ...optionProps
    }))
  );
  menu.addItem((item) => {
    item.setTitle(frag);
  });
  const keys = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys.length; i4++) {
    if (keys[i4].key != "Escape") {
      menu.scope.unregister(keys[i4]);
    }
  }
  menu.showAtPosition(point);
  return menu;
};

// src/adapters/obsidian/ui/ui.ts
var import_obsidian29 = require("obsidian");

// src/adapters/obsidian/utils/leaf.ts
var workspaceLeafForDom = (app2, dom) => {
  const leafDom = dom.closest(".workspace-leaf");
  let foundLeaf;
  app2.workspace.iterateLeaves((leaf) => {
    if (leaf.containerEl == leafDom) {
      foundLeaf = leaf;
      return true;
    }
  }, app2.workspace["rootSplit"]);
  return foundLeaf;
};

// src/adapters/obsidian/utils/modifyTabSticker.ts
var import_obsidian25 = require("obsidian");
var modifyTabSticker = (plugin) => {
  var _a2, _b2, _c2, _d2;
  if (!plugin.superstate.settings.spacesStickers)
    return;
  let leaf = (_a2 = plugin.app.workspace.getActiveViewOfType(import_obsidian25.MarkdownView)) == null ? void 0 : _a2.leaf;
  if (leaf) {
    const file = plugin.app.workspace.getActiveFile();
    if (!file)
      return;
    const pathCache = plugin.superstate.pathsIndex.get(file.path);
    if ((pathCache == null ? void 0 : pathCache.label.sticker) && leaf.tabHeaderInnerIconEl) {
      const icon = stickerFromString(pathCache.label.sticker, plugin);
      leaf.tabHeaderInnerIconEl.innerHTML = icon;
    }
    return;
  } else {
    leaf = (_b2 = plugin.app.workspace.getActiveViewOfType(SpaceViewContainer)) == null ? void 0 : _b2.leaf;
    if (leaf) {
      const spacePath = leaf.view.getState().path;
      const fileCache = plugin.superstate.pathsIndex.get(spacePath);
      if (((_c2 = fileCache == null ? void 0 : fileCache.label) == null ? void 0 : _c2.sticker) && leaf.tabHeaderInnerIconEl) {
        const icon = stickerFromString((_d2 = fileCache.label) == null ? void 0 : _d2.sticker, plugin);
        leaf.tabHeaderInnerIconEl.innerHTML = icon;
      }
      return;
    }
  }
};

// src/adapters/obsidian/ui/menu.tsx
var import_obsidian26 = require("obsidian");
var ObsidianMenu = (props2) => {
  const menu = new import_obsidian26.Menu();
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createDiv();
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  const root = createRoot(div);
  root.render(/* @__PURE__ */ Cn.createElement(props2.fc, {
    hide: () => menu.hide()
  }));
  menu.addItem((menuItem) => {
    menuItem.setTitle(frag);
    menuItem.dom.toggleClass("mk-menu-custom", true);
  });
  const keys = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys.length; i4++) {
    if (keys[i4].key != "Escape") {
      menu.scope.unregister(keys[i4]);
    }
  }
  menu.showAtPosition(props2.position);
  return menu;
};

// src/adapters/obsidian/ui/modal.tsx
var import_obsidian27 = require("obsidian");
var ObsidianModal = class extends import_obsidian27.Modal {
  constructor(app2, title, fc) {
    super(app2);
    this.title = title;
    this.fc = fc;
  }
  onOpen() {
    const { contentEl } = this;
    this.modalEl.toggleClass("mod-lg", true);
    this.titleEl.innerText = this.title;
    if (!this.title) {
      this.titleEl.setCssStyles({ display: "none" });
      this.modalEl.querySelector(".modal-close-button").setCssStyles({ display: "none" });
    }
    const queryEl = contentEl.createDiv("mk-modal");
    const root = createRoot(queryEl);
    root.render(/* @__PURE__ */ Cn.createElement(this.fc, {
      hide: () => this.close()
    }));
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/adapters/obsidian/ui/prompt.tsx
var import_obsidian28 = require("obsidian");
var ObsidianPalette = class extends import_obsidian28.Modal {
  constructor(app2, fc, className) {
    super(app2);
    this.fc = fc;
    this.className = className;
    this.ref = Cn.createRef();
  }
  onOpen() {
    const { contentEl } = this;
    this.modalEl.toggleClass("prompt", true);
    this.modalEl.toggleClass("modal", false);
    this.modalEl.toggleClass(this.className, true);
    this.titleEl.remove();
    this.modalEl.querySelector(".modal-close-button").remove();
    const keys = [...this.scope.keys];
    for (let i4 = 0; i4 < keys.length; i4++) {
      if (keys[i4].key == "Escape") {
        this.scope.unregister(keys[i4]);
        this.scope.register([], "Escape", () => {
          var _a2, _b2;
          if (typeof ((_a2 = this.ref) == null ? void 0 : _a2.current) === "function") {
            const blurred = (_b2 = this.ref) == null ? void 0 : _b2.current();
            if (blurred) {
              this.close();
            }
          } else {
            this.close();
          }
        });
      }
    }
    const root = createRoot(this.modalEl);
    root.render(/* @__PURE__ */ Cn.createElement(this.fc, {
      hide: () => this.close(),
      ref: this.ref
    }));
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/core/react/components/UI/Modals/HiddenFiles.tsx
var HiddenPaths = (props2) => {
  const { superstate } = props2;
  const ref2 = _2(null);
  const [hiddenPaths, setHiddenPaths] = h2(
    superstate.settings.hiddenFiles
  );
  const [hiddenExtensions, setHiddenExtensions] = h2(
    superstate.settings.hiddenExtensions
  );
  const saveExtension = (value) => {
    superstate.settings.hiddenExtensions = [
      ...superstate.settings.hiddenExtensions,
      value
    ];
    superstate.saveSettings();
    superstate.initializePaths();
  };
  const saveFile = (_11, value) => {
    superstate.settings.hiddenFiles = [
      ...superstate.settings.hiddenFiles,
      ...value
    ];
    superstate.saveSettings();
    superstate.initializePaths();
  };
  const removeExtension = (index) => {
    superstate.settings.hiddenExtensions = superstate.settings.hiddenExtensions.filter((f4, i4) => i4 != index);
    superstate.saveSettings();
    superstate.initializePaths();
  };
  const removeItem = (index) => {
    superstate.settings.hiddenFiles = superstate.settings.hiddenFiles.filter(
      (f4, i4) => i4 != index
    );
    superstate.saveSettings();
    superstate.initializePaths();
  };
  const addExtension = () => {
    if ((ref2 == null ? void 0 : ref2.current.value.length) > 0) {
      saveExtension(ref2.current.value);
      ref2.current.empty();
    }
  };
  const settingsChanged = () => {
    setHiddenPaths(superstate.settings.hiddenFiles);
    setHiddenExtensions(superstate.settings.hiddenExtensions);
  };
  p2(() => {
    props2.superstate.eventsDispatcher.addListener(
      "settingsChanged",
      settingsChanged
    );
    return () => {
      props2.superstate.eventsDispatcher.removeListener(
        "settingsChanged",
        settingsChanged
      );
    };
  }, []);
  const addMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = props2.superstate.spaceManager.allPaths().map((f4) => ({
      name: pathNameToString(f4),
      value: f4
    }));
    props2.superstate.ui.openMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        ui: props2.superstate.ui,
        multi: false,
        editable: false,
        value: [],
        options,
        saveOptions: saveFile,
        placeholder: i18n_default.labels.linkItemSelectPlaceholder,
        detail: true,
        searchable: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "modal-content"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item setting-item-heading"
  }, i18n_default.labels.hiddenFilePattern), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-description"
  }, i18n_default.descriptions.hiddenFileOptions), /* @__PURE__ */ Cn.createElement("div", null, hiddenExtensions.map((f4, index) => /* @__PURE__ */ Cn.createElement("div", {
    key: index,
    className: "mobile-option-setting-item"
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "mobile-option-setting-item-name"
  }, f4), /* @__PURE__ */ Cn.createElement("div", {
    className: "clickable-icon mobile-option-setting-item-option-icon",
    "aria-label": i18n_default.buttons.delete,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    },
    onClick: () => removeExtension(index)
  })))), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item"
  }, /* @__PURE__ */ Cn.createElement("input", {
    placeholder: i18n_default.labels.addExtension,
    type: "text",
    ref: ref2
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => addExtension()
  }, "+ Add")), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item setting-item-heading"
  }, "Files and Folders"), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-description"
  }, i18n_default.labels.hiddenFileSpecific), /* @__PURE__ */ Cn.createElement("div", null, hiddenPaths.map((f4, index) => /* @__PURE__ */ Cn.createElement("div", {
    key: index,
    className: "mobile-option-setting-item"
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "mobile-option-setting-item-name"
  }, f4), /* @__PURE__ */ Cn.createElement("div", {
    className: "clickable-icon mobile-option-setting-item-option-icon",
    "aria-label": i18n_default.buttons.delete,
    dangerouslySetInnerHTML: {
      __html: props2.superstate.ui.getSticker("ui//mk-ui-close")
    },
    onClick: () => removeItem(index)
  })))), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => addMenu(e4)
  }, "+ ", i18n_default.buttons.addFile)));
};

// src/adapters/obsidian/ui/showMainMenu.tsx
var showMainMenu = (el, superstate, app2) => {
  const toggleSections = (collapse) => {
    const spaces = [...superstate.getSpaceItems(activeViewSpace.path)];
    const newSections = collapse ? [] : spaces.map((f4) => (activeViewSpace == null ? void 0 : activeViewSpace.path) + "/" + f4.path);
    superstate.settings.expandedSpaces = newSections;
    superstate.saveSettings();
  };
  const activeViewSpace = superstate.spacesIndex.get(
    superstate.settings.activeView
  );
  const setActiveViewSpaceByPath = (path) => {
    superstate.settings.activeView = path;
    superstate.saveSettings();
  };
  const refreshLeafs = () => {
    const leafs2 = [];
    let spaceActive2 = true;
    if (app2.workspace.leftSplit && superstate.ui.getScreenType() == "mobile") {
      const mobileDrawer = app2.workspace.leftSplit;
      const leaves = mobileDrawer.children;
      const index = leaves.reduce((p3, c4, i4) => {
        return c4.getViewState().type == FILE_TREE_VIEW_TYPE ? i4 : p3;
      }, -1);
      spaceActive2 = index == mobileDrawer.currentTab;
      leafs2.push(...leaves.filter((l3, i4) => i4 != index));
    }
    return { leafs: leafs2, spaceActive: spaceActive2 };
  };
  const { spaceActive, leafs } = refreshLeafs();
  const menuOptions = [];
  if (!spaceActive) {
    menuOptions.push({
      name: i18n_default.menu.backToSpace,
      icon: "lucide//arrow-left",
      onClick: () => {
        const leaves = app2.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
        if (leaves.length > 0) {
          app2.workspace.revealLeaf(leaves[0]);
        }
      }
    });
  }
  if ((activeViewSpace == null ? void 0 : activeViewSpace.type) != "default") {
    menuOptions.push({
      name: i18n_default.menu.openSpace,
      icon: "lucide//layout",
      onClick: () => {
        superstate.ui.openPath(activeViewSpace.path, false);
      }
    });
    menuOptions.push(menuSeparator);
    menuOptions.push({
      name: i18n_default.buttons.createFolder,
      icon: "lucide//folder-plus",
      onClick: () => {
        superstate.ui.openModal(
          i18n_default.labels.createSection,
          (props2) => /* @__PURE__ */ Cn.createElement(SpaceEditor_default, {
            superstate,
            space: null,
            parent: activeViewSpace,
            metadata: null,
            close: props2.hide
          })
        );
      }
    });
    menuOptions.push({
      name: i18n_default.buttons.addIntoSpace,
      icon: "lucide//pin",
      onClick: (ev) => {
        ev.preventDefault();
        ev.stopPropagation();
        showLinkMenu(ev, superstate, (link) => {
          pinPathToSpaceAtIndex(superstate, activeViewSpace, link);
        });
      }
    });
  }
  menuOptions.push(menuSeparator);
  if (superstate.settings.enableDefaultSpaces) {
    if (superstate.settings.enableHomeSpace)
      menuOptions.push({
        name: i18n_default.menu.home,
        icon: "lucide//home",
        onClick: () => {
          setActiveViewSpaceByPath("Spaces/Home");
        }
      });
    if (superstate.settings.enableTagSpaces)
      menuOptions.push({
        name: i18n_default.menu.tags,
        icon: "lucide//tags",
        onClick: () => {
          setActiveViewSpaceByPath("spaces://$tags");
        }
      });
  }
  menuOptions.push({
    name: i18n_default.menu.vault,
    icon: "lucide//vault",
    onClick: () => {
      setActiveViewSpaceByPath("/");
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.collapseAllSections,
    icon: "lucide//chevrons-down-up",
    onClick: () => {
      toggleSections(true);
    }
  });
  menuOptions.push({
    name: i18n_default.menu.expandAllSections,
    icon: "lucide//chevrons-up-down",
    onClick: () => {
      toggleSections(false);
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.manageHiddenFiles,
    icon: "lucide//eye-off",
    onClick: () => {
      superstate.ui.openModal(
        i18n_default.labels.hiddenFiles,
        (props2) => /* @__PURE__ */ Cn.createElement(HiddenPaths, {
          superstate,
          close: props2.hide
        })
      );
    }
  });
  menuOptions.push(menuSeparator);
  leafs.map(
    (l3) => menuOptions.push({
      name: l3.getDisplayText(),
      icon: "lucide//" + l3.view.icon,
      onClick: () => {
        app2.workspace.revealLeaf(l3);
      }
    })
  );
  menuOptions.push({
    name: i18n_default.menu.obSettings,
    icon: "lucide//settings",
    onClick: () => {
      app2.commands.commands["app:open-settings"].callback();
    }
  });
  menuOptions.push({
    name: i18n_default.menu.openVault,
    icon: "lucide//vault",
    onClick: () => {
      app2.commands.commands["app:open-vault"].callback();
    }
  });
  menuOptions.push(menuSeparator);
  menuOptions.push({
    name: i18n_default.menu.getHelp,
    icon: "lucide//mk-logo",
    onClick: () => {
      window.open("https://make.md/community");
    }
  });
  const offset2 = el.getBoundingClientRect();
  superstate.ui.openMenu(
    { x: offset2.left, y: offset2.top + 30 },
    defaultMenu(superstate.ui, menuOptions)
  );
};

// src/adapters/obsidian/ui/ui.ts
var ObsidianUI = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.quickOpen = () => {
      this.plugin.app.commands.executeCommandById("core:quick-open");
    };
    this.mainMenu = (el, superstate) => {
      showMainMenu(el, superstate, this.plugin.app);
    };
    this.onMetadataRefresh = () => {
      modifyTabSticker(this.plugin);
    };
    this.navigationHistory = () => {
      return this.plugin.app.workspace.getLastOpenFiles();
    };
    this.getSticker = (icon) => {
      return stickerFromString(icon, this.plugin);
    };
    this.openMenu = (position, menuProps) => {
      showSelectMenu(position, menuProps);
    };
    this.openCustomMenu = (position, fc) => {
      ObsidianMenu({ position, fc });
    };
    this.openToast = (content) => {
      new import_obsidian29.Notice(content);
    };
    this.openPalette = (modal, className) => {
      const newModal = new ObsidianPalette(this.plugin.app, modal, className);
      newModal.open();
    };
    this.openModal = (title, modal) => {
      const newModal = new ObsidianModal(this.plugin.app, title, modal);
      newModal.open();
    };
    this.openPopover = (position, popover) => {
    };
    this.dragStarted = (e4, paths) => {
      if (paths.length == 0)
        return;
      if (paths.length == 1) {
        const path = paths[0];
        const file = getAbstractFileAtPath(this.plugin.app, path);
        if (!file)
          return;
        if (file instanceof import_obsidian29.TFile) {
          this.plugin.app.dragManager.onDragStart(e4, {
            icon: "lucide-folder",
            source: void 0,
            title: file.name,
            type: "folder",
            file
          });
          this.plugin.app.dragManager.dragFolder(e4, file, true);
        } else {
          this.plugin.app.dragManager.onDragStart(e4, {
            icon: "lucide-file",
            source: void 0,
            title: file.name,
            type: "file",
            file
          });
        }
      } else {
        const files = paths.map((f4) => getAbstractFileAtPath(this.plugin.app, f4)).filter((f4) => f4);
        this.plugin.app.dragManager.onDragStart(e4, {
          icon: "lucide-files",
          source: void 0,
          title: i18n_default.labels.filesCount.replace(
            "{$1}",
            files.length.toString()
          ),
          type: "files",
          files
        });
        this.plugin.app.dragManager.dragFiles(e4, files, true);
      }
    };
    this.setDragLabel = (label) => {
      this.plugin.app.dragManager.setAction(label);
    };
    this.dragEnded = (e4) => {
    };
    this.allStickers = () => {
      const allLucide = lucideIcons.map((f4) => ({
        name: f4,
        type: "lucide",
        keywords: f4,
        value: f4,
        html: (0, import_obsidian29.getIcon)(f4).outerHTML
      }));
      const allCustom = [...this.plugin.superstate.iconsCache.keys()].map(
        (f4) => ({
          name: f4,
          type: "vault",
          keywords: f4,
          value: f4,
          html: this.plugin.superstate.iconsCache.get(f4)
        })
      );
      const allEmojis = Object.keys(emojis).reduce(
        (p3, c4) => [
          ...p3,
          ...emojis[c4].map((e4) => ({
            type: "emoji",
            name: e4.n[0],
            value: e4.u,
            html: e4.u
          }))
        ],
        []
      );
      return [...allEmojis, ...allCustom, ...allLucide];
    };
    this.getUIPath = (path) => {
      const file = this.plugin.app.vault.getAbstractFileByPath(path);
      if (file instanceof import_obsidian29.TFile)
        return this.plugin.app.vault.getResourcePath(file);
      return path;
    };
    this.openPath = (path, newLeaf, source, props2) => {
      if (newLeaf == "system") {
        this.plugin.app.showInFolder(path);
        return;
      }
      if (newLeaf == "hover") {
        this.plugin.app.workspace.trigger(
          "link-hover",
          {},
          source,
          path,
          path
        );
        return;
      } else if (source) {
        openPathInElement(this.plugin, workspaceLeafForDom(this.plugin.app, source), source, null, async (editor) => {
          var _a2, _b2, _c2;
          const leaf2 = editor.attachLeaf();
          if (this.plugin.app.vault.getAbstractFileByPath(path) instanceof import_obsidian29.TFile) {
            await leaf2.openFile(this.plugin.app.vault.getAbstractFileByPath(path));
          } else {
            await openPath(leaf2, path, this.plugin);
          }
          if (!props2 || !((_a2 = leaf2.view) == null ? void 0 : _a2.editor)) {
            return;
          }
          const view = (_b2 = leaf2.view.editor) == null ? void 0 : _b2.cm;
          view.dispatch({
            annotations: [
              flowIDAnnotation.of(props2.id)
            ]
          });
          view.dom.addEventListener("keydown", (e4) => {
            if (e4.key == "ArrowUp") {
              if (e4.metaKey == true) {
                view.dispatch({
                  annotations: arrowKeyAnnotation.of(3)
                });
              } else {
                view.dispatch({
                  annotations: arrowKeyAnnotation.of(1)
                });
              }
            }
            if (e4.key == "ArrowDown") {
              if (e4.metaKey == true) {
                view.dispatch({
                  annotations: arrowKeyAnnotation.of(4)
                });
              } else {
                view.dispatch({
                  annotations: arrowKeyAnnotation.of(2)
                });
              }
            }
          });
          if (props2.from && props2.to) {
            (_c2 = leaf2.view.editor) == null ? void 0 : _c2.cm.dispatch({
              annotations: [editableRange.of([props2.from, props2.to])]
            });
          }
        });
        return;
      }
      const leaf = getLeaf(this.plugin.app, newLeaf);
      openPath(leaf, path, this.plugin);
    };
    this.getScreenType = () => {
      return import_obsidian29.Platform.isMobile ? "mobile" : "desktop";
    };
  }
};

// src/adapters/obsidian/utils/migration.ts
var import_obsidian30 = require("obsidian");
var migrate08 = async (plugin) => {
  var _a2, _b2, _c2, _d2;
  const db = await getDB(plugin.mdbFileAdapter, await plugin.mdbFileAdapter.sqlJS(), plugin.obsidianAdapter.spacesDBPath);
  const currentSpaces = (_b2 = (_a2 = selectDB(db, "spaces")) == null ? void 0 : _a2.rows) != null ? _b2 : [];
  const currentSpaceItems = (_d2 = (_c2 = selectDB(db, "spaceItems")) == null ? void 0 : _c2.rows) != null ? _d2 : [];
  const oldSpaceDefToSpaceMetadata = (name, oldDef) => {
    return {
      links: currentSpaceItems.filter((s5) => s5.space == name).map((s5) => s5.path),
      path: oldDef.type == "focus" && oldDef.folder.length > 0 ? oldDef.folder : null,
      filters: oldDef.filters
    };
  };
  const homeSpaces = [];
  const pinnedSpaces = plugin.superstate.settings.waypoints;
  const promises = currentSpaces.map((f4) => {
    const spaceIntermediary = oldSpaceDefToSpaceMetadata(f4.name, safelyParseJSON(f4.def));
    if (spaceIntermediary.path) {
      const path = spaceIntermediary.path;
      if (f4.pinned == "home") {
        homeSpaces.push(path);
      } else if (f4.pinned == "pinned") {
        pinnedSpaces.push(path);
      }
      return;
    } else {
      const path = `${plugin.superstate.settings.spacesFolder}/${f4.name}`;
      if (f4.pinned == "home" && homeSpaces.some((g4) => g4 != path)) {
        homeSpaces.push(path);
      } else if (f4.pinned == "pinned" && pinnedSpaces.some((g4) => g4 != path)) {
        pinnedSpaces.push(path);
      }
      if (plugin.superstate.spacesIndex.has(path))
        return;
      return createSpace(
        plugin.superstate,
        plugin.superstate.settings.spacesFolder + "/" + f4.name,
        {
          sort: parseSortStrat(f4.sort),
          contexts: [],
          filters: spaceIntermediary.filters,
          links: ensureArray(spaceIntermediary.links).filter((f5) => f5)
        }
      ).then((f5) => {
      });
    }
  });
  const spaceFolder = getAbstractFileAtPath(plugin.app, "Context");
  if (spaceFolder instanceof import_obsidian30.TFolder) {
    promises.push(...spaceFolder.children.map((f4) => {
      if (f4 instanceof import_obsidian30.TFile && f4.extension == "mdb") {
        const folderPath = `${plugin.superstate.settings.spacesFolder}/${f4.basename}/.space`;
        return plugin.files.fileExists(folderPath).then((g4) => {
          if (!g4)
            return plugin.files.createFolder(folderPath);
        }).then((g4) => plugin.app.vault.rename(f4, folderPath + "/context.mdb"));
      }
    }));
  }
  const getAllFolders = (plugin2) => {
    const folders = [plugin2.app.vault.getRoot()];
    const rootFolder = plugin2.app.vault.getRoot();
    function recursiveFx(folder) {
      for (const child of folder.children) {
        if (!folder.path.startsWith(plugin2.superstate.settings.spacesFolder)) {
          if (child instanceof import_obsidian30.TFolder) {
            const childFolder = child;
            folders.push(child);
            if (childFolder.children)
              recursiveFx(childFolder);
          }
        }
      }
    }
    recursiveFx(rootFolder);
    return folders.filter((f4) => f4.children.some((g4) => g4.name == "context.mdb"));
  };
  promises.push(...getAllFolders(plugin).map((f4) => {
    const folderPath = f4.path == "/" ? ".space" : `${f4.path}/.space`;
    return plugin.files.createFolder(folderPath).then((g4) => plugin.app.vault.rename(getAbstractFileAtPath(plugin.app, f4.path == "/" ? "context.mdb" : `${f4.path}/context.mdb`), folderPath + "/context.mdb"));
  }));
  await Promise.all(promises);
  await createSpace(plugin.superstate, plugin.superstate.settings.spacesFolder + "/Home", {
    links: homeSpaces
  });
  plugin.superstate.settings.waypoints = uniq([plugin.superstate.settings.spacesFolder + "/Home", "/", "spaces://$tags", ...pinnedSpaces]);
  plugin.superstate.settings.activeView = "/";
  plugin.superstate.settings.autoMigration08 = true;
  plugin.saveSettings();
  db.close();
};

// src/adapters/icons/iconsAdapter.ts
var IconFileTypeAdapter = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.supportedFileTypes = ["svg"];
    this.id = "icons.make.md";
    this.plugin = plugin;
  }
  initiate(middleware) {
    this.middleware = middleware;
    this.cache = /* @__PURE__ */ new Map();
  }
  async parseCache(file, refresh) {
    const newCache = { svg: `@font-face {
            font-family: '${file.name}';
            src: url('${this.middleware.resourcePathForPath(file.path)}');
        }` };
    this.cache.set(file.path, newCache);
    this.middleware.updateFileCache(file.path, this.cache.get(file.path), refresh);
  }
  cacheTypes(file) {
    return ["svg"];
  }
  contentTypes(file) {
    return ["svg"];
  }
  async readContent(file, fragmentType, fragmentId) {
    if (fragmentType == "svg") {
      return this.cache.get(file.path)["svg"];
    }
  }
};

// src/adapters/image/imageAdapter.ts
var ImageFileTypeAdapter = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.supportedFileTypes = ["png", "jpg", "jpeg", "webp"];
    this.id = "images.make.md";
    this.plugin = plugin;
  }
  initiate(middleware) {
    this.middleware = middleware;
    this.cache = /* @__PURE__ */ new Map();
  }
  async parseCache(file, refresh) {
    var _a2;
    if (!file)
      return;
    const label = (_a2 = this.middleware.getFileCache(file.path)) == null ? void 0 : _a2.label;
    const updatedCache = {
      label: {
        name: file.name,
        sticker: (label == null ? void 0 : label.sticker.length) > 0 ? label.sticker : "ui//mk-make-image",
        color: label == null ? void 0 : label.color
      }
    };
    this.cache.set(file.path, updatedCache);
    this.middleware.updateFileCache(file.path, this.cache.get(file.path), refresh);
  }
  cacheTypes(file) {
    return [];
  }
  contentTypes(file) {
    return [];
  }
};

// src/adapters/obsidian/commands/obsidianCommands.ts
var ObsidianCommands = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.allCommands = () => {
      return Object.values(this.plugin.app.commands.commands).map((f4) => ({ name: f4.name, value: f4.id }));
    };
    this.runCommand = async (command, parameters) => {
      if (this.plugin.app.commands.commands[command].callback) {
        this.plugin.app.commands.commands[command].callback();
      } else if (this.plugin.app.commands.commands[command].checkCallback) {
        this.plugin.app.commands.commands[command].checkCallback(false);
      }
    };
  }
};

// src/adapters/text/removemd.js
function removemd(md, options) {
  options = options || {};
  options.listUnicodeChar = options.hasOwnProperty("listUnicodeChar") ? options.listUnicodeChar : false;
  options.stripListLeaders = options.hasOwnProperty("stripListLeaders") ? options.stripListLeaders : true;
  options.gfm = options.hasOwnProperty("gfm") ? options.gfm : true;
  options.useImgAltText = options.hasOwnProperty("useImgAltText") ? options.useImgAltText : true;
  options.abbr = options.hasOwnProperty("abbr") ? options.abbr : false;
  options.replaceLinksWithURL = options.hasOwnProperty("replaceLinksWithURL") ? options.replaceLinksWithURL : false;
  options.htmlTagsToSkip = options.hasOwnProperty("htmlTagsToSkip") ? options.htmlTagsToSkip : [];
  var output = md || "";
  output = output.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*/gm, "");
  try {
    if (options.stripListLeaders) {
      if (options.listUnicodeChar)
        output = output.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm, options.listUnicodeChar + " $1");
      else
        output = output.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm, "$1");
    }
    if (options.gfm) {
      output = output.replace(/\n={2,}/g, "\n").replace(/~{3}.*\n/g, "").replace(/~~/g, "").replace(/`{3}.*\n/g, "");
    }
    if (options.abbr) {
      output = output.replace(/\*\[.*\]:.*\n/, "");
    }
    output = output.replace(/<[^>]*>/g, "");
    var htmlReplaceRegex = new RegExp("<[^>]*>", "g");
    if (options.htmlTagsToSkip.length > 0) {
      var joinedHtmlTagsToSkip = "(?!" + options.htmlTagsToSkip.join("|") + ")";
      htmlReplaceRegex = new RegExp(
        "<" + joinedHtmlTagsToSkip + "[^>]*>",
        "ig"
      );
    }
    output = output.replace(htmlReplaceRegex, "").replace(/^[=\-]{2,}\s*$/g, "").replace(/\[\^.+?\](\: .*?$)?/g, "").replace(/\s{0,2}\[.*?\]: .*?$/g, "").replace(/\!\[(.*?)\][\[\(].*?[\]\)]/g, options.useImgAltText ? "$1" : "").replace(/\[([^\]]*?)\][\[\(].*?[\]\)]/g, options.replaceLinksWithURL ? "$2" : "$1").replace(/^(\n)?\s{0,3}>\s?/gm, "$1").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g, "").replace(/^(\n)?\s{0,}#{1,6}\s*( (.+))? +#+$|^(\n)?\s{0,}#{1,6}\s*( (.+))?$/gm, "$1$3$4$6").replace(/([\*]+)(\S)(.*?\S)??\1/g, "$2$3").replace(/(^|\W)([_]+)(\S)(.*?\S)??\2($|\W)/g, "$1$3$4$5").replace(/(`{3,})(.*?)\1/gm, "$2").replace(/`(.+?)`/g, "$1").replace(/~(.*?)~/g, "$1");
  } catch (e4) {
    console.error(e4);
    return md;
  }
  return output;
}

// src/adapters/text/textCacher.ts
var regexYaml = /^---\s*\n(.*?)\n?^---\s?/ms;
var textCacheExperimental = {
  wordCount: (str) => {
    const spaceDelimitedChars = /'’A-Za-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC/.source;
    const nonSpaceDelimitedWords = /\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u4E00-\u9FD5/.source;
    const nonSpaceDelimitedWordsOther = /[\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u4E00-\u9FD5]{1}/.source;
    const pattern = new RegExp(
      [
        `(?:[0-9]+(?:(?:,|\\.)[0-9]+)*|[\\-${spaceDelimitedChars}])+`,
        nonSpaceDelimitedWords,
        nonSpaceDelimitedWordsOther
      ].join("|"),
      "g"
    );
    return (str.replace(regexYaml, "").match(pattern) || []).length;
  },
  preview: (str) => {
    return removemd(str.replace(regexYaml, ""));
  }
};
var TextCacher = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.supportedFileTypes = ["md"];
    this.id = "text.make.md";
    this.plugin = plugin;
    this.cache = /* @__PURE__ */ new Map();
  }
  initiate(middleware) {
    this.middleware = middleware;
    this.middleware.eventDispatch.addListener("onModify", this.refreshCache.bind(this));
  }
  refreshCache(payload) {
    if (this.supportedFileTypes.find((type) => type == payload.file.extension))
      this.parseCache(payload.file, true);
  }
  async parseCache(file, refresh) {
    if (!file)
      return;
    const contents = await this.plugin.app.vault.cachedRead(getAbstractFileAtPath(this.plugin.app, file.path));
    const updatedCache = {};
    Object.keys(textCacheExperimental).forEach((key2) => {
      const runner = textCacheExperimental[key2];
      updatedCache[key2] = runner(contents);
    });
    this.cache.set(file.path, updatedCache);
    this.middleware.updateFileCache(file.path, updatedCache, refresh);
  }
};

// src/core/middleware/commands.ts
var CommandsManager = class {
  constructor(primaryTerminal, terminals) {
    this.terminals = [];
    this.terminals = terminals != null ? terminals : [];
    primaryTerminal.manager = this;
    this.mainTerminal = primaryTerminal;
  }
  static create(terminal, terminals) {
    return new CommandsManager(terminal, terminals);
  }
  runCommand(command, parameters) {
    return this.mainTerminal.runCommand(command, parameters);
  }
  allCommands() {
    return this.mainTerminal.allCommands();
  }
};

// src/core/react/components/Blink/BlinkComponent.tsx
var BlinkComponent = Cn.forwardRef(
  (props2, ref2) => {
    const [previewPath, setPreviewPath] = h2(null);
    const [allItems, setAllItems] = h2([]);
    const defaultOptions4 = F2(
      () => props2.superstate.ui.navigationHistory().map((f4) => ({
        description: f4,
        value: f4,
        name: pathToString(f4)
      })),
      []
    );
    p2(() => {
      const allTags = props2.superstate.spaceManager.readTags().map((f4) => ({
        value: f4,
        name: f4
      }));
      const allNotes = props2.superstate.spaceManager.allPaths().map((f4) => ({
        name: pathNameToString(f4),
        description: f4,
        value: f4
      }));
      setAllItems([...allNotes, ...allTags]);
    }, []);
    const loadPreview = (path) => {
      if (previewPath != path) {
        setPreviewPath(path);
      }
    };
    const hoverItem = (item) => {
      loadPreview(item);
    };
    const selectItem = (item, modifiers) => {
      if (!item)
        return;
      props2.superstate.ui.openPath(item, modifiers);
    };
    const optionProps = {
      multi: false,
      editable: true,
      ui: props2.superstate.ui,
      onHover: hoverItem,
      value: [],
      options: allItems,
      defaultOptions: defaultOptions4,
      saveOptions: (_11, items, modifiers) => {
        selectItem(items[0], modifiers);
      },
      placeholder: i18n_default.labels.blinkPlaceholder,
      searchable: true,
      showAll: true
    };
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(menu_default, {
      ref: ref2,
      ui: props2.superstate.ui,
      ...optionProps,
      hide: props2.hide,
      previewComponent: previewPath && /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-blink-preview"
      }, /* @__PURE__ */ Cn.createElement(PathView, {
        superstate: props2.superstate,
        path: previewPath,
        load: true
      }))
    }));
  }
);
BlinkComponent.displayName = "BlinkComponent";
var BlinkComponent_default = BlinkComponent;

// src/core/react/components/Blink/Blink.tsx
var openBlinkModal = (superstate) => {
  superstate.ui.openPalette(
    (props2) => /* @__PURE__ */ Cn.createElement(BlinkComponent_default, {
      superstate,
      hide: props2.hide,
      ref: props2.ref
    }),
    "mk-blink-modal"
  );
};

// src/core/test/TestComponent.tsx
var openTestModal = (superstate) => {
  superstate.ui.openModal("Tests", (props2) => /* @__PURE__ */ Cn.createElement(TestComponent, {
    superstate
  }));
};
var TestInputComponent = (props2) => {
  const [value, setValue] = h2("");
  return /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("input", {
    onChange: (e4) => setValue(e4.target.value)
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.action(value)
  }, props2.children));
};
var TestActionComponent = (props2) => {
  return /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.action()
  }, props2.children));
};
var TestToggleSection = (props2) => {
  const [expanded, setExpanded] = h2(false);
  return /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("h2", {
    onClick: () => setExpanded((f4) => !f4)
  }, props2.section), expanded && /* @__PURE__ */ Cn.createElement("div", null, props2.children));
};
var TestComponent = (props2) => {
  var _a2, _b2, _c2;
  const { superstate } = props2;
  const [space, setSpace] = h2(null);
  const [path, setPath] = h2(null);
  const [sticker, setSticker] = h2(null);
  const [image, setImage] = h2(null);
  const [output, setOutput] = h2("");
  p2(() => {
    superstate.eventsDispatcher.addListener(
      "spaceStateUpdated",
      (payload) => {
        if (payload.path == (space == null ? void 0 : space.path)) {
          setSpace(superstate.spacesIndex.get(payload.path));
        }
      }
    );
    superstate.eventsDispatcher.addListener(
      "pathStateUpdated",
      (payload) => {
        if (payload.path == (path == null ? void 0 : path.path)) {
          setPath(superstate.pathsIndex.get(payload.path));
        }
      }
    );
  }, []);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-layout-row",
    style: { fontSize: "10px" }
  }, /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => setOutput(
      JSON.stringify(superstate.spaceManager.uriByString(value))
    )
  }, "URI"), /* @__PURE__ */ Cn.createElement(TestToggleSection, {
    section: "Space"
  }, /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => setSpace(superstate.spacesIndex.get(value))
  }, "Select Space"), /* @__PURE__ */ Cn.createElement("p", null, (_a2 = space == null ? void 0 : space.path) != null ? _a2 : "No Selected Space", /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => setSpace(superstate.spacesIndex.get(space.path))
  }, "Refresh"), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => setPath(superstate.pathsIndex.get(space.path))
  }, "Set Path")), space && /* @__PURE__ */ Cn.createElement("div", null, "Contexts ", (_b2 = space.contexts) == null ? void 0 : _b2.map((f4) => f4), superstate.getSpaceItems(space.path).map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4
  }, f4.path, " ", /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => setSpace(superstate.spacesIndex.get(f4.path))
  }, "Set Space"), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => setPath(superstate.pathsIndex.get(f4.path))
  }, "Set Path"), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => navigator.clipboard.writeText(f4.path)
  }, "Copy"))))), /* @__PURE__ */ Cn.createElement(TestToggleSection, {
    section: "Path"
  }, /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => setPath(superstate.pathsIndex.get(value))
  }, "Select Path"), /* @__PURE__ */ Cn.createElement("p", null, (_c2 = path == null ? void 0 : path.path) != null ? _c2 : "No Selected Path"), path && /* @__PURE__ */ Cn.createElement("div", null, "Sticker", /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker(path == null ? void 0 : path.label.sticker)
    },
    style: { height: "50px", width: "50px" }
  }), "Banner", /* @__PURE__ */ Cn.createElement("img", {
    src: superstate.ui.getUIPath(path == null ? void 0 : path.metadata.banner),
    style: { height: "50px", width: "50px" }
  }))), /* @__PURE__ */ Cn.createElement("h2", null, "Sticker"), /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: superstate.ui.getSticker(sticker)
    },
    style: { height: "50px", width: "50px" }
  }), /* @__PURE__ */ Cn.createElement("h2", null, "Image"), /* @__PURE__ */ Cn.createElement("img", {
    src: superstate.ui.getUIPath(image),
    style: { height: "50px", width: "50px" }
  }), /* @__PURE__ */ Cn.createElement("h2", null, "Output"), /* @__PURE__ */ Cn.createElement("div", null, output)), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(TestToggleSection, {
    section: "Space"
  }, /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => superstate.spaceManager.createSpace(value, space.path, {})
  }, "Create Space"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => superstate.spaceManager.renameSpace(space.path, value)
  }, "Rename Space"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => removeSpace(superstate, value)
  }, "Delete Space"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => saveSpaceMetadataValue(props2.superstate, space.path, "contexts", [
      value
    ])
  }, "Set Space Context"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => removeSpace(superstate, value)
  }, "Remove Space Context"), /* @__PURE__ */ Cn.createElement(TestActionComponent, {
    action: () => savePathBanner(superstate, space.path, image)
  }, "Set Space Banner"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => updatePrimaryAlias(superstate, space.path, [], value)
  }, "Set Space Alias"), /* @__PURE__ */ Cn.createElement(TestActionComponent, {
    action: () => savePathSticker(superstate, space.path, sticker)
  }, "Set Space Sticker")), /* @__PURE__ */ Cn.createElement(TestToggleSection, {
    section: "Path"
  }, /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => newPathInSpace(superstate, space, "md", value)
  }, "Create Path"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => superstate.spaceManager.copyPath(path.path, value)
  }, "Copy Path"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => superstate.spaceManager.renamePath(
      path.path,
      movePath(path.path, value)
    )
  }, "Move Path"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => deletePath(superstate, value)
  }, "Delete Path"), /* @__PURE__ */ Cn.createElement(TestInputComponent, {
    action: (value) => pinPathToSpaceAtIndex(superstate, space, value)
  }, "Pin Path")), /* @__PURE__ */ Cn.createElement(TestToggleSection, {
    section: "Modals"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => superstate.ui.openPalette((props3) => /* @__PURE__ */ Cn.createElement(ImageModal_default, {
      hide: props3.hide,
      superstate,
      selectedPath: (value) => setImage(value)
    }))
  }, "Set Image"), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => superstate.ui.openPalette((props3) => /* @__PURE__ */ Cn.createElement(StickerModal_default, {
      hide: props3.hide,
      ui: superstate.ui,
      selectedSticker: (value) => setSticker(value)
    }))
  }, "Set Sticker")), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("h2", null, "Menus")), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("h2", null, "Modals"))));
};

// src/main.ts
var makeMDVersion = 0.815;
var MakeMDPlugin = class extends import_obsidian31.Plugin {
  constructor() {
    super(...arguments);
    this.debouncedRefresh = () => null;
    this.metadataChange = (file) => {
      this.markdownAdapter.metadataChange(file);
    };
    this.onDelete = async (file) => {
      this.activeFileChange();
    };
    this.onRename = async (file, oldPath) => {
      this.activeFileChange();
    };
    this.openFileTreeLeaf = async (showAfterAttach) => {
      const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
      if (leafs.length == 0) {
        const leaf = this.app.workspace.getLeftLeaf(false);
        await leaf.setViewState({ type: FILE_TREE_VIEW_TYPE });
        if (showAfterAttach && !this.app.workspace.leftSplit.collapsed)
          this.app.workspace.revealLeaf(leaf);
      } else {
        if (!app.workspace.leftSplit.collapsed && showAfterAttach)
          leafs.forEach((leaf) => this.app.workspace.revealLeaf(leaf));
      }
      if (this.superstate.ui.getScreenType() == "mobile") {
        this.app.workspace.leftSplit.collapse();
      }
      replaceMobileMainMenu(this.superstate);
    };
    this.detachFileTreeLeafs = () => {
      const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
      for (const leaf of leafs) {
        if (leaf.view instanceof FileTreeView)
          leaf.view.destroy();
        leaf.detach();
      }
    };
    this.detachFileContextLeafs = () => {
      const leafs = this.app.workspace.getLeavesOfType(FILE_CONTEXT_VIEW_TYPE);
      for (const leaf of leafs) {
        if (leaf.view instanceof ContextExplorerLeafView)
          leaf.view.destroy();
        leaf.detach();
      }
    };
    this.openFileContextLeaf = async (view, reveal) => {
      const leafs = this.app.workspace.getLeavesOfType(view);
      if (leafs.length == 0) {
        const leaf = this.app.workspace.getRightLeaf(false);
        await leaf.setViewState({ type: view });
        this.app.workspace.revealLeaf(leaf);
      } else {
        leafs.forEach((leaf) => this.app.workspace.revealLeaf(leaf));
      }
      if (this.superstate.ui.getScreenType() == "mobile" && !reveal) {
        this.app.workspace.rightSplit.collapse();
      }
    };
    this.refreshFileContextLeafs = () => {
      this.detachFileContextLeafs();
      this.openFileContextLeaf(FILE_CONTEXT_VIEW_TYPE);
    };
  }
  openFlow() {
    const cm = getActiveCM(this);
    if (cm) {
      const value = cm.state.field(flowEditorInfo, false);
      const currPosition = cm.state.selection.main;
      for (const flowEditor of value) {
        if (flowEditor.from < currPosition.to && flowEditor.to > currPosition.from) {
          cm.dispatch({
            annotations: toggleFlowEditor.of([flowEditor.id, 2])
          });
        }
      }
    }
  }
  closeFlow() {
    const cm = getActiveCM(this);
    if (cm) {
      const value = cm.state.field(flowEditorInfo, false);
      const currPosition = cm.state.selection.main;
      for (const flowEditor of value) {
        if (flowEditor.from < currPosition.to && flowEditor.to > currPosition.from) {
          cm.dispatch({
            annotations: toggleFlowEditor.of([flowEditor.id, 0])
          });
        }
      }
    }
  }
  systemName() {
    return this.app.vault.getName();
  }
  reloadExtensions(firstLoad) {
    this.extensions = cmExtensions(this, this.superstate.ui.getScreenType() == "mobile");
    if (firstLoad) {
      this.registerEditorExtension(this.extensions);
    } else {
      this.app.workspace.updateOptions();
    }
  }
  quickOpen() {
    openBlinkModal(this.superstate);
  }
  testPage() {
    openTestModal(this.superstate);
  }
  toggleBold() {
    const cm = getActiveCM(this);
    if (cm) {
      cm.dispatch({
        annotations: toggleMark.of("strong")
      });
    }
  }
  toggleEm() {
    const cm = getActiveCM(this);
    if (cm) {
      cm.dispatch({
        annotations: toggleMark.of("em")
      });
    }
  }
  loadSuperState() {
    this.app.workspace.onLayoutReady(async () => {
      if (this.superstate.settings.spacesEnabled) {
        await this.superstate.initializeIndex();
        this.obsidianAdapter.loadCacheFromObsidianCache();
        this.openFileTreeLeaf(this.superstate.settings.openSpacesOnLaunch);
      } else {
        await this.superstate.loadFromCache();
        this.superstate.initialize();
      }
      this.registerEvent(this.app.vault.on("delete", this.onDelete));
      this.registerEvent(this.app.vault.on("rename", this.onRename));
      this.app.metadataCache.on("changed", this.metadataChange);
      if (makeMDVersion > this.superstate.settings.releaseNotesPrompt) {
        this.releaseTheNotes();
        this.superstate.settings.releaseNotesPrompt = makeMDVersion;
        this.saveSettings();
      }
    });
  }
  async loadSpaces() {
    if (this.superstate.settings.spacesEnabled) {
      document.body.classList.toggle("mk-hide-tabs", !this.superstate.settings.sidebarTabs);
      document.body.classList.toggle("mk-hide-ribbon", !this.superstate.settings.showRibbon);
      document.body.classList.toggle(
        "mk-folder-lines",
        this.superstate.settings.folderIndentationLines
      );
      document.body.classList.toggle(
        "mk-minimal-fix",
        this.superstate.settings.minimalFix
      );
      document.body.classList.toggle(
        "mk-spaces-enabled",
        this.superstate.settings.spacesEnabled
      );
      if (!this.superstate.settings.spacesDisablePatch)
        patchFilesPlugin(this);
      this.registerView(FILE_TREE_VIEW_TYPE, (leaf) => {
        return new FileTreeView(leaf, this.superstate);
      });
    }
    this.registerEvent(
      this.app.workspace.on("active-leaf-change", () => this.activeFileChange())
    );
    this.registerEvent(app.workspace.on("layout-change", () => this.activeFileChange()));
  }
  convertPathToSpace() {
    const activeLeaf = this.app.workspace.activeLeaf;
    if ((activeLeaf == null ? void 0 : activeLeaf.view.getViewType()) == "markdown") {
      const view = this.app.workspace.getActiveViewOfType(import_obsidian31.MarkdownView);
      if (view instanceof import_obsidian31.MarkdownView && view.file instanceof import_obsidian31.TFile) {
        convertPathToSpace(this.superstate, view.file.path, true);
      }
    } else {
      this.superstate.ui.notify(i18n_default.notice.cantConvertNoteToSpace);
    }
  }
  toggleExperimental() {
    this.superstate.settings.experimental = !this.superstate.settings.experimental;
    this.saveSettings();
  }
  getActiveFile() {
    var _a2, _b2;
    let filePath = null;
    let leaf = (_a2 = this.app.workspace.getActiveViewOfType(import_obsidian31.MarkdownView)) == null ? void 0 : _a2.leaf;
    if (!leaf) {
      leaf = (_b2 = this.app.workspace.getActiveViewOfType(SpaceViewContainer)) == null ? void 0 : _b2.leaf;
    }
    const activeView = leaf == null ? void 0 : leaf.view;
    if (!activeView || leaf.isFlowBlock)
      return null;
    if (activeView.getViewType() == SPACE_VIEW_TYPE) {
      modifyTabSticker(this);
      return activeView.getState().path;
    } else if (activeView.getViewType() == "markdown") {
      filePath = activeView.file.path;
      modifyFlowDom(this);
      modifyTabSticker(this);
    }
    return filePath;
  }
  activeFileChange() {
    const path = this.getActiveFile();
    if (path) {
      this.superstate.ui.setActivePath(path);
    }
  }
  releaseTheNotes() {
    openURL("https://www.make.md/static/latest.md", this.app, true);
  }
  loadCommands() {
    if (this.superstate.settings.spacesEnabled) {
      this.addCommand({
        id: "mk-debug-close-tabs",
        name: "Close Extra File Tabs",
        callback: () => {
          let filesFound = false;
          this.app.workspace.leftSplit.children.forEach((f4) => {
            f4 == null ? void 0 : f4.children.forEach((g4) => {
              if (g4.view.getViewType() == "file-explorer") {
                if (!filesFound) {
                  filesFound = true;
                } else {
                  f4.removeChild(g4);
                }
              }
            });
          });
        }
      });
      this.addCommand({
        id: "mk-collapse-folders",
        name: i18n_default.commandPalette.collapseAllFolders,
        callback: () => {
          this.superstate.settings.expandedSpaces = [];
          this.saveSettings();
        }
      });
      this.addCommand({
        id: "mk-release-notes",
        name: i18n_default.commandPalette.releaseNotes,
        callback: () => {
          this.releaseTheNotes();
        }
      });
      this.addCommand({
        id: "mk-reveal-file",
        name: i18n_default.commandPalette.revealFile,
        callback: () => {
          const file = this.superstate.ui.activePath;
          if (!file)
            return;
          const evt = new CustomEvent(eventTypes.revealPath, {
            detail: { path: file }
          });
          window.dispatchEvent(evt);
        }
      });
      this.addCommand({
        id: "mk-spaces-migrate",
        name: i18n_default.commandPalette.migrateData,
        callback: () => migrate08(this)
      });
      this.addCommand({
        id: "mk-spaces",
        name: i18n_default.commandPalette.openSpaces,
        callback: () => this.openFileTreeLeaf(true)
      });
    }
    if (this.superstate.settings.enableFolderNote) {
      this.addCommand({
        id: "mk-convert-folder-note",
        name: i18n_default.commandPalette.convertPathToSpace,
        callback: () => this.convertPathToSpace()
      });
    }
    if (this.superstate.settings.contextEnabled) {
      this.addCommand({
        id: "mk-open-file-context",
        name: i18n_default.commandPalette.openFileContext,
        callback: () => this.openFileContextLeaf(FILE_CONTEXT_VIEW_TYPE, true)
      });
    }
    if (this.superstate.settings.inlineBacklinks) {
      this.addCommand({
        id: "mk-toggle-backlinks",
        name: i18n_default.commandPalette.toggleBacklinks,
        callback: () => {
          const evt = new CustomEvent(eventTypes.toggleBacklinks);
          window.dispatchEvent(evt);
        }
      });
    }
    if (this.superstate.settings.blinkEnabled) {
      this.addCommand({
        id: "mk-blink",
        name: i18n_default.commandPalette.blink,
        callback: () => this.quickOpen(),
        hotkeys: [
          {
            modifiers: ["Mod"],
            key: "o"
          }
        ]
      });
    }
    if (this.superstate.settings.editorFlow) {
      this.addCommand({
        id: "mk-open-flow",
        name: i18n_default.commandPalette.openFlow,
        callback: () => this.openFlow()
      });
      this.addCommand({
        id: "mk-close-flow",
        name: i18n_default.commandPalette.closeFlow,
        callback: () => this.closeFlow()
      });
    }
  }
  loadContext() {
    this.registerView(SPACE_VIEW_TYPE, (leaf) => {
      return new SpaceViewContainer(leaf, this.superstate, SPACE_VIEW_TYPE);
    });
    this.registerView(EMBED_CONTEXT_VIEW_TYPE, (leaf) => {
      return new EmbedContextView2(leaf, this.superstate);
    });
    if (this.superstate.settings.contextEnabled) {
      this.registerView(FILE_VIEW_TYPE, (leaf) => {
        return new FileLinkView(leaf, this.app, FILE_VIEW_TYPE);
      });
      this.app.workspace.onLayoutReady(async () => {
        if (this.superstate.settings.enableDefaultSpaces) {
          await this.files.createFolder(this.superstate.settings.spacesFolder);
          if (this.superstate.settings.enableHomeSpace) {
            await this.files.createFolder(this.superstate.settings.spacesFolder + "/Home");
          }
        }
      });
      this.registerView(FILE_CONTEXT_VIEW_TYPE, (leaf) => {
        return new ContextExplorerLeafView(leaf, this.superstate);
      });
      this.registerView(MDB_FILE_VIEWER_TYPE, (leaf) => {
        return new MDBFileViewer(leaf, this);
      });
      this.registerExtensions(["mdb"], MDB_FILE_VIEWER_TYPE);
      this.app.workspace.onLayoutReady(async () => {
        if (this.superstate.settings.autoOpenFileContext) {
          await this.openFileContextLeaf(FILE_CONTEXT_VIEW_TYPE);
        }
        setTimeout(() => this.activeFileChange(), 2e3);
      });
    }
  }
  loadFlowEditor() {
    patchWorkspace(this);
    document.body.classList.toggle("mk-flow-replace", this.superstate.settings.editorFlow);
    document.body.classList.toggle(
      "mk-flow-" + this.superstate.settings.editorFlowStyle,
      true
    );
    this.registerMarkdownPostProcessor((element, context) => {
      const removeAllFlowMarks = (el) => {
        const embeds = el.querySelectorAll(".internal-embed");
        for (let index = 0; index < embeds.length; index++) {
          const embed = embeds.item(index);
          if (embed.previousSibling && embed.previousSibling.textContent.slice(-1) == "!")
            embed.previousSibling.textContent = embed.previousSibling.textContent.slice(0, -1);
        }
      };
      removeAllFlowMarks(element);
      replaceAllTables(this, element, context);
      replaceAllEmbed(element, context, this.superstate, this.app);
    });
  }
  loadMakerMode() {
    if (this.superstate.settings.makerMode) {
      if (this.superstate.settings.inlineContext) {
        this.registerMarkdownPostProcessor((element, context) => {
          replaceInlineContext(this, element, context);
        });
        document.body.classList.toggle(
          "mk-inline-context-enabled",
          this.superstate.settings.inlineContext
        );
      }
      if (this.superstate.settings.editorFlow) {
        this.loadFlowEditor();
      }
      registerEditorMenus(this);
    }
  }
  async onload() {
    const start = Date.now();
    this.mdbFileAdapter = new MDBFileTypeAdapter(this);
    this.files = FilesystemMiddleware.create();
    this.obsidianAdapter = new ObsidianFileSystem(this, this.files, (0, import_obsidian31.normalizePath)(
      this.app.vault.configDir + "/plugins/make-md/Spaces.mdb"
    ));
    this.files.initiateFileSystemAdapter(this.obsidianAdapter, true);
    this.markdownAdapter = new ObsidianMarkdownFiletypeAdapter(this);
    this.files.initiateFiletypeAdapter(this.mdbFileAdapter);
    this.files.initiateFiletypeAdapter(this.markdownAdapter);
    this.files.initiateFiletypeAdapter(new ObsidianCanvasFiletypeAdapter(this));
    this.files.initiateFiletypeAdapter(new ImageFileTypeAdapter(this));
    this.files.initiateFiletypeAdapter(new IconFileTypeAdapter(this));
    const filesystemCosmoform = new FilesystemSpaceAdapter(this.files);
    let cachePersister;
    if (import_obsidian31.Platform.isMobile) {
      cachePersister = new MobileCachePersister(".makemd/superstate.mdb", this.mdbFileAdapter, ["path", "space", "frame", "context", "icon"]);
    } else {
      cachePersister = new LocalStorageCache(".makemd/superstate.mdb", this.mdbFileAdapter, ["path", "space", "frame", "context", "icon"]);
    }
    await cachePersister.initialize();
    this.superstate = Superstate.create(
      "0.9",
      () => {
        this.debouncedRefresh();
      },
      new SpaceManager(),
      UIManager.create(new ObsidianUI(this)),
      CommandsManager.create(new ObsidianCommands(this)),
      cachePersister
    );
    await this.loadSettings();
    if (this.superstate.settings.experimental)
      this.files.initiateFiletypeAdapter(new TextCacher(this));
    this.superstate.spaceManager.addSpaceAdapter(filesystemCosmoform, true);
    (0, import_obsidian31.addIcon)("mk-logo", mkLogo);
    this.superstate.saveSettings = () => this.saveSettings();
    this.loadSuperState();
    this.addSettingTab(new MakeMDPluginSettingsTab(this.app, this));
    await this.loadSpaces();
    this.loadContext();
    this.loadMakerMode();
    this.reloadExtensions(true);
    this.loadCommands();
    this.superstate.ui.notify(`Make.md - Plugin loaded in ${(Date.now() - start) / 1e3} seconds`, "console");
  }
  async loadSettings() {
    this.superstate.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
    const userConfig = safelyParseJSON(await defaultConfigFile(this));
    this.superstate.settings.newFileFolderPath = userConfig.newFileFolderPath;
    this.superstate.settings.newFileLocation = userConfig.newFileLocation;
    this.saveSettings();
  }
  async saveSettings(refresh = true) {
    await this.saveData(this.superstate.settings);
    if (refresh)
      this.superstate.dispatchEvent("settingsChanged", null);
  }
  onunload() {
    console.log("Unloading Make.md");
    this.detachFileTreeLeafs();
  }
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
/**
 * react-table
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * react-virtual
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
